{
 "0": {
  "plan": [
   [
    " # 0: Walk to computer\n walk('computer')\n # 1: find computer\n find('computer')\n # 2: Turn on computer\n plugin('computer')\n # 3: find keyboard\n find('keyboard')\n # 4: turn on keyboard\n plugin('keyboard')\n # 5: find mouse\n find('mouse')\n # 6: turn on mouse\n plugin('mouse')\n # 7: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " Walk",
      " to",
      " computer",
      "\n",
      " walk",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " computer",
      "\n",
      " find",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " Turn",
      " on",
      " computer",
      "\n",
      " plugin",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " find",
      " keyboard",
      "\n",
      " find",
      "('",
      "key",
      "board",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " turn",
      " on",
      " keyboard",
      "\n",
      " plugin",
      "('",
      "key",
      "board",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " find",
      " mouse",
      "\n",
      " find",
      "('",
      "mouse",
      "')",
      "\n",
      " #",
      " 6",
      ":",
      " turn",
      " on",
      " mouse",
      "\n",
      " plugin",
      "('",
      "mouse",
      "')",
      "\n",
      " #",
      " 7",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.017590765,
      -0.009231688,
      -0.0019521265,
      -3.7635882,
      -0.094949305,
      -2.4286182,
      -0.15993728,
      -0.022152588,
      -0.007493948,
      -0.06242103,
      -0.0062427507,
      -0.011575044,
      -0.016403763,
      -0.00518194,
      -0.0007029386,
      -1.7207115,
      -0.2131667,
      -0.038713954,
      -0.13500258,
      -0.0012748161,
      -0.0020106523,
      -0.0015627575,
      -0.00703159,
      -0.0061451714,
      -0.006112127,
      -0.0009762774,
      -2.3160121,
      -0.027606135,
      -0.5316843,
      -0.022675037,
      -2.5837197,
      -0.0017786489,
      -0.0066932854,
      -0.002560872,
      -0.10682853,
      -0.174214,
      -0.0073298994,
      -0.001251959,
      -2.2921915,
      -1.025125,
      -0.05496667,
      -0.047150683,
      -0.0018400329,
      -0.00050719705,
      -0.0006548055,
      -0.0017612736,
      -0.011591567,
      -0.012091758,
      -0.008198722,
      -0.0013120571,
      -2.6425662,
      -0.023683941,
      -0.43805337,
      -0.016824344,
      -0.24938524,
      -0.0016308152,
      -0.0008601776,
      -0.0008570753,
      -0.0030168686,
      -0.55490696,
      -0.06306932,
      -0.008807069,
      -0.002445662,
      -1.3649794,
      -0.1899357,
      -0.017056288,
      -0.0059492,
      -0.0006888607,
      -0.0005045725,
      -0.0019846142,
      -0.005128559,
      -0.0018438551,
      -0.0053057317,
      -0.0016792956,
      -0.19782227,
      -0.0025912886,
      -0.017391628,
      -0.013003276,
      -0.012763336,
      -0.0009124398,
      -0.00050039747,
      -0.0039532427,
      -0.85679764,
      -0.048550226,
      -0.017472783,
      -0.003251134,
      -0.33142745
     ],
     "top_logprobs": [
      {
       " #": -0.017590765
      },
      {
       " 0": -0.009231688
      },
      {
       ":": -0.0019521265
      },
      {
       " walk": -0.27940494
      },
      {
       " to": -0.094949305
      },
      {
       " the": -1.5202367
      },
      {
       "\n": -0.15993728
      },
      {
       " walk": -0.022152588
      },
      {
       "('": -0.007493948
      },
      {
       "computer": -0.06242103
      },
      {
       "')": -0.0062427507
      },
      {
       "\n": -0.011575044
      },
      {
       " #": -0.016403763
      },
      {
       " 1": -0.00518194
      },
      {
       ":": -0.0007029386
      },
      {
       " Find": -0.28730276
      },
      {
       " computer": -0.2131667
      },
      {
       "\n": -0.038713954
      },
      {
       " find": -0.13500258
      },
      {
       "('": -0.0012748161
      },
      {
       "computer": -0.0020106523
      },
      {
       "')": -0.0015627575
      },
      {
       "\n": -0.00703159
      },
      {
       " #": -0.0061451714
      },
      {
       " 2": -0.006112127
      },
      {
       ":": -0.0009762774
      },
      {
       " turn": -0.8511894
      },
      {
       " on": -0.027606135
      },
      {
       " computer": -0.5316843
      },
      {
       "\n": -0.022675037
      },
      {
       " assert": -0.52364
      },
      {
       "('": -0.0017786489
      },
      {
       "computer": -0.0066932854
      },
      {
       "')": -0.002560872
      },
      {
       "\n": -0.10682853
      },
      {
       " #": -0.174214
      },
      {
       " 3": -0.0073298994
      },
      {
       ":": -0.001251959
      },
      {
       " Wait": -1.6559973
      },
      {
       " mouse": -0.9282862
      },
      {
       "\n": -0.05496667
      },
      {
       " find": -0.047150683
      },
      {
       "('": -0.0018400329
      },
      {
       "key": -0.00050719705
      },
      {
       "board": -0.0006548055
      },
      {
       "')": -0.0017612736
      },
      {
       "\n": -0.011591567
      },
      {
       " #": -0.012091758
      },
      {
       " 4": -0.008198722
      },
      {
       ":": -0.0013120571
      },
      {
       " type": -1.9699645
      },
      {
       " on": -0.023683941
      },
      {
       " keyboard": -0.43805337
      },
      {
       "\n": -0.016824344
      },
      {
       " plugin": -0.24938524
      },
      {
       "('": -0.0016308152
      },
      {
       "key": -0.0008601776
      },
      {
       "board": -0.0008570753
      },
      {
       "')": -0.0030168686
      },
      {
       "\n": -0.55490696
      },
      {
       " #": -0.06306932
      },
      {
       " 5": -0.008807069
      },
      {
       ":": -0.002445662
      },
      {
       " Done": -0.67593545
      },
      {
       " mouse": -0.1899357
      },
      {
       "\n": -0.017056288
      },
      {
       " find": -0.0059492
      },
      {
       "('": -0.0006888607
      },
      {
       "mouse": -0.0005045725
      },
      {
       "')": -0.0019846142
      },
      {
       "\n": -0.005128559
      },
      {
       " #": -0.0018438551
      },
      {
       " 6": -0.0053057317
      },
      {
       ":": -0.0016792956
      },
      {
       " turn": -0.19782227
      },
      {
       " on": -0.0025912886
      },
      {
       " mouse": -0.017391628
      },
      {
       "\n": -0.013003276
      },
      {
       " plugin": -0.012763336
      },
      {
       "('": -0.0009124398
      },
      {
       "mouse": -0.00050039747
      },
      {
       "')": -0.0039532427
      },
      {
       "<|endoftext|>": -0.5855441
      },
      {
       " #": -0.048550226
      },
      {
       " 7": -0.017472783
      },
      {
       ":": -0.003251134
      },
      {
       " Done": -0.33142745
      }
     ],
     "text_offset": [
      3422,
      3424,
      3426,
      3427,
      3432,
      3435,
      3444,
      3445,
      3450,
      3452,
      3460,
      3462,
      3463,
      3465,
      3467,
      3468,
      3473,
      3482,
      3483,
      3488,
      3490,
      3498,
      3500,
      3501,
      3503,
      3505,
      3506,
      3511,
      3514,
      3523,
      3524,
      3531,
      3533,
      3541,
      3543,
      3544,
      3546,
      3548,
      3549,
      3554,
      3563,
      3564,
      3569,
      3571,
      3574,
      3579,
      3581,
      3582,
      3584,
      3586,
      3587,
      3592,
      3595,
      3604,
      3605,
      3612,
      3614,
      3617,
      3622,
      3624,
      3625,
      3627,
      3629,
      3630,
      3635,
      3641,
      3642,
      3647,
      3649,
      3654,
      3656,
      3657,
      3659,
      3661,
      3662,
      3667,
      3670,
      3676,
      3677,
      3684,
      3686,
      3691,
      3693,
      3694,
      3696,
      3698,
      3699
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Turn on computer",
   "task_description": "Press the power button on the computer to turn it on",
   "program": [
    "[Walk] <home_office> (1)",
    "[Walk] <computer> (1)",
    "[SwitchOn] <computer> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_kellensecond",
   "file_id": "split1_4",
   "goal_condition": [
    [
     [
      162,
      246,
      "INSIDE",
      "character",
      "home_office"
     ]
    ],
    [
     [
      321,
      "computer",
      "ON"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1201,
   "completion_tokens": 87,
   "total_tokens": 1288
  }
 },
 "1": {
  "plan": [
   [
    " # 0: walk to bathroom\n walk('bathroom')\n # 1: find toilet\n walk('toilet')\n find('toilet')\n # 2: pour detergent into toilet\n assert('close' to 'detergent')\n else: find('detergent')\n grab('detergent')\n pour('detergent', 'toilet')\n # 3: grab a rag\n find('rag')\n grab('rag')\n # 4: wipe the toilet\n wipe('toilet')\n # 5: flush\n flush('toilet')\n # 6: put back rag and detergent\n putback('rag')\n putback('detergent')\n # 7: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " bathroom",
      "\n",
      " walk",
      "('",
      "bath",
      "room",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " toilet",
      "\n",
      " walk",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " find",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " pour",
      " deter",
      "gent",
      " into",
      " toilet",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "d",
      "eter",
      "gent",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "d",
      "eter",
      "gent",
      "')",
      "\n",
      " grab",
      "('",
      "d",
      "eter",
      "gent",
      "')",
      "\n",
      " pour",
      "('",
      "d",
      "eter",
      "gent",
      "',",
      " '",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " grab",
      " a",
      " rag",
      "\n",
      " find",
      "('",
      "rag",
      "')",
      "\n",
      " grab",
      "('",
      "rag",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " wipe",
      " the",
      " toilet",
      "\n",
      " wipe",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " flush",
      "\n",
      " flush",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 6",
      ":",
      " put",
      " back",
      " rag",
      " and",
      " deter",
      "gent",
      "\n",
      " put",
      "back",
      "('",
      "rag",
      "')",
      "\n",
      " put",
      "back",
      "('",
      "d",
      "eter",
      "gent",
      "')",
      "\n",
      " #",
      " 7",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.020571787,
      -0.008834609,
      -0.0020461304,
      -0.3476292,
      -0.20391983,
      -0.34906745,
      -0.020766322,
      -0.004689023,
      -0.004319361,
      -0.0024118482,
      -0.00021908467,
      -0.0019094244,
      -0.0068860995,
      -0.0027670576,
      -0.0037586007,
      -0.0009738914,
      -0.088576816,
      -0.15427954,
      -0.044549625,
      -1.2051632,
      -0.0018256424,
      -0.001665503,
      -0.0002513358,
      -0.0021856625,
      -0.0046464466,
      -0.015998196,
      -0.000926757,
      -0.00028830176,
      -0.0003009416,
      -0.0015189394,
      -0.004586147,
      -0.004121592,
      -0.0048286854,
      -0.0009112458,
      -1.8476171,
      -1.0552938,
      -0.0017819924,
      -2.3324392,
      -0.37196627,
      -0.11258975,
      -0.3355309,
      -0.0015489677,
      -0.07303154,
      -0.0035712912,
      -0.0009154238,
      -0.0019081113,
      -0.39525723,
      -0.00051852845,
      -0.00040248584,
      -0.016342327,
      -0.008241871,
      -0.0020009147,
      -0.0017516599,
      -0.009901766,
      -0.0018668463,
      -0.0005740496,
      -0.0002454927,
      -0.00012632155,
      -0.002314223,
      -0.0055681057,
      -0.9183286,
      -0.0011271749,
      -0.00033379628,
      -7.20769e-05,
      -0.0005200772,
      -0.0026641993,
      -0.004764541,
      -1.098696,
      -0.0037423265,
      -0.0030595546,
      -0.00036181876,
      -0.00032121275,
      -1.0595664,
      -0.0067359507,
      -0.0041367947,
      -0.00021157267,
      -0.0033731319,
      -0.007310865,
      -0.029593958,
      -0.007498993,
      -0.0010590326,
      -1.2873728,
      -2.0324094,
      -0.17111914,
      -0.3653265,
      -0.4934559,
      -0.0010065264,
      -0.0010868974,
      -0.0015872938,
      -0.0035202082,
      -0.06458324,
      -0.0008046404,
      -0.00038101888,
      -0.00087706116,
      -0.0031301675,
      -0.027038667,
      -0.005503854,
      -0.0010117752,
      -0.09642567,
      -0.2656147,
      -0.027219644,
      -0.20307112,
      -0.4828758,
      -0.0014550679,
      -0.19343252,
      -0.00011928824,
      -0.18859611,
      -0.010554161,
      -0.033455953,
      -0.0035526273,
      -0.0011231161,
      -0.9024412,
      -2.444735,
      -0.09006334,
      -0.056341954,
      -0.0011028883,
      -0.00027792776,
      -0.002448949,
      -0.0615223,
      -0.019639185,
      -0.003215973,
      -0.0015308762,
      -0.89066637,
      -1.5376141,
      -1.4309442,
      -3.5322185,
      -0.010570908,
      -0.00091530365,
      -0.018553574,
      -0.15391721,
      -0.2571129,
      -0.0042506405,
      -0.4001917,
      -1.1983743,
      -0.014740604,
      -0.0144487815,
      -0.005589442,
      -0.0013533568,
      -0.00023345168,
      -0.00016292612,
      -0.00035132372,
      -0.0023325614,
      -0.31641346,
      -0.062435053,
      -0.010094237,
      -0.0021474913,
      -0.33049858
     ],
     "top_logprobs": [
      {
       " #": -0.020571787
      },
      {
       " 0": -0.008834609
      },
      {
       ":": -0.0020461304
      },
      {
       " walk": -0.3476292
      },
      {
       " to": -0.20391983
      },
      {
       " bathroom": -0.34906745
      },
      {
       "\n": -0.020766322
      },
      {
       " walk": -0.004689023
      },
      {
       "('": -0.004319361
      },
      {
       "bath": -0.0024118482
      },
      {
       "room": -0.00021908467
      },
      {
       "')": -0.0019094244
      },
      {
       "\n": -0.0068860995
      },
      {
       " #": -0.0027670576
      },
      {
       " 1": -0.0037586007
      },
      {
       ":": -0.0009738914
      },
      {
       " find": -0.088576816
      },
      {
       " toilet": -0.15427954
      },
      {
       "\n": -0.044549625
      },
      {
       " find": -0.3847297
      },
      {
       "('": -0.0018256424
      },
      {
       "to": -0.001665503
      },
      {
       "ilet": -0.0002513358
      },
      {
       "')": -0.0021856625
      },
      {
       "\n": -0.0046464466
      },
      {
       " find": -0.015998196
      },
      {
       "('": -0.000926757
      },
      {
       "to": -0.00028830176
      },
      {
       "ilet": -0.0003009416
      },
      {
       "')": -0.0015189394
      },
      {
       "\n": -0.004586147
      },
      {
       " #": -0.004121592
      },
      {
       " 2": -0.0048286854
      },
      {
       ":": -0.0009112458
      },
      {
       " grab": -0.80504405
      },
      {
       " deter": -1.0552938
      },
      {
       "gent": -0.0017819924
      },
      {
       "\n": -0.7481545
      },
      {
       " toilet": -0.37196627
      },
      {
       "\n": -0.11258975
      },
      {
       " assert": -0.3355309
      },
      {
       "('": -0.0015489677
      },
      {
       "close": -0.07303154
      },
      {
       "'": -0.0035712912
      },
      {
       " to": -0.0009154238
      },
      {
       " '": -0.0019081113
      },
      {
       "d": -0.39525723
      },
      {
       "eter": -0.00051852845
      },
      {
       "gent": -0.00040248584
      },
      {
       "')": -0.016342327
      },
      {
       "\n": -0.008241871
      },
      {
       " else": -0.0020009147
      },
      {
       ":": -0.0017516599
      },
      {
       " find": -0.009901766
      },
      {
       "('": -0.0018668463
      },
      {
       "d": -0.0005740496
      },
      {
       "eter": -0.0002454927
      },
      {
       "gent": -0.00012632155
      },
      {
       "')": -0.002314223
      },
      {
       "\n": -0.0055681057
      },
      {
       " grab": -0.9183286
      },
      {
       "('": -0.0011271749
      },
      {
       "d": -0.00033379628
      },
      {
       "eter": -7.20769e-05
      },
      {
       "gent": -0.0005200772
      },
      {
       "')": -0.0026641993
      },
      {
       "\n": -0.004764541
      },
      {
       " assert": -0.7778732
      },
      {
       "('": -0.0037423265
      },
      {
       "d": -0.0030595546
      },
      {
       "eter": -0.00036181876
      },
      {
       "gent": -0.00032121275
      },
      {
       "')": -0.782873
      },
      {
       " '": -0.0067359507
      },
      {
       "to": -0.0041367947
      },
      {
       "ilet": -0.00021157267
      },
      {
       "')": -0.0033731319
      },
      {
       "\n": -0.007310865
      },
      {
       " #": -0.029593958
      },
      {
       " 3": -0.007498993
      },
      {
       ":": -0.0010590326
      },
      {
       " grab": -1.2873728
      },
      {
       " rag": -0.67831206
      },
      {
       " rag": -0.17111914
      },
      {
       "\n": -0.3653265
      },
      {
       " find": -0.4934559
      },
      {
       "('": -0.0010065264
      },
      {
       "rag": -0.0010868974
      },
      {
       "')": -0.0015872938
      },
      {
       "\n": -0.0035202082
      },
      {
       " grab": -0.06458324
      },
      {
       "('": -0.0008046404
      },
      {
       "rag": -0.00038101888
      },
      {
       "')": -0.00087706116
      },
      {
       "\n": -0.0031301675
      },
      {
       " #": -0.027038667
      },
      {
       " 4": -0.005503854
      },
      {
       ":": -0.0010117752
      },
      {
       " wipe": -0.09642567
      },
      {
       " the": -0.2656147
      },
      {
       " toilet": -0.027219644
      },
      {
       "\n": -0.20307112
      },
      {
       " wipe": -0.4828758
      },
      {
       "('": -0.0014550679
      },
      {
       "to": -0.19343252
      },
      {
       "ilet": -0.00011928824
      },
      {
       "')": -0.18859611
      },
      {
       "\n": -0.010554161
      },
      {
       " #": -0.033455953
      },
      {
       " 5": -0.0035526273
      },
      {
       ":": -0.0011231161
      },
      {
       " flush": -0.9024412
      },
      {
       " the": -0.19430886
      },
      {
       " flush": -0.09006334
      },
      {
       "('": -0.056341954
      },
      {
       "to": -0.0011028883
      },
      {
       "ilet": -0.00027792776
      },
      {
       "')": -0.002448949
      },
      {
       "\n": -0.0615223
      },
      {
       " #": -0.019639185
      },
      {
       " 6": -0.003215973
      },
      {
       ":": -0.0015308762
      },
      {
       " put": -0.89066637
      },
      {
       " the": -0.78672236
      },
      {
       " the": -0.4360454
      },
      {
       "\n": -0.05666316
      },
      {
       " deter": -0.010570908
      },
      {
       "gent": -0.00091530365
      },
      {
       "\n": -0.018553574
      },
      {
       " put": -0.15391721
      },
      {
       "back": -0.2571129
      },
      {
       "('": -0.0042506405
      },
      {
       "rag": -0.4001917
      },
      {
       "',": -0.42609832
      },
      {
       "\n": -0.014740604
      },
      {
       " put": -0.0144487815
      },
      {
       "back": -0.005589442
      },
      {
       "('": -0.0013533568
      },
      {
       "d": -0.00023345168
      },
      {
       "eter": -0.00016292612
      },
      {
       "gent": -0.00035132372
      },
      {
       "')": -0.0023325614
      },
      {
       "\n": -0.31641346
      },
      {
       " #": -0.062435053
      },
      {
       " 7": -0.010094237
      },
      {
       ":": -0.0021474913
      },
      {
       " Done": -0.33049858
      }
     ],
     "text_offset": [
      3418,
      3420,
      3422,
      3423,
      3428,
      3431,
      3440,
      3441,
      3446,
      3448,
      3452,
      3456,
      3458,
      3459,
      3461,
      3463,
      3464,
      3469,
      3476,
      3477,
      3482,
      3484,
      3486,
      3490,
      3492,
      3493,
      3498,
      3500,
      3502,
      3506,
      3508,
      3509,
      3511,
      3513,
      3514,
      3519,
      3525,
      3529,
      3534,
      3541,
      3542,
      3549,
      3551,
      3556,
      3557,
      3560,
      3562,
      3563,
      3567,
      3571,
      3573,
      3574,
      3579,
      3580,
      3585,
      3587,
      3588,
      3592,
      3596,
      3598,
      3599,
      3604,
      3606,
      3607,
      3611,
      3615,
      3617,
      3618,
      3623,
      3625,
      3626,
      3630,
      3634,
      3636,
      3638,
      3640,
      3644,
      3646,
      3647,
      3649,
      3651,
      3652,
      3657,
      3659,
      3663,
      3664,
      3669,
      3671,
      3674,
      3676,
      3677,
      3682,
      3684,
      3687,
      3689,
      3690,
      3692,
      3694,
      3695,
      3700,
      3704,
      3711,
      3712,
      3717,
      3719,
      3721,
      3725,
      3727,
      3728,
      3730,
      3732,
      3733,
      3739,
      3740,
      3746,
      3748,
      3750,
      3754,
      3756,
      3757,
      3759,
      3761,
      3762,
      3766,
      3771,
      3775,
      3779,
      3785,
      3789,
      3790,
      3794,
      3798,
      3800,
      3803,
      3805,
      3806,
      3810,
      3814,
      3816,
      3817,
      3821,
      3825,
      3827,
      3828,
      3830,
      3832,
      3833
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Clean toilet",
   "task_description": "Clean the toilet with a brush.",
   "program": [
    "[Find] <brush> (1)",
    "[Grab] <brush> (1)",
    "[Walk] <bathroom> (1)",
    "[Walk] <toilet> (1)",
    "[Find] <toilet> (1)",
    "[Scrub] <toilet> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_turk_third",
   "file_id": "split74_2",
   "goal_condition": [
    [
     [
      1000,
      1,
      "INSIDE",
      "brush",
      "bathroom"
     ],
     [
      162,
      1,
      "INSIDE",
      "character",
      "bathroom"
     ],
     [
      162,
      1000,
      "HOLDS_RH",
      "character",
      "brush"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1200,
   "completion_tokens": 147,
   "total_tokens": 1347
  }
 },
 "2": {
  "plan": [
   [
    " # 0: walk to bathroom\n walk('bathroom')\n # 1: find window\n find('window')\n # 2: open the window\n assert('close' to 'window')\n else: find('window')\n open('window')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " bathroom",
      "\n",
      " walk",
      "('",
      "bath",
      "room",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " window",
      "\n",
      " find",
      "('",
      "window",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " open",
      " the",
      " window",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "window",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "window",
      "')",
      "\n",
      " open",
      "('",
      "window",
      "')"
     ],
     "token_logprobs": [
      -0.02217544,
      -0.010764355,
      -0.0026150732,
      -0.12690562,
      -0.17898987,
      -0.20712206,
      -0.02616549,
      -0.0052150125,
      -0.0045890193,
      -0.002842909,
      -0.00018855974,
      -0.0020596883,
      -0.007835827,
      -0.0032522106,
      -0.003262318,
      -0.00047589114,
      -0.037896756,
      -0.08145397,
      -0.019165888,
      -0.22119322,
      -0.0012106603,
      -0.004145234,
      -0.0019453774,
      -0.0050379746,
      -0.005702793,
      -0.004642314,
      -0.0008931693,
      -0.025452089,
      -1.0677156,
      -0.005221184,
      -0.009284808,
      -0.23605287,
      -0.0017999666,
      -0.01134027,
      -0.0025982207,
      -0.0007118858,
      -0.0031082847,
      -0.0011951445,
      -0.004588659,
      -0.005722936,
      -0.0016911771,
      -0.0015358914,
      -0.0044297534,
      -0.0016835945,
      -0.00081597466,
      -0.002478708,
      -0.007184484,
      -0.06469846,
      -0.0017674835,
      -0.0010420242,
      -0.0027419552
     ],
     "top_logprobs": [
      {
       " #": -0.02217544
      },
      {
       " 0": -0.010764355
      },
      {
       ":": -0.0026150732
      },
      {
       " walk": -0.12690562
      },
      {
       " to": -0.17898987
      },
      {
       " bathroom": -0.20712206
      },
      {
       "\n": -0.02616549
      },
      {
       " walk": -0.0052150125
      },
      {
       "('": -0.0045890193
      },
      {
       "bath": -0.002842909
      },
      {
       "room": -0.00018855974
      },
      {
       "')": -0.0020596883
      },
      {
       "\n": -0.007835827
      },
      {
       " #": -0.0032522106
      },
      {
       " 1": -0.003262318
      },
      {
       ":": -0.00047589114
      },
      {
       " find": -0.037896756
      },
      {
       " window": -0.08145397
      },
      {
       "\n": -0.019165888
      },
      {
       " find": -0.22119322
      },
      {
       "('": -0.0012106603
      },
      {
       "window": -0.004145234
      },
      {
       "')": -0.0019453774
      },
      {
       "\n": -0.0050379746
      },
      {
       " #": -0.005702793
      },
      {
       " 2": -0.004642314
      },
      {
       ":": -0.0008931693
      },
      {
       " open": -0.025452089
      },
      {
       " window": -0.43480012
      },
      {
       " window": -0.005221184
      },
      {
       "\n": -0.009284808
      },
      {
       " assert": -0.23605287
      },
      {
       "('": -0.0017999666
      },
      {
       "close": -0.01134027
      },
      {
       "'": -0.0025982207
      },
      {
       " to": -0.0007118858
      },
      {
       " '": -0.0031082847
      },
      {
       "window": -0.0011951445
      },
      {
       "')": -0.004588659
      },
      {
       "\n": -0.005722936
      },
      {
       " else": -0.0016911771
      },
      {
       ":": -0.0015358914
      },
      {
       " find": -0.0044297534
      },
      {
       "('": -0.0016835945
      },
      {
       "window": -0.00081597466
      },
      {
       "')": -0.002478708
      },
      {
       "\n": -0.007184484
      },
      {
       " open": -0.06469846
      },
      {
       "('": -0.0017674835
      },
      {
       "window": -0.0010420242
      },
      {
       "')": -0.0027419552
      }
     ],
     "text_offset": [
      3426,
      3428,
      3430,
      3431,
      3436,
      3439,
      3448,
      3449,
      3454,
      3456,
      3460,
      3464,
      3466,
      3467,
      3469,
      3471,
      3472,
      3477,
      3484,
      3485,
      3490,
      3492,
      3498,
      3500,
      3501,
      3503,
      3505,
      3506,
      3511,
      3515,
      3522,
      3523,
      3530,
      3532,
      3537,
      3538,
      3541,
      3543,
      3549,
      3551,
      3552,
      3557,
      3558,
      3563,
      3565,
      3571,
      3573,
      3574,
      3579,
      3581,
      3587
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Open bathroom window",
   "task_description": "Make sure bathroom window is unlocked. Lift up bathroom window so it is open.",
   "program": [
    "[Walk] <bathroom> (1)",
    "[Walk] <window> (1)",
    "[Find] <window> (1)",
    "[Open] <window> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_kellensecond",
   "file_id": "split7_3",
   "goal_condition": [
    [
     [
      162,
      1,
      "INSIDE",
      "character",
      "bathroom"
     ]
    ],
    [
     [
      61,
      "window",
      "OPEN"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1202,
   "completion_tokens": 51,
   "total_tokens": 1253
  }
 },
 "3": {
  "plan": [
   [
    " # 0: find newspaper\n find('newspaper')\n # 1: walk to table\n walk('table')\n # 2: sit on chair\n find('chair')\n assert('close' to 'chair')\n else: find('chair')\n sit('chair')\n # 3: read newspaper\n assert('close' to 'newspaper')\n else: find('newspaper')\n read('newspaper')\n # 4: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " newspaper",
      "\n",
      " find",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " walk",
      " to",
      " table",
      "\n",
      " walk",
      "('",
      "table",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " sit",
      " on",
      " chair",
      "\n",
      " find",
      "('",
      "chair",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "chair",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "chair",
      "')",
      "\n",
      " sit",
      "('",
      "chair",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " read",
      " newspaper",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " read",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.018877935,
      -0.009715713,
      -0.002024088,
      -0.7308773,
      -0.32795495,
      -0.025047908,
      -0.03143932,
      -0.0025537608,
      -0.005169838,
      -0.001116432,
      -0.0010173838,
      -0.004067726,
      -0.0070841135,
      -0.004832639,
      -0.0025167712,
      -0.00039532955,
      -4.620352,
      -0.026595527,
      -1.8684211,
      -0.029122006,
      -0.07151653,
      -0.0026823678,
      -0.0020890727,
      -0.0016057402,
      -0.005435231,
      -0.18726091,
      -0.004763944,
      -0.0005005176,
      -1.2110314,
      -0.4509443,
      -0.40764037,
      -0.033428896,
      -0.8239216,
      -0.0014182372,
      -0.002574197,
      -0.0022272991,
      -0.0042670416,
      -0.85408324,
      -0.0014907621,
      -0.010805503,
      -0.0030348646,
      -0.0012424093,
      -0.002519161,
      -0.0028768606,
      -0.0061559645,
      -0.0040554586,
      -0.0023605227,
      -0.0020016327,
      -0.025112081,
      -0.0015712344,
      -0.0010991918,
      -0.002710576,
      -0.005124665,
      -0.026018104,
      -0.0012951661,
      -0.00076771673,
      -0.0015081347,
      -0.0054354696,
      -0.015325827,
      -0.009811475,
      -0.0011371415,
      -1.0325804,
      -0.36196187,
      -0.011310486,
      -0.643832,
      -0.0016250237,
      -0.40500575,
      -0.0026997572,
      -0.007219607,
      -0.0018040854,
      -0.013205706,
      -0.0007526251,
      -0.0006312454,
      -0.0064860503,
      -0.0041448744,
      -0.0011459723,
      -0.0015724284,
      -0.010310171,
      -0.0017250894,
      -0.0013112199,
      -0.0019780407,
      -0.0012817387,
      -0.004149482,
      -0.0051411362,
      -0.73801684,
      -0.0012783962,
      -0.0009880884,
      -0.0011918029,
      -0.0005382664,
      -0.002121211,
      -0.88268167,
      -0.26713455,
      -0.0095431125,
      -0.0015577413,
      -0.43697944
     ],
     "top_logprobs": [
      {
       " #": -0.018877935
      },
      {
       " 0": -0.009715713
      },
      {
       ":": -0.002024088
      },
      {
       " find": -0.7308773
      },
      {
       " newspaper": -0.32795495
      },
      {
       "\n": -0.025047908
      },
      {
       " find": -0.03143932
      },
      {
       "('": -0.0025537608
      },
      {
       "new": -0.005169838
      },
      {
       "sp": -0.001116432
      },
      {
       "aper": -0.0010173838
      },
      {
       "')": -0.004067726
      },
      {
       "\n": -0.0070841135
      },
      {
       " #": -0.004832639
      },
      {
       " 1": -0.0025167712
      },
      {
       ":": -0.00039532955
      },
      {
       " grab": -0.34435657
      },
      {
       " to": -0.026595527
      },
      {
       " desk": -1.4473217
      },
      {
       "\n": -0.029122006
      },
      {
       " walk": -0.07151653
      },
      {
       "('": -0.0026823678
      },
      {
       "table": -0.0020890727
      },
      {
       "')": -0.0016057402
      },
      {
       "\n": -0.005435231
      },
      {
       " #": -0.18726091
      },
      {
       " 2": -0.004763944
      },
      {
       ":": -0.0005005176
      },
      {
       " grab": -1.0798726
      },
      {
       " on": -0.4509443
      },
      {
       " chair": -0.40764037
      },
      {
       "\n": -0.033428896
      },
      {
       " find": -0.8239216
      },
      {
       "('": -0.0014182372
      },
      {
       "chair": -0.002574197
      },
      {
       "')": -0.0022272991
      },
      {
       "\n": -0.0042670416
      },
      {
       " sit": -0.6796333
      },
      {
       "('": -0.0014907621
      },
      {
       "close": -0.010805503
      },
      {
       "'": -0.0030348646
      },
      {
       " to": -0.0012424093
      },
      {
       " '": -0.002519161
      },
      {
       "chair": -0.0028768606
      },
      {
       "')": -0.0061559645
      },
      {
       "\n": -0.0040554586
      },
      {
       " else": -0.0023605227
      },
      {
       ":": -0.0020016327
      },
      {
       " find": -0.025112081
      },
      {
       "('": -0.0015712344
      },
      {
       "chair": -0.0010991918
      },
      {
       "')": -0.002710576
      },
      {
       "\n": -0.005124665
      },
      {
       " sit": -0.026018104
      },
      {
       "('": -0.0012951661
      },
      {
       "chair": -0.00076771673
      },
      {
       "')": -0.0015081347
      },
      {
       "\n": -0.0054354696
      },
      {
       " #": -0.015325827
      },
      {
       " 3": -0.009811475
      },
      {
       ":": -0.0011371415
      },
      {
       " read": -1.0325804
      },
      {
       " newspaper": -0.36196187
      },
      {
       "\n": -0.011310486
      },
      {
       " assert": -0.643832
      },
      {
       "('": -0.0016250237
      },
      {
       "close": -0.40500575
      },
      {
       "'": -0.0026997572
      },
      {
       " to": -0.007219607
      },
      {
       " '": -0.0018040854
      },
      {
       "new": -0.013205706
      },
      {
       "sp": -0.0007526251
      },
      {
       "aper": -0.0006312454
      },
      {
       "')": -0.0064860503
      },
      {
       "\n": -0.0041448744
      },
      {
       " else": -0.0011459723
      },
      {
       ":": -0.0015724284
      },
      {
       " find": -0.010310171
      },
      {
       "('": -0.0017250894
      },
      {
       "new": -0.0013112199
      },
      {
       "sp": -0.0019780407
      },
      {
       "aper": -0.0012817387
      },
      {
       "')": -0.004149482
      },
      {
       "\n": -0.0051411362
      },
      {
       " read": -0.73801684
      },
      {
       "('": -0.0012783962
      },
      {
       "new": -0.0009880884
      },
      {
       "sp": -0.0011918029
      },
      {
       "aper": -0.0005382664
      },
      {
       "')": -0.002121211
      },
      {
       "<|endoftext|>": -0.5555372
      },
      {
       " #": -0.26713455
      },
      {
       " 4": -0.0095431125
      },
      {
       ":": -0.0015577413
      },
      {
       " Done": -0.43697944
      }
     ],
     "text_offset": [
      3420,
      3422,
      3424,
      3425,
      3430,
      3440,
      3441,
      3446,
      3448,
      3451,
      3453,
      3457,
      3459,
      3460,
      3462,
      3464,
      3465,
      3470,
      3473,
      3479,
      3480,
      3485,
      3487,
      3492,
      3494,
      3495,
      3497,
      3499,
      3500,
      3504,
      3507,
      3513,
      3514,
      3519,
      3521,
      3526,
      3528,
      3529,
      3536,
      3538,
      3543,
      3544,
      3547,
      3549,
      3554,
      3556,
      3557,
      3562,
      3563,
      3568,
      3570,
      3575,
      3577,
      3578,
      3582,
      3584,
      3589,
      3591,
      3592,
      3594,
      3596,
      3597,
      3602,
      3612,
      3613,
      3620,
      3622,
      3627,
      3628,
      3631,
      3633,
      3636,
      3638,
      3642,
      3644,
      3645,
      3650,
      3651,
      3656,
      3658,
      3661,
      3663,
      3667,
      3669,
      3670,
      3675,
      3677,
      3680,
      3682,
      3686,
      3688,
      3689,
      3691,
      3693,
      3694
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Read newspaper",
   "task_description": "Sit in my chair at my desk. Open up newspaper. Read about current events.",
   "program": [
    "[Walk] <home_office> (1)",
    "[Walk] <chair> (1)",
    "[Find] <chair> (1)",
    "[Sit] <chair> (1)",
    "[Find] <newspaper> (1)",
    "[Grab] <newspaper> (1)",
    "[Open] <newspaper> (1)",
    "[Read] <newspaper> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_july",
   "file_id": "split17_4",
   "goal_condition": [
    [
     [
      162,
      283,
      "ON",
      "character",
      "chair"
     ],
     [
      162,
      246,
      "INSIDE",
      "character",
      "home_office"
     ],
     [
      162,
      1000,
      "HOLDS_RH",
      "character",
      "newspaper"
     ]
    ],
    [
     [
      1000,
      "newspaper",
      "OPEN"
     ],
     [
      162,
      "character",
      "SITTING"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1201,
   "completion_tokens": 95,
   "total_tokens": 1296
  }
 },
 "4": {
  "plan": [
   [
    " # 0: find alarm\n find('alarm')\n # 1: switch off alarm\n assert('close' to 'alarm')\n else: find('alarm')\n switchoff('alarm')\n # 2: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " alarm",
      "\n",
      " find",
      "('",
      "al",
      "arm",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " switch",
      " off",
      " alarm",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "al",
      "arm",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "al",
      "arm",
      "')",
      "\n",
      " switch",
      "off",
      "('",
      "al",
      "arm",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.023521183,
      -0.013835483,
      -0.0024726125,
      -0.33334404,
      -0.26631454,
      -0.5324417,
      -0.030433323,
      -0.0025995348,
      -0.003828544,
      -0.00044965209,
      -0.010191479,
      -0.009849938,
      -0.0047438797,
      -0.004198443,
      -0.0009144692,
      -0.89873016,
      -0.08944511,
      -0.4941956,
      -0.01805014,
      -0.5188421,
      -0.0022903248,
      -0.020595273,
      -0.0032571743,
      -0.0017397184,
      -0.002166607,
      -0.0014670631,
      -0.00010057153,
      -0.0056130593,
      -0.006903385,
      -0.0023765352,
      -0.0019722474,
      -0.0039626393,
      -0.0020220587,
      -0.0005734527,
      -0.00010796247,
      -0.0045405785,
      -0.007773593,
      -0.033718105,
      -0.007375952,
      -0.00097460754,
      -0.00040916432,
      -0.00019976817,
      -0.0018726387,
      -0.41560408,
      -0.048606668,
      -0.008457284,
      -0.0010732325,
      -0.5693458
     ],
     "top_logprobs": [
      {
       " #": -0.023521183
      },
      {
       " 0": -0.013835483
      },
      {
       ":": -0.0024726125
      },
      {
       " find": -0.33334404
      },
      {
       " alarm": -0.26631454
      },
      {
       "\n": -0.5324417
      },
      {
       " find": -0.030433323
      },
      {
       "('": -0.0025995348
      },
      {
       "al": -0.003828544
      },
      {
       "arm": -0.00044965209
      },
      {
       "')": -0.010191479
      },
      {
       "\n": -0.009849938
      },
      {
       " #": -0.0047438797
      },
      {
       " 1": -0.004198443
      },
      {
       ":": -0.0009144692
      },
      {
       " switch": -0.89873016
      },
      {
       " off": -0.08944511
      },
      {
       " alarm": -0.4941956
      },
      {
       "\n": -0.01805014
      },
      {
       " assert": -0.5188421
      },
      {
       "('": -0.0022903248
      },
      {
       "close": -0.020595273
      },
      {
       "'": -0.0032571743
      },
      {
       " to": -0.0017397184
      },
      {
       " '": -0.002166607
      },
      {
       "al": -0.0014670631
      },
      {
       "arm": -0.00010057153
      },
      {
       "')": -0.0056130593
      },
      {
       "\n": -0.006903385
      },
      {
       " else": -0.0023765352
      },
      {
       ":": -0.0019722474
      },
      {
       " find": -0.0039626393
      },
      {
       "('": -0.0020220587
      },
      {
       "al": -0.0005734527
      },
      {
       "arm": -0.00010796247
      },
      {
       "')": -0.0045405785
      },
      {
       "\n": -0.007773593
      },
      {
       " switch": -0.033718105
      },
      {
       "off": -0.007375952
      },
      {
       "('": -0.00097460754
      },
      {
       "al": -0.00040916432
      },
      {
       "arm": -0.00019976817
      },
      {
       "')": -0.0018726387
      },
      {
       "\n": -0.41560408
      },
      {
       " #": -0.048606668
      },
      {
       " 2": -0.008457284
      },
      {
       ":": -0.0010732325
      },
      {
       " Done": -0.5693458
      }
     ],
     "text_offset": [
      3420,
      3422,
      3424,
      3425,
      3430,
      3436,
      3437,
      3442,
      3444,
      3446,
      3449,
      3451,
      3452,
      3454,
      3456,
      3457,
      3464,
      3468,
      3474,
      3475,
      3482,
      3484,
      3489,
      3490,
      3493,
      3495,
      3497,
      3500,
      3502,
      3503,
      3508,
      3509,
      3514,
      3516,
      3518,
      3521,
      3523,
      3524,
      3531,
      3534,
      3536,
      3538,
      3541,
      3543,
      3544,
      3546,
      3548,
      3549
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Shut off alarm",
   "task_description": "Shutting of the alarm clock",
   "program": [
    "[Walk] <bedroom> (1)",
    "[Walk] <alarm_clock> (1)",
    "[Find] <alarm_clock> (1)",
    "[Grab] <alarm_clock> (1)",
    "[SwitchOff] <alarm_clock> (1)",
    "[PutObjBack] <alarm_clock> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_kellensecond",
   "file_id": "split4_4",
   "goal_condition": [
    [
     [
      162,
      64,
      "INSIDE",
      "character",
      "bedroom"
     ]
    ],
    [
     [
      1000,
      "alarm_clock",
      "OFF"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1202,
   "completion_tokens": 48,
   "total_tokens": 1250
  }
 },
 "5": {
  "plan": [
   [
    " # 0: walk in to home office\n walk('home_office')\n # 1: find computer\n find('computer')\n # 2: sit in chair\n find('chair')\n sit('chair')\n # 3: turn on computer\n assert('close' to 'computer')\n else: find('computer')\n switchon('computer')\n # 4: touch mouse\n assert('close' to 'mouse')\n else: find('mouse')\n touch('mouse')\n # 5: interact with computer\n assert('computer' is 'switchon')\n else: switchon('computer')\n watch('computer')\n pointat('computer')\n read('computer')\n touch('computer')\n open('computer')\n close('computer')\n switchoff('computer')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " in",
      " to",
      " home",
      " office",
      "\n",
      " walk",
      "('",
      "home",
      "_",
      "office",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " computer",
      "\n",
      " find",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " sit",
      " in",
      " chair",
      "\n",
      " find",
      "('",
      "chair",
      "')",
      "\n",
      " sit",
      "('",
      "chair",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " turn",
      " on",
      " computer",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "computer",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "computer",
      "')",
      "\n",
      " switch",
      "on",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " touch",
      " mouse",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "mouse",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "mouse",
      "')",
      "\n",
      " touch",
      "('",
      "mouse",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " interact",
      " with",
      " computer",
      "\n",
      " assert",
      "('",
      "computer",
      "'",
      " is",
      " '",
      "switch",
      "on",
      "')",
      "\n",
      " else",
      ":",
      " switch",
      "on",
      "('",
      "computer",
      "')",
      "\n",
      " watch",
      "('",
      "computer",
      "')",
      "\n",
      " point",
      "at",
      "('",
      "computer",
      "')",
      "\n",
      " read",
      "('",
      "computer",
      "')",
      "\n",
      " touch",
      "('",
      "computer",
      "')",
      "\n",
      " open",
      "('",
      "computer",
      "')",
      "\n",
      " close",
      "('",
      "computer",
      "')",
      "\n",
      " switch",
      "off",
      "('",
      "computer",
      "')"
     ],
     "token_logprobs": [
      -0.019686054,
      -0.0072685373,
      -0.0018111328,
      -0.2809731,
      -1.776103,
      -0.034900423,
      -0.8233956,
      -0.064987704,
      -0.02588047,
      -0.0057743713,
      -0.006367633,
      -0.01479226,
      -0.041847892,
      -0.00086268375,
      -0.0024435145,
      -0.0076984493,
      -0.002823841,
      -0.0031035603,
      -0.00054971507,
      -0.050529808,
      -0.36473197,
      -0.037708763,
      -0.49565026,
      -0.0012757699,
      -0.0020474435,
      -0.0018684588,
      -0.005868379,
      -0.011262262,
      -0.005471968,
      -0.00088004506,
      -1.5523818,
      -1.1996967,
      -1.3975353,
      -0.11215458,
      -0.51477456,
      -0.0017741096,
      -0.0031739976,
      -0.0019672322,
      -0.0052008145,
      -0.7378314,
      -0.0029714934,
      -0.0015425183,
      -0.0012383496,
      -0.0053823153,
      -0.025965009,
      -0.0070386734,
      -0.0006152611,
      -0.4585259,
      -0.030520827,
      -0.4834834,
      -0.025261348,
      -0.7903247,
      -0.0018458853,
      -0.07213236,
      -0.0037841487,
      -0.000965359,
      -0.004106628,
      -0.005790019,
      -0.008093019,
      -0.0042753625,
      -0.0024639477,
      -0.0018298241,
      -0.005833844,
      -0.0018576494,
      -0.0010251408,
      -0.0023091428,
      -0.0057656188,
      -0.21571326,
      -0.002915779,
      -0.0010865398,
      -0.001470168,
      -0.0019019003,
      -0.0071623335,
      -0.01797756,
      -0.008441656,
      -0.00084741286,
      -3.0233884,
      -1.6942058,
      -0.52235305,
      -0.62300843,
      -0.001342078,
      -0.11756555,
      -0.0032429413,
      -0.0021729372,
      -0.002826471,
      -0.027981194,
      -0.0055682254,
      -0.003940795,
      -0.0013544315,
      -0.0016781007,
      -0.0071328566,
      -0.001693087,
      -0.0018279131,
      -0.0027798493,
      -0.0053445017,
      -0.06217483,
      -0.0012281437,
      -0.00077058055,
      -0.0022839308,
      -0.013882865,
      -0.015250357,
      -0.0075976625,
      -0.0007729657,
      -5.1217856,
      -0.010689464,
      -0.1650022,
      -0.028054446,
      -1.6352687,
      -0.0020167422,
      -1.6614653,
      -0.036823858,
      -0.0412742,
      -0.014891293,
      -0.16266085,
      -0.004956683,
      -0.013644525,
      -0.0062720184,
      -0.012084819,
      -0.011599586,
      -0.0050463616,
      -0.005664848,
      -0.0024175842,
      -0.0014304152,
      -0.005620372,
      -0.020647233,
      -4.8359656,
      -0.0018755054,
      -0.029106602,
      -0.045571387,
      -0.109263785,
      -2.171033,
      -0.0071055405,
      -0.00095342594,
      -0.048543967,
      -0.0032807363,
      -0.18912487,
      -1.6543231,
      -0.0013898262,
      -0.0026974867,
      -0.003994594,
      -0.2680291,
      -2.0103052,
      -0.0008424033,
      -0.039334223,
      -0.0023807187,
      -0.2767737,
      -1.4982995,
      -0.0014091042,
      -0.0051556956,
      -0.0026292356,
      -0.07420952,
      -0.38201267,
      -0.00051292183,
      -0.00040725604,
      -0.0028910288,
      -0.27422273,
      -2.3263302,
      -0.08380522,
      -0.00088779925,
      -0.00038054204,
      -0.003526908
     ],
     "top_logprobs": [
      {
       " #": -0.019686054
      },
      {
       " 0": -0.0072685373
      },
      {
       ":": -0.0018111328
      },
      {
       " walk": -0.2809731
      },
      {
       " to": -0.2333566
      },
      {
       " to": -0.034900423
      },
      {
       " home": -0.8233956
      },
      {
       " office": -0.064987704
      },
      {
       "\n": -0.02588047
      },
      {
       " walk": -0.0057743713
      },
      {
       "('": -0.006367633
      },
      {
       "home": -0.01479226
      },
      {
       "_": -0.041847892
      },
      {
       "office": -0.00086268375
      },
      {
       "')": -0.0024435145
      },
      {
       "\n": -0.0076984493
      },
      {
       " #": -0.002823841
      },
      {
       " 1": -0.0031035603
      },
      {
       ":": -0.00054971507
      },
      {
       " find": -0.050529808
      },
      {
       " computer": -0.36473197
      },
      {
       "\n": -0.037708763
      },
      {
       " find": -0.49565026
      },
      {
       "('": -0.0012757699
      },
      {
       "computer": -0.0020474435
      },
      {
       "')": -0.0018684588
      },
      {
       "\n": -0.005868379
      },
      {
       " #": -0.011262262
      },
      {
       " 2": -0.005471968
      },
      {
       ":": -0.00088004506
      },
      {
       " turn": -0.64554334
      },
      {
       " on": -0.69885355
      },
      {
       " front": -0.4533196
      },
      {
       "\n": -0.11215458
      },
      {
       " find": -0.51477456
      },
      {
       "('": -0.0017741096
      },
      {
       "chair": -0.0031739976
      },
      {
       "')": -0.0019672322
      },
      {
       "\n": -0.0052008145
      },
      {
       " sit": -0.7378314
      },
      {
       "('": -0.0029714934
      },
      {
       "chair": -0.0015425183
      },
      {
       "')": -0.0012383496
      },
      {
       "\n": -0.0053823153
      },
      {
       " #": -0.025965009
      },
      {
       " 3": -0.0070386734
      },
      {
       ":": -0.0006152611
      },
      {
       " turn": -0.4585259
      },
      {
       " on": -0.030520827
      },
      {
       " computer": -0.4834834
      },
      {
       "\n": -0.025261348
      },
      {
       " assert": -0.7903247
      },
      {
       "('": -0.0018458853
      },
      {
       "close": -0.07213236
      },
      {
       "'": -0.0037841487
      },
      {
       " to": -0.000965359
      },
      {
       " '": -0.004106628
      },
      {
       "computer": -0.005790019
      },
      {
       "')": -0.008093019
      },
      {
       "\n": -0.0042753625
      },
      {
       " else": -0.0024639477
      },
      {
       ":": -0.0018298241
      },
      {
       " find": -0.005833844
      },
      {
       "('": -0.0018576494
      },
      {
       "computer": -0.0010251408
      },
      {
       "')": -0.0023091428
      },
      {
       "\n": -0.0057656188
      },
      {
       " switch": -0.21571326
      },
      {
       "on": -0.002915779
      },
      {
       "('": -0.0010865398
      },
      {
       "computer": -0.001470168
      },
      {
       "')": -0.0019019003
      },
      {
       "\n": -0.0071623335
      },
      {
       " #": -0.01797756
      },
      {
       " 4": -0.008441656
      },
      {
       ":": -0.00084741286
      },
      {
       " use": -0.65319514
      },
      {
       " the": -0.7410863
      },
      {
       "\n": -0.52235305
      },
      {
       " assert": -0.62300843
      },
      {
       "('": -0.001342078
      },
      {
       "close": -0.11756555
      },
      {
       "'": -0.0032429413
      },
      {
       " to": -0.0021729372
      },
      {
       " '": -0.002826471
      },
      {
       "mouse": -0.027981194
      },
      {
       "')": -0.0055682254
      },
      {
       "\n": -0.003940795
      },
      {
       " else": -0.0013544315
      },
      {
       ":": -0.0016781007
      },
      {
       " find": -0.0071328566
      },
      {
       "('": -0.001693087
      },
      {
       "mouse": -0.0018279131
      },
      {
       "')": -0.0027798493
      },
      {
       "\n": -0.0053445017
      },
      {
       " touch": -0.06217483
      },
      {
       "('": -0.0012281437
      },
      {
       "mouse": -0.00077058055
      },
      {
       "')": -0.0022839308
      },
      {
       "\n": -0.013882865
      },
      {
       " #": -0.015250357
      },
      {
       " 5": -0.0075976625
      },
      {
       ":": -0.0007729657
      },
      {
       " use": -0.9868127
      },
      {
       " with": -0.010689464
      },
      {
       " computer": -0.1650022
      },
      {
       "\n": -0.028054446
      },
      {
       " look": -0.9764028
      },
      {
       "('": -0.0020167422
      },
      {
       "close": -0.88571614
      },
      {
       "'": -0.036823858
      },
      {
       " is": -0.0412742
      },
      {
       " '": -0.014891293
      },
      {
       "switch": -0.16266085
      },
      {
       "on": -0.004956683
      },
      {
       "')": -0.013644525
      },
      {
       "\n": -0.0062720184
      },
      {
       " else": -0.012084819
      },
      {
       ":": -0.011599586
      },
      {
       " switch": -0.0050463616
      },
      {
       "on": -0.005664848
      },
      {
       "('": -0.0024175842
      },
      {
       "computer": -0.0014304152
      },
      {
       "')": -0.005620372
      },
      {
       "\n": -0.020647233
      },
      {
       " interact": -0.666861
      },
      {
       "('": -0.0018755054
      },
      {
       "computer": -0.029106602
      },
      {
       "')": -0.045571387
      },
      {
       "\n": -0.109263785
      },
      {
       " interact": -1.5262147
      },
      {
       "at": -0.0071055405
      },
      {
       "('": -0.00095342594
      },
      {
       "computer": -0.048543967
      },
      {
       "')": -0.0032807363
      },
      {
       "\n": -0.18912487
      },
      {
       " read": -1.6543231
      },
      {
       "('": -0.0013898262
      },
      {
       "computer": -0.0026974867
      },
      {
       "')": -0.003994594
      },
      {
       "\n": -0.2680291
      },
      {
       " touch": -2.0103052
      },
      {
       "('": -0.0008424033
      },
      {
       "computer": -0.039334223
      },
      {
       "')": -0.0023807187
      },
      {
       "\n": -0.2767737
      },
      {
       " open": -1.4982995
      },
      {
       "('": -0.0014091042
      },
      {
       "computer": -0.0051556956
      },
      {
       "')": -0.0026292356
      },
      {
       "\n": -0.07420952
      },
      {
       " close": -0.38201267
      },
      {
       "('": -0.00051292183
      },
      {
       "computer": -0.00040725604
      },
      {
       "')": -0.0028910288
      },
      {
       "\n": -0.27422273
      },
      {
       " run": -1.1178244
      },
      {
       "off": -0.08380522
      },
      {
       "('": -0.00088779925
      },
      {
       "computer": -0.00038054204
      },
      {
       "')": -0.003526908
      }
     ],
     "text_offset": [
      3418,
      3420,
      3422,
      3423,
      3428,
      3431,
      3434,
      3439,
      3446,
      3447,
      3452,
      3454,
      3458,
      3459,
      3465,
      3467,
      3468,
      3470,
      3472,
      3473,
      3478,
      3487,
      3488,
      3493,
      3495,
      3503,
      3505,
      3506,
      3508,
      3510,
      3511,
      3515,
      3518,
      3524,
      3525,
      3530,
      3532,
      3537,
      3539,
      3540,
      3544,
      3546,
      3551,
      3553,
      3554,
      3556,
      3558,
      3559,
      3564,
      3567,
      3576,
      3577,
      3584,
      3586,
      3591,
      3592,
      3595,
      3597,
      3605,
      3607,
      3608,
      3613,
      3614,
      3619,
      3621,
      3629,
      3631,
      3632,
      3639,
      3641,
      3643,
      3651,
      3653,
      3654,
      3656,
      3658,
      3659,
      3665,
      3671,
      3672,
      3679,
      3681,
      3686,
      3687,
      3690,
      3692,
      3697,
      3699,
      3700,
      3705,
      3706,
      3711,
      3713,
      3718,
      3720,
      3721,
      3727,
      3729,
      3734,
      3736,
      3737,
      3739,
      3741,
      3742,
      3751,
      3756,
      3765,
      3766,
      3773,
      3775,
      3783,
      3784,
      3787,
      3789,
      3795,
      3797,
      3799,
      3800,
      3805,
      3806,
      3813,
      3815,
      3817,
      3825,
      3827,
      3828,
      3834,
      3836,
      3844,
      3846,
      3847,
      3853,
      3855,
      3857,
      3865,
      3867,
      3868,
      3873,
      3875,
      3883,
      3885,
      3886,
      3892,
      3894,
      3902,
      3904,
      3905,
      3910,
      3912,
      3920,
      3922,
      3923,
      3929,
      3931,
      3939,
      3941,
      3942,
      3949,
      3952,
      3954,
      3962
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Use computer",
   "task_description": "Pull out a desk chair. Sit down at computer. Use mouse and keyboard to navigate computer device. Use computer.",
   "program": [
    "[Walk] <home_office> (1)",
    "[Walk] <chair> (1)",
    "[Find] <chair> (1)",
    "[Pull] <chair> (1)",
    "[Sit] <chair> (1)",
    "[Find] <computer> (1)",
    "[SwitchOn] <computer> (1)",
    "[TurnTo] <computer> (1)",
    "[LookAt] <computer> (1)",
    "[Find] <mouse> (1)",
    "[Grab] <mouse> (1)",
    "[TurnTo] <computer> (1)",
    "[PointAt] <computer> (1)",
    "[Find] <button> (1)",
    "[Push] <button> (1)",
    "[PutObjBack] <mouse> (1)",
    "[Find] <keyboard> (1)",
    "[Type] <keyboard> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upworknturk_second",
   "file_id": "split142_2",
   "goal_condition": [
    [
     [
      162,
      246,
      "INSIDE",
      "character",
      "home_office"
     ],
     [
      162,
      283,
      "ON",
      "character",
      "chair"
     ]
    ],
    [
     [
      321,
      "computer",
      "ON"
     ],
     [
      162,
      "character",
      "SITTING"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1199,
   "completion_tokens": 161,
   "total_tokens": 1360
  }
 },
 "6": {
  "plan": [
   [
    " # 0: walk to bedroom\n walk('bedroom')\n # 1: lie down on bed\n find('bed')\n turnto('bed')\n assert('close' to 'bed')\n else: find('bed')\n else: turnto('bed')\n lie('bed')\n # 2: close eyes\n close_eyes()\n # 3: sleep\n sleep()\n # 4: wake up\n wakeup()",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " bedroom",
      "\n",
      " walk",
      "('",
      "bedroom",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " lie",
      " down",
      " on",
      " bed",
      "\n",
      " find",
      "('",
      "bed",
      "')",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "bed",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "bed",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "bed",
      "')",
      "\n",
      " else",
      ":",
      " tur",
      "nt",
      "o",
      "('",
      "bed",
      "')",
      "\n",
      " lie",
      "('",
      "bed",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " close",
      " eyes",
      "\n",
      " close",
      "_",
      "eyes",
      "()",
      "\n",
      " #",
      " 3",
      ":",
      " sleep",
      "\n",
      " sleep",
      "()",
      "\n",
      " #",
      " 4",
      ":",
      " wake",
      " up",
      "\n",
      " wake",
      "up",
      "()"
     ],
     "token_logprobs": [
      -0.01841435,
      -0.00972763,
      -0.0020555067,
      -0.50864977,
      -0.56210345,
      -0.56590337,
      -0.015127205,
      -0.0043508476,
      -0.0044505275,
      -0.0026614491,
      -0.0012621622,
      -0.0064679314,
      -0.0036663483,
      -0.003159885,
      -0.0005148311,
      -3.2625349,
      -0.41746294,
      -0.14788395,
      -0.14445959,
      -0.01222075,
      -0.39112094,
      -0.0013438661,
      -0.0005746466,
      -0.0012531503,
      -0.0045869853,
      -0.81895816,
      -5.0500123e-05,
      -0.00018462398,
      -0.00065373076,
      -0.0001635231,
      -0.0017379265,
      -0.0032181856,
      -2.7869127,
      -0.0011994416,
      -0.0075799488,
      -0.0028818822,
      -0.001096206,
      -0.0030841886,
      -0.00038304448,
      -0.004816707,
      -0.0037518404,
      -0.0032154943,
      -0.0018613534,
      -0.008293194,
      -0.0017087897,
      -0.00037326562,
      -0.0010874952,
      -0.004636986,
      -0.8559835,
      -0.0030166293,
      -0.014519476,
      -4.799487e-05,
      -0.00013133019,
      -0.00091279834,
      -0.00037922888,
      -0.0008403739,
      -0.003093576,
      -0.25928012,
      -0.012512709,
      -0.0012425266,
      -0.0010808703,
      -0.0061637615,
      -0.11663806,
      -0.009629167,
      -0.0008898286,
      -0.5911991,
      -0.37976754,
      -0.46361715,
      -0.22188719,
      -2.0290673,
      -0.01866379,
      -0.015487501,
      -0.011394404,
      -0.027818043,
      -0.004355818,
      -0.0010993055,
      -0.9016972,
      -0.069195315,
      -0.008094821,
      -0.00357512,
      -0.74546283,
      -0.257474,
      -0.005809324,
      -0.002079994,
      -0.16697663,
      -0.09717265,
      -0.059516896,
      -0.0051851165,
      -0.034562804,
      -0.003861333
     ],
     "top_logprobs": [
      {
       " #": -0.01841435
      },
      {
       " 0": -0.00972763
      },
      {
       ":": -0.0020555067
      },
      {
       " walk": -0.50864977
      },
      {
       " to": -0.56210345
      },
      {
       " bedroom": -0.56590337
      },
      {
       "\n": -0.015127205
      },
      {
       " walk": -0.0043508476
      },
      {
       "('": -0.0044505275
      },
      {
       "bedroom": -0.0026614491
      },
      {
       "')": -0.0012621622
      },
      {
       "\n": -0.0064679314
      },
      {
       " #": -0.0036663483
      },
      {
       " 1": -0.003159885
      },
      {
       ":": -0.0005148311
      },
      {
       " find": -0.08942633
      },
      {
       " down": -0.41746294
      },
      {
       " on": -0.14788395
      },
      {
       " bed": -0.14445959
      },
      {
       "\n": -0.01222075
      },
      {
       " find": -0.39112094
      },
      {
       "('": -0.0013438661
      },
      {
       "bed": -0.0005746466
      },
      {
       "')": -0.0012531503
      },
      {
       "\n": -0.0045869853
      },
      {
       " tur": -0.81895816
      },
      {
       "nt": -5.0500123e-05
      },
      {
       "o": -0.00018462398
      },
      {
       "('": -0.00065373076
      },
      {
       "bed": -0.0001635231
      },
      {
       "')": -0.0017379265
      },
      {
       "\n": -0.0032181856
      },
      {
       " look": -0.25470924
      },
      {
       "('": -0.0011994416
      },
      {
       "close": -0.0075799488
      },
      {
       "'": -0.0028818822
      },
      {
       " to": -0.001096206
      },
      {
       " '": -0.0030841886
      },
      {
       "bed": -0.00038304448
      },
      {
       "')": -0.004816707
      },
      {
       "\n": -0.0037518404
      },
      {
       " else": -0.0032154943
      },
      {
       ":": -0.0018613534
      },
      {
       " find": -0.008293194
      },
      {
       "('": -0.0017087897
      },
      {
       "bed": -0.00037326562
      },
      {
       "')": -0.0010874952
      },
      {
       "\n": -0.004636986
      },
      {
       " lie": -0.81727666
      },
      {
       ":": -0.0030166293
      },
      {
       " tur": -0.014519476
      },
      {
       "nt": -4.799487e-05
      },
      {
       "o": -0.00013133019
      },
      {
       "('": -0.00091279834
      },
      {
       "bed": -0.00037922888
      },
      {
       "')": -0.0008403739
      },
      {
       "\n": -0.003093576
      },
      {
       " lie": -0.25928012
      },
      {
       "('": -0.012512709
      },
      {
       "bed": -0.0012425266
      },
      {
       "')": -0.0010808703
      },
      {
       "\n": -0.0061637615
      },
      {
       " #": -0.11663806
      },
      {
       " 2": -0.009629167
      },
      {
       ":": -0.0008898286
      },
      {
       " close": -0.5911991
      },
      {
       " eyes": -0.37976754
      },
      {
       "\n": -0.46361715
      },
      {
       " close": -0.22188719
      },
      {
       "('": -0.61497796
      },
      {
       "eyes": -0.01866379
      },
      {
       "()": -0.015487501
      },
      {
       "\n": -0.011394404
      },
      {
       " #": -0.027818043
      },
      {
       " 3": -0.004355818
      },
      {
       ":": -0.0010993055
      },
      {
       " sleep": -0.9016972
      },
      {
       "\n": -0.069195315
      },
      {
       " sleep": -0.008094821
      },
      {
       "()": -0.00357512
      },
      {
       "<|endoftext|>": -0.6793055
      },
      {
       " #": -0.257474
      },
      {
       " 4": -0.005809324
      },
      {
       ":": -0.002079994
      },
      {
       " wake": -0.16697663
      },
      {
       " up": -0.09717265
      },
      {
       "\n": -0.059516896
      },
      {
       " wake": -0.0051851165
      },
      {
       "up": -0.034562804
      },
      {
       "()": -0.003861333
      }
     ],
     "text_offset": [
      3414,
      3416,
      3418,
      3419,
      3424,
      3427,
      3435,
      3436,
      3441,
      3443,
      3450,
      3452,
      3453,
      3455,
      3457,
      3458,
      3462,
      3467,
      3470,
      3474,
      3475,
      3480,
      3482,
      3485,
      3487,
      3488,
      3492,
      3494,
      3495,
      3497,
      3500,
      3502,
      3503,
      3510,
      3512,
      3517,
      3518,
      3521,
      3523,
      3526,
      3528,
      3529,
      3534,
      3535,
      3540,
      3542,
      3545,
      3547,
      3548,
      3553,
      3554,
      3558,
      3560,
      3561,
      3563,
      3566,
      3568,
      3569,
      3573,
      3575,
      3578,
      3580,
      3581,
      3583,
      3585,
      3586,
      3592,
      3597,
      3598,
      3604,
      3605,
      3609,
      3611,
      3612,
      3614,
      3616,
      3617,
      3623,
      3624,
      3630,
      3632,
      3633,
      3635,
      3637,
      3638,
      3643,
      3646,
      3647,
      3652,
      3654
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Take nap",
   "task_description": "Lay down on the bed and nap",
   "program": [
    "[Walk] <bedroom> (1)",
    "[Walk] <bed> (1)",
    "[Lie] <bed> (1)",
    "[Sleep]"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upworknturk_second",
   "file_id": "split141_3",
   "goal_condition": [
    [
     [
      162,
      99,
      "ON",
      "character",
      "bed"
     ],
     [
      162,
      64,
      "INSIDE",
      "character",
      "bedroom"
     ]
    ],
    [
     [
      162,
      "character",
      "LYING"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1200,
   "completion_tokens": 90,
   "total_tokens": 1290
  }
 },
 "7": {
  "plan": [
   [
    " # 0: walk to bedroom\n walk('bedroom')\n # 1: find computer\n walk('computer')\n find('computer')\n # 2: turn on computer\n assert('close' to 'computer')\n else: find('computer')\n switchon('computer')\n # 3: find chair and sit on it\n find('chair')\n assert('close' to 'chair')\n else: find('chair')\n sit('chair')\n # 4: touch keyboard and read document\n assert('close' to 'keyboard')\n else: find('keyboard')\n touch('keyboard')\n read('document')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " bedroom",
      "\n",
      " walk",
      "('",
      "bedroom",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " computer",
      "\n",
      " walk",
      "('",
      "computer",
      "')",
      "\n",
      " find",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " turn",
      " on",
      " computer",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "computer",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "computer",
      "')",
      "\n",
      " switch",
      "on",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " find",
      " chair",
      " and",
      " sit",
      " on",
      " it",
      "\n",
      " find",
      "('",
      "chair",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "chair",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "chair",
      "')",
      "\n",
      " sit",
      "('",
      "chair",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " touch",
      " keyboard",
      " and",
      " read",
      " document",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "key",
      "board",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "key",
      "board",
      "')",
      "\n",
      " touch",
      "('",
      "key",
      "board",
      "')",
      "\n",
      " read",
      "('",
      "document",
      "')"
     ],
     "token_logprobs": [
      -0.017983442,
      -0.0076451125,
      -0.0018085055,
      -0.17033726,
      -0.2216357,
      -1.2164841,
      -0.016639002,
      -0.0044105346,
      -0.0037759524,
      -0.012752771,
      -0.0011320681,
      -0.0060721873,
      -0.002996181,
      -0.0034045328,
      -0.00056343444,
      -0.03429259,
      -1.0079443,
      -0.034239296,
      -0.5976972,
      -0.0011971729,
      -0.009385943,
      -0.0024413639,
      -0.003528762,
      -0.009197999,
      -0.00079372677,
      -0.0008104854,
      -0.0008270714,
      -0.0040743705,
      -0.0040701805,
      -0.004252075,
      -0.00062325277,
      -0.6067361,
      -0.024709323,
      -0.93489116,
      -0.022940906,
      -0.30054256,
      -0.0011980102,
      -0.022818085,
      -0.003104577,
      -0.001499896,
      -0.0026444755,
      -0.0033464003,
      -0.004429035,
      -0.0031097208,
      -0.0016512919,
      -0.0010139239,
      -0.0051411362,
      -0.0012069602,
      -0.0007693875,
      -0.0016029936,
      -0.004655607,
      -0.47990918,
      -0.0046453695,
      -0.0010101045,
      -0.0015469365,
      -0.001994347,
      -0.0066389823,
      -0.020155216,
      -0.0069697658,
      -0.0006238507,
      -1.330976,
      -1.1249609,
      -0.51147074,
      -0.004258603,
      -0.1664483,
      -0.010204005,
      -0.012431834,
      -0.05781078,
      -0.0005682056,
      -0.0010781267,
      -0.0014189545,
      -0.002990025,
      -0.06143812,
      -0.0004589541,
      -0.0011897736,
      -0.0016090836,
      -0.00052055495,
      -0.0009467437,
      -0.002973166,
      -0.0033307313,
      -0.0017597202,
      -0.00088601024,
      -0.0007048478,
      -0.0020769509,
      -0.0007704604,
      -0.0009617781,
      -0.00092425174,
      -0.0026558915,
      -0.005700275,
      -0.00070198486,
      -0.0015249093,
      -0.0007703421,
      -0.0047684344,
      -0.005805186,
      -0.006323124,
      -0.00061597634,
      -1.5612984,
      -2.1882427,
      -0.66012627,
      -4.3533654,
      -3.132312,
      -0.022832658,
      -0.081966236,
      -0.0005798965,
      -0.008376316,
      -0.00191904,
      -0.0002170572,
      -0.0014754217,
      -0.01806398,
      -0.00081108237,
      -0.0051413765,
      -0.0029494904,
      -0.0006991211,
      -0.0004453587,
      -0.0033722946,
      -0.0010808703,
      -0.0008042809,
      -0.0005207943,
      -0.0023225835,
      -0.0046829754,
      -0.020731876,
      -0.0008248027,
      -0.00074188696,
      -0.00037147748,
      -0.0015997695,
      -0.013871321,
      -0.65338045,
      -0.011947698,
      -0.024227826,
      -0.003593664
     ],
     "top_logprobs": [
      {
       " #": -0.017983442
      },
      {
       " 0": -0.0076451125
      },
      {
       ":": -0.0018085055
      },
      {
       " walk": -0.17033726
      },
      {
       " to": -0.2216357
      },
      {
       " home": -0.8218336
      },
      {
       "\n": -0.016639002
      },
      {
       " walk": -0.0044105346
      },
      {
       "('": -0.0037759524
      },
      {
       "bedroom": -0.012752771
      },
      {
       "')": -0.0011320681
      },
      {
       "\n": -0.0060721873
      },
      {
       " #": -0.002996181
      },
      {
       " 1": -0.0034045328
      },
      {
       ":": -0.00056343444
      },
      {
       " find": -0.03429259
      },
      {
       " desk": -0.572674
      },
      {
       "\n": -0.034239296
      },
      {
       " walk": -0.5976972
      },
      {
       "('": -0.0011971729
      },
      {
       "computer": -0.009385943
      },
      {
       "')": -0.0024413639
      },
      {
       "\n": -0.003528762
      },
      {
       " find": -0.009197999
      },
      {
       "('": -0.00079372677
      },
      {
       "computer": -0.0008104854
      },
      {
       "')": -0.0008270714
      },
      {
       "\n": -0.0040743705
      },
      {
       " #": -0.0040701805
      },
      {
       " 2": -0.004252075
      },
      {
       ":": -0.00062325277
      },
      {
       " turn": -0.6067361
      },
      {
       " on": -0.024709323
      },
      {
       " the": -0.5115236
      },
      {
       "\n": -0.022940906
      },
      {
       " assert": -0.30054256
      },
      {
       "('": -0.0011980102
      },
      {
       "close": -0.022818085
      },
      {
       "'": -0.003104577
      },
      {
       " to": -0.001499896
      },
      {
       " '": -0.0026444755
      },
      {
       "computer": -0.0033464003
      },
      {
       "')": -0.004429035
      },
      {
       "\n": -0.0031097208
      },
      {
       " else": -0.0016512919
      },
      {
       ":": -0.0010139239
      },
      {
       " find": -0.0051411362
      },
      {
       "('": -0.0012069602
      },
      {
       "computer": -0.0007693875
      },
      {
       "')": -0.0016029936
      },
      {
       "\n": -0.004655607
      },
      {
       " switch": -0.47990918
      },
      {
       "on": -0.0046453695
      },
      {
       "('": -0.0010101045
      },
      {
       "computer": -0.0015469365
      },
      {
       "')": -0.001994347
      },
      {
       "\n": -0.0066389823
      },
      {
       " #": -0.020155216
      },
      {
       " 3": -0.0069697658
      },
      {
       ":": -0.0006238507
      },
      {
       " sit": -0.9098563
      },
      {
       " chair": -1.1249609
      },
      {
       " and": -0.51147074
      },
      {
       " sit": -0.004258603
      },
      {
       " on": -0.1664483
      },
      {
       " it": -0.010204005
      },
      {
       "\n": -0.012431834
      },
      {
       " find": -0.05781078
      },
      {
       "('": -0.0005682056
      },
      {
       "chair": -0.0010781267
      },
      {
       "')": -0.0014189545
      },
      {
       "\n": -0.002990025
      },
      {
       " assert": -0.06143812
      },
      {
       "('": -0.0004589541
      },
      {
       "close": -0.0011897736
      },
      {
       "'": -0.0016090836
      },
      {
       " to": -0.00052055495
      },
      {
       " '": -0.0009467437
      },
      {
       "chair": -0.002973166
      },
      {
       "')": -0.0033307313
      },
      {
       "\n": -0.0017597202
      },
      {
       " else": -0.00088601024
      },
      {
       ":": -0.0007048478
      },
      {
       " find": -0.0020769509
      },
      {
       "('": -0.0007704604
      },
      {
       "chair": -0.0009617781
      },
      {
       "')": -0.00092425174
      },
      {
       "\n": -0.0026558915
      },
      {
       " sit": -0.005700275
      },
      {
       "('": -0.00070198486
      },
      {
       "chair": -0.0015249093
      },
      {
       "')": -0.0007703421
      },
      {
       "\n": -0.0047684344
      },
      {
       " #": -0.005805186
      },
      {
       " 4": -0.006323124
      },
      {
       ":": -0.00061597634
      },
      {
       " touch": -1.5612984
      },
      {
       " the": -0.23565754
      },
      {
       " and": -0.66012627
      },
      {
       " start": -0.840058
      },
      {
       "\n": -1.1482115
      },
      {
       "\n": -0.022832658
      },
      {
       " assert": -0.081966236
      },
      {
       "('": -0.0005798965
      },
      {
       "close": -0.008376316
      },
      {
       "'": -0.00191904
      },
      {
       " to": -0.0002170572
      },
      {
       " '": -0.0014754217
      },
      {
       "key": -0.01806398
      },
      {
       "board": -0.00081108237
      },
      {
       "')": -0.0051413765
      },
      {
       "\n": -0.0029494904
      },
      {
       " else": -0.0006991211
      },
      {
       ":": -0.0004453587
      },
      {
       " find": -0.0033722946
      },
      {
       "('": -0.0010808703
      },
      {
       "key": -0.0008042809
      },
      {
       "board": -0.0005207943
      },
      {
       "')": -0.0023225835
      },
      {
       "\n": -0.0046829754
      },
      {
       " touch": -0.020731876
      },
      {
       "('": -0.0008248027
      },
      {
       "key": -0.00074188696
      },
      {
       "board": -0.00037147748
      },
      {
       "')": -0.0015997695
      },
      {
       "\n": -0.013871321
      },
      {
       " read": -0.65338045
      },
      {
       "('": -0.011947698
      },
      {
       "document": -0.024227826
      },
      {
       "')": -0.003593664
      }
     ],
     "text_offset": [
      3425,
      3427,
      3429,
      3430,
      3435,
      3438,
      3446,
      3447,
      3452,
      3454,
      3461,
      3463,
      3464,
      3466,
      3468,
      3469,
      3474,
      3483,
      3484,
      3489,
      3491,
      3499,
      3501,
      3502,
      3507,
      3509,
      3517,
      3519,
      3520,
      3522,
      3524,
      3525,
      3530,
      3533,
      3542,
      3543,
      3550,
      3552,
      3557,
      3558,
      3561,
      3563,
      3571,
      3573,
      3574,
      3579,
      3580,
      3585,
      3587,
      3595,
      3597,
      3598,
      3605,
      3607,
      3609,
      3617,
      3619,
      3620,
      3622,
      3624,
      3625,
      3630,
      3636,
      3640,
      3644,
      3647,
      3650,
      3651,
      3656,
      3658,
      3663,
      3665,
      3666,
      3673,
      3675,
      3680,
      3681,
      3684,
      3686,
      3691,
      3693,
      3694,
      3699,
      3700,
      3705,
      3707,
      3712,
      3714,
      3715,
      3719,
      3721,
      3726,
      3728,
      3729,
      3731,
      3733,
      3734,
      3740,
      3749,
      3753,
      3758,
      3767,
      3768,
      3775,
      3777,
      3782,
      3783,
      3786,
      3788,
      3791,
      3796,
      3798,
      3799,
      3804,
      3805,
      3810,
      3812,
      3815,
      3820,
      3822,
      3823,
      3829,
      3831,
      3834,
      3839,
      3841,
      3842,
      3847,
      3849,
      3857
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Do work on computer",
   "task_description": "Open home office, sit in my chair at the desk and do work on the computer. Stand up from chair and desk, leave home office.",
   "program": [
    "[Walk] <home_office> (1)",
    "[Walk] <chair> (1)",
    "[Find] <chair> (1)",
    "[Sit] <chair> (1)",
    "[Find] <computer> (1)",
    "[SwitchOn] <computer> (1)",
    "[TurnTo] <computer> (1)",
    "[LookAt] <computer> (1)",
    "[Find] <keyboard> (1)",
    "[Type] <keyboard> (1)",
    "[SwitchOff] <computer> (1)",
    "[StandUp]"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upworknturk_second",
   "file_id": "split119_3",
   "goal_condition": [
    [
     [
      162,
      246,
      "INSIDE",
      "character",
      "home_office"
     ],
     [
      162,
      283,
      "ON",
      "character",
      "chair"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1203,
   "completion_tokens": 130,
   "total_tokens": 1333
  }
 },
 "8": {
  "plan": [
   [
    " # 0: find shoes\n find('shoes')\n # 1: grab shoes\n assert('close' to 'shoes')\n else: find('shoes')\n grab('shoes')\n assert('shoes' in 'hands')\n else: grab('shoes')\n # 2: put on the shoes\n puton('shoes')\n # 3: Done\n",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " shoes",
      "\n",
      " find",
      "('",
      "sh",
      "oes",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " grab",
      " shoes",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "sh",
      "oes",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "sh",
      "oes",
      "')",
      "\n",
      " grab",
      "('",
      "sh",
      "oes",
      "')",
      "\n",
      " assert",
      "('",
      "sh",
      "oes",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "sh",
      "oes",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " put",
      " on",
      " the",
      " shoes",
      "\n",
      " put",
      "on",
      "('",
      "sh",
      "oes",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " Done",
      "\n"
     ],
     "token_logprobs": [
      -0.015563777,
      -0.009081667,
      -0.001941913,
      -0.5774349,
      -0.29365867,
      -0.033981193,
      -0.055310875,
      -0.0020733671,
      -0.00039413653,
      -0.004442087,
      -0.003539828,
      -0.007202796,
      -0.008734793,
      -0.0024042572,
      -0.0006238507,
      -0.2965227,
      -0.11255906,
      -0.01929519,
      -0.47973967,
      -0.0016695027,
      -0.0051135193,
      -0.002132857,
      -0.0007072329,
      -0.005672881,
      -0.0004896621,
      -0.0019441826,
      -0.005399394,
      -0.0065324856,
      -0.0014101799,
      -0.0014953004,
      -0.0033752855,
      -0.0012482562,
      -0.00022099297,
      -0.0021788527,
      -0.0017267592,
      -0.006293372,
      -0.0057436787,
      -0.0009548583,
      -0.000117978816,
      -0.00016364138,
      -0.0018042055,
      -0.005192845,
      -0.57469195,
      -0.0012569706,
      -0.0042207087,
      -0.0026638398,
      -0.0011557596,
      -0.0114152655,
      -0.0027475131,
      -0.0061971666,
      -0.015879313,
      -0.0035959976,
      -0.013897913,
      -0.0024018683,
      -0.0026436392,
      -0.0011683488,
      -0.0001693634,
      -0.00091470755,
      -0.0023873483,
      -0.0044452003,
      -0.6634028,
      -0.006523126,
      -0.00095318665,
      -0.1463958,
      -0.40579024,
      -2.6490457,
      -0.0032510147,
      -0.0159082,
      -0.75947124,
      -0.0070051793,
      -0.0010232306,
      -0.00025038118,
      -0.00068313396,
      -0.002637663,
      -0.021076975,
      -0.41960225,
      -0.0063158656,
      -0.0011227585,
      -0.8186495,
      -0.16763382
     ],
     "top_logprobs": [
      {
       " #": -0.015563777
      },
      {
       " 0": -0.009081667
      },
      {
       ":": -0.001941913
      },
      {
       " find": -0.5774349
      },
      {
       " shoes": -0.29365867
      },
      {
       "\n": -0.033981193
      },
      {
       " find": -0.055310875
      },
      {
       "('": -0.0020733671
      },
      {
       "sh": -0.00039413653
      },
      {
       "oes": -0.004442087
      },
      {
       "')": -0.003539828
      },
      {
       "\n": -0.007202796
      },
      {
       " #": -0.008734793
      },
      {
       " 1": -0.0024042572
      },
      {
       ":": -0.0006238507
      },
      {
       " grab": -0.2965227
      },
      {
       " shoes": -0.11255906
      },
      {
       "\n": -0.01929519
      },
      {
       " assert": -0.47973967
      },
      {
       "('": -0.0016695027
      },
      {
       "close": -0.0051135193
      },
      {
       "'": -0.002132857
      },
      {
       " to": -0.0007072329
      },
      {
       " '": -0.005672881
      },
      {
       "sh": -0.0004896621
      },
      {
       "oes": -0.0019441826
      },
      {
       "')": -0.005399394
      },
      {
       "\n": -0.0065324856
      },
      {
       " else": -0.0014101799
      },
      {
       ":": -0.0014953004
      },
      {
       " find": -0.0033752855
      },
      {
       "('": -0.0012482562
      },
      {
       "sh": -0.00022099297
      },
      {
       "oes": -0.0021788527
      },
      {
       "')": -0.0017267592
      },
      {
       "\n": -0.006293372
      },
      {
       " grab": -0.0057436787
      },
      {
       "('": -0.0009548583
      },
      {
       "sh": -0.000117978816
      },
      {
       "oes": -0.00016364138
      },
      {
       "')": -0.0018042055
      },
      {
       "\n": -0.005192845
      },
      {
       " assert": -0.57469195
      },
      {
       "('": -0.0012569706
      },
      {
       "sh": -0.0042207087
      },
      {
       "oes": -0.0026638398
      },
      {
       "'": -0.0011557596
      },
      {
       " in": -0.0114152655
      },
      {
       " '": -0.0027475131
      },
      {
       "hands": -0.0061971666
      },
      {
       "')": -0.015879313
      },
      {
       "\n": -0.0035959976
      },
      {
       " else": -0.013897913
      },
      {
       ":": -0.0024018683
      },
      {
       " grab": -0.0026436392
      },
      {
       "('": -0.0011683488
      },
      {
       "sh": -0.0001693634
      },
      {
       "oes": -0.00091470755
      },
      {
       "')": -0.0023873483
      },
      {
       "\n": -0.0044452003
      },
      {
       " #": -0.6634028
      },
      {
       " 2": -0.006523126
      },
      {
       ":": -0.00095318665
      },
      {
       " put": -0.1463958
      },
      {
       " on": -0.40579024
      },
      {
       " shoes": -0.09625503
      },
      {
       " shoes": -0.0032510147
      },
      {
       "\n": -0.0159082
      },
      {
       " put": -0.75947124
      },
      {
       "on": -0.0070051793
      },
      {
       "('": -0.0010232306
      },
      {
       "sh": -0.00025038118
      },
      {
       "oes": -0.00068313396
      },
      {
       "')": -0.002637663
      },
      {
       "\n": -0.021076975
      },
      {
       " #": -0.41960225
      },
      {
       " 3": -0.0063158656
      },
      {
       ":": -0.0011227585
      },
      {
       " Done": -0.8186495
      },
      {
       "\n": -0.16763382
      }
     ],
     "text_offset": [
      3423,
      3425,
      3427,
      3428,
      3433,
      3439,
      3440,
      3445,
      3447,
      3449,
      3452,
      3454,
      3455,
      3457,
      3459,
      3460,
      3465,
      3471,
      3472,
      3479,
      3481,
      3486,
      3487,
      3490,
      3492,
      3494,
      3497,
      3499,
      3500,
      3505,
      3506,
      3511,
      3513,
      3515,
      3518,
      3520,
      3521,
      3526,
      3528,
      3530,
      3533,
      3535,
      3536,
      3543,
      3545,
      3547,
      3550,
      3551,
      3554,
      3556,
      3561,
      3563,
      3564,
      3569,
      3570,
      3575,
      3577,
      3579,
      3582,
      3584,
      3585,
      3587,
      3589,
      3590,
      3594,
      3597,
      3601,
      3607,
      3608,
      3612,
      3614,
      3616,
      3618,
      3621,
      3623,
      3624,
      3626,
      3628,
      3629,
      3634
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Put on your shoes",
   "task_description": "Sit on a chair with your shoes in front of you.  Put them on one at a time.",
   "program": [
    "[Walk] <home_office> (1)",
    "[Walk] <shoes> (1)",
    "[Find] <shoes> (1)",
    "[Grab] <shoes> (1)",
    "[Find] <chair> (1)",
    "[Sit] <chair> (1)",
    "[Find] <feet_both> (1)",
    "[PutBack] <shoes> (1) <feet_both> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_july",
   "file_id": "split8_1",
   "goal_condition": [
    [
     [
      162,
      246,
      "INSIDE",
      "character",
      "home_office"
     ],
     [
      162,
      2058,
      "ON",
      "character",
      "chair"
     ],
     [
      1000,
      1001,
      "ON",
      "shoes",
      "feet_both"
     ]
    ],
    [
     [
      162,
      "character",
      "SITTING"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1204,
   "completion_tokens": 80,
   "total_tokens": 1284
  }
 },
 "9": {
  "plan": [
   [
    " # 0: find bed\n find('bed')\n # 1: lay down on bed\n turnto('bed')\n lookat('bed')\n assert('close' to 'bed')\n else: find('bed')\n lie('bed')\n sleep()\n # 2: done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " bed",
      "\n",
      " find",
      "('",
      "bed",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " lay",
      " down",
      " on",
      " bed",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "bed",
      "')",
      "\n",
      " look",
      "at",
      "('",
      "bed",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "bed",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "bed",
      "')",
      "\n",
      " lie",
      "('",
      "bed",
      "')",
      "\n",
      " sleep",
      "()",
      "\n",
      " #",
      " 2",
      ":",
      " done"
     ],
     "token_logprobs": [
      -0.24266115,
      -0.061598558,
      -0.0029435724,
      -0.88208395,
      -0.2808933,
      -0.018947061,
      -0.034724843,
      -0.003298318,
      -0.0007225029,
      -0.0019539173,
      -0.009127984,
      -0.0034503464,
      -0.0022206085,
      -0.0004178074,
      -0.5883307,
      -0.0741538,
      -0.19893421,
      -0.044483885,
      -0.0077479435,
      -0.28029066,
      -2.033751e-05,
      -0.0002555109,
      -0.00046288988,
      -7.434374e-05,
      -0.0007552496,
      -0.0034539357,
      -0.053844627,
      -0.00023440628,
      -0.00030273164,
      -0.00011261161,
      -0.00021634194,
      -0.0027021489,
      -0.017791634,
      -0.00051148946,
      -0.0010345085,
      -0.0012570898,
      -0.0002410829,
      -0.0008916177,
      -0.00015911051,
      -0.0022602158,
      -0.0034736719,
      -0.00081406545,
      -0.0007959898,
      -0.002971134,
      -0.00097401056,
      -0.00012691665,
      -0.0012431245,
      -0.0031180289,
      -1.7559005,
      -0.0054527894,
      -0.00078406144,
      -0.0011610676,
      -0.007823872,
      -1.66875,
      -0.005755785,
      -0.49488872,
      -0.23794302,
      -0.008019354,
      -0.001070011,
      -2.2466588
     ],
     "top_logprobs": [
      {
       " #": -0.24266115
      },
      {
       " 0": -0.061598558
      },
      {
       ":": -0.0029435724
      },
      {
       " find": -0.88208395
      },
      {
       " bed": -0.2808933
      },
      {
       "\n": -0.018947061
      },
      {
       " find": -0.034724843
      },
      {
       "('": -0.003298318
      },
      {
       "bed": -0.0007225029
      },
      {
       "')": -0.0019539173
      },
      {
       "\n": -0.009127984
      },
      {
       " #": -0.0034503464
      },
      {
       " 1": -0.0022206085
      },
      {
       ":": -0.0004178074
      },
      {
       " lay": -0.5883307
      },
      {
       " down": -0.0741538
      },
      {
       " on": -0.19893421
      },
      {
       " bed": -0.044483885
      },
      {
       "\n": -0.0077479435
      },
      {
       " tur": -0.28029066
      },
      {
       "nt": -2.033751e-05
      },
      {
       "o": -0.0002555109
      },
      {
       "('": -0.00046288988
      },
      {
       "bed": -7.434374e-05
      },
      {
       "')": -0.0007552496
      },
      {
       "\n": -0.0034539357
      },
      {
       " look": -0.053844627
      },
      {
       "at": -0.00023440628
      },
      {
       "('": -0.00030273164
      },
      {
       "bed": -0.00011261161
      },
      {
       "')": -0.00021634194
      },
      {
       "\n": -0.0027021489
      },
      {
       " assert": -0.017791634
      },
      {
       "('": -0.00051148946
      },
      {
       "close": -0.0010345085
      },
      {
       "'": -0.0012570898
      },
      {
       " to": -0.0002410829
      },
      {
       " '": -0.0008916177
      },
      {
       "bed": -0.00015911051
      },
      {
       "')": -0.0022602158
      },
      {
       "\n": -0.0034736719
      },
      {
       " else": -0.00081406545
      },
      {
       ":": -0.0007959898
      },
      {
       " find": -0.002971134
      },
      {
       "('": -0.00097401056
      },
      {
       "bed": -0.00012691665
      },
      {
       "')": -0.0012431245
      },
      {
       "\n": -0.0031180289
      },
      {
       " else": -0.38653466
      },
      {
       "('": -0.0054527894
      },
      {
       "bed": -0.00078406144
      },
      {
       "')": -0.0011610676
      },
      {
       "\n": -0.007823872
      },
      {
       " #": -0.22473541
      },
      {
       "()": -0.005755785
      },
      {
       "\n": -0.49488872
      },
      {
       " #": -0.23794302
      },
      {
       " 2": -0.008019354
      },
      {
       ":": -0.001070011
      },
      {
       " Done": -0.65098315
      }
     ],
     "text_offset": [
      3411,
      3413,
      3415,
      3416,
      3421,
      3425,
      3426,
      3431,
      3433,
      3436,
      3438,
      3439,
      3441,
      3443,
      3444,
      3448,
      3453,
      3456,
      3460,
      3461,
      3465,
      3467,
      3468,
      3470,
      3473,
      3475,
      3476,
      3481,
      3483,
      3485,
      3488,
      3490,
      3491,
      3498,
      3500,
      3505,
      3506,
      3509,
      3511,
      3514,
      3516,
      3517,
      3522,
      3523,
      3528,
      3530,
      3533,
      3535,
      3536,
      3540,
      3542,
      3545,
      3547,
      3548,
      3554,
      3556,
      3557,
      3559,
      3561,
      3562
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Sleep",
   "task_description": "Lie down in a bed at night and fall asleep",
   "program": [
    "[Walk] <bedroom> (1)",
    "[Walk] <bed> (1)",
    "[Find] <bed> (1)",
    "[Lie] <bed> (1)",
    "[Sleep]"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_july",
   "file_id": "split22_2",
   "goal_condition": [
    [
     [
      162,
      99,
      "ON",
      "character",
      "bed"
     ],
     [
      162,
      64,
      "INSIDE",
      "character",
      "bedroom"
     ]
    ],
    [
     [
      162,
      "character",
      "LYING"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1197,
   "completion_tokens": 60,
   "total_tokens": 1257
  }
 },
 "10": {
  "plan": [
   [
    " # 0: find shampoo\n find('shampoo')\n # 1: grab shampoo\n grab('shampoo')\n # 2: find head\n find('head')\n # 3: pour shampoo on head\n assert('close' to 'shampoo')\n else: grab('shampoo')\n pour('shampoo')\n turnto('shampoo')\n lookat('shampoo')\n # 4: wash hair\n wash('hair')\n turnto('shampoo')\n lookat('shampoo')\n # 5: Done\n assert('close' to 'shampoo')\n else: grab('shampoo')\n putobjback('shampoo')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " shampoo",
      "\n",
      " find",
      "('",
      "sh",
      "ampoo",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " grab",
      " shampoo",
      "\n",
      " grab",
      "('",
      "sh",
      "ampoo",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " find",
      " head",
      "\n",
      " find",
      "('",
      "head",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " pour",
      " shampoo",
      " on",
      " head",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "sh",
      "ampoo",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "sh",
      "ampoo",
      "')",
      "\n",
      " pour",
      "('",
      "sh",
      "ampoo",
      "')",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "sh",
      "ampoo",
      "')",
      "\n",
      " look",
      "at",
      "('",
      "sh",
      "ampoo",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " wash",
      " hair",
      "\n",
      " wash",
      "('",
      "hair",
      "')",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "sh",
      "ampoo",
      "')",
      "\n",
      " look",
      "at",
      "('",
      "sh",
      "ampoo",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " Done",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "sh",
      "ampoo",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "sh",
      "ampoo",
      "')",
      "\n",
      " put",
      "obj",
      "back",
      "('",
      "sh",
      "ampoo",
      "')"
     ],
     "token_logprobs": [
      -0.0182746,
      -0.009067353,
      -0.001946213,
      -0.4045006,
      -0.17636664,
      -0.05674107,
      -0.028863197,
      -0.0017818722,
      -0.0004715968,
      -0.00047302918,
      -0.004288889,
      -0.0066812243,
      -0.004197605,
      -0.002702926,
      -0.000440229,
      -0.20541559,
      -0.054581672,
      -0.019239347,
      -1.4935797,
      -0.0015120731,
      -0.00033975672,
      -0.00037887125,
      -0.0005827584,
      -0.004533034,
      -0.6142328,
      -0.0074901637,
      -0.00076556916,
      -1.8195697,
      -3.1337311,
      -0.051241018,
      -0.34718075,
      -0.0017502266,
      -0.001325904,
      -0.00221768,
      -0.004256567,
      -0.05897642,
      -0.008333043,
      -0.00070341537,
      -0.52446264,
      -0.032361172,
      -0.43549386,
      -0.08053796,
      -0.010568319,
      -0.8946384,
      -0.0024070076,
      -0.4848188,
      -0.004535848,
      -0.0007759487,
      -0.0054565645,
      -1.751844,
      -0.0002376249,
      -0.013547249,
      -0.005764779,
      -0.002892584,
      -0.0019555844,
      -1.8770057,
      -0.0021399644,
      -0.0010488285,
      -0.00028555995,
      -0.003760754,
      -0.0065120263,
      -0.1501592,
      -0.0035151246,
      -0.01012067,
      -9.377476e-05,
      -0.19711433,
      -0.009478846,
      -1.6321867,
      -0.00013633883,
      -0.001267413,
      -0.0008823119,
      -0.42214024,
      -0.0002206344,
      -0.0028015464,
      -0.0057246736,
      -0.91684556,
      -0.0010361812,
      -0.00063547964,
      -0.022432584,
      -0.0002816242,
      -0.002236558,
      -0.006552402,
      -0.009833503,
      -0.006908666,
      -0.0011087942,
      -1.2207215,
      -0.8041719,
      -0.39274007,
      -0.27072474,
      -0.002396552,
      -0.7883271,
      -0.0017619906,
      -0.0051537193,
      -2.303387,
      -5.657977e-05,
      -0.0012017094,
      -0.00040320013,
      -1.8109094,
      -0.0025201768,
      -0.0029560686,
      -0.0027880983,
      -0.15574542,
      -0.00034392995,
      -0.0004931229,
      -0.034635242,
      -8.209043e-05,
      -0.002251672,
      -0.008279372,
      -0.0062852763,
      -0.0071435436,
      -0.001167275,
      -2.5594242,
      -0.5210336,
      -1.3933601,
      -0.0019710534,
      -1.3912756,
      -0.0030037144,
      -0.00043784294,
      -0.004117581,
      -0.029445762,
      -0.0038976548,
      -0.0045227967,
      -0.0057785083,
      -0.0017027009,
      -0.0013863653,
      -0.054624543,
      -0.0012498095,
      -0.00025002356,
      -0.00015982577,
      -0.002658283,
      -0.19509363,
      -0.5112459,
      -0.6606364,
      -0.005349476,
      -0.0012011124,
      -0.00064752816,
      -0.00015255497,
      -0.0016404871
     ],
     "top_logprobs": [
      {
       " #": -0.0182746
      },
      {
       " 0": -0.009067353
      },
      {
       ":": -0.001946213
      },
      {
       " find": -0.4045006
      },
      {
       " shampoo": -0.17636664
      },
      {
       "\n": -0.05674107
      },
      {
       " find": -0.028863197
      },
      {
       "('": -0.0017818722
      },
      {
       "sh": -0.0004715968
      },
      {
       "ampoo": -0.00047302918
      },
      {
       "')": -0.004288889
      },
      {
       "\n": -0.0066812243
      },
      {
       " #": -0.004197605
      },
      {
       " 1": -0.002702926
      },
      {
       ":": -0.000440229
      },
      {
       " grab": -0.20541559
      },
      {
       " shampoo": -0.054581672
      },
      {
       "\n": -0.019239347
      },
      {
       " assert": -0.26712123
      },
      {
       "('": -0.0015120731
      },
      {
       "sh": -0.00033975672
      },
      {
       "ampoo": -0.00037887125
      },
      {
       "')": -0.0005827584
      },
      {
       "\n": -0.004533034
      },
      {
       " #": -0.6142328
      },
      {
       " 2": -0.0074901637
      },
      {
       ":": -0.00076556916
      },
      {
       " pour": -1.414608
      },
      {
       " hair": -1.11443
      },
      {
       "\n": -0.051241018
      },
      {
       " find": -0.34718075
      },
      {
       "('": -0.0017502266
      },
      {
       "head": -0.001325904
      },
      {
       "')": -0.00221768
      },
      {
       "\n": -0.004256567
      },
      {
       " #": -0.05897642
      },
      {
       " 3": -0.008333043
      },
      {
       ":": -0.00070341537
      },
      {
       " pour": -0.52446264
      },
      {
       " shampoo": -0.032361172
      },
      {
       " on": -0.43549386
      },
      {
       " head": -0.08053796
      },
      {
       "\n": -0.010568319
      },
      {
       " pour": -0.6585001
      },
      {
       "('": -0.0024070076
      },
      {
       "close": -0.4848188
      },
      {
       "'": -0.004535848
      },
      {
       " to": -0.0007759487
      },
      {
       " '": -0.0054565645
      },
      {
       "head": -0.19299874
      },
      {
       "ampoo": -0.0002376249
      },
      {
       "')": -0.013547249
      },
      {
       "\n": -0.005764779
      },
      {
       " else": -0.002892584
      },
      {
       ":": -0.0019555844
      },
      {
       " find": -0.1720125
      },
      {
       "('": -0.0021399644
      },
      {
       "sh": -0.0010488285
      },
      {
       "ampoo": -0.00028555995
      },
      {
       "')": -0.003760754
      },
      {
       "\n": -0.0065120263
      },
      {
       " pour": -0.1501592
      },
      {
       "('": -0.0035151246
      },
      {
       "sh": -0.01012067
      },
      {
       "ampoo": -9.377476e-05
      },
      {
       "')": -0.19711433
      },
      {
       "\n": -0.009478846
      },
      {
       " #": -0.32795322
      },
      {
       "nt": -0.00013633883
      },
      {
       "o": -0.001267413
      },
      {
       "('": -0.0008823119
      },
      {
       "sh": -0.42214024
      },
      {
       "ampoo": -0.0002206344
      },
      {
       "')": -0.0028015464
      },
      {
       "\n": -0.0057246736
      },
      {
       " #": -0.7351133
      },
      {
       "at": -0.0010361812
      },
      {
       "('": -0.00063547964
      },
      {
       "sh": -0.022432584
      },
      {
       "ampoo": -0.0002816242
      },
      {
       "')": -0.002236558
      },
      {
       "\n": -0.006552402
      },
      {
       " #": -0.009833503
      },
      {
       " 4": -0.006908666
      },
      {
       ":": -0.0011087942
      },
      {
       " massage": -1.080291
      },
      {
       " hair": -0.8041719
      },
      {
       "\n": -0.39274007
      },
      {
       " wash": -0.27072474
      },
      {
       "('": -0.002396552
      },
      {
       "head": -0.71684533
      },
      {
       "')": -0.0017619906
      },
      {
       "\n": -0.0051537193
      },
      {
       " #": -0.1487648
      },
      {
       "nt": -5.657977e-05
      },
      {
       "o": -0.0012017094
      },
      {
       "('": -0.00040320013
      },
      {
       "head": -0.6673204
      },
      {
       "ampoo": -0.0025201768
      },
      {
       "')": -0.0029560686
      },
      {
       "\n": -0.0027880983
      },
      {
       " look": -0.15574542
      },
      {
       "at": -0.00034392995
      },
      {
       "('": -0.0004931229
      },
      {
       "sh": -0.034635242
      },
      {
       "ampoo": -8.209043e-05
      },
      {
       "')": -0.002251672
      },
      {
       "\n": -0.008279372
      },
      {
       " #": -0.0062852763
      },
      {
       " 5": -0.0071435436
      },
      {
       ":": -0.001167275
      },
      {
       " rinse": -0.9191053
      },
      {
       "\n": -0.5210336
      },
      {
       " put": -1.2862369
      },
      {
       "('": -0.0019710534
      },
      {
       "sh": -0.35108104
      },
      {
       "'": -0.0030037144
      },
      {
       " to": -0.00043784294
      },
      {
       " '": -0.004117581
      },
      {
       "sh": -0.029445762
      },
      {
       "ampoo": -0.0038976548
      },
      {
       "')": -0.0045227967
      },
      {
       "\n": -0.0057785083
      },
      {
       " else": -0.0017027009
      },
      {
       ":": -0.0013863653
      },
      {
       " grab": -0.054624543
      },
      {
       "('": -0.0012498095
      },
      {
       "sh": -0.00025002356
      },
      {
       "ampoo": -0.00015982577
      },
      {
       "')": -0.002658283
      },
      {
       "\n": -0.19509363
      },
      {
       " put": -0.5112459
      },
      {
       "obj": -0.6606364
      },
      {
       "back": -0.005349476
      },
      {
       "('": -0.0012011124
      },
      {
       "sh": -0.00064752816
      },
      {
       "ampoo": -0.00015255497
      },
      {
       "')": -0.0016404871
      }
     ],
     "text_offset": [
      3418,
      3420,
      3422,
      3423,
      3428,
      3436,
      3437,
      3442,
      3444,
      3446,
      3451,
      3453,
      3454,
      3456,
      3458,
      3459,
      3464,
      3472,
      3473,
      3478,
      3480,
      3482,
      3487,
      3489,
      3490,
      3492,
      3494,
      3495,
      3500,
      3505,
      3506,
      3511,
      3513,
      3517,
      3519,
      3520,
      3522,
      3524,
      3525,
      3530,
      3538,
      3541,
      3546,
      3547,
      3554,
      3556,
      3561,
      3562,
      3565,
      3567,
      3569,
      3574,
      3576,
      3577,
      3582,
      3583,
      3588,
      3590,
      3592,
      3597,
      3599,
      3600,
      3605,
      3607,
      3609,
      3614,
      3616,
      3617,
      3621,
      3623,
      3624,
      3626,
      3628,
      3633,
      3635,
      3636,
      3641,
      3643,
      3645,
      3647,
      3652,
      3654,
      3655,
      3657,
      3659,
      3660,
      3665,
      3670,
      3671,
      3676,
      3678,
      3682,
      3684,
      3685,
      3689,
      3691,
      3692,
      3694,
      3696,
      3701,
      3703,
      3704,
      3709,
      3711,
      3713,
      3715,
      3720,
      3722,
      3723,
      3725,
      3727,
      3728,
      3733,
      3734,
      3741,
      3743,
      3748,
      3749,
      3752,
      3754,
      3756,
      3761,
      3763,
      3764,
      3769,
      3770,
      3775,
      3777,
      3779,
      3784,
      3786,
      3787,
      3791,
      3794,
      3798,
      3800,
      3802,
      3807
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Shampoo hair",
   "task_description": "I shampoo my hair, rinse it and hop out",
   "program": [
    "[Walk] <bathroom> (1)",
    "[Walk] <shampoo> (1)",
    "[Find] <shampoo> (1)",
    "[Grab] <shampoo> (1)",
    "[Find] <faucet> (1)",
    "[SwitchOn] <faucet> (1)",
    "[Walk] <sink> (1)",
    "[Find] <hands_both> (1)",
    "[Pour] <shampoo> (1) <hands_both> (1)",
    "[PutObjBack] <shampoo> (1)",
    "[Find] <hair> (1)",
    "[Wash] <hair> (1)",
    "[SwitchOff] <faucet> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_july",
   "file_id": "split2_7",
   "goal_condition": [
    [
     [
      162,
      1,
      "INSIDE",
      "character",
      "bathroom"
     ],
     [
      1000,
      1001,
      "INSIDE",
      "shampoo",
      "hands_both"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1199,
   "completion_tokens": 138,
   "total_tokens": 1337
  }
 },
 "11": {
  "plan": [
   [
    " # 0: find sink\n walk('sink')\n find('sink')\n # 1: turn on the faucet\n turnto('faucet')\n assert('close' to 'faucet')\n else: find('faucet')\n switchon('faucet')\n # 2: pour the water\n pour('water')\n # 3: turn off the faucet\n switchoff('faucet')\n # 4: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " sink",
      "\n",
      " walk",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " find",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " turn",
      " on",
      " the",
      " f",
      "auc",
      "et",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " switch",
      "on",
      "('",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " pour",
      " the",
      " water",
      "\n",
      " pour",
      "('",
      "water",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " turn",
      " off",
      " the",
      " f",
      "auc",
      "et",
      "\n",
      " switch",
      "off",
      "('",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.02597932,
      -0.013036124,
      -0.0023792854,
      -0.6607074,
      -0.83350074,
      -0.02993205,
      -2.036196,
      -0.006107689,
      -0.04442194,
      -0.00027291913,
      -0.0018946736,
      -0.009054483,
      -0.03678762,
      -0.0015769057,
      -0.00049562723,
      -0.00013025544,
      -0.0014379958,
      -0.008203469,
      -0.011462172,
      -0.0056879874,
      -0.00084765226,
      -0.41792437,
      -0.10151729,
      -1.1066089,
      -0.36883003,
      -0.0021853049,
      -0.0024171055,
      -0.025950264,
      -1.185997,
      -8.256821e-05,
      -0.0016124871,
      -0.0009678652,
      -0.025508646,
      -0.00043366966,
      -9.520714e-05,
      -0.0021636793,
      -0.007365804,
      -1.1051977,
      -0.0019210712,
      -0.14164305,
      -0.0045400397,
      -0.0010081944,
      -0.003851461,
      -0.0018370461,
      -0.00029307103,
      -0.00033880305,
      -0.006212461,
      -0.007241999,
      -0.0022786744,
      -0.001756615,
      -0.014213272,
      -0.0021903221,
      -0.00078597065,
      -0.0004500097,
      -9.818829e-05,
      -0.0030081994,
      -0.010120309,
      -0.43492904,
      -0.0017352401,
      -0.0011412002,
      -0.0006290987,
      -0.0002656446,
      -0.00018939328,
      -0.0018920472,
      -0.005422886,
      -0.044952728,
      -0.007296094,
      -0.0007338925,
      -1.3129103,
      -3.460169,
      -0.51611227,
      -0.4835728,
      -0.3930019,
      -0.004369108,
      -0.21696693,
      -0.016664395,
      -0.0060028657,
      -0.11854892,
      -0.004864383,
      -0.0006379849,
      -3.1421492,
      -0.092482604,
      -0.0877992,
      -0.018467356,
      -0.00095438055,
      -0.0002633787,
      -0.012090491,
      -0.18775477,
      -0.0047404077,
      -0.0011485986,
      -0.00066971505,
      -0.0007638983,
      -0.00012226657,
      -0.0031570157,
      -0.014921603,
      -0.015652351,
      -0.0059012924,
      -0.0016391738,
      -1.7600055
     ],
     "top_logprobs": [
      {
       " #": -0.02597932
      },
      {
       " 0": -0.013036124
      },
      {
       ":": -0.0023792854
      },
      {
       " find": -0.6607074
      },
      {
       " sink": -0.83350074
      },
      {
       "\n": -0.02993205
      },
      {
       " find": -0.16127922
      },
      {
       "('": -0.006107689
      },
      {
       "s": -0.04442194
      },
      {
       "ink": -0.00027291913
      },
      {
       "')": -0.0018946736
      },
      {
       "\n": -0.009054483
      },
      {
       " find": -0.03678762
      },
      {
       "('": -0.0015769057
      },
      {
       "s": -0.00049562723
      },
      {
       "ink": -0.00013025544
      },
      {
       "')": -0.0014379958
      },
      {
       "\n": -0.008203469
      },
      {
       " #": -0.011462172
      },
      {
       " 1": -0.0056879874
      },
      {
       ":": -0.00084765226
      },
      {
       " turn": -0.41792437
      },
      {
       " on": -0.10151729
      },
      {
       " f": -0.7724996
      },
      {
       " f": -0.36883003
      },
      {
       "auc": -0.0021853049
      },
      {
       "et": -0.0024171055
      },
      {
       "\n": -0.025950264
      },
      {
       " assert": -0.7301855
      },
      {
       "nt": -8.256821e-05
      },
      {
       "o": -0.0016124871
      },
      {
       "('": -0.0009678652
      },
      {
       "f": -0.025508646
      },
      {
       "auc": -0.00043366966
      },
      {
       "et": -9.520714e-05
      },
      {
       "')": -0.0021636793
      },
      {
       "\n": -0.007365804
      },
      {
       " assert": -1.1051977
      },
      {
       "('": -0.0019210712
      },
      {
       "close": -0.14164305
      },
      {
       "'": -0.0045400397
      },
      {
       " to": -0.0010081944
      },
      {
       " '": -0.003851461
      },
      {
       "f": -0.0018370461
      },
      {
       "auc": -0.00029307103
      },
      {
       "et": -0.00033880305
      },
      {
       "')": -0.006212461
      },
      {
       "\n": -0.007241999
      },
      {
       " else": -0.0022786744
      },
      {
       ":": -0.001756615
      },
      {
       " find": -0.014213272
      },
      {
       "('": -0.0021903221
      },
      {
       "f": -0.00078597065
      },
      {
       "auc": -0.0004500097
      },
      {
       "et": -9.818829e-05
      },
      {
       "')": -0.0030081994
      },
      {
       "\n": -0.010120309
      },
      {
       " switch": -0.43492904
      },
      {
       "on": -0.0017352401
      },
      {
       "('": -0.0011412002
      },
      {
       "f": -0.0006290987
      },
      {
       "auc": -0.0002656446
      },
      {
       "et": -0.00018939328
      },
      {
       "')": -0.0018920472
      },
      {
       "\n": -0.005422886
      },
      {
       " #": -0.044952728
      },
      {
       " 2": -0.007296094
      },
      {
       ":": -0.0007338925
      },
      {
       " pour": -1.3129103
      },
      {
       " water": -0.82754445
      },
      {
       " water": -0.51611227
      },
      {
       "\n": -0.4835728
      },
      {
       " pour": -0.3930019
      },
      {
       "('": -0.004369108
      },
      {
       "water": -0.21696693
      },
      {
       "')": -0.016664395
      },
      {
       "\n": -0.0060028657
      },
      {
       " #": -0.11854892
      },
      {
       " 3": -0.004864383
      },
      {
       ":": -0.0006379849
      },
      {
       " grab": -1.2921746
      },
      {
       " off": -0.092482604
      },
      {
       " the": -0.0877992
      },
      {
       " f": -0.018467356
      },
      {
       "auc": -0.00095438055
      },
      {
       "et": -0.0002633787
      },
      {
       "\n": -0.012090491
      },
      {
       " switch": -0.18775477
      },
      {
       "off": -0.0047404077
      },
      {
       "('": -0.0011485986
      },
      {
       "f": -0.00066971505
      },
      {
       "auc": -0.0007638983
      },
      {
       "et": -0.00012226657
      },
      {
       "')": -0.0031570157
      },
      {
       "\n": -0.014921603
      },
      {
       " #": -0.015652351
      },
      {
       " 4": -0.0059012924
      },
      {
       ":": -0.0016391738
      },
      {
       " grab": -1.226253
      }
     ],
     "text_offset": [
      3418,
      3420,
      3422,
      3423,
      3428,
      3433,
      3434,
      3439,
      3441,
      3442,
      3445,
      3447,
      3448,
      3453,
      3455,
      3456,
      3459,
      3461,
      3462,
      3464,
      3466,
      3467,
      3472,
      3475,
      3479,
      3481,
      3484,
      3486,
      3487,
      3491,
      3493,
      3494,
      3496,
      3497,
      3500,
      3502,
      3504,
      3505,
      3512,
      3514,
      3519,
      3520,
      3523,
      3525,
      3526,
      3529,
      3531,
      3533,
      3534,
      3539,
      3540,
      3545,
      3547,
      3548,
      3551,
      3553,
      3555,
      3556,
      3563,
      3565,
      3567,
      3568,
      3571,
      3573,
      3575,
      3576,
      3578,
      3580,
      3581,
      3586,
      3590,
      3596,
      3597,
      3602,
      3604,
      3609,
      3611,
      3612,
      3614,
      3616,
      3617,
      3622,
      3626,
      3630,
      3632,
      3635,
      3637,
      3638,
      3645,
      3648,
      3650,
      3651,
      3654,
      3656,
      3658,
      3659,
      3661,
      3663,
      3664
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Hand washing",
   "task_description": "Turn on the faucet. Soap up your hands. Then rinse under the running water of the faucet. Turn off faucet and dry hands.",
   "program": [
    "[Walk] <bathroom> (1)",
    "[Walk] <sink> (1)",
    "[Find] <faucet> (1)",
    "[SwitchOn] <faucet> (1)",
    "[Find] <soap> (1)",
    "[Grab] <soap> (1)",
    "[Find] <hands_both> (1)",
    "[Scrub] <hands_both> (1)",
    "[PutObjBack] <soap> (1)",
    "[Wash] <hands_both> (1)",
    "[SwitchOff] <faucet> (1)",
    "[Find] <towel> (1)",
    "[Grab] <towel> (1)",
    "[Wipe] <hands_both> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_july",
   "file_id": "split4_7",
   "goal_condition": [
    [
     [
      162,
      1002,
      "HOLDS_RH",
      "character",
      "towel"
     ],
     [
      162,
      1,
      "INSIDE",
      "character",
      "bathroom"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1199,
   "completion_tokens": 99,
   "total_tokens": 1298
  }
 },
 "12": {
  "plan": [
   [
    " # 0: find the cup\n find('cup')\n # 1: grab the cup\n assert('close' to 'cup')\n else: find('cup')\n grab('cup')\n # 2: find the liquid\n find('liquid')\n # 3: pour the liquid in the cup\n assert('close' to 'liquid')\n else: find('liquid')\n assert('close' to 'cup')\n else: find('cup')\n pour('liquid', 'cup')\n # 4: drink from the cup\n assert('cup' in 'hands')\n else: grab('cup')\n drink('cup')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " the",
      " cup",
      "\n",
      " find",
      "('",
      "cup",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " grab",
      " the",
      " cup",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "cup",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "cup",
      "')",
      "\n",
      " grab",
      "('",
      "cup",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " find",
      " the",
      " liquid",
      "\n",
      " find",
      "('",
      "liquid",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " pour",
      " the",
      " liquid",
      " in",
      " the",
      " cup",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "liquid",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "liquid",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "cup",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "cup",
      "')",
      "\n",
      " pour",
      "('",
      "liquid",
      "',",
      " '",
      "cup",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " drink",
      " from",
      " the",
      " cup",
      "\n",
      " assert",
      "('",
      "cup",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "cup",
      "')",
      "\n",
      " drink",
      "('",
      "cup",
      "')"
     ],
     "token_logprobs": [
      -0.10225284,
      -0.04032359,
      -0.004901877,
      -0.18658827,
      -2.5297763,
      -0.55165917,
      -0.04608231,
      -0.02057051,
      -0.005007484,
      -0.0009157814,
      -0.002573599,
      -0.014048479,
      -0.00796768,
      -0.004750647,
      -0.00083148497,
      -0.13041161,
      -0.26318863,
      -0.0009966189,
      -0.020824684,
      -0.75643617,
      -0.002873932,
      -0.0044402303,
      -0.002320555,
      -0.0004912146,
      -0.0051722336,
      -0.00042114808,
      -0.0074605597,
      -0.009002035,
      -0.0021675627,
      -0.0018851201,
      -0.0041894065,
      -0.0017821107,
      -0.00021836943,
      -0.0013404062,
      -0.006972947,
      -0.0039688023,
      -0.0011647678,
      -0.00016852893,
      -0.0013362283,
      -0.005642669,
      -0.93109095,
      -0.011192821,
      -0.0014664652,
      -1.9526713,
      -0.84142953,
      -1.1289212,
      -0.11339691,
      -0.07939577,
      -0.0024361657,
      -0.011150029,
      -0.0028915075,
      -0.0071167685,
      -0.03263252,
      -0.005768916,
      -0.00096923753,
      -0.104503565,
      -0.5033367,
      -0.0022028042,
      -0.7536503,
      -0.22040272,
      -0.0011912049,
      -0.012508725,
      -0.3378136,
      -0.0021039483,
      -0.054990854,
      -0.0027806866,
      -0.0044980077,
      -0.0028394423,
      -0.31466618,
      -0.027980704,
      -0.004334686,
      -0.005532441,
      -0.0013249486,
      -0.0042473464,
      -0.0018219413,
      -0.001293256,
      -0.003465956,
      -0.005277268,
      -1.7897943,
      -0.0022305225,
      -0.78065777,
      -0.0024506229,
      -0.0011511039,
      -0.0023887837,
      -0.0017537503,
      -0.009122387,
      -0.004649322,
      -0.0025541193,
      -0.0014418162,
      -0.04393845,
      -0.0013223222,
      -0.0011730036,
      -0.00576382,
      -0.006114704,
      -0.12618986,
      -0.008700642,
      -0.03162183,
      -0.549364,
      -0.008558216,
      -0.0050373753,
      -0.0029303646,
      -0.008854815,
      -0.020211292,
      -0.008790532,
      -0.0007869244,
      -0.10297783,
      -2.166732,
      -0.16899315,
      -0.00095855753,
      -0.007802246,
      -0.72770303,
      -0.0014364443,
      -1.1880927,
      -0.0023301714,
      -0.019718334,
      -0.006560803,
      -0.013795233,
      -0.01577994,
      -0.0042180177,
      -0.01213779,
      -0.0038780877,
      -0.024242725,
      -0.0016191732,
      -0.00022927843,
      -0.0032631534,
      -0.0046359077,
      -0.100774564,
      -0.0056340364,
      -0.018611016,
      -0.0021182233
     ],
     "top_logprobs": [
      {
       " #": -0.10225284
      },
      {
       " 0": -0.04032359
      },
      {
       ":": -0.004901877
      },
      {
       " find": -0.18658827
      },
      {
       " cup": -0.9602249
      },
      {
       " cup": -0.55165917
      },
      {
       "\n": -0.04608231
      },
      {
       " find": -0.02057051
      },
      {
       "('": -0.005007484
      },
      {
       "cup": -0.0009157814
      },
      {
       "')": -0.002573599
      },
      {
       "\n": -0.014048479
      },
      {
       " #": -0.00796768
      },
      {
       " 1": -0.004750647
      },
      {
       ":": -0.00083148497
      },
      {
       " grab": -0.13041161
      },
      {
       " the": -0.26318863
      },
      {
       " cup": -0.0009966189
      },
      {
       "\n": -0.020824684
      },
      {
       " grab": -0.6489408
      },
      {
       "('": -0.002873932
      },
      {
       "close": -0.0044402303
      },
      {
       "'": -0.002320555
      },
      {
       " to": -0.0004912146
      },
      {
       " '": -0.0051722336
      },
      {
       "cup": -0.00042114808
      },
      {
       "')": -0.0074605597
      },
      {
       "\n": -0.009002035
      },
      {
       " else": -0.0021675627
      },
      {
       ":": -0.0018851201
      },
      {
       " find": -0.0041894065
      },
      {
       "('": -0.0017821107
      },
      {
       "cup": -0.00021836943
      },
      {
       "')": -0.0013404062
      },
      {
       "\n": -0.006972947
      },
      {
       " grab": -0.0039688023
      },
      {
       "('": -0.0011647678
      },
      {
       "cup": -0.00016852893
      },
      {
       "')": -0.0013362283
      },
      {
       "\n": -0.005642669
      },
      {
       " assert": -0.57372445
      },
      {
       " 2": -0.011192821
      },
      {
       ":": -0.0014664652
      },
      {
       " fill": -0.8101677
      },
      {
       " the": -0.84142953
      },
      {
       " liquid": -1.1289212
      },
      {
       "\n": -0.11339691
      },
      {
       " find": -0.07939577
      },
      {
       "('": -0.0024361657
      },
      {
       "liquid": -0.011150029
      },
      {
       "')": -0.0028915075
      },
      {
       "\n": -0.0071167685
      },
      {
       " #": -0.03263252
      },
      {
       " 3": -0.005768916
      },
      {
       ":": -0.00096923753
      },
      {
       " pour": -0.104503565
      },
      {
       " the": -0.5033367
      },
      {
       " liquid": -0.0022028042
      },
      {
       " in": -0.7536503
      },
      {
       " the": -0.22040272
      },
      {
       " cup": -0.0011912049
      },
      {
       "\n": -0.012508725
      },
      {
       " assert": -0.3378136
      },
      {
       "('": -0.0021039483
      },
      {
       "close": -0.054990854
      },
      {
       "'": -0.0027806866
      },
      {
       " to": -0.0044980077
      },
      {
       " '": -0.0028394423
      },
      {
       "liquid": -0.31466618
      },
      {
       "')": -0.027980704
      },
      {
       "\n": -0.004334686
      },
      {
       " else": -0.005532441
      },
      {
       ":": -0.0013249486
      },
      {
       " find": -0.0042473464
      },
      {
       "('": -0.0018219413
      },
      {
       "liquid": -0.001293256
      },
      {
       "')": -0.003465956
      },
      {
       "\n": -0.005277268
      },
      {
       " pour": -0.22570339
      },
      {
       "('": -0.0022305225
      },
      {
       "cup": -0.65852827
      },
      {
       "'": -0.0024506229
      },
      {
       " to": -0.0011511039
      },
      {
       " '": -0.0023887837
      },
      {
       "cup": -0.0017537503
      },
      {
       "')": -0.009122387
      },
      {
       "\n": -0.004649322
      },
      {
       " else": -0.0025541193
      },
      {
       ":": -0.0014418162
      },
      {
       " find": -0.04393845
      },
      {
       "('": -0.0013223222
      },
      {
       "cup": -0.0011730036
      },
      {
       "')": -0.00576382
      },
      {
       "\n": -0.006114704
      },
      {
       " pour": -0.12618986
      },
      {
       "('": -0.008700642
      },
      {
       "liquid": -0.03162183
      },
      {
       "',": -0.549364
      },
      {
       " '": -0.008558216
      },
      {
       "cup": -0.0050373753
      },
      {
       "')": -0.0029303646
      },
      {
       "\n": -0.008854815
      },
      {
       " #": -0.020211292
      },
      {
       " 4": -0.008790532
      },
      {
       ":": -0.0007869244
      },
      {
       " drink": -0.10297783
      },
      {
       " the": -0.35079318
      },
      {
       " the": -0.16899315
      },
      {
       " cup": -0.00095855753
      },
      {
       "\n": -0.007802246
      },
      {
       " assert": -0.72770303
      },
      {
       "('": -0.0014364443
      },
      {
       "close": -0.38587335
      },
      {
       "'": -0.0023301714
      },
      {
       " in": -0.019718334
      },
      {
       " '": -0.006560803
      },
      {
       "hands": -0.013795233
      },
      {
       "')": -0.01577994
      },
      {
       "\n": -0.0042180177
      },
      {
       " else": -0.01213779
      },
      {
       ":": -0.0038780877
      },
      {
       " grab": -0.024242725
      },
      {
       "('": -0.0016191732
      },
      {
       "cup": -0.00022927843
      },
      {
       "')": -0.0032631534
      },
      {
       "\n": -0.0046359077
      },
      {
       " drink": -0.100774564
      },
      {
       "('": -0.0056340364
      },
      {
       "cup": -0.018611016
      },
      {
       "')": -0.0021182233
      }
     ],
     "text_offset": [
      3411,
      3413,
      3415,
      3416,
      3421,
      3425,
      3429,
      3430,
      3435,
      3437,
      3440,
      3442,
      3443,
      3445,
      3447,
      3448,
      3453,
      3457,
      3461,
      3462,
      3469,
      3471,
      3476,
      3477,
      3480,
      3482,
      3485,
      3487,
      3488,
      3493,
      3494,
      3499,
      3501,
      3504,
      3506,
      3507,
      3512,
      3514,
      3517,
      3519,
      3520,
      3522,
      3524,
      3525,
      3530,
      3534,
      3541,
      3542,
      3547,
      3549,
      3555,
      3557,
      3558,
      3560,
      3562,
      3563,
      3568,
      3572,
      3579,
      3582,
      3586,
      3590,
      3591,
      3598,
      3600,
      3605,
      3606,
      3609,
      3611,
      3617,
      3619,
      3620,
      3625,
      3626,
      3631,
      3633,
      3639,
      3641,
      3642,
      3649,
      3651,
      3656,
      3657,
      3660,
      3662,
      3665,
      3667,
      3668,
      3673,
      3674,
      3679,
      3681,
      3684,
      3686,
      3687,
      3692,
      3694,
      3700,
      3702,
      3704,
      3707,
      3709,
      3710,
      3712,
      3714,
      3715,
      3721,
      3726,
      3730,
      3734,
      3735,
      3742,
      3744,
      3747,
      3748,
      3751,
      3753,
      3758,
      3760,
      3761,
      3766,
      3767,
      3772,
      3774,
      3777,
      3779,
      3780,
      3786,
      3788,
      3791
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Drink",
   "task_description": "I grab a cup, and I pour water in the cup. I grab the cup and drink from the cup.",
   "program": [
    "[Find] <water_glass> (1)",
    "[Grab] <water_glass> (1)",
    "[Walk] <water> (1)",
    "[Find] <water> (1)",
    "[Grab] <water> (1)",
    "[Pour] <water> (1) <water_glass> (1)",
    "[Grab] <water_glass> (1)",
    "[Drink] <water_glass> (1)"
   ],
   "batch": "results_intentions_march-13-18",
   "file_id": "file563_2",
   "goal_condition": [
    [
     [
      162,
      1000,
      "HOLDS_RH",
      "character",
      "water_glass"
     ],
     [
      162,
      1000,
      "HOLDS_LH",
      "character",
      "water_glass"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1197,
   "completion_tokens": 130,
   "total_tokens": 1327
  }
 },
 "13": {
  "plan": [
   [
    " # 0: find phone\n find('phone')\n # 1: grab phone\n grab('phone')\n # 2: pick up the phone\n assert('close' to 'phone')\n else: find('phone')\n turnto('phone')\n pointat('phone')\n pick('phone')\n # 3: done\n lookat('phone')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " phone",
      "\n",
      " find",
      "('",
      "phone",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " grab",
      " phone",
      "\n",
      " grab",
      "('",
      "phone",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " pick",
      " up",
      " the",
      " phone",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "phone",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "phone",
      "')",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "phone",
      "')",
      "\n",
      " point",
      "at",
      "('",
      "phone",
      "')",
      "\n",
      " pick",
      "('",
      "phone",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " done",
      "\n",
      " look",
      "at",
      "('",
      "phone",
      "')"
     ],
     "token_logprobs": [
      -0.018607737,
      -0.008633965,
      -0.0018656524,
      -0.75400555,
      -0.20098759,
      -0.03656818,
      -0.05362299,
      -0.002345647,
      -0.0010277061,
      -0.0026247555,
      -0.00964036,
      -0.0042879307,
      -0.0026236798,
      -0.0010685805,
      -0.194997,
      -0.11493891,
      -0.01646884,
      -0.9897262,
      -0.001220627,
      -0.00016054008,
      -0.0012526725,
      -0.0093028,
      -0.52071506,
      -0.005734326,
      -0.0009726983,
      -2.5966823,
      -0.037631333,
      -1.0213614,
      -0.016267022,
      -0.017900432,
      -0.5343112,
      -0.0020403953,
      -0.26885703,
      -0.0028592884,
      -0.0021216879,
      -0.003181349,
      -0.0006496739,
      -0.0063697295,
      -0.0056310426,
      -0.001725924,
      -0.0014720791,
      -0.013966334,
      -0.0015364293,
      -0.00022802629,
      -0.0030606305,
      -0.0069131684,
      -2.7177644,
      -4.573365e-05,
      -0.00019714465,
      -0.00056868145,
      -0.000287946,
      -0.0014492173,
      -0.004851146,
      -1.3521401,
      -0.0010854651,
      -0.00048119825,
      -0.00015160035,
      -0.0008856516,
      -0.012891147,
      -0.8092894,
      -0.72599626,
      -0.0009840316,
      -0.0021536453,
      -0.13804556,
      -0.101971224,
      -0.010399605,
      -0.00145256,
      -2.2050843,
      -0.42687345,
      -3.8700702,
      -0.0051945215,
      -0.0013728751,
      -0.0024111893,
      -0.0026517077
     ],
     "top_logprobs": [
      {
       " #": -0.018607737
      },
      {
       " 0": -0.008633965
      },
      {
       ":": -0.0018656524
      },
      {
       " find": -0.75400555
      },
      {
       " phone": -0.20098759
      },
      {
       "\n": -0.03656818
      },
      {
       " find": -0.05362299
      },
      {
       "('": -0.002345647
      },
      {
       "phone": -0.0010277061
      },
      {
       "')": -0.0026247555
      },
      {
       "\n": -0.00964036
      },
      {
       " #": -0.0042879307
      },
      {
       " 1": -0.0026236798
      },
      {
       ":": -0.0010685805
      },
      {
       " grab": -0.194997
      },
      {
       " phone": -0.11493891
      },
      {
       "\n": -0.01646884
      },
      {
       " assert": -0.49829113
      },
      {
       "('": -0.001220627
      },
      {
       "phone": -0.00016054008
      },
      {
       "')": -0.0012526725
      },
      {
       "\n": -0.0093028
      },
      {
       " #": -0.52071506
      },
      {
       " 2": -0.005734326
      },
      {
       ":": -0.0009726983
      },
      {
       " look": -1.5335042
      },
      {
       " up": -0.037631333
      },
      {
       " phone": -0.5141801
      },
      {
       " phone": -0.016267022
      },
      {
       "\n": -0.017900432
      },
      {
       " assert": -0.5343112
      },
      {
       "('": -0.0020403953
      },
      {
       "close": -0.26885703
      },
      {
       "'": -0.0028592884
      },
      {
       " to": -0.0021216879
      },
      {
       " '": -0.003181349
      },
      {
       "phone": -0.0006496739
      },
      {
       "')": -0.0063697295
      },
      {
       "\n": -0.0056310426
      },
      {
       " else": -0.001725924
      },
      {
       ":": -0.0014720791
      },
      {
       " find": -0.013966334
      },
      {
       "('": -0.0015364293
      },
      {
       "phone": -0.00022802629
      },
      {
       "')": -0.0030606305
      },
      {
       "\n": -0.0069131684
      },
      {
       " pick": -0.84781885
      },
      {
       "nt": -4.573365e-05
      },
      {
       "o": -0.00019714465
      },
      {
       "('": -0.00056868145
      },
      {
       "phone": -0.000287946
      },
      {
       "')": -0.0014492173
      },
      {
       "\n": -0.004851146
      },
      {
       " point": -1.3521401
      },
      {
       "at": -0.0010854651
      },
      {
       "('": -0.00048119825
      },
      {
       "phone": -0.00015160035
      },
      {
       "')": -0.0008856516
      },
      {
       "\n": -0.012891147
      },
      {
       " pick": -0.8092894
      },
      {
       "('": -0.72599626
      },
      {
       "phone": -0.0009840316
      },
      {
       "')": -0.0021536453
      },
      {
       "\n": -0.13804556
      },
      {
       " #": -0.101971224
      },
      {
       " 3": -0.010399605
      },
      {
       ":": -0.00145256
      },
      {
       " Done": -0.40555623
      },
      {
       "\n": -0.42687345
      },
      {
       " assert": -0.84304136
      },
      {
       "at": -0.0051945215
      },
      {
       "('": -0.0013728751
      },
      {
       "phone": -0.0024111893
      },
      {
       "')": -0.0026517077
      }
     ],
     "text_offset": [
      3419,
      3421,
      3423,
      3424,
      3429,
      3435,
      3436,
      3441,
      3443,
      3448,
      3450,
      3451,
      3453,
      3455,
      3456,
      3461,
      3467,
      3468,
      3473,
      3475,
      3480,
      3482,
      3483,
      3485,
      3487,
      3488,
      3493,
      3496,
      3500,
      3506,
      3507,
      3514,
      3516,
      3521,
      3522,
      3525,
      3527,
      3532,
      3534,
      3535,
      3540,
      3541,
      3546,
      3548,
      3553,
      3555,
      3556,
      3560,
      3562,
      3563,
      3565,
      3570,
      3572,
      3573,
      3579,
      3581,
      3583,
      3588,
      3590,
      3591,
      3596,
      3598,
      3603,
      3605,
      3606,
      3608,
      3610,
      3611,
      3616,
      3617,
      3622,
      3624,
      3626,
      3631
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Pick up phone",
   "task_description": "I walk over to the phone. .I reach my arm out. I open my hand. I place my hand on the phone. I close my fingers around the phone. I pick up the phone.",
   "program": [
    "[Walk] <phone> (1)",
    "[Touch] <phone> (1)",
    "[Grab] <phone> (1)"
   ],
   "batch": "results_intentions_march-13-18",
   "file_id": "file348_1",
   "goal_condition": [
    [
     [
      162,
      205,
      "HOLDS_RH",
      "character",
      "phone"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1201,
   "completion_tokens": 74,
   "total_tokens": 1275
  }
 },
 "14": {
  "plan": [
   [
    " # 0: walk to the bathroom\n walk('bathroom')\n # 1: find toilet\n find('toilet')\n # 2: sit on the toilet\n assert('close' to 'toilet')\n else: find('toilet')\n else: turnto('toilet')\n sit('toilet')\n # 3: do your business\n # 4: flush the toilet\n flush('toilet')\n # 5: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " the",
      " bathroom",
      "\n",
      " walk",
      "('",
      "bath",
      "room",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " toilet",
      "\n",
      " find",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " sit",
      " on",
      " the",
      " toilet",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "to",
      "ilet",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " else",
      ":",
      " tur",
      "nt",
      "o",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " sit",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " do",
      " your",
      " business",
      "\n",
      " #",
      " 4",
      ":",
      " flush",
      " the",
      " toilet",
      "\n",
      " flush",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.01727373,
      -0.0087331105,
      -0.0026209306,
      -0.13390984,
      -0.27377057,
      -1.8757299,
      -0.67388594,
      -0.020445542,
      -0.0052141743,
      -0.0039691622,
      -0.0035547805,
      -0.00020238983,
      -0.0016786976,
      -0.0071553686,
      -0.0026043765,
      -0.0034060879,
      -0.00056629634,
      -0.15231617,
      -0.38453454,
      -0.02940433,
      -0.21633394,
      -0.0009114852,
      -0.0007369947,
      -0.00021717734,
      -0.0021987446,
      -0.004938416,
      -0.015940117,
      -0.004493637,
      -0.00063679187,
      -0.3998479,
      -0.065338425,
      -0.4407819,
      -0.0026068874,
      -0.019481575,
      -0.97278005,
      -0.0015602494,
      -0.0025400752,
      -0.0029573229,
      -0.0011096315,
      -0.0019541557,
      -0.0010934623,
      -0.00010557923,
      -0.0040531233,
      -0.005107948,
      -0.0020116086,
      -0.0013832621,
      -0.005911845,
      -0.0015601302,
      -0.0006701928,
      -0.00023106657,
      -0.0009499661,
      -0.005207643,
      -3.0191798,
      -0.0038764123,
      -0.08900757,
      -6.051553e-05,
      -0.0002364347,
      -0.00095951214,
      -0.002022178,
      -0.00052842835,
      -0.0028671185,
      -0.004418499,
      -0.0100832805,
      -0.00095676753,
      -0.00043784294,
      -1.855031e-05,
      -0.0012263537,
      -0.081822105,
      -0.028865838,
      -0.009501291,
      -0.0014220575,
      -1.111167,
      -0.5724526,
      -0.19163664,
      -0.060081717,
      -0.5759581,
      -0.058517765,
      -0.0012037387,
      -0.5186977,
      -0.2929623,
      -0.0020205653,
      -0.042728417,
      -0.35367775,
      -0.011850282,
      -0.0005945075,
      -0.00010414779,
      -0.0022796309,
      -0.030593585,
      -0.008779649,
      -0.0038533742,
      -0.0011221607,
      -3.222433
     ],
     "top_logprobs": [
      {
       " #": -0.01727373
      },
      {
       " 0": -0.0087331105
      },
      {
       ":": -0.0026209306
      },
      {
       " walk": -0.13390984
      },
      {
       " to": -0.27377057
      },
      {
       " bathroom": -0.5749621
      },
      {
       " bathroom": -0.67388594
      },
      {
       "\n": -0.020445542
      },
      {
       " walk": -0.0052141743
      },
      {
       "('": -0.0039691622
      },
      {
       "bath": -0.0035547805
      },
      {
       "room": -0.00020238983
      },
      {
       "')": -0.0016786976
      },
      {
       "\n": -0.0071553686
      },
      {
       " #": -0.0026043765
      },
      {
       " 1": -0.0034060879
      },
      {
       ":": -0.00056629634
      },
      {
       " find": -0.15231617
      },
      {
       " toilet": -0.38453454
      },
      {
       "\n": -0.02940433
      },
      {
       " find": -0.21633394
      },
      {
       "('": -0.0009114852
      },
      {
       "to": -0.0007369947
      },
      {
       "ilet": -0.00021717734
      },
      {
       "')": -0.0021987446
      },
      {
       "\n": -0.004938416
      },
      {
       " #": -0.015940117
      },
      {
       " 2": -0.004493637
      },
      {
       ":": -0.00063679187
      },
      {
       " sit": -0.3998479
      },
      {
       " on": -0.065338425
      },
      {
       " the": -0.4407819
      },
      {
       " toilet": -0.0026068874
      },
      {
       "\n": -0.019481575
      },
      {
       " assert": -0.97278005
      },
      {
       "('": -0.0015602494
      },
      {
       "close": -0.0025400752
      },
      {
       "'": -0.0029573229
      },
      {
       " to": -0.0011096315
      },
      {
       " '": -0.0019541557
      },
      {
       "to": -0.0010934623
      },
      {
       "ilet": -0.00010557923
      },
      {
       "')": -0.0040531233
      },
      {
       "\n": -0.005107948
      },
      {
       " else": -0.0020116086
      },
      {
       ":": -0.0013832621
      },
      {
       " find": -0.005911845
      },
      {
       "('": -0.0015601302
      },
      {
       "to": -0.0006701928
      },
      {
       "ilet": -0.00023106657
      },
      {
       "')": -0.0009499661
      },
      {
       "\n": -0.005207643
      },
      {
       " sit": -0.12853517
      },
      {
       ":": -0.0038764123
      },
      {
       " tur": -0.08900757
      },
      {
       "nt": -6.051553e-05
      },
      {
       "o": -0.0002364347
      },
      {
       "('": -0.00095951214
      },
      {
       "to": -0.002022178
      },
      {
       "ilet": -0.00052842835
      },
      {
       "')": -0.0028671185
      },
      {
       "\n": -0.004418499
      },
      {
       " sit": -0.0100832805
      },
      {
       "('": -0.00095676753
      },
      {
       "to": -0.00043784294
      },
      {
       "ilet": -1.855031e-05
      },
      {
       "')": -0.0012263537
      },
      {
       "\n": -0.081822105
      },
      {
       " #": -0.028865838
      },
      {
       " 3": -0.009501291
      },
      {
       ":": -0.0014220575
      },
      {
       " do": -1.111167
      },
      {
       " your": -0.5724526
      },
      {
       " business": -0.19163664
      },
      {
       "\n": -0.060081717
      },
      {
       " #": -0.5759581
      },
      {
       " 4": -0.058517765
      },
      {
       ":": -0.0012037387
      },
      {
       " flush": -0.5186977
      },
      {
       " the": -0.2929623
      },
      {
       " toilet": -0.0020205653
      },
      {
       "\n": -0.042728417
      },
      {
       " flush": -0.35367775
      },
      {
       "('": -0.011850282
      },
      {
       "to": -0.0005945075
      },
      {
       "ilet": -0.00010414779
      },
      {
       "')": -0.0022796309
      },
      {
       "\n": -0.030593585
      },
      {
       " #": -0.008779649
      },
      {
       " 5": -0.0038533742
      },
      {
       ":": -0.0011221607
      },
      {
       " stand": -0.6895926
      }
     ],
     "text_offset": [
      3418,
      3420,
      3422,
      3423,
      3428,
      3431,
      3435,
      3444,
      3445,
      3450,
      3452,
      3456,
      3460,
      3462,
      3463,
      3465,
      3467,
      3468,
      3473,
      3480,
      3481,
      3486,
      3488,
      3490,
      3494,
      3496,
      3497,
      3499,
      3501,
      3502,
      3506,
      3509,
      3513,
      3520,
      3521,
      3528,
      3530,
      3535,
      3536,
      3539,
      3541,
      3543,
      3547,
      3549,
      3550,
      3555,
      3556,
      3561,
      3563,
      3565,
      3569,
      3571,
      3572,
      3577,
      3578,
      3582,
      3584,
      3585,
      3587,
      3589,
      3593,
      3595,
      3596,
      3600,
      3602,
      3604,
      3608,
      3610,
      3611,
      3613,
      3615,
      3616,
      3619,
      3624,
      3633,
      3634,
      3636,
      3638,
      3639,
      3645,
      3649,
      3656,
      3657,
      3663,
      3665,
      3667,
      3671,
      3673,
      3674,
      3676,
      3678,
      3679
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Go to toilet",
   "task_description": "Travel through the house and locate the bathroom, and proceed to the toilet.",
   "program": [
    "[Walk] <bathroom> (1)",
    "[Walk] <toilet> (1)",
    "[Find] <toilet> (1)"
   ],
   "batch": "results_intentions_march-13-18",
   "file_id": "file992_1",
   "goal_condition": [
    [
     [
      162,
      1,
      "INSIDE",
      "character",
      "bathroom"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1202,
   "completion_tokens": 92,
   "total_tokens": 1294
  }
 }
}