{
 "0": {
  "plan": [
   [
    " # 0: find the computer\n find('computer')\n # 1: turn on the computer\n assert('close' to 'computer')\n else: find('computer')\n switchon('computer')\n # 2: sit on chair\n find('chair')\n assert('close' to 'chair')\n else: find('chair')\n sit('chair')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " the",
      " computer",
      "\n",
      " find",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " turn",
      " on",
      " the",
      " computer",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "computer",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "computer",
      "')",
      "\n",
      " switch",
      "on",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " sit",
      " on",
      " chair",
      "\n",
      " find",
      "('",
      "chair",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "chair",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "chair",
      "')",
      "\n",
      " sit",
      "('",
      "chair",
      "')"
     ],
     "token_logprobs": [
      -0.015937755,
      -0.008474534,
      -0.0018257626,
      -1.7546039,
      -1.4298348,
      -0.12224387,
      -0.033197813,
      -0.04880386,
      -0.002667186,
      -0.0020402758,
      -0.0017815146,
      -0.009506463,
      -0.0066188206,
      -0.0036111905,
      -0.00069924124,
      -1.3078877,
      -0.06882082,
      -0.15648106,
      -0.019553965,
      -0.015686981,
      -0.5052622,
      -0.0018271959,
      -0.043312836,
      -0.0034339568,
      -0.0024699243,
      -0.00262117,
      -0.0018716832,
      -0.006258763,
      -0.0064553944,
      -0.0018535887,
      -0.0015723101,
      -0.003626207,
      -0.0016192915,
      -0.0007176115,
      -0.0015505175,
      -0.007136097,
      -0.29026088,
      -0.0020450547,
      -0.00083112734,
      -0.00090235675,
      -0.0016866386,
      -0.19012354,
      -0.07460742,
      -0.015671846,
      -0.00069172354,
      -1.5481471,
      -0.95858383,
      -1.0460954,
      -0.14025535,
      -0.16431063,
      -0.0010515723,
      -0.0021667264,
      -0.0014667044,
      -0.0036679637,
      -0.37270615,
      -0.00066589756,
      -0.003381804,
      -0.0018420633,
      -0.000276853,
      -0.0012057672,
      -0.005727432,
      -0.003142964,
      -0.0028136184,
      -0.0013638621,
      -0.0004018879,
      -0.0024797819,
      -0.0013848128,
      -0.0022855452,
      -0.0012220555,
      -0.004278535,
      -0.01151318,
      -0.0010558084,
      -0.0017405538,
      -0.0013309766
     ],
     "top_logprobs": [
      {
       " #": -0.015937755
      },
      {
       " 0": -0.008474534
      },
      {
       ":": -0.0018257626
      },
      {
       " walk": -0.26147988
      },
      {
       " computer": -0.39425525
      },
      {
       " computer": -0.12224387
      },
      {
       "\n": -0.033197813
      },
      {
       " find": -0.04880386
      },
      {
       "('": -0.002667186
      },
      {
       "computer": -0.0020402758
      },
      {
       "')": -0.0017815146
      },
      {
       "\n": -0.009506463
      },
      {
       " #": -0.0066188206
      },
      {
       " 1": -0.0036111905
      },
      {
       ":": -0.00069924124
      },
      {
       " turn": -1.3078877
      },
      {
       " on": -0.06882082
      },
      {
       " the": -0.15648106
      },
      {
       " computer": -0.019553965
      },
      {
       "\n": -0.015686981
      },
      {
       " assert": -0.5052622
      },
      {
       "('": -0.0018271959
      },
      {
       "close": -0.043312836
      },
      {
       "'": -0.0034339568
      },
      {
       " to": -0.0024699243
      },
      {
       " '": -0.00262117
      },
      {
       "computer": -0.0018716832
      },
      {
       "')": -0.006258763
      },
      {
       "\n": -0.0064553944
      },
      {
       " else": -0.0018535887
      },
      {
       ":": -0.0015723101
      },
      {
       " find": -0.003626207
      },
      {
       "('": -0.0016192915
      },
      {
       "computer": -0.0007176115
      },
      {
       "')": -0.0015505175
      },
      {
       "\n": -0.007136097
      },
      {
       " switch": -0.29026088
      },
      {
       "on": -0.0020450547
      },
      {
       "('": -0.00083112734
      },
      {
       "computer": -0.00090235675
      },
      {
       "')": -0.0016866386
      },
      {
       "\n": -0.19012354
      },
      {
       " #": -0.07460742
      },
      {
       " 2": -0.015671846
      },
      {
       ":": -0.00069172354
      },
      {
       " find": -1.2071445
      },
      {
       " in": -0.86716366
      },
      {
       " the": -0.58133554
      },
      {
       "\n": -0.14025535
      },
      {
       " find": -0.16431063
      },
      {
       "('": -0.0010515723
      },
      {
       "chair": -0.0021667264
      },
      {
       "')": -0.0014667044
      },
      {
       "\n": -0.0036679637
      },
      {
       " assert": -0.37270615
      },
      {
       "('": -0.00066589756
      },
      {
       "close": -0.003381804
      },
      {
       "'": -0.0018420633
      },
      {
       " to": -0.000276853
      },
      {
       " '": -0.0012057672
      },
      {
       "chair": -0.005727432
      },
      {
       "')": -0.003142964
      },
      {
       "\n": -0.0028136184
      },
      {
       " else": -0.0013638621
      },
      {
       ":": -0.0004018879
      },
      {
       " find": -0.0024797819
      },
      {
       "('": -0.0013848128
      },
      {
       "chair": -0.0022855452
      },
      {
       "')": -0.0012220555
      },
      {
       "\n": -0.004278535
      },
      {
       " sit": -0.01151318
      },
      {
       "('": -0.0010558084
      },
      {
       "chair": -0.0017405538
      },
      {
       "')": -0.0013309766
      }
     ],
     "text_offset": [
      3422,
      3424,
      3426,
      3427,
      3432,
      3436,
      3445,
      3446,
      3451,
      3453,
      3461,
      3463,
      3464,
      3466,
      3468,
      3469,
      3474,
      3477,
      3481,
      3490,
      3491,
      3498,
      3500,
      3505,
      3506,
      3509,
      3511,
      3519,
      3521,
      3522,
      3527,
      3528,
      3533,
      3535,
      3543,
      3545,
      3546,
      3553,
      3555,
      3557,
      3565,
      3567,
      3568,
      3570,
      3572,
      3573,
      3577,
      3580,
      3586,
      3587,
      3592,
      3594,
      3599,
      3601,
      3602,
      3609,
      3611,
      3616,
      3617,
      3620,
      3622,
      3627,
      3629,
      3630,
      3635,
      3636,
      3641,
      3643,
      3648,
      3650,
      3651,
      3655,
      3657,
      3662
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Turn on computer",
   "task_description": "Press the power button on the computer to turn it on",
   "program": [
    "[Walk] <home_office> (1)",
    "[Walk] <computer> (1)",
    "[SwitchOn] <computer> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_kellensecond",
   "file_id": "split1_4",
   "goal_condition": [
    [
     [
      162,
      246,
      "INSIDE",
      "character",
      "home_office"
     ]
    ],
    [
     [
      321,
      "computer",
      "ON"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1201,
   "completion_tokens": 74,
   "total_tokens": 1275
  }
 },
 "1": {
  "plan": [
   [
    " # 0: walk to bathroom\n walk('bathroom')\n # 1: find toilet\n walk('toilet')\n find('toilet')\n # 2: grab a rag\n find('rag')\n grab('rag')\n # 3: wipe the toilet\n assert('close' to 'toilet')\n else: find('toilet')\n wipe('toilet')\n # 4: wash the toilet\n assert('close' to 'toilet')\n else: find('toilet')\n wash('toilet')\n # 5: put the rag back\n assert('close' to 'rag')\n else: find('rag')\n putback('rag')\n # 6: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " bathroom",
      "\n",
      " walk",
      "('",
      "bath",
      "room",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " toilet",
      "\n",
      " walk",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " find",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " grab",
      " a",
      " rag",
      "\n",
      " find",
      "('",
      "rag",
      "')",
      "\n",
      " grab",
      "('",
      "rag",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " wipe",
      " the",
      " toilet",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "to",
      "ilet",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " wipe",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " wash",
      " the",
      " toilet",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "to",
      "ilet",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " wash",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " put",
      " the",
      " rag",
      " back",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "rag",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "rag",
      "')",
      "\n",
      " put",
      "back",
      "('",
      "rag",
      "')",
      "\n",
      " #",
      " 6",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.019352857,
      -0.008846213,
      -0.0021918763,
      -0.3069318,
      -0.23887004,
      -0.3038653,
      -0.021261258,
      -0.0051864325,
      -0.0043021794,
      -0.0023867523,
      -0.00016400088,
      -0.0017477184,
      -0.006666584,
      -0.0027967638,
      -0.0034182887,
      -0.0008724082,
      -0.12170699,
      -0.1351582,
      -0.040164545,
      -1.8065013,
      -0.0021571098,
      -0.0023397908,
      -0.00020155631,
      -0.0020107713,
      -0.00483713,
      -0.022262834,
      -0.0008581501,
      -0.00033331852,
      -0.00020394142,
      -0.0010015131,
      -0.004662973,
      -0.005023836,
      -0.0053659556,
      -0.00079169736,
      -1.1080078,
      -2.6891994,
      -0.43142146,
      -0.07363713,
      -0.7681328,
      -0.0011262194,
      -0.0014566196,
      -0.0016155912,
      -0.004642314,
      -0.16763769,
      -0.0009265177,
      -0.00037135737,
      -0.00075679924,
      -0.00402009,
      -0.21868104,
      -0.01100725,
      -0.0012219354,
      -0.6860869,
      -0.2511416,
      -0.023925047,
      -0.11033497,
      -0.8807968,
      -0.0018075499,
      -0.52713066,
      -0.003822381,
      -0.00045704586,
      -0.0016739209,
      -0.024470894,
      -0.00014027084,
      -0.009082388,
      -0.0041197375,
      -0.0020059338,
      -0.0014099415,
      -0.036215283,
      -0.0014705256,
      -0.0014074334,
      -0.00017270124,
      -0.0025759898,
      -0.0043795845,
      -0.117807396,
      -0.00094543246,
      -0.028489957,
      -8.892534e-06,
      -0.009146508,
      -0.021480955,
      -0.133264,
      -0.007762841,
      -0.0013358716,
      -3.0948803,
      -0.068319015,
      -0.1555606,
      -0.02885412,
      -1.1730782,
      -0.0011562373,
      -0.11295231,
      -0.0023586105,
      -0.00043044917,
      -0.00049002067,
      -0.006099772,
      -0.0008054749,
      -0.0029158972,
      -0.0026669477,
      -0.0005960573,
      -0.00065074867,
      -0.0019644855,
      -0.0010690555,
      -0.00024120306,
      -0.00019607085,
      -0.00075238576,
      -0.0032270951,
      -0.095831424,
      -0.000870499,
      -0.00081311085,
      -8.232979e-05,
      -0.0014485021,
      -0.03158461,
      -0.026525563,
      -0.00606637,
      -0.0013709049,
      -0.66268426,
      -0.4727583,
      -0.0053353934,
      -0.03873886,
      -0.022869978,
      -0.39909932,
      -0.0012337549,
      -0.6758218,
      -0.0016286067,
      -0.00036491916,
      -0.0011448994,
      -0.09706769,
      -0.002576109,
      -0.002786544,
      -0.0010469183,
      -0.0009564099,
      -0.02177916,
      -0.00073592184,
      -0.0017013276,
      -0.0016714138,
      -0.0040670107,
      -0.049252458,
      -0.8426616,
      -0.005238981,
      -0.0030808405,
      -0.01028223,
      -1.4871659,
      -0.14575768,
      -0.005152761,
      -0.002058852,
      -0.3369321
     ],
     "top_logprobs": [
      {
       " #": -0.019352857
      },
      {
       " 0": -0.008846213
      },
      {
       ":": -0.0021918763
      },
      {
       " walk": -0.3069318
      },
      {
       " to": -0.23887004
      },
      {
       " bathroom": -0.3038653
      },
      {
       "\n": -0.021261258
      },
      {
       " walk": -0.0051864325
      },
      {
       "('": -0.0043021794
      },
      {
       "bath": -0.0023867523
      },
      {
       "room": -0.00016400088
      },
      {
       "')": -0.0017477184
      },
      {
       "\n": -0.006666584
      },
      {
       " #": -0.0027967638
      },
      {
       " 1": -0.0034182887
      },
      {
       ":": -0.0008724082
      },
      {
       " find": -0.12170699
      },
      {
       " toilet": -0.1351582
      },
      {
       "\n": -0.040164545
      },
      {
       " find": -0.20967299
      },
      {
       "('": -0.0021571098
      },
      {
       "to": -0.0023397908
      },
      {
       "ilet": -0.00020155631
      },
      {
       "')": -0.0020107713
      },
      {
       "\n": -0.00483713
      },
      {
       " find": -0.022262834
      },
      {
       "('": -0.0008581501
      },
      {
       "to": -0.00033331852
      },
      {
       "ilet": -0.00020394142
      },
      {
       "')": -0.0010015131
      },
      {
       "\n": -0.004662973
      },
      {
       " #": -0.005023836
      },
      {
       " 2": -0.0053659556
      },
      {
       ":": -0.00079169736
      },
      {
       " grab": -1.1080078
      },
      {
       " toilet": -1.1105051
      },
      {
       " rag": -0.43142146
      },
      {
       "\n": -0.07363713
      },
      {
       " find": -0.7681328
      },
      {
       "('": -0.0011262194
      },
      {
       "rag": -0.0014566196
      },
      {
       "')": -0.0016155912
      },
      {
       "\n": -0.004642314
      },
      {
       " grab": -0.16763769
      },
      {
       "('": -0.0009265177
      },
      {
       "rag": -0.00037135737
      },
      {
       "')": -0.00075679924
      },
      {
       "\n": -0.00402009
      },
      {
       " #": -0.21868104
      },
      {
       " 3": -0.01100725
      },
      {
       ":": -0.0012219354
      },
      {
       " wipe": -0.6860869
      },
      {
       " the": -0.2511416
      },
      {
       " toilet": -0.023925047
      },
      {
       "\n": -0.11033497
      },
      {
       " assert": -0.8807968
      },
      {
       "('": -0.0018075499
      },
      {
       "close": -0.52713066
      },
      {
       "'": -0.003822381
      },
      {
       " to": -0.00045704586
      },
      {
       " '": -0.0016739209
      },
      {
       "to": -0.024470894
      },
      {
       "ilet": -0.00014027084
      },
      {
       "')": -0.009082388
      },
      {
       "\n": -0.0041197375
      },
      {
       " else": -0.0020059338
      },
      {
       ":": -0.0014099415
      },
      {
       " find": -0.036215283
      },
      {
       "('": -0.0014705256
      },
      {
       "to": -0.0014074334
      },
      {
       "ilet": -0.00017270124
      },
      {
       "')": -0.0025759898
      },
      {
       "\n": -0.0043795845
      },
      {
       " wipe": -0.117807396
      },
      {
       "('": -0.00094543246
      },
      {
       "to": -0.028489957
      },
      {
       "ilet": -8.892534e-06
      },
      {
       "')": -0.009146508
      },
      {
       "\n": -0.021480955
      },
      {
       " #": -0.133264
      },
      {
       " 4": -0.007762841
      },
      {
       ":": -0.0013358716
      },
      {
       " put": -0.9929949
      },
      {
       " the": -0.068319015
      },
      {
       " toilet": -0.1555606
      },
      {
       "\n": -0.02885412
      },
      {
       " wash": -0.4415623
      },
      {
       "('": -0.0011562373
      },
      {
       "close": -0.11295231
      },
      {
       "'": -0.0023586105
      },
      {
       " to": -0.00043044917
      },
      {
       " '": -0.00049002067
      },
      {
       "to": -0.006099772
      },
      {
       "ilet": -0.0008054749
      },
      {
       "')": -0.0029158972
      },
      {
       "\n": -0.0026669477
      },
      {
       " else": -0.0005960573
      },
      {
       ":": -0.00065074867
      },
      {
       " find": -0.0019644855
      },
      {
       "('": -0.0010690555
      },
      {
       "to": -0.00024120306
      },
      {
       "ilet": -0.00019607085
      },
      {
       "')": -0.00075238576
      },
      {
       "\n": -0.0032270951
      },
      {
       " wash": -0.095831424
      },
      {
       "('": -0.000870499
      },
      {
       "to": -0.00081311085
      },
      {
       "ilet": -8.232979e-05
      },
      {
       "')": -0.0014485021
      },
      {
       "\n": -0.03158461
      },
      {
       " #": -0.026525563
      },
      {
       " 5": -0.00606637
      },
      {
       ":": -0.0013709049
      },
      {
       " put": -0.66268426
      },
      {
       " the": -0.4727583
      },
      {
       " rag": -0.0053353934
      },
      {
       " back": -0.03873886
      },
      {
       "\n": -0.022869978
      },
      {
       " assert": -0.39909932
      },
      {
       "('": -0.0012337549
      },
      {
       "close": -0.6758218
      },
      {
       "'": -0.0016286067
      },
      {
       " to": -0.00036491916
      },
      {
       " '": -0.0011448994
      },
      {
       "rag": -0.09706769
      },
      {
       "')": -0.002576109
      },
      {
       "\n": -0.002786544
      },
      {
       " else": -0.0010469183
      },
      {
       ":": -0.0009564099
      },
      {
       " find": -0.02177916
      },
      {
       "('": -0.00073592184
      },
      {
       "rag": -0.0017013276
      },
      {
       "')": -0.0016714138
      },
      {
       "\n": -0.0040670107
      },
      {
       " put": -0.049252458
      },
      {
       "obj": -0.59911036
      },
      {
       "('": -0.005238981
      },
      {
       "rag": -0.0030808405
      },
      {
       "')": -0.01028223
      },
      {
       "<|endoftext|>": -0.2802005
      },
      {
       " #": -0.14575768
      },
      {
       " 6": -0.005152761
      },
      {
       ":": -0.002058852
      },
      {
       " Done": -0.3369321
      }
     ],
     "text_offset": [
      3418,
      3420,
      3422,
      3423,
      3428,
      3431,
      3440,
      3441,
      3446,
      3448,
      3452,
      3456,
      3458,
      3459,
      3461,
      3463,
      3464,
      3469,
      3476,
      3477,
      3482,
      3484,
      3486,
      3490,
      3492,
      3493,
      3498,
      3500,
      3502,
      3506,
      3508,
      3509,
      3511,
      3513,
      3514,
      3519,
      3521,
      3525,
      3526,
      3531,
      3533,
      3536,
      3538,
      3539,
      3544,
      3546,
      3549,
      3551,
      3552,
      3554,
      3556,
      3557,
      3562,
      3566,
      3573,
      3574,
      3581,
      3583,
      3588,
      3589,
      3592,
      3594,
      3596,
      3600,
      3602,
      3603,
      3608,
      3609,
      3614,
      3616,
      3618,
      3622,
      3624,
      3625,
      3630,
      3632,
      3634,
      3638,
      3640,
      3641,
      3643,
      3645,
      3646,
      3651,
      3655,
      3662,
      3663,
      3670,
      3672,
      3677,
      3678,
      3681,
      3683,
      3685,
      3689,
      3691,
      3692,
      3697,
      3698,
      3703,
      3705,
      3707,
      3711,
      3713,
      3714,
      3719,
      3721,
      3723,
      3727,
      3729,
      3730,
      3732,
      3734,
      3735,
      3739,
      3743,
      3747,
      3752,
      3753,
      3760,
      3762,
      3767,
      3768,
      3771,
      3773,
      3776,
      3778,
      3779,
      3784,
      3785,
      3790,
      3792,
      3795,
      3797,
      3798,
      3802,
      3806,
      3808,
      3811,
      3813,
      3814,
      3816,
      3818,
      3819
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Clean toilet",
   "task_description": "Clean the toilet with a brush.",
   "program": [
    "[Find] <brush> (1)",
    "[Grab] <brush> (1)",
    "[Walk] <bathroom> (1)",
    "[Walk] <toilet> (1)",
    "[Find] <toilet> (1)",
    "[Scrub] <toilet> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_turk_third",
   "file_id": "split74_2",
   "goal_condition": [
    [
     [
      1000,
      1,
      "INSIDE",
      "brush",
      "bathroom"
     ],
     [
      162,
      1,
      "INSIDE",
      "character",
      "bathroom"
     ],
     [
      162,
      1000,
      "HOLDS_RH",
      "character",
      "brush"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1200,
   "completion_tokens": 144,
   "total_tokens": 1344
  }
 },
 "2": {
  "plan": [
   [
    " # 0: find bathroom\n walk('bathroom')\n # 1: find window\n find('window')\n # 2: open window\n assert('close' to 'window')\n else: find('window')\n open('window')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " bathroom",
      "\n",
      " walk",
      "('",
      "bath",
      "room",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " window",
      "\n",
      " find",
      "('",
      "window",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " open",
      " window",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "window",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "window",
      "')",
      "\n",
      " open",
      "('",
      "window",
      "')"
     ],
     "token_logprobs": [
      -0.01984582,
      -0.01030782,
      -0.0025050007,
      -2.8547096,
      -0.6054294,
      -0.15964454,
      -1.1937639,
      -0.004748492,
      -0.006058635,
      -0.00020096028,
      -0.0021767605,
      -0.009000531,
      -1.3480905,
      -0.0034594964,
      -0.0006761561,
      -0.06110891,
      -0.07963082,
      -0.02320648,
      -0.10286155,
      -0.001673443,
      -0.005800211,
      -0.002331844,
      -0.0061106887,
      -0.009082025,
      -0.0057451176,
      -0.00113929,
      -0.024220861,
      -0.3701486,
      -0.010652055,
      -0.39273998,
      -0.002174253,
      -0.02434581,
      -0.0035264294,
      -0.0010895238,
      -0.0034508242,
      -0.0015623979,
      -0.005792716,
      -0.006663464,
      -0.0022140963,
      -0.0018789689,
      -0.005981279,
      -0.002076234,
      -0.0009790173,
      -0.0028728554,
      -0.007949239,
      -0.062100686,
      -0.0019747573,
      -0.0012730233,
      -0.0027206768
     ],
     "top_logprobs": [
      {
       " #": -0.01984582
      },
      {
       " 0": -0.01030782
      },
      {
       ":": -0.0025050007
      },
      {
       " walk": -0.15747282
      },
      {
       " bathroom": -0.6054294
      },
      {
       "\n": -0.15964454
      },
      {
       " find": -0.37666604
      },
      {
       "('": -0.004748492
      },
      {
       "bath": -0.006058635
      },
      {
       "room": -0.00020096028
      },
      {
       "')": -0.0021767605
      },
      {
       "\n": -0.009000531
      },
      {
       " find": -0.32081357
      },
      {
       " 1": -0.0034594964
      },
      {
       ":": -0.0006761561
      },
      {
       " find": -0.06110891
      },
      {
       " window": -0.07963082
      },
      {
       "\n": -0.02320648
      },
      {
       " find": -0.10286155
      },
      {
       "('": -0.001673443
      },
      {
       "window": -0.005800211
      },
      {
       "')": -0.002331844
      },
      {
       "\n": -0.0061106887
      },
      {
       " #": -0.009082025
      },
      {
       " 2": -0.0057451176
      },
      {
       ":": -0.00113929
      },
      {
       " open": -0.024220861
      },
      {
       " window": -0.3701486
      },
      {
       "\n": -0.010652055
      },
      {
       " assert": -0.39273998
      },
      {
       "('": -0.002174253
      },
      {
       "close": -0.02434581
      },
      {
       "'": -0.0035264294
      },
      {
       " to": -0.0010895238
      },
      {
       " '": -0.0034508242
      },
      {
       "window": -0.0015623979
      },
      {
       "')": -0.005792716
      },
      {
       "\n": -0.006663464
      },
      {
       " else": -0.0022140963
      },
      {
       ":": -0.0018789689
      },
      {
       " find": -0.005981279
      },
      {
       "('": -0.002076234
      },
      {
       "window": -0.0009790173
      },
      {
       "')": -0.0028728554
      },
      {
       "\n": -0.007949239
      },
      {
       " open": -0.062100686
      },
      {
       "('": -0.0019747573
      },
      {
       "window": -0.0012730233
      },
      {
       "')": -0.0027206768
      }
     ],
     "text_offset": [
      3426,
      3428,
      3430,
      3431,
      3436,
      3445,
      3446,
      3451,
      3453,
      3457,
      3461,
      3463,
      3464,
      3466,
      3468,
      3469,
      3474,
      3481,
      3482,
      3487,
      3489,
      3495,
      3497,
      3498,
      3500,
      3502,
      3503,
      3508,
      3515,
      3516,
      3523,
      3525,
      3530,
      3531,
      3534,
      3536,
      3542,
      3544,
      3545,
      3550,
      3551,
      3556,
      3558,
      3564,
      3566,
      3567,
      3572,
      3574,
      3580
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Open bathroom window",
   "task_description": "Make sure bathroom window is unlocked. Lift up bathroom window so it is open.",
   "program": [
    "[Walk] <bathroom> (1)",
    "[Walk] <window> (1)",
    "[Find] <window> (1)",
    "[Open] <window> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_kellensecond",
   "file_id": "split7_3",
   "goal_condition": [
    [
     [
      162,
      1,
      "INSIDE",
      "character",
      "bathroom"
     ]
    ],
    [
     [
      61,
      "window",
      "OPEN"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1202,
   "completion_tokens": 49,
   "total_tokens": 1251
  }
 },
 "3": {
  "plan": [
   [
    " # 0: find newspaper\n find('newspaper')\n # 1: grab newspaper\n grab('newspaper')\n # 2: sit on couch\n find('couch')\n assert('close' to 'couch')\n else: find('couch')\n sit('couch')\n # 3: read newspaper\n read('newspaper')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " newspaper",
      "\n",
      " find",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " grab",
      " newspaper",
      "\n",
      " grab",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " sit",
      " on",
      " couch",
      "\n",
      " find",
      "('",
      "c",
      "ouch",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "c",
      "ouch",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "c",
      "ouch",
      "')",
      "\n",
      " sit",
      "('",
      "c",
      "ouch",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " read",
      " newspaper",
      "\n",
      " read",
      "('",
      "new",
      "sp",
      "aper",
      "')"
     ],
     "token_logprobs": [
      -0.017681153,
      -0.009181701,
      -0.0019797152,
      -0.64347196,
      -0.32372576,
      -0.025054935,
      -0.029560927,
      -0.0022707277,
      -0.005207283,
      -0.0009149469,
      -0.00074427295,
      -0.0038135857,
      -0.006604243,
      -0.005573198,
      -0.0024555235,
      -0.00039330113,
      -0.27725178,
      -0.15253296,
      -0.014363703,
      -0.77269924,
      -0.0012422891,
      -0.0007006726,
      -0.0002139559,
      -0.00064108433,
      -0.0015127894,
      -0.004442207,
      -0.55073696,
      -0.006520187,
      -0.0005523396,
      -1.2352756,
      -0.5498543,
      -1.3120455,
      -0.06719584,
      -0.23567322,
      -0.001281918,
      -0.00057762774,
      -0.00018689176,
      -0.0015158944,
      -0.0038666588,
      -0.8207298,
      -0.0010139239,
      -0.011431182,
      -0.002519759,
      -0.00047833633,
      -0.0015708768,
      -0.0005980866,
      -0.0004432111,
      -0.006699346,
      -0.0045183054,
      -0.00219092,
      -0.0019803122,
      -0.004973038,
      -0.0018185369,
      -0.0003731464,
      -0.00019786083,
      -0.002242174,
      -0.0052839206,
      -0.010128256,
      -0.0008403739,
      -0.00019380587,
      -0.002586208,
      -0.0011536111,
      -0.0049408097,
      -0.015308213,
      -0.00991826,
      -0.0008936471,
      -0.28260309,
      -0.2479427,
      -0.0102699455,
      -1.745756,
      -0.0023126684,
      -0.0010373741,
      -0.00037827427,
      -0.00046885313,
      -0.0022921166
     ],
     "top_logprobs": [
      {
       " #": -0.017681153
      },
      {
       " 0": -0.009181701
      },
      {
       ":": -0.0019797152
      },
      {
       " find": -0.64347196
      },
      {
       " newspaper": -0.32372576
      },
      {
       "\n": -0.025054935
      },
      {
       " find": -0.029560927
      },
      {
       "('": -0.0022707277
      },
      {
       "new": -0.005207283
      },
      {
       "sp": -0.0009149469
      },
      {
       "aper": -0.00074427295
      },
      {
       "')": -0.0038135857
      },
      {
       "\n": -0.006604243
      },
      {
       " #": -0.005573198
      },
      {
       " 1": -0.0024555235
      },
      {
       ":": -0.00039330113
      },
      {
       " grab": -0.27725178
      },
      {
       " newspaper": -0.15253296
      },
      {
       "\n": -0.014363703
      },
      {
       " assert": -0.63386804
      },
      {
       "('": -0.0012422891
      },
      {
       "new": -0.0007006726
      },
      {
       "sp": -0.0002139559
      },
      {
       "aper": -0.00064108433
      },
      {
       "')": -0.0015127894
      },
      {
       "\n": -0.004442207
      },
      {
       " #": -0.55073696
      },
      {
       " 2": -0.006520187
      },
      {
       ":": -0.0005523396
      },
      {
       " find": -0.6661397
      },
      {
       " on": -0.5498543
      },
      {
       " chair": -1.2772783
      },
      {
       "\n": -0.06719584
      },
      {
       " find": -0.23567322
      },
      {
       "('": -0.001281918
      },
      {
       "c": -0.00057762774
      },
      {
       "ouch": -0.00018689176
      },
      {
       "')": -0.0015158944
      },
      {
       "\n": -0.0038666588
      },
      {
       " sit": -0.68785447
      },
      {
       "('": -0.0010139239
      },
      {
       "close": -0.011431182
      },
      {
       "'": -0.002519759
      },
      {
       " to": -0.00047833633
      },
      {
       " '": -0.0015708768
      },
      {
       "c": -0.0005980866
      },
      {
       "ouch": -0.0004432111
      },
      {
       "')": -0.006699346
      },
      {
       "\n": -0.0045183054
      },
      {
       " else": -0.00219092
      },
      {
       ":": -0.0019803122
      },
      {
       " find": -0.004973038
      },
      {
       "('": -0.0018185369
      },
      {
       "c": -0.0003731464
      },
      {
       "ouch": -0.00019786083
      },
      {
       "')": -0.002242174
      },
      {
       "\n": -0.0052839206
      },
      {
       " sit": -0.010128256
      },
      {
       "('": -0.0008403739
      },
      {
       "c": -0.00019380587
      },
      {
       "ouch": -0.002586208
      },
      {
       "')": -0.0011536111
      },
      {
       "\n": -0.0049408097
      },
      {
       " #": -0.015308213
      },
      {
       " 3": -0.00991826
      },
      {
       ":": -0.0008936471
      },
      {
       " read": -0.28260309
      },
      {
       " newspaper": -0.2479427
      },
      {
       "\n": -0.0102699455
      },
      {
       " tur": -1.1136197
      },
      {
       "('": -0.0023126684
      },
      {
       "new": -0.0010373741
      },
      {
       "sp": -0.00037827427
      },
      {
       "aper": -0.00046885313
      },
      {
       "')": -0.0022921166
      }
     ],
     "text_offset": [
      3420,
      3422,
      3424,
      3425,
      3430,
      3440,
      3441,
      3446,
      3448,
      3451,
      3453,
      3457,
      3459,
      3460,
      3462,
      3464,
      3465,
      3470,
      3480,
      3481,
      3486,
      3488,
      3491,
      3493,
      3497,
      3499,
      3500,
      3502,
      3504,
      3505,
      3509,
      3512,
      3518,
      3519,
      3524,
      3526,
      3527,
      3531,
      3533,
      3534,
      3541,
      3543,
      3548,
      3549,
      3552,
      3554,
      3555,
      3559,
      3561,
      3562,
      3567,
      3568,
      3573,
      3575,
      3576,
      3580,
      3582,
      3583,
      3587,
      3589,
      3590,
      3594,
      3596,
      3597,
      3599,
      3601,
      3602,
      3607,
      3617,
      3618,
      3623,
      3625,
      3628,
      3630,
      3634
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Read newspaper",
   "task_description": "Sit in my chair at my desk. Open up newspaper. Read about current events.",
   "program": [
    "[Walk] <home_office> (1)",
    "[Walk] <chair> (1)",
    "[Find] <chair> (1)",
    "[Sit] <chair> (1)",
    "[Find] <newspaper> (1)",
    "[Grab] <newspaper> (1)",
    "[Open] <newspaper> (1)",
    "[Read] <newspaper> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_july",
   "file_id": "split17_4",
   "goal_condition": [
    [
     [
      162,
      283,
      "ON",
      "character",
      "chair"
     ],
     [
      162,
      246,
      "INSIDE",
      "character",
      "home_office"
     ],
     [
      162,
      1000,
      "HOLDS_RH",
      "character",
      "newspaper"
     ]
    ],
    [
     [
      1000,
      "newspaper",
      "OPEN"
     ],
     [
      162,
      "character",
      "SITTING"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1201,
   "completion_tokens": 75,
   "total_tokens": 1276
  }
 },
 "4": {
  "plan": [
   [
    " # 0: Find alarm clock\n find('alarm_clock')\n # 1: Grab alarm clock\n assert('close' to 'alarm_clock')\n else: find('alarm_clock')\n grab('alarm_clock')\n assert('alarm_clock' in 'hands')\n else: grab('alarm_clock')\n # 2: turn off alarm\n turnto('alarm_clock')\n switchoff('alarm_clock')\n # 3: put alarm clock back\n putback('alarm_clock')\n # 4: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " Find",
      " alarm",
      " clock",
      "\n",
      " find",
      "('",
      "al",
      "arm",
      "_",
      "clock",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " Grab",
      " alarm",
      " clock",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "al",
      "arm",
      "_",
      "clock",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "al",
      "arm",
      "_",
      "clock",
      "')",
      "\n",
      " grab",
      "('",
      "al",
      "arm",
      "_",
      "clock",
      "')",
      "\n",
      " assert",
      "('",
      "al",
      "arm",
      "_",
      "clock",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "al",
      "arm",
      "_",
      "clock",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " turn",
      " off",
      " alarm",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "al",
      "arm",
      "_",
      "clock",
      "')",
      "\n",
      " switch",
      "off",
      "('",
      "al",
      "arm",
      "_",
      "clock",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " put",
      " alarm",
      " clock",
      " back",
      "\n",
      " put",
      "back",
      "('",
      "al",
      "arm",
      "_",
      "clock",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.025324924,
      -0.0137884645,
      -0.002486178,
      -2.6229632,
      -0.42012152,
      -0.9571946,
      -0.048056915,
      -0.029553069,
      -0.005441644,
      -0.008559837,
      -0.0005904526,
      -0.02954877,
      -0.0008072649,
      -0.005902611,
      -0.013736497,
      -0.007405194,
      -0.0066213403,
      -0.0010086722,
      -1.5985595,
      -0.27845603,
      -0.022419538,
      -0.029187609,
      -0.97390324,
      -0.002904241,
      -0.006352337,
      -0.0029428552,
      -0.0008021343,
      -0.0022414578,
      -0.0034490896,
      -0.0004558547,
      -0.008409134,
      -0.00051793334,
      -0.0085252095,
      -0.010205269,
      -0.0028009492,
      -0.0015980985,
      -0.0047962833,
      -0.0013713825,
      -0.0006742478,
      -9.401318e-05,
      -0.0010671472,
      -0.0010530055,
      -0.0035393492,
      -0.0071065016,
      -0.0060649286,
      -0.0010632077,
      -0.0005235371,
      -8.653179e-06,
      -0.0013316937,
      -0.00070043333,
      -0.0031983922,
      -0.006976608,
      -0.83957016,
      -0.0013218444,
      -0.007855215,
      -0.00020310696,
      -0.004472381,
      -0.00042174413,
      -0.0023022129,
      -0.017620366,
      -0.0039306823,
      -0.006666764,
      -0.05011648,
      -0.0039139246,
      -0.018405426,
      -0.0021474913,
      -0.0038380574,
      -0.0009877308,
      -0.00040164858,
      -2.200643e-05,
      -0.0017102233,
      -0.0011133307,
      -0.0032463497,
      -0.005728151,
      -0.53555393,
      -0.010269223,
      -0.001445397,
      -4.170187,
      -0.07038985,
      -0.5914185,
      -0.3953527,
      -1.1288545,
      -8.018216e-05,
      -0.00033212456,
      -0.0006598151,
      -0.0018836266,
      -0.00010796247,
      -0.002426246,
      -0.000284366,
      -0.0035376756,
      -0.004330436,
      -0.6730813,
      -0.0028286227,
      -0.00083882327,
      -0.00044619318,
      -5.4432137e-05,
      -0.007333262,
      -0.00019905198,
      -0.003547901,
      -0.03789917,
      -0.09393549,
      -0.011444144,
      -0.0017106972,
      -0.6822414,
      -0.57349163,
      -0.07851017,
      -0.015430903,
      -0.033537928,
      -1.0733346,
      -0.83262247,
      -0.0036272225,
      -0.00033474996,
      -3.1185496e-05,
      -0.0007209531,
      -0.0006378657,
      -0.006179656,
      -0.44327176,
      -0.15263362,
      -0.013460615,
      -0.002715058,
      -0.12979132
     ],
     "top_logprobs": [
      {
       " #": -0.025324924
      },
      {
       " 0": -0.0137884645
      },
      {
       ":": -0.002486178
      },
      {
       " find": -0.3757868
      },
      {
       " alarm": -0.42012152
      },
      {
       "\n": -0.56132054
      },
      {
       "\n": -0.048056915
      },
      {
       " find": -0.029553069
      },
      {
       "('": -0.005441644
      },
      {
       "al": -0.008559837
      },
      {
       "arm": -0.0005904526
      },
      {
       "_": -0.02954877
      },
      {
       "clock": -0.0008072649
      },
      {
       "')": -0.005902611
      },
      {
       "\n": -0.013736497
      },
      {
       " #": -0.007405194
      },
      {
       " 1": -0.0066213403
      },
      {
       ":": -0.0010086722
      },
      {
       " Grab": -1.5985595
      },
      {
       " alarm": -0.27845603
      },
      {
       " clock": -0.022419538
      },
      {
       "\n": -0.029187609
      },
      {
       " grab": -0.48968187
      },
      {
       "('": -0.002904241
      },
      {
       "close": -0.006352337
      },
      {
       "'": -0.0029428552
      },
      {
       " to": -0.0008021343
      },
      {
       " '": -0.0022414578
      },
      {
       "al": -0.0034490896
      },
      {
       "arm": -0.0004558547
      },
      {
       "_": -0.008409134
      },
      {
       "clock": -0.00051793334
      },
      {
       "')": -0.0085252095
      },
      {
       "\n": -0.010205269
      },
      {
       " else": -0.0028009492
      },
      {
       ":": -0.0015980985
      },
      {
       " find": -0.0047962833
      },
      {
       "('": -0.0013713825
      },
      {
       "al": -0.0006742478
      },
      {
       "arm": -9.401318e-05
      },
      {
       "_": -0.0010671472
      },
      {
       "clock": -0.0010530055
      },
      {
       "')": -0.0035393492
      },
      {
       "\n": -0.0071065016
      },
      {
       " grab": -0.0060649286
      },
      {
       "('": -0.0010632077
      },
      {
       "al": -0.0005235371
      },
      {
       "arm": -8.653179e-06
      },
      {
       "_": -0.0013316937
      },
      {
       "clock": -0.00070043333
      },
      {
       "')": -0.0031983922
      },
      {
       "\n": -0.006976608
      },
      {
       " #": -0.61395097
      },
      {
       "('": -0.0013218444
      },
      {
       "al": -0.007855215
      },
      {
       "arm": -0.00020310696
      },
      {
       "_": -0.004472381
      },
      {
       "clock": -0.00042174413
      },
      {
       "'": -0.0023022129
      },
      {
       " in": -0.017620366
      },
      {
       " '": -0.0039306823
      },
      {
       "hands": -0.006666764
      },
      {
       "')": -0.05011648
      },
      {
       "\n": -0.0039139246
      },
      {
       " else": -0.018405426
      },
      {
       ":": -0.0021474913
      },
      {
       " grab": -0.0038380574
      },
      {
       "('": -0.0009877308
      },
      {
       "al": -0.00040164858
      },
      {
       "arm": -2.200643e-05
      },
      {
       "_": -0.0017102233
      },
      {
       "clock": -0.0011133307
      },
      {
       "')": -0.0032463497
      },
      {
       "\n": -0.005728151
      },
      {
       " #": -0.53555393
      },
      {
       " 2": -0.010269223
      },
      {
       ":": -0.001445397
      },
      {
       " Switch": -0.71152216
      },
      {
       " off": -0.07038985
      },
      {
       " alarm": -0.5914185
      },
      {
       "\n": -0.3953527
      },
      {
       " switch": -0.63057977
      },
      {
       "nt": -8.018216e-05
      },
      {
       "o": -0.00033212456
      },
      {
       "('": -0.0006598151
      },
      {
       "al": -0.0018836266
      },
      {
       "arm": -0.00010796247
      },
      {
       "_": -0.002426246
      },
      {
       "clock": -0.000284366
      },
      {
       "')": -0.0035376756
      },
      {
       "\n": -0.004330436
      },
      {
       " switch": -0.6730813
      },
      {
       "off": -0.0028286227
      },
      {
       "('": -0.00083882327
      },
      {
       "al": -0.00044619318
      },
      {
       "arm": -5.4432137e-05
      },
      {
       "_": -0.007333262
      },
      {
       "clock": -0.00019905198
      },
      {
       "')": -0.003547901
      },
      {
       "\n": -0.03789917
      },
      {
       " #": -0.09393549
      },
      {
       " 3": -0.011444144
      },
      {
       ":": -0.0017106972
      },
      {
       " put": -0.6822414
      },
      {
       " alarm": -0.57349163
      },
      {
       " clock": -0.07851017
      },
      {
       " back": -0.015430903
      },
      {
       "\n": -0.033537928
      },
      {
       " assert": -0.43593302
      },
      {
       "obj": -0.6031913
      },
      {
       "('": -0.0036272225
      },
      {
       "al": -0.00033474996
      },
      {
       "arm": -3.1185496e-05
      },
      {
       "_": -0.0007209531
      },
      {
       "clock": -0.0006378657
      },
      {
       "')": -0.006179656
      },
      {
       "\n": -0.44327176
      },
      {
       " #": -0.15263362
      },
      {
       " 4": -0.013460615
      },
      {
       ":": -0.002715058
      },
      {
       " Done": -0.12979132
      }
     ],
     "text_offset": [
      3420,
      3422,
      3424,
      3425,
      3430,
      3436,
      3442,
      3443,
      3448,
      3450,
      3452,
      3455,
      3456,
      3461,
      3463,
      3464,
      3466,
      3468,
      3469,
      3474,
      3480,
      3486,
      3487,
      3494,
      3496,
      3501,
      3502,
      3505,
      3507,
      3509,
      3512,
      3513,
      3518,
      3520,
      3521,
      3526,
      3527,
      3532,
      3534,
      3536,
      3539,
      3540,
      3545,
      3547,
      3548,
      3553,
      3555,
      3557,
      3560,
      3561,
      3566,
      3568,
      3569,
      3576,
      3578,
      3580,
      3583,
      3584,
      3589,
      3590,
      3593,
      3595,
      3600,
      3602,
      3603,
      3608,
      3609,
      3614,
      3616,
      3618,
      3621,
      3622,
      3627,
      3629,
      3630,
      3632,
      3634,
      3635,
      3640,
      3644,
      3650,
      3651,
      3655,
      3657,
      3658,
      3660,
      3662,
      3665,
      3666,
      3671,
      3673,
      3674,
      3681,
      3684,
      3686,
      3688,
      3691,
      3692,
      3697,
      3699,
      3700,
      3702,
      3704,
      3705,
      3709,
      3715,
      3721,
      3726,
      3727,
      3731,
      3735,
      3737,
      3739,
      3742,
      3743,
      3748,
      3750,
      3751,
      3753,
      3755,
      3756
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Shut off alarm",
   "task_description": "Shutting of the alarm clock",
   "program": [
    "[Walk] <bedroom> (1)",
    "[Walk] <alarm_clock> (1)",
    "[Find] <alarm_clock> (1)",
    "[Grab] <alarm_clock> (1)",
    "[SwitchOff] <alarm_clock> (1)",
    "[PutObjBack] <alarm_clock> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_kellensecond",
   "file_id": "split4_4",
   "goal_condition": [
    [
     [
      162,
      64,
      "INSIDE",
      "character",
      "bedroom"
     ]
    ],
    [
     [
      1000,
      "alarm_clock",
      "OFF"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1202,
   "completion_tokens": 121,
   "total_tokens": 1323
  }
 },
 "5": {
  "plan": [
   [
    " # 0: walk to bedroom\n walk('bedroom')\n # 1: find desk\n walk('desk')\n find('desk')\n # 2: find computer\n find('computer')\n # 3: turn on the computer\n assert('close' to 'computer')\n else: find('computer')\n switchon('computer')\n # 4: use the computer\n assert('close' to 'computer')\n else: find('computer')\n read('computer')\n # 5: close the computer\n switchoff('computer')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " bedroom",
      "\n",
      " walk",
      "('",
      "bedroom",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " desk",
      "\n",
      " walk",
      "('",
      "des",
      "k",
      "')",
      "\n",
      " find",
      "('",
      "des",
      "k",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " find",
      " computer",
      "\n",
      " find",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " turn",
      " on",
      " the",
      " computer",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "computer",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "computer",
      "')",
      "\n",
      " switch",
      "on",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " use",
      " the",
      " computer",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "computer",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "computer",
      "')",
      "\n",
      " read",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " close",
      " the",
      " computer",
      "\n",
      " switch",
      "off",
      "('",
      "computer",
      "')"
     ],
     "token_logprobs": [
      -0.018618912,
      -0.0071162884,
      -0.0017648564,
      -0.31920022,
      -0.24937049,
      -1.2368417,
      -0.015746864,
      -0.004479506,
      -0.0034072837,
      -0.014658219,
      -0.0011685871,
      -0.004535848,
      -0.0035076472,
      -0.0031823067,
      -0.00049228565,
      -0.031130726,
      -0.9801552,
      -0.008158636,
      -0.19284686,
      -0.0005126834,
      -0.0010055718,
      -0.000167457,
      -0.00086685986,
      -0.0018249272,
      -0.0072068786,
      -0.00036789934,
      -0.0010633279,
      -8.697986e-05,
      -0.0005899748,
      -0.0038616923,
      -0.003341555,
      -0.0047468147,
      -0.0006676894,
      -0.43495667,
      -0.08946779,
      -0.021023834,
      -0.020993643,
      -0.00069745025,
      -0.0011286073,
      -0.0013170695,
      -0.00463956,
      -0.010323419,
      -0.008524427,
      -0.0009821214,
      -0.43167996,
      -0.020323938,
      -0.2839771,
      -0.008966249,
      -0.010674586,
      -0.19912042,
      -0.00081144,
      -0.008387436,
      -0.0016687864,
      -0.00024883242,
      -0.0014080313,
      -0.001728432,
      -0.0033669719,
      -0.0017176244,
      -0.0015753532,
      -0.0008941239,
      -0.0029860202,
      -0.0011908491,
      -0.0008202699,
      -0.0010746649,
      -0.0040280493,
      -0.394024,
      -0.0022317183,
      -0.0009851045,
      -0.0010623733,
      -0.0019185622,
      -0.011159129,
      -0.022644736,
      -0.00991507,
      -0.0011862527,
      -1.355967,
      -0.30280164,
      -0.120087266,
      -0.017414251,
      -1.2551873,
      -0.001560608,
      -0.5326067,
      -0.0026509897,
      -0.00027995434,
      -0.0016402478,
      -0.007064244,
      -0.0046373447,
      -0.002344452,
      -0.0013850522,
      -0.00072315807,
      -0.0049793273,
      -0.0011037227,
      -0.00039676193,
      -0.0012954054,
      -0.0034670336,
      -3.5979571,
      -0.002567204,
      -0.007241279,
      -0.005632597,
      -0.6007191,
      -1.8339427,
      -0.01009484,
      -0.0025918859,
      -3.4170632,
      -0.09487086,
      -0.005724254,
      -0.017663134,
      -0.50894094,
      -0.0028222867,
      -0.0010731133,
      -0.0007810784,
      -0.00342971
     ],
     "top_logprobs": [
      {
       " #": -0.018618912
      },
      {
       " 0": -0.0071162884
      },
      {
       ":": -0.0017648564
      },
      {
       " walk": -0.31920022
      },
      {
       " to": -0.24937049
      },
      {
       " home": -1.0655236
      },
      {
       "\n": -0.015746864
      },
      {
       " walk": -0.004479506
      },
      {
       "('": -0.0034072837
      },
      {
       "bedroom": -0.014658219
      },
      {
       "')": -0.0011685871
      },
      {
       "\n": -0.004535848
      },
      {
       " #": -0.0035076472
      },
      {
       " 1": -0.0031823067
      },
      {
       ":": -0.00049228565
      },
      {
       " find": -0.031130726
      },
      {
       " computer": -0.5965893
      },
      {
       "\n": -0.008158636
      },
      {
       " walk": -0.19284686
      },
      {
       "('": -0.0005126834
      },
      {
       "des": -0.0010055718
      },
      {
       "k": -0.000167457
      },
      {
       "')": -0.00086685986
      },
      {
       "\n": -0.0018249272
      },
      {
       " find": -0.0072068786
      },
      {
       "('": -0.00036789934
      },
      {
       "des": -0.0010633279
      },
      {
       "k": -8.697986e-05
      },
      {
       "')": -0.0005899748
      },
      {
       "\n": -0.0038616923
      },
      {
       " #": -0.003341555
      },
      {
       " 2": -0.0047468147
      },
      {
       ":": -0.0006676894
      },
      {
       " find": -0.43495667
      },
      {
       " computer": -0.08946779
      },
      {
       "\n": -0.021023834
      },
      {
       " find": -0.020993643
      },
      {
       "('": -0.00069745025
      },
      {
       "computer": -0.0011286073
      },
      {
       "')": -0.0013170695
      },
      {
       "\n": -0.00463956
      },
      {
       " #": -0.010323419
      },
      {
       " 3": -0.008524427
      },
      {
       ":": -0.0009821214
      },
      {
       " turn": -0.43167996
      },
      {
       " on": -0.020323938
      },
      {
       " the": -0.2839771
      },
      {
       " computer": -0.008966249
      },
      {
       "\n": -0.010674586
      },
      {
       " assert": -0.19912042
      },
      {
       "('": -0.00081144
      },
      {
       "close": -0.008387436
      },
      {
       "'": -0.0016687864
      },
      {
       " to": -0.00024883242
      },
      {
       " '": -0.0014080313
      },
      {
       "computer": -0.001728432
      },
      {
       "')": -0.0033669719
      },
      {
       "\n": -0.0017176244
      },
      {
       " else": -0.0015753532
      },
      {
       ":": -0.0008941239
      },
      {
       " find": -0.0029860202
      },
      {
       "('": -0.0011908491
      },
      {
       "computer": -0.0008202699
      },
      {
       "')": -0.0010746649
      },
      {
       "\n": -0.0040280493
      },
      {
       " switch": -0.394024
      },
      {
       "on": -0.0022317183
      },
      {
       "('": -0.0009851045
      },
      {
       "computer": -0.0010623733
      },
      {
       "')": -0.0019185622
      },
      {
       "\n": -0.011159129
      },
      {
       " #": -0.022644736
      },
      {
       " 4": -0.00991507
      },
      {
       ":": -0.0011862527
      },
      {
       " sit": -1.0301843
      },
      {
       " the": -0.30280164
      },
      {
       " computer": -0.120087266
      },
      {
       "\n": -0.017414251
      },
      {
       " tur": -0.91589755
      },
      {
       "('": -0.001560608
      },
      {
       "close": -0.5326067
      },
      {
       "'": -0.0026509897
      },
      {
       " to": -0.00027995434
      },
      {
       " '": -0.0016402478
      },
      {
       "computer": -0.007064244
      },
      {
       "')": -0.0046373447
      },
      {
       "\n": -0.002344452
      },
      {
       " else": -0.0013850522
      },
      {
       ":": -0.00072315807
      },
      {
       " find": -0.0049793273
      },
      {
       "('": -0.0011037227
      },
      {
       "computer": -0.00039676193
      },
      {
       "')": -0.0012954054
      },
      {
       "\n": -0.0034670336
      },
      {
       " tur": -1.0827881
      },
      {
       "('": -0.002567204
      },
      {
       "computer": -0.007241279
      },
      {
       "')": -0.005632597
      },
      {
       "\n": -0.6007191
      },
      {
       " #": -1.8339427
      },
      {
       " 5": -0.01009484
      },
      {
       ":": -0.0025918859
      },
      {
       " turn": -0.38285512
      },
      {
       " the": -0.09487086
      },
      {
       " computer": -0.005724254
      },
      {
       "\n": -0.017663134
      },
      {
       " switch": -0.50894094
      },
      {
       "off": -0.0028222867
      },
      {
       "('": -0.0010731133
      },
      {
       "computer": -0.0007810784
      },
      {
       "')": -0.00342971
      }
     ],
     "text_offset": [
      3418,
      3420,
      3422,
      3423,
      3428,
      3431,
      3439,
      3440,
      3445,
      3447,
      3454,
      3456,
      3457,
      3459,
      3461,
      3462,
      3467,
      3472,
      3473,
      3478,
      3480,
      3483,
      3484,
      3486,
      3487,
      3492,
      3494,
      3497,
      3498,
      3500,
      3501,
      3503,
      3505,
      3506,
      3511,
      3520,
      3521,
      3526,
      3528,
      3536,
      3538,
      3539,
      3541,
      3543,
      3544,
      3549,
      3552,
      3556,
      3565,
      3566,
      3573,
      3575,
      3580,
      3581,
      3584,
      3586,
      3594,
      3596,
      3597,
      3602,
      3603,
      3608,
      3610,
      3618,
      3620,
      3621,
      3628,
      3630,
      3632,
      3640,
      3642,
      3643,
      3645,
      3647,
      3648,
      3652,
      3656,
      3665,
      3666,
      3673,
      3675,
      3680,
      3681,
      3684,
      3686,
      3694,
      3696,
      3697,
      3702,
      3703,
      3708,
      3710,
      3718,
      3720,
      3721,
      3726,
      3728,
      3736,
      3738,
      3739,
      3741,
      3743,
      3744,
      3750,
      3754,
      3763,
      3764,
      3771,
      3774,
      3776,
      3784
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Use computer",
   "task_description": "Pull out a desk chair. Sit down at computer. Use mouse and keyboard to navigate computer device. Use computer.",
   "program": [
    "[Walk] <home_office> (1)",
    "[Walk] <chair> (1)",
    "[Find] <chair> (1)",
    "[Pull] <chair> (1)",
    "[Sit] <chair> (1)",
    "[Find] <computer> (1)",
    "[SwitchOn] <computer> (1)",
    "[TurnTo] <computer> (1)",
    "[LookAt] <computer> (1)",
    "[Find] <mouse> (1)",
    "[Grab] <mouse> (1)",
    "[TurnTo] <computer> (1)",
    "[PointAt] <computer> (1)",
    "[Find] <button> (1)",
    "[Push] <button> (1)",
    "[PutObjBack] <mouse> (1)",
    "[Find] <keyboard> (1)",
    "[Type] <keyboard> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upworknturk_second",
   "file_id": "split142_2",
   "goal_condition": [
    [
     [
      162,
      246,
      "INSIDE",
      "character",
      "home_office"
     ],
     [
      162,
      283,
      "ON",
      "character",
      "chair"
     ]
    ],
    [
     [
      321,
      "computer",
      "ON"
     ],
     [
      162,
      "character",
      "SITTING"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1199,
   "completion_tokens": 111,
   "total_tokens": 1310
  }
 },
 "6": {
  "plan": [
   [
    " # 0: find couch\n find('couch')\n # 1: sit on couch\n assert('close' to 'couch')\n else: find('couch')\n sit('couch')\n # 2: lie on couch\n lie('couch')\n # 3: Sleep\n sleep()\n # 4: wake up\n wakeup()\n # 5: stand up\n standup()",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " couch",
      "\n",
      " find",
      "('",
      "c",
      "ouch",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " sit",
      " on",
      " couch",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "c",
      "ouch",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "c",
      "ouch",
      "')",
      "\n",
      " sit",
      "('",
      "c",
      "ouch",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " lie",
      " on",
      " couch",
      "\n",
      " lie",
      "('",
      "c",
      "ouch",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " Sleep",
      "\n",
      " sleep",
      "()",
      "\n",
      " #",
      " 4",
      ":",
      " wake",
      " up",
      "\n",
      " wake",
      "up",
      "()",
      "\n",
      " #",
      " 5",
      ":",
      " stand",
      " up",
      "\n",
      " stand",
      "up",
      "()"
     ],
     "token_logprobs": [
      -0.018837,
      -0.010036078,
      -0.0020964222,
      -1.2444844,
      -2.2877855,
      -0.05306249,
      -0.098759055,
      -0.0018440945,
      -0.0007123636,
      -2.1171965e-05,
      -0.0020709764,
      -0.007327438,
      -0.007822311,
      -0.0030016822,
      -0.0006627972,
      -0.5068136,
      -0.07364733,
      -0.30081728,
      -0.011020328,
      -0.22427335,
      -0.0013436314,
      -0.005950339,
      -0.0026752558,
      -0.00087037886,
      -0.0018613534,
      -0.00068277825,
      -0.0002419183,
      -0.0052658822,
      -0.005570621,
      -0.0013373031,
      -0.0013405264,
      -0.0039263153,
      -0.0016522474,
      -0.00038745708,
      -6.6593304e-05,
      -0.0018138792,
      -0.0047075883,
      -0.01758585,
      -0.0008548122,
      -0.00018188405,
      -0.0012255172,
      -0.0005186486,
      -0.0048963046,
      -0.02223827,
      -0.0070857955,
      -0.00063368963,
      -0.43139237,
      -1.4099694,
      -0.12418245,
      -0.014218231,
      -0.26436597,
      -0.026043678,
      -0.00060392875,
      -0.0002000066,
      -0.0014594261,
      -0.0052731335,
      -0.014771694,
      -0.0052754707,
      -0.0006248053,
      -4.9590406,
      -0.065364644,
      -0.034741998,
      -0.006820865,
      -0.30818406,
      -0.16671,
      -0.0066209813,
      -0.002794373,
      -1.5084188,
      -0.17014992,
      -0.049928367,
      -0.011003816,
      -0.001657501,
      -0.0070496565,
      -0.19571075,
      -0.082688496,
      -0.0044802255,
      -0.0021682796,
      -0.22982623,
      -0.09341745,
      -0.035337757,
      -0.011811743,
      -0.0017648564,
      -0.0079347
     ],
     "top_logprobs": [
      {
       " #": -0.018837
      },
      {
       " 0": -0.010036078
      },
      {
       ":": -0.0020964222
      },
      {
       " walk": -0.5733086
      },
      {
       " bed": -0.8820752
      },
      {
       "\n": -0.05306249
      },
      {
       " find": -0.098759055
      },
      {
       "('": -0.0018440945
      },
      {
       "c": -0.0007123636
      },
      {
       "ouch": -2.1171965e-05
      },
      {
       "')": -0.0020709764
      },
      {
       "\n": -0.007327438
      },
      {
       " #": -0.007822311
      },
      {
       " 1": -0.0030016822
      },
      {
       ":": -0.0006627972
      },
      {
       " sit": -0.5068136
      },
      {
       " on": -0.07364733
      },
      {
       " couch": -0.30081728
      },
      {
       "\n": -0.011020328
      },
      {
       " assert": -0.22427335
      },
      {
       "('": -0.0013436314
      },
      {
       "close": -0.005950339
      },
      {
       "'": -0.0026752558
      },
      {
       " to": -0.00087037886
      },
      {
       " '": -0.0018613534
      },
      {
       "c": -0.00068277825
      },
      {
       "ouch": -0.0002419183
      },
      {
       "')": -0.0052658822
      },
      {
       "\n": -0.005570621
      },
      {
       " else": -0.0013373031
      },
      {
       ":": -0.0013405264
      },
      {
       " find": -0.0039263153
      },
      {
       "('": -0.0016522474
      },
      {
       "c": -0.00038745708
      },
      {
       "ouch": -6.6593304e-05
      },
      {
       "')": -0.0018138792
      },
      {
       "\n": -0.0047075883
      },
      {
       " sit": -0.01758585
      },
      {
       "('": -0.0008548122
      },
      {
       "c": -0.00018188405
      },
      {
       "ouch": -0.0012255172
      },
      {
       "')": -0.0005186486
      },
      {
       "\n": -0.0048963046
      },
      {
       " #": -0.02223827
      },
      {
       " 2": -0.0070857955
      },
      {
       ":": -0.00063368963
      },
      {
       " lie": -0.43139237
      },
      {
       " down": -0.28649715
      },
      {
       " couch": -0.12418245
      },
      {
       "\n": -0.014218231
      },
      {
       " lie": -0.26436597
      },
      {
       "('": -0.026043678
      },
      {
       "c": -0.00060392875
      },
      {
       "ouch": -0.0002000066
      },
      {
       "')": -0.0014594261
      },
      {
       "\n": -0.0052731335
      },
      {
       " #": -0.014771694
      },
      {
       " 3": -0.0052754707
      },
      {
       ":": -0.0006248053
      },
      {
       " close": -0.95547485
      },
      {
       "\n": -0.065364644
      },
      {
       " sleep": -0.034741998
      },
      {
       "()": -0.006820865
      },
      {
       "\n": -0.30818406
      },
      {
       " #": -0.16671
      },
      {
       " 4": -0.0066209813
      },
      {
       ":": -0.002794373
      },
      {
       " Wake": -0.57297873
      },
      {
       " up": -0.17014992
      },
      {
       "\n": -0.049928367
      },
      {
       " wake": -0.011003816
      },
      {
       "up": -0.001657501
      },
      {
       "()": -0.0070496565
      },
      {
       "\n": -0.19571075
      },
      {
       " #": -0.082688496
      },
      {
       " 5": -0.0044802255
      },
      {
       ":": -0.0021682796
      },
      {
       " stand": -0.22982623
      },
      {
       " up": -0.09341745
      },
      {
       "\n": -0.035337757
      },
      {
       " stand": -0.011811743
      },
      {
       "up": -0.0017648564
      },
      {
       "()": -0.0079347
      }
     ],
     "text_offset": [
      3414,
      3416,
      3418,
      3419,
      3424,
      3430,
      3431,
      3436,
      3438,
      3439,
      3443,
      3445,
      3446,
      3448,
      3450,
      3451,
      3455,
      3458,
      3464,
      3465,
      3472,
      3474,
      3479,
      3480,
      3483,
      3485,
      3486,
      3490,
      3492,
      3493,
      3498,
      3499,
      3504,
      3506,
      3507,
      3511,
      3513,
      3514,
      3518,
      3520,
      3521,
      3525,
      3527,
      3528,
      3530,
      3532,
      3533,
      3537,
      3540,
      3546,
      3547,
      3551,
      3553,
      3554,
      3558,
      3560,
      3561,
      3563,
      3565,
      3566,
      3572,
      3573,
      3579,
      3581,
      3582,
      3584,
      3586,
      3587,
      3592,
      3595,
      3596,
      3601,
      3603,
      3605,
      3606,
      3608,
      3610,
      3611,
      3617,
      3620,
      3621,
      3627,
      3629
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Take nap",
   "task_description": "Lay down on the bed and nap",
   "program": [
    "[Walk] <bedroom> (1)",
    "[Walk] <bed> (1)",
    "[Lie] <bed> (1)",
    "[Sleep]"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upworknturk_second",
   "file_id": "split141_3",
   "goal_condition": [
    [
     [
      162,
      99,
      "ON",
      "character",
      "bed"
     ],
     [
      162,
      64,
      "INSIDE",
      "character",
      "bedroom"
     ]
    ],
    [
     [
      162,
      "character",
      "LYING"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1200,
   "completion_tokens": 83,
   "total_tokens": 1283
  }
 },
 "7": {
  "plan": [
   [
    " # 0: Walk to home office\n walk('home_office')\n # 1: Find the computer\n find('computer')\n # 2: Turn on the computer\n assert('close' to 'computer')\n else: find('computer')\n switchon('computer')\n # 3: Sit in front of the computer\n find('chair')\n turnto('chair')\n sit('chair')\n # 4: Find the mouse\n find('mouse')\n # 5: Grab the mouse\n grab('mouse')\n # 6: Place the mouse on the mousepad\n assert('mouse' in 'hands')\n else: grab('mouse')\n puton('mouse', 'mousepad')\n # 7: Start working on the computer\n pointat('mouse')\n switchon('cpuscreen')\n lookat('cpuscreen')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " Walk",
      " to",
      " home",
      " office",
      "\n",
      " walk",
      "('",
      "home",
      "_",
      "office",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " Find",
      " the",
      " computer",
      "\n",
      " find",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " Turn",
      " on",
      " the",
      " computer",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "computer",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "computer",
      "')",
      "\n",
      " switch",
      "on",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " Sit",
      " in",
      " front",
      " of",
      " the",
      " computer",
      "\n",
      " find",
      "('",
      "chair",
      "')",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "chair",
      "')",
      "\n",
      " sit",
      "('",
      "chair",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " Find",
      " the",
      " mouse",
      "\n",
      " find",
      "('",
      "mouse",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " Grab",
      " the",
      " mouse",
      "\n",
      " grab",
      "('",
      "mouse",
      "')",
      "\n",
      " #",
      " 6",
      ":",
      " Place",
      " the",
      " mouse",
      " on",
      " the",
      " mouse",
      "pad",
      "\n",
      " assert",
      "('",
      "mouse",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "mouse",
      "')",
      "\n",
      " put",
      "on",
      "('",
      "mouse",
      "',",
      " '",
      "mouse",
      "pad",
      "')",
      "\n",
      " #",
      " 7",
      ":",
      " Start",
      " working",
      " on",
      " the",
      " computer",
      "\n",
      " point",
      "at",
      "('",
      "mouse",
      "')",
      "\n",
      " switch",
      "on",
      "('",
      "cp",
      "usc",
      "reen",
      "')",
      "\n",
      " look",
      "at",
      "('",
      "cp",
      "usc",
      "reen",
      "')"
     ],
     "token_logprobs": [
      -0.017657433,
      -0.0073831566,
      -0.0017336867,
      -3.3409038,
      -0.1819936,
      -0.92959523,
      -0.033555802,
      -0.03721248,
      -0.013090595,
      -0.00879432,
      -0.015009331,
      -0.038274772,
      -0.0007507159,
      -0.002884932,
      -0.011605012,
      -0.0033413167,
      -0.0040662903,
      -0.00088756083,
      -0.3157283,
      -1.7043418,
      -0.23543696,
      -0.05233535,
      -0.11123004,
      -0.0017370911,
      -0.0016844291,
      -0.001409702,
      -0.00697985,
      -0.010724228,
      -0.0073963087,
      -0.00088302715,
      -0.6578519,
      -0.09098849,
      -0.14595243,
      -0.020464342,
      -0.022464037,
      -0.6225945,
      -0.002440169,
      -0.058990333,
      -0.0039451635,
      -0.0006389395,
      -0.0030720502,
      -0.0020436214,
      -0.008254671,
      -0.00804699,
      -0.0024037804,
      -0.002035976,
      -0.005112082,
      -0.0017368518,
      -0.00056426885,
      -0.0020338846,
      -0.0067465105,
      -0.2823742,
      -0.0033544735,
      -0.0010622531,
      -0.0009913117,
      -0.0021010798,
      -0.0066041225,
      -0.014325004,
      -0.005977381,
      -0.002460242,
      -1.166287,
      -1.156765,
      -0.26459053,
      -0.0042754817,
      -0.2095642,
      -0.0133999,
      -0.017507598,
      -1.1126026,
      -0.0013966904,
      -0.060005195,
      -0.0021352468,
      -0.0053927414,
      -3.440022,
      -3.4287736e-05,
      -0.00015732239,
      -0.0006525368,
      -0.09772201,
      -0.002017938,
      -0.0034702027,
      -0.4479146,
      -0.0015596524,
      -0.0027979596,
      -0.0007440355,
      -0.005139222,
      -0.051496714,
      -0.0075372467,
      -0.0009312907,
      -2.770709,
      -0.377852,
      -0.07323051,
      -0.3401123,
      -0.038717985,
      -0.0009678652,
      -0.0004467892,
      -0.0026442362,
      -0.003997648,
      -0.10010039,
      -0.0047181277,
      -0.0005850234,
      -0.93124485,
      -0.07028773,
      -0.0019282378,
      -0.110974796,
      -0.28824195,
      -0.0011367829,
      -0.00017735413,
      -0.00080893666,
      -0.004725974,
      -0.20213057,
      -0.0044651385,
      -0.00074796943,
      -1.7315705,
      -0.3150547,
      -0.0032645296,
      -0.13191198,
      -0.18162435,
      -0.022366263,
      -0.33001843,
      -0.0153858075,
      -0.9546654,
      -0.0021944437,
      -1.2598432,
      -0.035465587,
      -0.02058438,
      -0.0064101615,
      -0.016216801,
      -0.026173137,
      -0.0045787203,
      -0.0073946267,
      -0.0039121364,
      -0.03021927,
      -0.0015515932,
      -0.00035335214,
      -0.0025006977,
      -0.005493784,
      -0.30956715,
      -0.095758475,
      -0.0015513548,
      -0.0007684329,
      -1.192118,
      -0.0037687118,
      -0.0006752024,
      -0.0044779503,
      -0.002126646,
      -0.015135069,
      -0.031423576,
      -0.009017068,
      -0.00105205,
      -2.4165416,
      -0.57814056,
      -0.7916207,
      -0.05928381,
      -0.0051728915,
      -0.012810182,
      -2.998297,
      -0.0029625855,
      -0.000752505,
      -0.8404268,
      -0.10245416,
      -0.110130526,
      -3.998764,
      -0.019271856,
      -0.00097424805,
      -1.2500862,
      -0.0058004498,
      -0.00017377506,
      -0.0023816742,
      -0.20658308,
      -1.6497483,
      -0.0010958484,
      -0.0005630759,
      -0.013385103,
      -0.00093528844,
      -0.00010820183,
      -0.003009874
     ],
     "top_logprobs": [
      {
       " #": -0.017657433
      },
      {
       " 0": -0.0073831566
      },
      {
       ":": -0.0017336867
      },
      {
       " walk": -0.18744543
      },
      {
       " to": -0.1819936
      },
      {
       " home": -0.92959523
      },
      {
       " office": -0.033555802
      },
      {
       "\n": -0.03721248
      },
      {
       " walk": -0.013090595
      },
      {
       "('": -0.00879432
      },
      {
       "home": -0.015009331
      },
      {
       "_": -0.038274772
      },
      {
       "office": -0.0007507159
      },
      {
       "')": -0.002884932
      },
      {
       "\n": -0.011605012
      },
      {
       " #": -0.0033413167
      },
      {
       " 1": -0.0040662903
      },
      {
       ":": -0.00088756083
      },
      {
       " Find": -0.3157283
      },
      {
       " computer": -0.5312604
      },
      {
       " computer": -0.23543696
      },
      {
       "\n": -0.05233535
      },
      {
       " find": -0.11123004
      },
      {
       "('": -0.0017370911
      },
      {
       "computer": -0.0016844291
      },
      {
       "')": -0.001409702
      },
      {
       "\n": -0.00697985
      },
      {
       " #": -0.010724228
      },
      {
       " 2": -0.0073963087
      },
      {
       ":": -0.00088302715
      },
      {
       " Turn": -0.6578519
      },
      {
       " on": -0.09098849
      },
      {
       " the": -0.14595243
      },
      {
       " computer": -0.020464342
      },
      {
       "\n": -0.022464037
      },
      {
       " assert": -0.6225945
      },
      {
       "('": -0.002440169
      },
      {
       "close": -0.058990333
      },
      {
       "'": -0.0039451635
      },
      {
       " to": -0.0006389395
      },
      {
       " '": -0.0030720502
      },
      {
       "computer": -0.0020436214
      },
      {
       "')": -0.008254671
      },
      {
       "\n": -0.00804699
      },
      {
       " else": -0.0024037804
      },
      {
       ":": -0.002035976
      },
      {
       " find": -0.005112082
      },
      {
       "('": -0.0017368518
      },
      {
       "computer": -0.00056426885
      },
      {
       "')": -0.0020338846
      },
      {
       "\n": -0.0067465105
      },
      {
       " switch": -0.2823742
      },
      {
       "on": -0.0033544735
      },
      {
       "('": -0.0010622531
      },
      {
       "computer": -0.0009913117
      },
      {
       "')": -0.0021010798
      },
      {
       "\n": -0.0066041225
      },
      {
       " #": -0.014325004
      },
      {
       " 3": -0.005977381
      },
      {
       ":": -0.002460242
      },
      {
       " Sit": -1.166287
      },
      {
       " on": -0.8148422
      },
      {
       " front": -0.26459053
      },
      {
       " of": -0.0042754817
      },
      {
       " the": -0.2095642
      },
      {
       " computer": -0.0133999
      },
      {
       "\n": -0.017507598
      },
      {
       " assert": -1.0447878
      },
      {
       "('": -0.0013966904
      },
      {
       "chair": -0.060005195
      },
      {
       "')": -0.0021352468
      },
      {
       "\n": -0.0053927414
      },
      {
       " assert": -0.38965484
      },
      {
       "nt": -3.4287736e-05
      },
      {
       "o": -0.00015732239
      },
      {
       "('": -0.0006525368
      },
      {
       "chair": -0.09772201
      },
      {
       "')": -0.002017938
      },
      {
       "\n": -0.0034702027
      },
      {
       " sit": -0.4479146
      },
      {
       "('": -0.0015596524
      },
      {
       "chair": -0.0027979596
      },
      {
       "')": -0.0007440355
      },
      {
       "\n": -0.005139222
      },
      {
       " #": -0.051496714
      },
      {
       " 4": -0.0075372467
      },
      {
       ":": -0.0009312907
      },
      {
       " Open": -1.9958248
      },
      {
       " the": -0.377852
      },
      {
       " mouse": -0.07323051
      },
      {
       "\n": -0.3401123
      },
      {
       " find": -0.038717985
      },
      {
       "('": -0.0009678652
      },
      {
       "mouse": -0.0004467892
      },
      {
       "')": -0.0026442362
      },
      {
       "\n": -0.003997648
      },
      {
       " #": -0.10010039
      },
      {
       " 5": -0.0047181277
      },
      {
       ":": -0.0005850234
      },
      {
       " Grab": -0.93124485
      },
      {
       " the": -0.07028773
      },
      {
       " mouse": -0.0019282378
      },
      {
       "\n": -0.110974796
      },
      {
       " grab": -0.28824195
      },
      {
       "('": -0.0011367829
      },
      {
       "mouse": -0.00017735413
      },
      {
       "')": -0.00080893666
      },
      {
       "\n": -0.004725974
      },
      {
       " #": -0.20213057
      },
      {
       " 6": -0.0044651385
      },
      {
       ":": -0.00074796943
      },
      {
       " Put": -1.4217522
      },
      {
       " the": -0.3150547
      },
      {
       " mouse": -0.0032645296
      },
      {
       " on": -0.13191198
      },
      {
       " the": -0.18162435
      },
      {
       " mouse": -0.022366263
      },
      {
       "pad": -0.33001843
      },
      {
       "\n": -0.0153858075
      },
      {
       " assert": -0.9546654
      },
      {
       "('": -0.0021944437
      },
      {
       "close": -0.34113264
      },
      {
       "'": -0.035465587
      },
      {
       " in": -0.02058438
      },
      {
       " '": -0.0064101615
      },
      {
       "hands": -0.016216801
      },
      {
       "')": -0.026173137
      },
      {
       "\n": -0.0045787203
      },
      {
       " else": -0.0073946267
      },
      {
       ":": -0.0039121364
      },
      {
       " grab": -0.03021927
      },
      {
       "('": -0.0015515932
      },
      {
       "mouse": -0.00035335214
      },
      {
       "')": -0.0025006977
      },
      {
       "\n": -0.005493784
      },
      {
       " put": -0.30956715
      },
      {
       "on": -0.095758475
      },
      {
       "('": -0.0015513548
      },
      {
       "mouse": -0.0007684329
      },
      {
       "pad": -0.84964985
      },
      {
       " '": -0.0037687118
      },
      {
       "mouse": -0.0006752024
      },
      {
       "pad": -0.0044779503
      },
      {
       "')": -0.002126646
      },
      {
       "\n": -0.015135069
      },
      {
       " #": -0.031423576
      },
      {
       " 7": -0.009017068
      },
      {
       ":": -0.00105205
      },
      {
       " Find": -1.3672403
      },
      {
       " working": -0.57814056
      },
      {
       "\n": -0.6719908
      },
      {
       " the": -0.05928381
      },
      {
       " computer": -0.0051728915
      },
      {
       "\n": -0.012810182
      },
      {
       " tur": -1.1590724
      },
      {
       "at": -0.0029625855
      },
      {
       "('": -0.000752505
      },
      {
       "computer": -0.65221536
      },
      {
       "')": -0.10245416
      },
      {
       "\n": -0.110130526
      },
      {
       " watch": -1.2626516
      },
      {
       "on": -0.019271856
      },
      {
       "('": -0.00097424805
      },
      {
       "computer": -0.7139304
      },
      {
       "usc": -0.0058004498
      },
      {
       "reen": -0.00017377506
      },
      {
       "')": -0.0023816742
      },
      {
       "\n": -0.20658308
      },
      {
       " watch": -1.4565092
      },
      {
       "at": -0.0010958484
      },
      {
       "('": -0.0005630759
      },
      {
       "cp": -0.013385103
      },
      {
       "usc": -0.00093528844
      },
      {
       "reen": -0.00010820183
      },
      {
       "')": -0.003009874
      }
     ],
     "text_offset": [
      3425,
      3427,
      3429,
      3430,
      3435,
      3438,
      3443,
      3450,
      3451,
      3456,
      3458,
      3462,
      3463,
      3469,
      3471,
      3472,
      3474,
      3476,
      3477,
      3482,
      3486,
      3495,
      3496,
      3501,
      3503,
      3511,
      3513,
      3514,
      3516,
      3518,
      3519,
      3524,
      3527,
      3531,
      3540,
      3541,
      3548,
      3550,
      3555,
      3556,
      3559,
      3561,
      3569,
      3571,
      3572,
      3577,
      3578,
      3583,
      3585,
      3593,
      3595,
      3596,
      3603,
      3605,
      3607,
      3615,
      3617,
      3618,
      3620,
      3622,
      3623,
      3627,
      3630,
      3636,
      3639,
      3643,
      3652,
      3653,
      3658,
      3660,
      3665,
      3667,
      3668,
      3672,
      3674,
      3675,
      3677,
      3682,
      3684,
      3685,
      3689,
      3691,
      3696,
      3698,
      3699,
      3701,
      3703,
      3704,
      3709,
      3713,
      3719,
      3720,
      3725,
      3727,
      3732,
      3734,
      3735,
      3737,
      3739,
      3740,
      3745,
      3749,
      3755,
      3756,
      3761,
      3763,
      3768,
      3770,
      3771,
      3773,
      3775,
      3776,
      3782,
      3786,
      3792,
      3795,
      3799,
      3805,
      3808,
      3809,
      3816,
      3818,
      3823,
      3824,
      3827,
      3829,
      3834,
      3836,
      3837,
      3842,
      3843,
      3848,
      3850,
      3855,
      3857,
      3858,
      3862,
      3864,
      3866,
      3871,
      3873,
      3875,
      3880,
      3883,
      3885,
      3886,
      3888,
      3890,
      3891,
      3897,
      3905,
      3908,
      3912,
      3921,
      3922,
      3928,
      3930,
      3932,
      3937,
      3939,
      3940,
      3947,
      3949,
      3951,
      3953,
      3956,
      3960,
      3962,
      3963,
      3968,
      3970,
      3972,
      3974,
      3977,
      3981
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Do work on computer",
   "task_description": "Open home office, sit in my chair at the desk and do work on the computer. Stand up from chair and desk, leave home office.",
   "program": [
    "[Walk] <home_office> (1)",
    "[Walk] <chair> (1)",
    "[Find] <chair> (1)",
    "[Sit] <chair> (1)",
    "[Find] <computer> (1)",
    "[SwitchOn] <computer> (1)",
    "[TurnTo] <computer> (1)",
    "[LookAt] <computer> (1)",
    "[Find] <keyboard> (1)",
    "[Type] <keyboard> (1)",
    "[SwitchOff] <computer> (1)",
    "[StandUp]"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upworknturk_second",
   "file_id": "split119_3",
   "goal_condition": [
    [
     [
      162,
      246,
      "INSIDE",
      "character",
      "home_office"
     ],
     [
      162,
      283,
      "ON",
      "character",
      "chair"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1203,
   "completion_tokens": 175,
   "total_tokens": 1378
  }
 },
 "8": {
  "plan": [
   [
    " # 0: walk to bedroom\n walk('bedroom')\n # 1: find shoes\n find('shoes')\n # 2: grab shoes\n assert('close' to 'shoes')\n else: find('shoes')\n grab('shoes')\n # 3: put on shoes\n assert('shoes' in 'hands')\n else: grab('shoes')\n puton('shoes')\n # 4: Done\ndef cook_dinner():\n # 0: walk to kitchen\n walk('kitchen')\n # 1: find cutting board\n find('cutting_board')\n # 2: find food\n find('food_food')\n # 3: grab food\n grab('food_food')\n # 4: cut food\n turnto('cutting_board')\n lookat('cutting_board')\n assert('close' to 'cutting_board')\n else: find('cutting_board')\n cut('food_food')\n # 5: cook food\n assert('close' to 'stove')\n else: find('stove')\n turnto('stove')\n lookat('stove')\n assert('close' to 'stove')\n else: find('stove')\n switchon('stove')\n cook('food_food')\n # 6: put food on plate\n find('plate')\n assert('close' to 'plate')\n else: find('plate')\n putin('food_food', 'plate')\n # 7: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " bedroom",
      "\n",
      " walk",
      "('",
      "bedroom",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " shoes",
      "\n",
      " find",
      "('",
      "sh",
      "oes",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " grab",
      " shoes",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "sh",
      "oes",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "sh",
      "oes",
      "')",
      "\n",
      " grab",
      "('",
      "sh",
      "oes",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " put",
      " on",
      " shoes",
      "\n",
      " assert",
      "('",
      "sh",
      "oes",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "sh",
      "oes",
      "')",
      "\n",
      " put",
      "on",
      "('",
      "sh",
      "oes",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " Done",
      "\n",
      "def",
      " cook",
      "_",
      "d",
      "inner",
      "():",
      "\n",
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " kitchen",
      "\n",
      " walk",
      "('",
      "kit",
      "chen",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " cutting",
      " board",
      "\n",
      " find",
      "('",
      "cutting",
      "_",
      "board",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " find",
      " food",
      "\n",
      " find",
      "('",
      "food",
      "_",
      "food",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " grab",
      " food",
      "\n",
      " grab",
      "('",
      "food",
      "_",
      "food",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " cut",
      " food",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "cutting",
      "_",
      "board",
      "')",
      "\n",
      " look",
      "at",
      "('",
      "cutting",
      "_",
      "board",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "cutting",
      "_",
      "board",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "cutting",
      "_",
      "board",
      "')",
      "\n",
      " cut",
      "('",
      "food",
      "_",
      "food",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " cook",
      " food",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "st",
      "ove",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "st",
      "ove",
      "')",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "st",
      "ove",
      "')",
      "\n",
      " look",
      "at",
      "('",
      "st",
      "ove",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "st",
      "ove",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "st",
      "ove",
      "')",
      "\n",
      " switch",
      "on",
      "('",
      "st",
      "ove",
      "')",
      "\n",
      " cook",
      "('",
      "food",
      "_",
      "food",
      "')",
      "\n",
      " #",
      " 6",
      ":",
      " put",
      " food",
      " on",
      " plate",
      "\n",
      " find",
      "('",
      "plate",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "plate",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "plate",
      "')",
      "\n",
      " put",
      "in",
      "('",
      "food",
      "_",
      "food",
      "',",
      " '",
      "plate",
      "')",
      "\n",
      " #",
      " 7",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.0152430935,
      -0.008371328,
      -0.001906678,
      -1.2280365,
      -0.16421609,
      -0.5312326,
      -0.021986175,
      -0.0046043494,
      -0.0040636566,
      -0.0018865532,
      -0.0010800367,
      -0.0069142473,
      -0.0026915683,
      -0.0029720913,
      -0.00042043283,
      -0.031183299,
      -0.29433745,
      -0.021675486,
      -0.3596779,
      -0.0009052807,
      -0.00028066957,
      -0.002866401,
      -0.0026247555,
      -0.0048048478,
      -0.01303063,
      -0.00420802,
      -0.0006338098,
      -0.89183044,
      -0.33211547,
      -0.032234482,
      -0.9801959,
      -0.0015839504,
      -0.0058083646,
      -0.002467772,
      -0.0004896621,
      -0.00549744,
      -0.00055901904,
      -0.0020319726,
      -0.004270096,
      -0.006676242,
      -0.0014899266,
      -0.001357774,
      -0.004143319,
      -0.0011384528,
      -0.00021860692,
      -0.0014511275,
      -0.0015512345,
      -0.0064127427,
      -0.008983029,
      -0.00093272305,
      -9.639735e-05,
      -0.000106533844,
      -0.0015124318,
      -0.0050911726,
      -0.43326896,
      -0.008686332,
      -0.0006832541,
      -0.07615602,
      -0.32703805,
      -0.10430242,
      -0.014532179,
      -0.6311164,
      -0.0010462021,
      -0.18478435,
      -0.00265625,
      -0.0015426375,
      -0.010357629,
      -0.00333121,
      -0.007865369,
      -0.023397375,
      -0.0036769945,
      -0.0045023793,
      -0.0020678705,
      -0.0116320895,
      -0.0011378567,
      -0.00021348093,
      -0.0002058497,
      -0.0020122065,
      -0.0048147906,
      -0.076374926,
      -0.010983085,
      -0.00081728684,
      -0.0002329739,
      -0.00040474985,
      -0.0023496503,
      -0.31177896,
      -0.13907094,
      -0.009747372,
      -0.0013757398,
      -0.3964481,
      -0.4636502,
      -1.1044431,
      -3.2469761,
      -0.010454957,
      -1.4564047,
      -0.008983752,
      -0.028124332,
      -0.0146534415,
      -0.0108811855,
      -0.0052057854,
      -0.0016996549,
      -0.20618364,
      -0.11304854,
      -0.044183932,
      -0.025685063,
      -0.0027855872,
      -0.002641607,
      -0.0020113704,
      -0.00039616402,
      -0.0027329298,
      -0.0065469453,
      -0.0024266057,
      -0.0035934248,
      -0.000491332,
      -0.0724301,
      -2.2749867,
      -0.03652577,
      -0.042978644,
      -0.03428457,
      -0.0010734709,
      -0.0017391205,
      -0.04801995,
      -0.0003165636,
      -0.0014735125,
      -0.0059156218,
      -0.006077163,
      -0.0046224943,
      -0.0005318864,
      -0.41568846,
      -0.4408971,
      -0.16472976,
      -0.02708613,
      -0.0015980985,
      -0.0010715617,
      -0.5737,
      -0.57854605,
      -0.0023179268,
      -0.0075709396,
      -0.011722487,
      -0.004450887,
      -0.00090444623,
      -0.3626051,
      -0.14636268,
      -0.0674209,
      -1.6983229,
      -0.00084741286,
      -0.00018975277,
      -0.015978696,
      -0.000389723,
      -0.0016503363,
      -0.004460648,
      -0.027593454,
      -0.0053071696,
      -0.0007633004,
      -1.585825,
      -0.13414162,
      -0.14774513,
      -2.1132257,
      -5.8367896e-05,
      -0.00044798222,
      -0.00082730886,
      -0.44910103,
      -0.00463459,
      -0.00043164124,
      -0.0027007137,
      -0.004556866,
      -1.1311955,
      -0.00053337787,
      -0.0004994438,
      -0.082782894,
      -0.0012603713,
      -0.000107127074,
      -0.0018268373,
      -0.0039060924,
      -0.38108674,
      -0.0011573102,
      -0.5512795,
      -0.002382153,
      -0.0005346873,
      -0.001885718,
      -0.27893686,
      -0.0032558583,
      -0.00042746708,
      -0.010496456,
      -0.0032476666,
      -0.0025185633,
      -0.001524192,
      -0.0065620025,
      -0.001157071,
      -0.0022721027,
      -0.0011402447,
      -0.00036742157,
      -0.0045695594,
      -0.005492827,
      -0.5650406,
      -0.01619057,
      -0.019403359,
      -0.013748461,
      -0.00047338495,
      -0.043230057,
      -0.008805205,
      -0.059436627,
      -0.0043287585,
      -0.0011788532,
      -1.7147536,
      -0.04251625,
      -0.010812312,
      -1.2813702,
      -0.0011335014,
      -0.5083158,
      -0.0020443385,
      -0.00031906605,
      -0.0021876947,
      -0.050844647,
      -0.00018605449,
      -0.34241202,
      -0.0024115485,
      -0.0012088703,
      -0.0014960767,
      -0.041523878,
      -0.001076454,
      -0.0007609162,
      -0.00017520743,
      -0.008152508,
      -0.004604109,
      -3.3948443,
      -6.420819e-05,
      -0.0011582659,
      -0.00058120594,
      -0.003122813,
      -0.00021002105,
      -0.0040987865,
      -0.0033282186,
      -0.439368,
      -0.00047857474,
      -0.00043486364,
      -0.0005523396,
      -0.0007597232,
      -0.0024269642,
      -0.0036506737,
      -1.7196234,
      -0.0010917896,
      -0.49086735,
      -0.002289846,
      -0.0002844852,
      -0.0013363475,
      -0.027893059,
      -0.000110942696,
      -0.017974526,
      -0.0020953456,
      -0.0015391757,
      -0.0014307739,
      -0.004668661,
      -0.0009466245,
      -0.00043343127,
      -0.00024048591,
      -0.0022781955,
      -0.0045733307,
      -1.1121484,
      -0.0020854888,
      -0.0008298151,
      -0.0010075964,
      -0.00015720223,
      -0.005884562,
      -0.0052579753,
      -0.5348805,
      -0.0039927987,
      -0.004574888,
      -0.0072919508,
      -0.00021348093,
      -0.0036536052,
      -0.016437331,
      -0.041721914,
      -0.0054894094,
      -0.001785455,
      -1.4501748,
      -0.10851325,
      -0.20862113,
      -0.13222732,
      -0.009606117,
      -1.3378948,
      -0.0013962127,
      -0.20253879,
      -0.0016618,
      -0.0026459107,
      -0.98203945,
      -0.0006334503,
      -0.15475209,
      -0.0012298144,
      -0.00029438327,
      -0.0012911074,
      -0.0026141168,
      -0.002770106,
      -0.0019710534,
      -0.00074272143,
      -0.0011773007,
      -0.0020312583,
      -0.0008456238,
      -0.00045430218,
      -0.0010379712,
      -0.0035703338,
      -0.748587,
      -1.2971579,
      -0.004642434,
      -0.28571668,
      -0.007973209,
      -0.00036539597,
      -0.3534831,
      -0.0057213767,
      -0.000536956,
      -0.0027250997,
      -0.016013093,
      -0.018328749,
      -0.008942856,
      -0.0013362283,
      -0.43546703
     ],
     "top_logprobs": [
      {
       " #": -0.0152430935
      },
      {
       " 0": -0.008371328
      },
      {
       ":": -0.001906678
      },
      {
       " find": -0.54775953
      },
      {
       " to": -0.16421609
      },
      {
       " bedroom": -0.5312326
      },
      {
       "\n": -0.021986175
      },
      {
       " walk": -0.0046043494
      },
      {
       "('": -0.0040636566
      },
      {
       "bedroom": -0.0018865532
      },
      {
       "')": -0.0010800367
      },
      {
       "\n": -0.0069142473
      },
      {
       " #": -0.0026915683
      },
      {
       " 1": -0.0029720913
      },
      {
       ":": -0.00042043283
      },
      {
       " find": -0.031183299
      },
      {
       " shoes": -0.29433745
      },
      {
       "\n": -0.021675486
      },
      {
       " find": -0.3596779
      },
      {
       "('": -0.0009052807
      },
      {
       "sh": -0.00028066957
      },
      {
       "oes": -0.002866401
      },
      {
       "')": -0.0026247555
      },
      {
       "\n": -0.0048048478
      },
      {
       " #": -0.01303063
      },
      {
       " 2": -0.00420802
      },
      {
       ":": -0.0006338098
      },
      {
       " grab": -0.89183044
      },
      {
       " shoes": -0.33211547
      },
      {
       "\n": -0.032234482
      },
      {
       " grab": -0.48928443
      },
      {
       "('": -0.0015839504
      },
      {
       "close": -0.0058083646
      },
      {
       "'": -0.002467772
      },
      {
       " to": -0.0004896621
      },
      {
       " '": -0.00549744
      },
      {
       "sh": -0.00055901904
      },
      {
       "oes": -0.0020319726
      },
      {
       "')": -0.004270096
      },
      {
       "\n": -0.006676242
      },
      {
       " else": -0.0014899266
      },
      {
       ":": -0.001357774
      },
      {
       " find": -0.004143319
      },
      {
       "('": -0.0011384528
      },
      {
       "sh": -0.00021860692
      },
      {
       "oes": -0.0014511275
      },
      {
       "')": -0.0015512345
      },
      {
       "\n": -0.0064127427
      },
      {
       " grab": -0.008983029
      },
      {
       "('": -0.00093272305
      },
      {
       "sh": -9.639735e-05
      },
      {
       "oes": -0.000106533844
      },
      {
       "')": -0.0015124318
      },
      {
       "\n": -0.0050911726
      },
      {
       " #": -0.43326896
      },
      {
       " 3": -0.008686332
      },
      {
       ":": -0.0006832541
      },
      {
       " put": -0.07615602
      },
      {
       " on": -0.32703805
      },
      {
       " shoes": -0.10430242
      },
      {
       "\n": -0.014532179
      },
      {
       " assert": -0.6311164
      },
      {
       "('": -0.0010462021
      },
      {
       "sh": -0.18478435
      },
      {
       "oes": -0.00265625
      },
      {
       "'": -0.0015426375
      },
      {
       " in": -0.010357629
      },
      {
       " '": -0.00333121
      },
      {
       "hands": -0.007865369
      },
      {
       "')": -0.023397375
      },
      {
       "\n": -0.0036769945
      },
      {
       " else": -0.0045023793
      },
      {
       ":": -0.0020678705
      },
      {
       " grab": -0.0116320895
      },
      {
       "('": -0.0011378567
      },
      {
       "sh": -0.00021348093
      },
      {
       "oes": -0.0002058497
      },
      {
       "')": -0.0020122065
      },
      {
       "\n": -0.0048147906
      },
      {
       " put": -0.076374926
      },
      {
       "on": -0.010983085
      },
      {
       "('": -0.00081728684
      },
      {
       "sh": -0.0002329739
      },
      {
       "oes": -0.00040474985
      },
      {
       "')": -0.0023496503
      },
      {
       "\n": -0.31177896
      },
      {
       " #": -0.13907094
      },
      {
       " 4": -0.009747372
      },
      {
       ":": -0.0013757398
      },
      {
       " Done": -0.3964481
      },
      {
       "\n": -0.4636502
      },
      {
       "def": -1.1044431
      },
      {
       " make": -1.2662251
      },
      {
       "_": -0.010454957
      },
      {
       "food": -0.75250053
      },
      {
       "inner": -0.008983752
      },
      {
       "():": -0.028124332
      },
      {
       "\n": -0.0146534415
      },
      {
       " #": -0.0108811855
      },
      {
       " 0": -0.0052057854
      },
      {
       ":": -0.0016996549
      },
      {
       " walk": -0.20618364
      },
      {
       " to": -0.11304854
      },
      {
       " kitchen": -0.044183932
      },
      {
       "\n": -0.025685063
      },
      {
       " walk": -0.0027855872
      },
      {
       "('": -0.002641607
      },
      {
       "kit": -0.0020113704
      },
      {
       "chen": -0.00039616402
      },
      {
       "')": -0.0027329298
      },
      {
       "\n": -0.0065469453
      },
      {
       " #": -0.0024266057
      },
      {
       " 1": -0.0035934248
      },
      {
       ":": -0.000491332
      },
      {
       " find": -0.0724301
      },
      {
       " stove": -0.4754243
      },
      {
       " board": -0.03652577
      },
      {
       "\n": -0.042978644
      },
      {
       " find": -0.03428457
      },
      {
       "('": -0.0010734709
      },
      {
       "cutting": -0.0017391205
      },
      {
       "_": -0.04801995
      },
      {
       "board": -0.0003165636
      },
      {
       "')": -0.0014735125
      },
      {
       "\n": -0.0059156218
      },
      {
       " #": -0.006077163
      },
      {
       " 2": -0.0046224943
      },
      {
       ":": -0.0005318864
      },
      {
       " find": -0.41568846
      },
      {
       " food": -0.4408971
      },
      {
       "\n": -0.16472976
      },
      {
       " find": -0.02708613
      },
      {
       "('": -0.0015980985
      },
      {
       "food": -0.0010715617
      },
      {
       "_": -0.5737
      },
      {
       "food": -0.57854605
      },
      {
       "')": -0.0023179268
      },
      {
       "\n": -0.0075709396
      },
      {
       " #": -0.011722487
      },
      {
       " 3": -0.004450887
      },
      {
       ":": -0.00090444623
      },
      {
       " grab": -0.3626051
      },
      {
       " food": -0.14636268
      },
      {
       "\n": -0.0674209
      },
      {
       " assert": -0.20702147
      },
      {
       "('": -0.00084741286
      },
      {
       "food": -0.00018975277
      },
      {
       "_": -0.015978696
      },
      {
       "food": -0.000389723
      },
      {
       "')": -0.0016503363
      },
      {
       "\n": -0.004460648
      },
      {
       " #": -0.027593454
      },
      {
       " 4": -0.0053071696
      },
      {
       ":": -0.0007633004
      },
      {
       " put": -0.65031046
      },
      {
       " food": -0.13414162
      },
      {
       "\n": -0.14774513
      },
      {
       " assert": -0.61953825
      },
      {
       "nt": -5.8367896e-05
      },
      {
       "o": -0.00044798222
      },
      {
       "('": -0.00082730886
      },
      {
       "cutting": -0.44910103
      },
      {
       "_": -0.00463459
      },
      {
       "board": -0.00043164124
      },
      {
       "')": -0.0027007137
      },
      {
       "\n": -0.004556866
      },
      {
       " point": -0.91992986
      },
      {
       "at": -0.00053337787
      },
      {
       "('": -0.0004994438
      },
      {
       "cutting": -0.082782894
      },
      {
       "_": -0.0012603713
      },
      {
       "board": -0.000107127074
      },
      {
       "')": -0.0018268373
      },
      {
       "\n": -0.0039060924
      },
      {
       " assert": -0.38108674
      },
      {
       "('": -0.0011573102
      },
      {
       "close": -0.5512795
      },
      {
       "'": -0.002382153
      },
      {
       " to": -0.0005346873
      },
      {
       " '": -0.001885718
      },
      {
       "cutting": -0.27893686
      },
      {
       "_": -0.0032558583
      },
      {
       "board": -0.00042746708
      },
      {
       "')": -0.010496456
      },
      {
       "\n": -0.0032476666
      },
      {
       " else": -0.0025185633
      },
      {
       ":": -0.001524192
      },
      {
       " find": -0.0065620025
      },
      {
       "('": -0.001157071
      },
      {
       "cutting": -0.0022721027
      },
      {
       "_": -0.0011402447
      },
      {
       "board": -0.00036742157
      },
      {
       "')": -0.0045695594
      },
      {
       "\n": -0.005492827
      },
      {
       " cut": -0.5650406
      },
      {
       "('": -0.01619057
      },
      {
       "food": -0.019403359
      },
      {
       "_": -0.013748461
      },
      {
       "food": -0.00047338495
      },
      {
       "')": -0.043230057
      },
      {
       "\n": -0.008805205
      },
      {
       " #": -0.059436627
      },
      {
       " 5": -0.0043287585
      },
      {
       ":": -0.0011788532
      },
      {
       " find": -1.1607043
      },
      {
       " food": -0.04251625
      },
      {
       "\n": -0.010812312
      },
      {
       " tur": -1.146324
      },
      {
       "('": -0.0011335014
      },
      {
       "close": -0.5083158
      },
      {
       "'": -0.0020443385
      },
      {
       " to": -0.00031906605
      },
      {
       " '": -0.0021876947
      },
      {
       "st": -0.050844647
      },
      {
       "ove": -0.00018605449
      },
      {
       "')": -0.34241202
      },
      {
       "\n": -0.0024115485
      },
      {
       " else": -0.0012088703
      },
      {
       ":": -0.0014960767
      },
      {
       " find": -0.041523878
      },
      {
       "('": -0.001076454
      },
      {
       "st": -0.0007609162
      },
      {
       "ove": -0.00017520743
      },
      {
       "')": -0.008152508
      },
      {
       "\n": -0.004604109
      },
      {
       " cook": -0.67295885
      },
      {
       "nt": -6.420819e-05
      },
      {
       "o": -0.0011582659
      },
      {
       "('": -0.00058120594
      },
      {
       "st": -0.003122813
      },
      {
       "ove": -0.00021002105
      },
      {
       "')": -0.0040987865
      },
      {
       "\n": -0.0033282186
      },
      {
       " look": -0.439368
      },
      {
       "at": -0.00047857474
      },
      {
       "('": -0.00043486364
      },
      {
       "st": -0.0005523396
      },
      {
       "ove": -0.0007597232
      },
      {
       "')": -0.0024269642
      },
      {
       "\n": -0.0036506737
      },
      {
       " cook": -0.94588447
      },
      {
       "('": -0.0010917896
      },
      {
       "close": -0.49086735
      },
      {
       "'": -0.002289846
      },
      {
       " to": -0.0002844852
      },
      {
       " '": -0.0013363475
      },
      {
       "st": -0.027893059
      },
      {
       "ove": -0.000110942696
      },
      {
       "')": -0.017974526
      },
      {
       "\n": -0.0020953456
      },
      {
       " else": -0.0015391757
      },
      {
       ":": -0.0014307739
      },
      {
       " find": -0.004668661
      },
      {
       "('": -0.0009466245
      },
      {
       "st": -0.00043343127
      },
      {
       "ove": -0.00024048591
      },
      {
       "')": -0.0022781955
      },
      {
       "\n": -0.0045733307
      },
      {
       " cook": -0.5219298
      },
      {
       "on": -0.0020854888
      },
      {
       "('": -0.0008298151
      },
      {
       "st": -0.0010075964
      },
      {
       "ove": -0.00015720223
      },
      {
       "')": -0.005884562
      },
      {
       "\n": -0.0052579753
      },
      {
       " cook": -0.5348805
      },
      {
       "('": -0.0039927987
      },
      {
       "food": -0.004574888
      },
      {
       "_": -0.0072919508
      },
      {
       "food": -0.00021348093
      },
      {
       "')": -0.0036536052
      },
      {
       "\n": -0.016437331
      },
      {
       " #": -0.041721914
      },
      {
       " 6": -0.0054894094
      },
      {
       ":": -0.001785455
      },
      {
       " Done": -0.87669325
      },
      {
       " food": -0.10851325
      },
      {
       " on": -0.20862113
      },
      {
       " plate": -0.13222732
      },
      {
       "\n": -0.009606117
      },
      {
       " assert": -0.8564695
      },
      {
       "('": -0.0013962127
      },
      {
       "plate": -0.20253879
      },
      {
       "')": -0.0016618
      },
      {
       "\n": -0.0026459107
      },
      {
       " assert": -0.98203945
      },
      {
       "('": -0.0006334503
      },
      {
       "close": -0.15475209
      },
      {
       "'": -0.0012298144
      },
      {
       " to": -0.00029438327
      },
      {
       " '": -0.0012911074
      },
      {
       "plate": -0.0026141168
      },
      {
       "')": -0.002770106
      },
      {
       "\n": -0.0019710534
      },
      {
       " else": -0.00074272143
      },
      {
       ":": -0.0011773007
      },
      {
       " find": -0.0020312583
      },
      {
       "('": -0.0008456238
      },
      {
       "plate": -0.00045430218
      },
      {
       "')": -0.0010379712
      },
      {
       "\n": -0.0035703338
      },
      {
       " put": -0.748587
      },
      {
       "on": -0.5367895
      },
      {
       "('": -0.004642434
      },
      {
       "food": -0.28571668
      },
      {
       "_": -0.007973209
      },
      {
       "food": -0.00036539597
      },
      {
       "',": -0.3534831
      },
      {
       " '": -0.0057213767
      },
      {
       "plate": -0.000536956
      },
      {
       "')": -0.0027250997
      },
      {
       "\n": -0.016013093
      },
      {
       " #": -0.018328749
      },
      {
       " 7": -0.008942856
      },
      {
       ":": -0.0013362283
      },
      {
       " Done": -0.43546703
      }
     ],
     "text_offset": [
      3423,
      3425,
      3427,
      3428,
      3433,
      3436,
      3444,
      3445,
      3450,
      3452,
      3459,
      3461,
      3462,
      3464,
      3466,
      3467,
      3472,
      3478,
      3479,
      3484,
      3486,
      3488,
      3491,
      3493,
      3494,
      3496,
      3498,
      3499,
      3504,
      3510,
      3511,
      3518,
      3520,
      3525,
      3526,
      3529,
      3531,
      3533,
      3536,
      3538,
      3539,
      3544,
      3545,
      3550,
      3552,
      3554,
      3557,
      3559,
      3560,
      3565,
      3567,
      3569,
      3572,
      3574,
      3575,
      3577,
      3579,
      3580,
      3584,
      3587,
      3593,
      3594,
      3601,
      3603,
      3605,
      3608,
      3609,
      3612,
      3614,
      3619,
      3621,
      3622,
      3627,
      3628,
      3633,
      3635,
      3637,
      3640,
      3642,
      3643,
      3647,
      3649,
      3651,
      3653,
      3656,
      3658,
      3659,
      3661,
      3663,
      3664,
      3669,
      3670,
      3673,
      3678,
      3679,
      3680,
      3685,
      3688,
      3689,
      3691,
      3693,
      3694,
      3699,
      3702,
      3710,
      3711,
      3716,
      3718,
      3721,
      3725,
      3727,
      3728,
      3730,
      3732,
      3733,
      3738,
      3746,
      3752,
      3753,
      3758,
      3760,
      3767,
      3768,
      3773,
      3775,
      3776,
      3778,
      3780,
      3781,
      3786,
      3791,
      3792,
      3797,
      3799,
      3803,
      3804,
      3808,
      3810,
      3811,
      3813,
      3815,
      3816,
      3821,
      3826,
      3827,
      3832,
      3834,
      3838,
      3839,
      3843,
      3845,
      3846,
      3848,
      3850,
      3851,
      3855,
      3860,
      3861,
      3865,
      3867,
      3868,
      3870,
      3877,
      3878,
      3883,
      3885,
      3886,
      3891,
      3893,
      3895,
      3902,
      3903,
      3908,
      3910,
      3911,
      3918,
      3920,
      3925,
      3926,
      3929,
      3931,
      3938,
      3939,
      3944,
      3946,
      3947,
      3952,
      3953,
      3958,
      3960,
      3967,
      3968,
      3973,
      3975,
      3976,
      3980,
      3982,
      3986,
      3987,
      3991,
      3993,
      3994,
      3996,
      3998,
      3999,
      4004,
      4009,
      4010,
      4017,
      4019,
      4024,
      4025,
      4028,
      4030,
      4032,
      4035,
      4037,
      4038,
      4043,
      4044,
      4049,
      4051,
      4053,
      4056,
      4058,
      4059,
      4063,
      4065,
      4066,
      4068,
      4070,
      4073,
      4075,
      4076,
      4081,
      4083,
      4085,
      4087,
      4090,
      4092,
      4093,
      4100,
      4102,
      4107,
      4108,
      4111,
      4113,
      4115,
      4118,
      4120,
      4121,
      4126,
      4127,
      4132,
      4134,
      4136,
      4139,
      4141,
      4142,
      4149,
      4151,
      4153,
      4155,
      4158,
      4160,
      4161,
      4166,
      4168,
      4172,
      4173,
      4177,
      4179,
      4180,
      4182,
      4184,
      4185,
      4189,
      4194,
      4197,
      4203,
      4204,
      4209,
      4211,
      4216,
      4218,
      4219,
      4226,
      4228,
      4233,
      4234,
      4237,
      4239,
      4244,
      4246,
      4247,
      4252,
      4253,
      4258,
      4260,
      4265,
      4267,
      4268,
      4272,
      4274,
      4276,
      4280,
      4281,
      4285,
      4287,
      4289,
      4294,
      4296,
      4297,
      4299,
      4301,
      4302
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Put on your shoes",
   "task_description": "Sit on a chair with your shoes in front of you.  Put them on one at a time.",
   "program": [
    "[Walk] <home_office> (1)",
    "[Walk] <shoes> (1)",
    "[Find] <shoes> (1)",
    "[Grab] <shoes> (1)",
    "[Find] <chair> (1)",
    "[Sit] <chair> (1)",
    "[Find] <feet_both> (1)",
    "[PutBack] <shoes> (1) <feet_both> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_july",
   "file_id": "split8_1",
   "goal_condition": [
    [
     [
      162,
      246,
      "INSIDE",
      "character",
      "home_office"
     ],
     [
      162,
      2058,
      "ON",
      "character",
      "chair"
     ],
     [
      1000,
      1001,
      "ON",
      "shoes",
      "feet_both"
     ]
    ],
    [
     [
      162,
      "character",
      "SITTING"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1204,
   "completion_tokens": 316,
   "total_tokens": 1520
  }
 },
 "9": {
  "plan": [
   [
    " # 0: find a bed\n find('bed')\n # 1: sit on bed\n assert('close' to 'bed')\n else: find('bed')\n sit('bed')\n # 2: lay down on bed\n lie('bed')\n # 3: close eyes\n close('eyes')\n # 4: Done\ndef wash_clothes():\n # 0: find washing machine\n find('washing_machine')\n # 1: open washing machine\n open('washing_machine')\n # 2: put clothes in washing machine\n assert('clothes' in 'hands')\n else: grab('clothes')\n putin('clothes' 'washing_machine')\n # 3: pour detergent\n find('detergent')\n grab('detergent')\n pour('detergent' 'washing_machine')\n # 4: close washing machine\n close('washing_machine')\n # 5: switch on washing machine\n switchon('washing_machine')\n # 6: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " a",
      " bed",
      "\n",
      " find",
      "('",
      "bed",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " sit",
      " on",
      " bed",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "bed",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "bed",
      "')",
      "\n",
      " sit",
      "('",
      "bed",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " lay",
      " down",
      " on",
      " bed",
      "\n",
      " lie",
      "('",
      "bed",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " close",
      " eyes",
      "\n",
      " close",
      "('",
      "eyes",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " Done",
      "\n",
      "def",
      " wash",
      "_",
      "cl",
      "othes",
      "():",
      "\n",
      " #",
      " 0",
      ":",
      " find",
      " washing",
      " machine",
      "\n",
      " find",
      "('",
      "washing",
      "_",
      "machine",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " open",
      " washing",
      " machine",
      "\n",
      " open",
      "('",
      "washing",
      "_",
      "machine",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " put",
      " clothes",
      " in",
      " washing",
      " machine",
      "\n",
      " assert",
      "('",
      "cl",
      "othes",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "cl",
      "othes",
      "')",
      "\n",
      " put",
      "in",
      "('",
      "cl",
      "othes",
      "'",
      " '",
      "washing",
      "_",
      "machine",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " pour",
      " deter",
      "gent",
      "\n",
      " find",
      "('",
      "d",
      "eter",
      "gent",
      "')",
      "\n",
      " grab",
      "('",
      "d",
      "eter",
      "gent",
      "')",
      "\n",
      " pour",
      "('",
      "d",
      "eter",
      "gent",
      "'",
      " '",
      "washing",
      "_",
      "machine",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " close",
      " washing",
      " machine",
      "\n",
      " close",
      "('",
      "washing",
      "_",
      "machine",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " switch",
      " on",
      " washing",
      " machine",
      "\n",
      " switch",
      "on",
      "('",
      "washing",
      "_",
      "machine",
      "')",
      "\n",
      " #",
      " 6",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.30076173,
      -0.07358144,
      -0.0026930629,
      -0.83410233,
      -1.9822192,
      -0.87895185,
      -0.039067738,
      -0.018333787,
      -0.005688587,
      -0.00058347365,
      -0.0020559852,
      -0.01165223,
      -0.0048463545,
      -0.0027354392,
      -0.00043975122,
      -2.5703068,
      -0.11831032,
      -0.873486,
      -0.021848544,
      -0.35168847,
      -0.001733925,
      -0.005872156,
      -0.002247728,
      -0.0007881164,
      -0.0023955954,
      -0.00024025032,
      -0.0042936183,
      -0.0083652,
      -0.0016757128,
      -0.001604425,
      -0.0034628455,
      -0.0012495712,
      -0.0001878445,
      -0.00081215624,
      -0.0056763585,
      -0.31440747,
      -0.0008838635,
      -8.924483e-05,
      -0.001068696,
      -0.0061599836,
      -0.033787277,
      -0.0068609505,
      -0.00068862323,
      -0.64776915,
      -0.07688066,
      -0.83582073,
      -0.086495824,
      -0.016646152,
      -0.6302177,
      -0.024472727,
      -0.0046829754,
      -0.0011300377,
      -0.0057568043,
      -0.019196877,
      -0.0048913374,
      -0.00056760764,
      -0.26927388,
      -0.17487036,
      -0.18454003,
      -0.1146043,
      -0.3850742,
      -0.015335208,
      -0.0011126136,
      -0.07599343,
      -0.01904122,
      -0.00415092,
      -0.0014851508,
      -0.5477666,
      -0.56808364,
      -0.68826294,
      -1.8507072,
      -0.0028644884,
      -2.0115664,
      -0.0049854987,
      -0.02756668,
      -0.012744379,
      -0.0044145463,
      -0.0039512105,
      -0.001380635,
      -0.5310129,
      -0.6448454,
      -0.015479269,
      -0.027726483,
      -0.035231926,
      -0.0016464569,
      -0.0030707368,
      -0.021494538,
      -0.0003816121,
      -0.0015701596,
      -0.008696373,
      -0.004845096,
      -0.0016171437,
      -0.00033641793,
      -1.4102801,
      -0.41060913,
      -0.005854708,
      -0.06615908,
      -0.38839072,
      -0.0013435113,
      -0.0009784222,
      -0.0030365982,
      -0.0005073162,
      -0.001345061,
      -0.0052761906,
      -0.007548838,
      -0.0022460553,
      -0.0003708805,
      -0.2833,
      -0.18621612,
      -0.25080833,
      -0.46813986,
      -0.0049675885,
      -0.009880877,
      -1.6635404,
      -0.0021627238,
      -0.5481337,
      -0.013722234,
      -0.020063078,
      -0.05437214,
      -0.017598286,
      -0.044313584,
      -0.022987744,
      -0.008123545,
      -0.0064552734,
      -0.002862994,
      -0.4015446,
      -0.0029355017,
      -0.0006582626,
      -0.0018430187,
      -0.0036671855,
      -0.007138319,
      -0.029743461,
      -0.05224711,
      -0.0016349931,
      -0.23656115,
      -0.0034188866,
      -2.3673682,
      -0.10203723,
      -0.0029617473,
      -0.0072989166,
      -0.0003490606,
      -0.0028541472,
      -0.011014663,
      -0.011789002,
      -0.0034051307,
      -0.0006650631,
      -1.6344715,
      -0.08260304,
      -0.0014251627,
      -0.64190644,
      -1.0509561,
      -0.0012040964,
      -0.0031570157,
      -7.8752586e-05,
      -0.00047338495,
      -0.002379046,
      -0.0035724882,
      -0.9784885,
      -0.0007831069,
      -0.00018450571,
      -0.00024787875,
      -7.97072e-05,
      -0.0015431152,
      -0.002677408,
      -0.28168097,
      -0.0016259793,
      -0.0020116086,
      -0.00024740095,
      -0.0002251634,
      -0.63073343,
      -0.003876891,
      -0.0033136264,
      -0.0014044513,
      -0.0005980866,
      -0.001897421,
      -0.0053681135,
      -0.008502188,
      -0.0052639646,
      -0.00077093637,
      -0.26662996,
      -0.29117373,
      -0.005749973,
      -0.06985063,
      -0.020942392,
      -0.00070556306,
      -0.00047797684,
      -0.0017741096,
      -0.00042842168,
      -0.00236835,
      -0.0042129285,
      -0.0026835627,
      -0.0030227266,
      -0.0014234908,
      -0.5590132,
      -0.029722035,
      -0.22156866,
      -0.004305591,
      -0.010572113,
      -0.07954685,
      -0.0013115794,
      -0.00060512277,
      -0.0006478858,
      -0.0016722481,
      -0.00027578016,
      -0.0017517791,
      -0.005716401,
      -0.0029857806,
      -0.0032443767,
      -0.0017524953,
      -0.7580612
     ],
     "top_logprobs": [
      {
       " #": -0.30076173
      },
      {
       " 0": -0.07358144
      },
      {
       ":": -0.0026930629
      },
      {
       " find": -0.83410233
      },
      {
       " bed": -0.28424317
      },
      {
       " comfortable": -0.7884243
      },
      {
       "\n": -0.039067738
      },
      {
       " find": -0.018333787
      },
      {
       "('": -0.005688587
      },
      {
       "bed": -0.00058347365
      },
      {
       "')": -0.0020559852
      },
      {
       "\n": -0.01165223
      },
      {
       " #": -0.0048463545
      },
      {
       " 1": -0.0027354392
      },
      {
       ":": -0.00043975122
      },
      {
       " lie": -1.1538037
      },
      {
       " on": -0.11831032
      },
      {
       " the": -0.5942101
      },
      {
       "\n": -0.021848544
      },
      {
       " assert": -0.35168847
      },
      {
       "('": -0.001733925
      },
      {
       "close": -0.005872156
      },
      {
       "'": -0.002247728
      },
      {
       " to": -0.0007881164
      },
      {
       " '": -0.0023955954
      },
      {
       "bed": -0.00024025032
      },
      {
       "')": -0.0042936183
      },
      {
       "\n": -0.0083652
      },
      {
       " else": -0.0016757128
      },
      {
       ":": -0.001604425
      },
      {
       " find": -0.0034628455
      },
      {
       "('": -0.0012495712
      },
      {
       "bed": -0.0001878445
      },
      {
       "')": -0.00081215624
      },
      {
       "\n": -0.0056763585
      },
      {
       " sit": -0.31440747
      },
      {
       "('": -0.0008838635
      },
      {
       "bed": -8.924483e-05
      },
      {
       "')": -0.001068696
      },
      {
       "\n": -0.0061599836
      },
      {
       " #": -0.033787277
      },
      {
       " 2": -0.0068609505
      },
      {
       ":": -0.00068862323
      },
      {
       " lay": -0.64776915
      },
      {
       " down": -0.07688066
      },
      {
       "\n": -0.80604213
      },
      {
       " bed": -0.086495824
      },
      {
       "\n": -0.016646152
      },
      {
       " lie": -0.6302177
      },
      {
       "('": -0.024472727
      },
      {
       "bed": -0.0046829754
      },
      {
       "')": -0.0011300377
      },
      {
       "\n": -0.0057568043
      },
      {
       " #": -0.019196877
      },
      {
       " 3": -0.0048913374
      },
      {
       ":": -0.00056760764
      },
      {
       " close": -0.26927388
      },
      {
       " eyes": -0.17487036
      },
      {
       "\n": -0.18454003
      },
      {
       " close": -0.1146043
      },
      {
       "('": -0.3850742
      },
      {
       "eyes": -0.015335208
      },
      {
       "')": -0.0011126136
      },
      {
       "\n": -0.07599343
      },
      {
       " #": -0.01904122
      },
      {
       " 4": -0.00415092
      },
      {
       ":": -0.0014851508
      },
      {
       " Done": -0.5477666
      },
      {
       "\n": -0.56808364
      },
      {
       "def": -0.68826294
      },
      {
       " wake": -1.4955082
      },
      {
       "_": -0.0028644884
      },
      {
       "hands": -0.95758647
      },
      {
       "othes": -0.0049854987
      },
      {
       "():": -0.02756668
      },
      {
       "\n": -0.012744379
      },
      {
       " #": -0.0044145463
      },
      {
       " 0": -0.0039512105
      },
      {
       ":": -0.001380635
      },
      {
       " find": -0.5310129
      },
      {
       " washing": -0.6448454
      },
      {
       " machine": -0.015479269
      },
      {
       "\n": -0.027726483
      },
      {
       " find": -0.035231926
      },
      {
       "('": -0.0016464569
      },
      {
       "washing": -0.0030707368
      },
      {
       "_": -0.021494538
      },
      {
       "machine": -0.0003816121
      },
      {
       "')": -0.0015701596
      },
      {
       "\n": -0.008696373
      },
      {
       " #": -0.004845096
      },
      {
       " 1": -0.0016171437
      },
      {
       ":": -0.00033641793
      },
      {
       " open": -1.4102801
      },
      {
       " washing": -0.41060913
      },
      {
       " machine": -0.005854708
      },
      {
       "\n": -0.06615908
      },
      {
       " open": -0.38839072
      },
      {
       "('": -0.0013435113
      },
      {
       "washing": -0.0009784222
      },
      {
       "_": -0.0030365982
      },
      {
       "machine": -0.0005073162
      },
      {
       "')": -0.001345061
      },
      {
       "\n": -0.0052761906
      },
      {
       " #": -0.007548838
      },
      {
       " 2": -0.0022460553
      },
      {
       ":": -0.0003708805
      },
      {
       " put": -0.2833
      },
      {
       " clothes": -0.18621612
      },
      {
       " in": -0.25080833
      },
      {
       " washing": -0.46813986
      },
      {
       " machine": -0.0049675885
      },
      {
       "\n": -0.009880877
      },
      {
       " put": -1.0455717
      },
      {
       "('": -0.0021627238
      },
      {
       "cl": -0.5481337
      },
      {
       "othes": -0.013722234
      },
      {
       "'": -0.020063078
      },
      {
       " in": -0.05437214
      },
      {
       " '": -0.017598286
      },
      {
       "hands": -0.044313584
      },
      {
       "')": -0.022987744
      },
      {
       "\n": -0.008123545
      },
      {
       " else": -0.0064552734
      },
      {
       ":": -0.002862994
      },
      {
       " grab": -0.4015446
      },
      {
       "('": -0.0029355017
      },
      {
       "cl": -0.0006582626
      },
      {
       "othes": -0.0018430187
      },
      {
       "')": -0.0036671855
      },
      {
       "\n": -0.007138319
      },
      {
       " put": -0.029743461
      },
      {
       "in": -0.05224711
      },
      {
       "('": -0.0016349931
      },
      {
       "cl": -0.23656115
      },
      {
       "othes": -0.0034188866
      },
      {
       "',": -0.339337
      },
      {
       " '": -0.10203723
      },
      {
       "washing": -0.0029617473
      },
      {
       "_": -0.0072989166
      },
      {
       "machine": -0.0003490606
      },
      {
       "')": -0.0028541472
      },
      {
       "\n": -0.011014663
      },
      {
       " #": -0.011789002
      },
      {
       " 3": -0.0034051307
      },
      {
       ":": -0.0006650631
      },
      {
       " close": -0.61179215
      },
      {
       " deter": -0.08260304
      },
      {
       "gent": -0.0014251627
      },
      {
       "\n": -0.64190644
      },
      {
       " find": -1.0509561
      },
      {
       "('": -0.0012040964
      },
      {
       "d": -0.0031570157
      },
      {
       "eter": -7.8752586e-05
      },
      {
       "gent": -0.00047338495
      },
      {
       "')": -0.002379046
      },
      {
       "\n": -0.0035724882
      },
      {
       " grab": -0.9784885
      },
      {
       "('": -0.0007831069
      },
      {
       "d": -0.00018450571
      },
      {
       "eter": -0.00024787875
      },
      {
       "gent": -7.97072e-05
      },
      {
       "')": -0.0015431152
      },
      {
       "\n": -0.002677408
      },
      {
       " pour": -0.28168097
      },
      {
       "('": -0.0016259793
      },
      {
       "d": -0.0020116086
      },
      {
       "eter": -0.00024740095
      },
      {
       "gent": -0.0002251634
      },
      {
       "'": -0.63073343
      },
      {
       " '": -0.003876891
      },
      {
       "washing": -0.0033136264
      },
      {
       "_": -0.0014044513
      },
      {
       "machine": -0.0005980866
      },
      {
       "')": -0.001897421
      },
      {
       "\n": -0.0053681135
      },
      {
       " #": -0.008502188
      },
      {
       " 4": -0.0052639646
      },
      {
       ":": -0.00077093637
      },
      {
       " close": -0.26662996
      },
      {
       " washing": -0.29117373
      },
      {
       " machine": -0.005749973
      },
      {
       "\n": -0.06985063
      },
      {
       " close": -0.020942392
      },
      {
       "('": -0.00070556306
      },
      {
       "washing": -0.00047797684
      },
      {
       "_": -0.0017741096
      },
      {
       "machine": -0.00042842168
      },
      {
       "')": -0.00236835
      },
      {
       "\n": -0.0042129285
      },
      {
       " #": -0.0026835627
      },
      {
       " 5": -0.0030227266
      },
      {
       ":": -0.0014234908
      },
      {
       " switch": -0.5590132
      },
      {
       " on": -0.029722035
      },
      {
       " washing": -0.22156866
      },
      {
       " machine": -0.004305591
      },
      {
       "\n": -0.010572113
      },
      {
       " switch": -0.07954685
      },
      {
       "on": -0.0013115794
      },
      {
       "('": -0.00060512277
      },
      {
       "washing": -0.0006478858
      },
      {
       "_": -0.0016722481
      },
      {
       "machine": -0.00027578016
      },
      {
       "')": -0.0017517791
      },
      {
       "\n": -0.005716401
      },
      {
       " #": -0.0029857806
      },
      {
       " 6": -0.0032443767
      },
      {
       ":": -0.0017524953
      },
      {
       " Done": -0.7580612
      }
     ],
     "text_offset": [
      3411,
      3413,
      3415,
      3416,
      3421,
      3423,
      3427,
      3428,
      3433,
      3435,
      3438,
      3440,
      3441,
      3443,
      3445,
      3446,
      3450,
      3453,
      3457,
      3458,
      3465,
      3467,
      3472,
      3473,
      3476,
      3478,
      3481,
      3483,
      3484,
      3489,
      3490,
      3495,
      3497,
      3500,
      3502,
      3503,
      3507,
      3509,
      3512,
      3514,
      3515,
      3517,
      3519,
      3520,
      3524,
      3529,
      3532,
      3536,
      3537,
      3541,
      3543,
      3546,
      3548,
      3549,
      3551,
      3553,
      3554,
      3560,
      3565,
      3566,
      3572,
      3574,
      3578,
      3580,
      3581,
      3583,
      3585,
      3586,
      3591,
      3592,
      3595,
      3600,
      3601,
      3603,
      3608,
      3611,
      3612,
      3614,
      3616,
      3617,
      3622,
      3630,
      3638,
      3639,
      3644,
      3646,
      3653,
      3654,
      3661,
      3663,
      3664,
      3666,
      3668,
      3669,
      3674,
      3682,
      3690,
      3691,
      3696,
      3698,
      3705,
      3706,
      3713,
      3715,
      3716,
      3718,
      3720,
      3721,
      3725,
      3733,
      3736,
      3744,
      3752,
      3753,
      3760,
      3762,
      3764,
      3769,
      3770,
      3773,
      3775,
      3780,
      3782,
      3783,
      3788,
      3789,
      3794,
      3796,
      3798,
      3803,
      3805,
      3806,
      3810,
      3812,
      3814,
      3816,
      3821,
      3822,
      3824,
      3831,
      3832,
      3839,
      3841,
      3842,
      3844,
      3846,
      3847,
      3852,
      3858,
      3862,
      3863,
      3868,
      3870,
      3871,
      3875,
      3879,
      3881,
      3882,
      3887,
      3889,
      3890,
      3894,
      3898,
      3900,
      3901,
      3906,
      3908,
      3909,
      3913,
      3917,
      3918,
      3920,
      3927,
      3928,
      3935,
      3937,
      3938,
      3940,
      3942,
      3943,
      3949,
      3957,
      3965,
      3966,
      3972,
      3974,
      3981,
      3982,
      3989,
      3991,
      3992,
      3994,
      3996,
      3997,
      4004,
      4007,
      4015,
      4023,
      4024,
      4031,
      4033,
      4035,
      4042,
      4043,
      4050,
      4052,
      4053,
      4055,
      4057,
      4058
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Sleep",
   "task_description": "Lie down in a bed at night and fall asleep",
   "program": [
    "[Walk] <bedroom> (1)",
    "[Walk] <bed> (1)",
    "[Find] <bed> (1)",
    "[Lie] <bed> (1)",
    "[Sleep]"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_july",
   "file_id": "split22_2",
   "goal_condition": [
    [
     [
      162,
      99,
      "ON",
      "character",
      "bed"
     ],
     [
      162,
      64,
      "INSIDE",
      "character",
      "bedroom"
     ]
    ],
    [
     [
      162,
      "character",
      "LYING"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1197,
   "completion_tokens": 210,
   "total_tokens": 1407
  }
 },
 "10": {
  "plan": [
   [
    " # 0: walk to bathroom\n walk('bathroom')\n # 1: find shampoo\n find('shampoo')\n # 2: grab shampoo\n grab('shampoo')\n # 3: pour shampoo on head\n pour('shampoo')\n # 4: massage head\n massage('head')\n # 5: rinse head\n rinse('head')\n # 6: put shampoo back\n putobjback('shampoo')\n # 7: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " bathroom",
      "\n",
      " walk",
      "('",
      "bath",
      "room",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " shampoo",
      "\n",
      " find",
      "('",
      "sh",
      "ampoo",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " grab",
      " shampoo",
      "\n",
      " grab",
      "('",
      "sh",
      "ampoo",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " pour",
      " shampoo",
      " on",
      " head",
      "\n",
      " pour",
      "('",
      "sh",
      "ampoo",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " massage",
      " head",
      "\n",
      " massage",
      "('",
      "head",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " rinse",
      " head",
      "\n",
      " rinse",
      "('",
      "head",
      "')",
      "\n",
      " #",
      " 6",
      ":",
      " put",
      " shampoo",
      " back",
      "\n",
      " put",
      "obj",
      "back",
      "('",
      "sh",
      "ampoo",
      "')",
      "\n",
      " #",
      " 7",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.017956987,
      -0.009449842,
      -0.001861831,
      -1.040397,
      -0.37616563,
      -0.137621,
      -0.018279638,
      -0.005379978,
      -0.004507706,
      -0.0028048344,
      -0.0001970245,
      -0.0019915404,
      -0.006343938,
      -0.0034357512,
      -0.0037051744,
      -0.0008937663,
      -0.10764871,
      -0.48389062,
      -0.079513356,
      -0.07381859,
      -0.0011044398,
      -0.0005150704,
      -0.000585442,
      -0.003483183,
      -0.0046234517,
      -0.010493747,
      -0.004635428,
      -0.0005621213,
      -0.26504186,
      -0.17535125,
      -0.04831536,
      -0.7008807,
      -0.0013891109,
      -0.00032598388,
      -0.0004015312,
      -0.00077380013,
      -0.0039203307,
      -0.41227394,
      -0.007930191,
      -0.0005181708,
      -0.6304156,
      -0.07494591,
      -0.6496293,
      -0.79089564,
      -0.014385111,
      -0.8160857,
      -0.0031895426,
      -0.009508511,
      -0.000608224,
      -0.077995166,
      -0.0073504946,
      -0.06825603,
      -0.006146009,
      -0.0006636326,
      -0.6934098,
      -1.6943812,
      -0.4283637,
      -0.29547718,
      -0.045695413,
      -0.010402316,
      -0.002668981,
      -0.0061442107,
      -0.008357745,
      -0.0040503703,
      -0.000663274,
      -0.24915932,
      -2.3414202,
      -0.100502074,
      -0.023738932,
      -0.0029902644,
      -0.0024926302,
      -0.0017973393,
      -0.011836712,
      -0.011401097,
      -0.0035311535,
      -0.0010429798,
      -1.0096018,
      -0.19926423,
      -0.052376177,
      -0.032225493,
      -0.09214707,
      -1.0889344,
      -0.0042043705,
      -0.0012108997,
      -0.0007421263,
      -4.4539687e-05,
      -0.0019991256,
      -0.19007461,
      -0.020865459,
      -0.008034856,
      -0.0030362394,
      -0.44661844
     ],
     "top_logprobs": [
      {
       " #": -0.017956987
      },
      {
       " 0": -0.009449842
      },
      {
       ":": -0.001861831
      },
      {
       " find": -0.68695295
      },
      {
       " to": -0.37616563
      },
      {
       " bathroom": -0.137621
      },
      {
       "\n": -0.018279638
      },
      {
       " walk": -0.005379978
      },
      {
       "('": -0.004507706
      },
      {
       "bath": -0.0028048344
      },
      {
       "room": -0.0001970245
      },
      {
       "')": -0.0019915404
      },
      {
       "\n": -0.006343938
      },
      {
       " #": -0.0034357512
      },
      {
       " 1": -0.0037051744
      },
      {
       ":": -0.0008937663
      },
      {
       " find": -0.10764871
      },
      {
       " shampoo": -0.48389062
      },
      {
       "\n": -0.079513356
      },
      {
       " find": -0.07381859
      },
      {
       "('": -0.0011044398
      },
      {
       "sh": -0.0005150704
      },
      {
       "ampoo": -0.000585442
      },
      {
       "')": -0.003483183
      },
      {
       "\n": -0.0046234517
      },
      {
       " #": -0.010493747
      },
      {
       " 2": -0.004635428
      },
      {
       ":": -0.0005621213
      },
      {
       " grab": -0.26504186
      },
      {
       " shampoo": -0.17535125
      },
      {
       "\n": -0.04831536
      },
      {
       " grab": -0.7008807
      },
      {
       "('": -0.0013891109
      },
      {
       "sh": -0.00032598388
      },
      {
       "ampoo": -0.0004015312
      },
      {
       "')": -0.00077380013
      },
      {
       "\n": -0.0039203307
      },
      {
       " #": -0.41227394
      },
      {
       " 3": -0.007930191
      },
      {
       ":": -0.0005181708
      },
      {
       " pour": -0.6304156
      },
      {
       " shampoo": -0.07494591
      },
      {
       " on": -0.6496293
      },
      {
       " head": -0.79089564
      },
      {
       "\n": -0.014385111
      },
      {
       " assert": -0.7584961
      },
      {
       "('": -0.0031895426
      },
      {
       "sh": -0.009508511
      },
      {
       "ampoo": -0.000608224
      },
      {
       "')": -0.077995166
      },
      {
       "\n": -0.0073504946
      },
      {
       " #": -0.06825603
      },
      {
       " 4": -0.006146009
      },
      {
       ":": -0.0006636326
      },
      {
       " massage": -0.6934098
      },
      {
       " shampoo": -0.754909
      },
      {
       "\n": -0.4283637
      },
      {
       " massage": -0.29547718
      },
      {
       "('": -0.045695413
      },
      {
       "head": -0.010402316
      },
      {
       "')": -0.002668981
      },
      {
       "\n": -0.0061442107
      },
      {
       " #": -0.008357745
      },
      {
       " 5": -0.0040503703
      },
      {
       ":": -0.000663274
      },
      {
       " rinse": -0.24915932
      },
      {
       " shampoo": -1.1983528
      },
      {
       "\n": -0.100502074
      },
      {
       " rinse": -0.023738932
      },
      {
       "('": -0.0029902644
      },
      {
       "head": -0.0024926302
      },
      {
       "')": -0.0017973393
      },
      {
       "\n": -0.011836712
      },
      {
       " #": -0.011401097
      },
      {
       " 6": -0.0035311535
      },
      {
       ":": -0.0010429798
      },
      {
       " put": -1.0096018
      },
      {
       " shampoo": -0.19926423
      },
      {
       " back": -0.052376177
      },
      {
       "\n": -0.032225493
      },
      {
       " put": -0.09214707
      },
      {
       "back": -0.44916025
      },
      {
       "back": -0.0042043705
      },
      {
       "('": -0.0012108997
      },
      {
       "sh": -0.0007421263
      },
      {
       "ampoo": -4.4539687e-05
      },
      {
       "')": -0.0019991256
      },
      {
       "\n": -0.19007461
      },
      {
       " #": -0.020865459
      },
      {
       " 7": -0.008034856
      },
      {
       ":": -0.0030362394
      },
      {
       " Done": -0.44661844
      }
     ],
     "text_offset": [
      3418,
      3420,
      3422,
      3423,
      3428,
      3431,
      3440,
      3441,
      3446,
      3448,
      3452,
      3456,
      3458,
      3459,
      3461,
      3463,
      3464,
      3469,
      3477,
      3478,
      3483,
      3485,
      3487,
      3492,
      3494,
      3495,
      3497,
      3499,
      3500,
      3505,
      3513,
      3514,
      3519,
      3521,
      3523,
      3528,
      3530,
      3531,
      3533,
      3535,
      3536,
      3541,
      3549,
      3552,
      3557,
      3558,
      3563,
      3565,
      3567,
      3572,
      3574,
      3575,
      3577,
      3579,
      3580,
      3588,
      3593,
      3594,
      3602,
      3604,
      3608,
      3610,
      3611,
      3613,
      3615,
      3616,
      3622,
      3627,
      3628,
      3634,
      3636,
      3640,
      3642,
      3643,
      3645,
      3647,
      3648,
      3652,
      3660,
      3665,
      3666,
      3670,
      3673,
      3677,
      3679,
      3681,
      3686,
      3688,
      3689,
      3691,
      3693,
      3694
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Shampoo hair",
   "task_description": "I shampoo my hair, rinse it and hop out",
   "program": [
    "[Walk] <bathroom> (1)",
    "[Walk] <shampoo> (1)",
    "[Find] <shampoo> (1)",
    "[Grab] <shampoo> (1)",
    "[Find] <faucet> (1)",
    "[SwitchOn] <faucet> (1)",
    "[Walk] <sink> (1)",
    "[Find] <hands_both> (1)",
    "[Pour] <shampoo> (1) <hands_both> (1)",
    "[PutObjBack] <shampoo> (1)",
    "[Find] <hair> (1)",
    "[Wash] <hair> (1)",
    "[SwitchOff] <faucet> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_july",
   "file_id": "split2_7",
   "goal_condition": [
    [
     [
      162,
      1,
      "INSIDE",
      "character",
      "bathroom"
     ],
     [
      1000,
      1001,
      "INSIDE",
      "shampoo",
      "hands_both"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1199,
   "completion_tokens": 92,
   "total_tokens": 1291
  }
 },
 "11": {
  "plan": [
   [
    " # 0: walk to sink\n walk('sink')\n # 1: open faucet\n assert('close' to 'faucet')\n else: find('faucet')\n open('faucet')\n # 2: get soap\n find('soap')\n # 3: put soap on hands\n grab('soap')\n puton('soap', 'hands')\n # 4: rub and wash\n wipe('hands')\n wash('hands')\n # 5: turn off faucet\n switchoff('faucet')\n # 6: dry hands\n grab('towel')\n wipe('hands')\n drop('towel')\n # 7: done\n",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " sink",
      "\n",
      " walk",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " open",
      " f",
      "auc",
      "et",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " open",
      "('",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " get",
      " soap",
      "\n",
      " find",
      "('",
      "so",
      "ap",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " put",
      " soap",
      " on",
      " hands",
      "\n",
      " grab",
      "('",
      "so",
      "ap",
      "')",
      "\n",
      " put",
      "on",
      "('",
      "so",
      "ap",
      "',",
      " '",
      "hands",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " rub",
      " and",
      " wash",
      "\n",
      " wipe",
      "('",
      "hands",
      "')",
      "\n",
      " wash",
      "('",
      "hands",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " turn",
      " off",
      " f",
      "auc",
      "et",
      "\n",
      " switch",
      "off",
      "('",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " #",
      " 6",
      ":",
      " dry",
      " hands",
      "\n",
      " grab",
      "('",
      "t",
      "ow",
      "el",
      "')",
      "\n",
      " wipe",
      "('",
      "hands",
      "')",
      "\n",
      " drop",
      "('",
      "t",
      "ow",
      "el",
      "')",
      "\n",
      " #",
      " 7",
      ":",
      " done",
      "\n"
     ],
     "token_logprobs": [
      -0.023978097,
      -0.012967287,
      -0.0024043773,
      -1.0321249,
      -0.19905342,
      -2.1155336,
      -0.02871665,
      -0.015121335,
      -0.0045340513,
      -0.008104498,
      -0.00033123003,
      -0.0018701307,
      -0.008384913,
      -0.03445767,
      -0.0041895267,
      -0.0008487251,
      -3.1684744,
      -1.3004296,
      -0.0019036912,
      -0.0034510635,
      -0.048166428,
      -1.2159166,
      -0.0023730106,
      -0.01688751,
      -0.0045848885,
      -0.0007446306,
      -0.0027707033,
      -0.107444294,
      -0.000667926,
      -0.00084276,
      -0.011605674,
      -0.007587756,
      -0.0031767478,
      -0.0018045631,
      -0.0637679,
      -0.002023613,
      -0.0020188936,
      -0.0032349892,
      -0.0002570597,
      -0.0040884945,
      -0.009793718,
      -0.07818954,
      -0.0057460167,
      -0.0007550112,
      -0.00013431041,
      -0.0002917607,
      -0.0022047763,
      -0.006755152,
      -0.036450103,
      -0.007398529,
      -0.0008413285,
      -3.163804,
      -0.63151586,
      -0.06881756,
      -0.32974282,
      -0.0015804895,
      -0.0006982875,
      -0.00010021203,
      -0.002404736,
      -0.0051957797,
      -1.4479033,
      -0.0050174296,
      -0.00070639845,
      -2.59207,
      -0.09921167,
      -0.29810435,
      -0.20597255,
      -0.015066151,
      -0.9590234,
      -0.0015007324,
      -0.00035072953,
      -5.8845668e-05,
      -0.0019792365,
      -0.0053327563,
      -0.74930656,
      -0.040214125,
      -0.0015033598,
      -0.105449796,
      -1.6045058e-05,
      -1.7679331,
      -0.0136225335,
      -0.029027387,
      -0.0026928245,
      -0.009799076,
      -0.026560025,
      -0.0067572524,
      -0.0009980513,
      -1.2922872,
      -3.9357035,
      -0.45715755,
      -2.0774662,
      -3.620555,
      -0.0037370024,
      -0.16574475,
      -0.11289245,
      -0.010614224,
      -0.38623923,
      -0.0010374935,
      -0.0067144083,
      -0.0042804508,
      -0.010153485,
      -0.0729494,
      -0.005190567,
      -0.0013642197,
      -1.6199335,
      -0.06510525,
      -0.23489955,
      -0.00136613,
      -0.0022999432,
      -0.054656584,
      -1.163272,
      -0.0035323505,
      -0.0011474048,
      -0.0011297984,
      -0.0006412045,
      -0.00029641076,
      -0.0025696538,
      -0.12780856,
      -0.03968245,
      -0.0035582506,
      -0.0021009606,
      -1.328731,
      -0.117991626,
      -0.04612438,
      -0.4670938,
      -0.0013895868,
      -0.13555749,
      -0.0016743987,
      -0.0018498267,
      -0.03600221,
      -0.008051378,
      -0.046910904,
      -0.0017186992,
      -0.057939682,
      -0.019428154,
      -0.21176504,
      -1.0410961,
      -0.0018500651,
      -0.0015725484,
      -0.0001101101,
      -0.0005867533,
      -0.0032051506,
      -0.54958004,
      -0.060086466,
      -0.015798109,
      -0.0024166277,
      -1.2686605,
      -1.0840822
     ],
     "top_logprobs": [
      {
       " #": -0.023978097
      },
      {
       " 0": -0.012967287
      },
      {
       ":": -0.0024043773
      },
      {
       " find": -0.78118265
      },
      {
       " to": -0.19905342
      },
      {
       " bathroom": -0.5328624
      },
      {
       "\n": -0.02871665
      },
      {
       " walk": -0.015121335
      },
      {
       "('": -0.0045340513
      },
      {
       "s": -0.008104498
      },
      {
       "ink": -0.00033123003
      },
      {
       "')": -0.0018701307
      },
      {
       "\n": -0.008384913
      },
      {
       " #": -0.03445767
      },
      {
       " 1": -0.0041895267
      },
      {
       ":": -0.0008487251
      },
      {
       " find": -0.69639236
      },
      {
       " f": -1.3004296
      },
      {
       "auc": -0.0019036912
      },
      {
       "et": -0.0034510635
      },
      {
       "\n": -0.048166428
      },
      {
       " open": -0.6760265
      },
      {
       "('": -0.0023730106
      },
      {
       "close": -0.01688751
      },
      {
       "'": -0.0045848885
      },
      {
       " to": -0.0007446306
      },
      {
       " '": -0.0027707033
      },
      {
       "f": -0.107444294
      },
      {
       "auc": -0.000667926
      },
      {
       "et": -0.00084276
      },
      {
       "')": -0.011605674
      },
      {
       "\n": -0.007587756
      },
      {
       " else": -0.0031767478
      },
      {
       ":": -0.0018045631
      },
      {
       " find": -0.0637679
      },
      {
       "('": -0.002023613
      },
      {
       "f": -0.0020188936
      },
      {
       "auc": -0.0032349892
      },
      {
       "et": -0.0002570597
      },
      {
       "')": -0.0040884945
      },
      {
       "\n": -0.009793718
      },
      {
       " open": -0.07818954
      },
      {
       "('": -0.0057460167
      },
      {
       "f": -0.0007550112
      },
      {
       "auc": -0.00013431041
      },
      {
       "et": -0.0002917607
      },
      {
       "')": -0.0022047763
      },
      {
       "\n": -0.006755152
      },
      {
       " #": -0.036450103
      },
      {
       " 2": -0.007398529
      },
      {
       ":": -0.0008413285
      },
      {
       " pour": -1.666075
      },
      {
       " soap": -0.63151586
      },
      {
       "\n": -0.06881756
      },
      {
       " find": -0.32974282
      },
      {
       "('": -0.0015804895
      },
      {
       "so": -0.0006982875
      },
      {
       "ap": -0.00010021203
      },
      {
       "')": -0.002404736
      },
      {
       "\n": -0.0051957797
      },
      {
       " grab": -0.36596358
      },
      {
       " 3": -0.0050174296
      },
      {
       ":": -0.00070639845
      },
      {
       " grab": -1.0019667
      },
      {
       " soap": -0.09921167
      },
      {
       " on": -0.29810435
      },
      {
       " hands": -0.20597255
      },
      {
       "\n": -0.015066151
      },
      {
       " assert": -0.9152926
      },
      {
       "('": -0.0015007324
      },
      {
       "so": -0.00035072953
      },
      {
       "ap": -5.8845668e-05
      },
      {
       "')": -0.0019792365
      },
      {
       "\n": -0.0053327563
      },
      {
       " put": -0.74930656
      },
      {
       "on": -0.040214125
      },
      {
       "('": -0.0015033598
      },
      {
       "so": -0.105449796
      },
      {
       "ap": -1.6045058e-05
      },
      {
       "')": -0.25170544
      },
      {
       " '": -0.0136225335
      },
      {
       "hands": -0.029027387
      },
      {
       "')": -0.0026928245
      },
      {
       "\n": -0.009799076
      },
      {
       " #": -0.026560025
      },
      {
       " 4": -0.0067572524
      },
      {
       ":": -0.0009980513
      },
      {
       " wash": -0.8010553
      },
      {
       " hands": -0.16688211
      },
      {
       " wash": -0.45715755
      },
      {
       " hands": -0.22743155
      },
      {
       " rub": -0.6180957
      },
      {
       "('": -0.0037370024
      },
      {
       "hands": -0.16574475
      },
      {
       "')": -0.11289245
      },
      {
       "\n": -0.010614224
      },
      {
       " wash": -0.38623923
      },
      {
       "('": -0.0010374935
      },
      {
       "hands": -0.0067144083
      },
      {
       "')": -0.0042804508
      },
      {
       "\n": -0.010153485
      },
      {
       " #": -0.0729494
      },
      {
       " 5": -0.005190567
      },
      {
       ":": -0.0013642197
      },
      {
       " rinse": -0.68814313
      },
      {
       " off": -0.06510525
      },
      {
       " f": -0.23489955
      },
      {
       "auc": -0.00136613
      },
      {
       "et": -0.0022999432
      },
      {
       "\n": -0.054656584
      },
      {
       " switch": -1.163272
      },
      {
       "off": -0.0035323505
      },
      {
       "('": -0.0011474048
      },
      {
       "f": -0.0011297984
      },
      {
       "auc": -0.0006412045
      },
      {
       "et": -0.00029641076
      },
      {
       "')": -0.0025696538
      },
      {
       "\n": -0.12780856
      },
      {
       " #": -0.03968245
      },
      {
       " 6": -0.0035582506
      },
      {
       ":": -0.0021009606
      },
      {
       " Done": -1.2644696
      },
      {
       " hands": -0.117991626
      },
      {
       "\n": -0.04612438
      },
      {
       " grab": -0.4670938
      },
      {
       "('": -0.0013895868
      },
      {
       "t": -0.13555749
      },
      {
       "ow": -0.0016743987
      },
      {
       "el": -0.0018498267
      },
      {
       "')": -0.03600221
      },
      {
       "\n": -0.008051378
      },
      {
       " wipe": -0.046910904
      },
      {
       "('": -0.0017186992
      },
      {
       "hands": -0.057939682
      },
      {
       "')": -0.019428154
      },
      {
       "\n": -0.21176504
      },
      {
       " #": -0.74787647
      },
      {
       "('": -0.0018500651
      },
      {
       "t": -0.0015725484
      },
      {
       "ow": -0.0001101101
      },
      {
       "el": -0.0005867533
      },
      {
       "')": -0.0032051506
      },
      {
       "\n": -0.54958004
      },
      {
       " #": -0.060086466
      },
      {
       " 7": -0.015798109
      },
      {
       ":": -0.0024166277
      },
      {
       " Done": -0.37649995
      },
      {
       "<|endoftext|>": -0.48391974
      }
     ],
     "text_offset": [
      3418,
      3420,
      3422,
      3423,
      3428,
      3431,
      3436,
      3437,
      3442,
      3444,
      3445,
      3448,
      3450,
      3451,
      3453,
      3455,
      3456,
      3461,
      3463,
      3466,
      3468,
      3469,
      3476,
      3478,
      3483,
      3484,
      3487,
      3489,
      3490,
      3493,
      3495,
      3497,
      3498,
      3503,
      3504,
      3509,
      3511,
      3512,
      3515,
      3517,
      3519,
      3520,
      3525,
      3527,
      3528,
      3531,
      3533,
      3535,
      3536,
      3538,
      3540,
      3541,
      3545,
      3550,
      3551,
      3556,
      3558,
      3560,
      3562,
      3564,
      3565,
      3567,
      3569,
      3570,
      3574,
      3579,
      3582,
      3588,
      3589,
      3594,
      3596,
      3598,
      3600,
      3602,
      3603,
      3607,
      3609,
      3611,
      3613,
      3615,
      3617,
      3619,
      3624,
      3626,
      3627,
      3629,
      3631,
      3632,
      3636,
      3640,
      3645,
      3646,
      3651,
      3653,
      3658,
      3660,
      3661,
      3666,
      3668,
      3673,
      3675,
      3676,
      3678,
      3680,
      3681,
      3686,
      3690,
      3692,
      3695,
      3697,
      3698,
      3705,
      3708,
      3710,
      3711,
      3714,
      3716,
      3718,
      3719,
      3721,
      3723,
      3724,
      3728,
      3734,
      3735,
      3740,
      3742,
      3743,
      3745,
      3747,
      3749,
      3750,
      3755,
      3757,
      3762,
      3764,
      3765,
      3770,
      3772,
      3773,
      3775,
      3777,
      3779,
      3780,
      3782,
      3784,
      3785,
      3790
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Hand washing",
   "task_description": "Turn on the faucet. Soap up your hands. Then rinse under the running water of the faucet. Turn off faucet and dry hands.",
   "program": [
    "[Walk] <bathroom> (1)",
    "[Walk] <sink> (1)",
    "[Find] <faucet> (1)",
    "[SwitchOn] <faucet> (1)",
    "[Find] <soap> (1)",
    "[Grab] <soap> (1)",
    "[Find] <hands_both> (1)",
    "[Scrub] <hands_both> (1)",
    "[PutObjBack] <soap> (1)",
    "[Wash] <hands_both> (1)",
    "[SwitchOff] <faucet> (1)",
    "[Find] <towel> (1)",
    "[Grab] <towel> (1)",
    "[Wipe] <hands_both> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_july",
   "file_id": "split4_7",
   "goal_condition": [
    [
     [
      162,
      1002,
      "HOLDS_RH",
      "character",
      "towel"
     ],
     [
      162,
      1,
      "INSIDE",
      "character",
      "bathroom"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1199,
   "completion_tokens": 148,
   "total_tokens": 1347
  }
 },
 "12": {
  "plan": [
   [
    " # 0: find cup\n find('cup')\n # 1: grab cup\n assert('close' to 'cup')\n else: find('cup')\n grab('cup')\n # 2: fill cup with liquid\n fill('cup')\n # 3: drink liquid\n drink('liquid')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " cup",
      "\n",
      " find",
      "('",
      "cup",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " grab",
      " cup",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "cup",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "cup",
      "')",
      "\n",
      " grab",
      "('",
      "cup",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " fill",
      " cup",
      " with",
      " liquid",
      "\n",
      " fill",
      "('",
      "cup",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " drink",
      " liquid",
      "\n",
      " drink",
      "('",
      "liquid",
      "')"
     ],
     "token_logprobs": [
      -0.093421906,
      -0.03832766,
      -0.004618542,
      -0.19239707,
      -0.65426815,
      -0.042640336,
      -0.020529743,
      -0.0038528955,
      -0.00056749035,
      -0.0030905874,
      -0.010623619,
      -0.0068395287,
      -0.004518785,
      -0.0009197181,
      -0.124683365,
      -0.048302036,
      -0.017424438,
      -0.6124628,
      -0.0020507278,
      -0.0040358896,
      -0.0024141169,
      -0.0004281842,
      -0.004721781,
      -0.00037529404,
      -0.0063564745,
      -0.007320112,
      -0.0019300287,
      -0.0016978639,
      -0.003870249,
      -0.0014150739,
      -0.00022409332,
      -0.0013910201,
      -0.006643723,
      -0.004323072,
      -0.0011427499,
      -0.00016817037,
      -0.0023262282,
      -0.0047377106,
      -0.89112103,
      -0.011217716,
      -0.0015579807,
      -0.74711245,
      -0.24755701,
      -0.45870546,
      -1.0421792,
      -0.027793707,
      -1.7560879,
      -0.06544336,
      -0.021609461,
      -0.20206688,
      -0.010645366,
      -0.06891584,
      -0.0045717163,
      -0.0009472215,
      -0.20561492,
      -1.9397821,
      -0.28995052,
      -0.57311225,
      -0.008311767,
      -1.7880675,
      -0.008808752
     ],
     "top_logprobs": [
      {
       " #": -0.093421906
      },
      {
       " 0": -0.03832766
      },
      {
       ":": -0.004618542
      },
      {
       " find": -0.19239707
      },
      {
       " cup": -0.65426815
      },
      {
       "\n": -0.042640336
      },
      {
       " find": -0.020529743
      },
      {
       "('": -0.0038528955
      },
      {
       "cup": -0.00056749035
      },
      {
       "')": -0.0030905874
      },
      {
       "\n": -0.010623619
      },
      {
       " #": -0.0068395287
      },
      {
       " 1": -0.004518785
      },
      {
       ":": -0.0009197181
      },
      {
       " grab": -0.124683365
      },
      {
       " cup": -0.048302036
      },
      {
       "\n": -0.017424438
      },
      {
       " assert": -0.6124628
      },
      {
       "('": -0.0020507278
      },
      {
       "close": -0.0040358896
      },
      {
       "'": -0.0024141169
      },
      {
       " to": -0.0004281842
      },
      {
       " '": -0.004721781
      },
      {
       "cup": -0.00037529404
      },
      {
       "')": -0.0063564745
      },
      {
       "\n": -0.007320112
      },
      {
       " else": -0.0019300287
      },
      {
       ":": -0.0016978639
      },
      {
       " find": -0.003870249
      },
      {
       "('": -0.0014150739
      },
      {
       "cup": -0.00022409332
      },
      {
       "')": -0.0013910201
      },
      {
       "\n": -0.006643723
      },
      {
       " grab": -0.004323072
      },
      {
       "('": -0.0011427499
      },
      {
       "cup": -0.00016817037
      },
      {
       "')": -0.0023262282
      },
      {
       "\n": -0.0047377106
      },
      {
       " assert": -0.6064521
      },
      {
       " 2": -0.011217716
      },
      {
       ":": -0.0015579807
      },
      {
       " fill": -0.74711245
      },
      {
       " cup": -0.24755701
      },
      {
       " with": -0.45870546
      },
      {
       " water": -0.7557507
      },
      {
       "\n": -0.027793707
      },
      {
       " assert": -0.7003523
      },
      {
       "('": -0.06544336
      },
      {
       "cup": -0.021609461
      },
      {
       "')": -0.20206688
      },
      {
       "\n": -0.010645366
      },
      {
       " #": -0.06891584
      },
      {
       " 3": -0.0045717163
      },
      {
       ":": -0.0009472215
      },
      {
       " drink": -0.20561492
      },
      {
       " from": -1.1391717
      },
      {
       "\n": -0.28995052
      },
      {
       " drink": -0.57311225
      },
      {
       "('": -0.008311767
      },
      {
       "cup": -0.18485512
      },
      {
       "')": -0.008808752
      }
     ],
     "text_offset": [
      3411,
      3413,
      3415,
      3416,
      3421,
      3425,
      3426,
      3431,
      3433,
      3436,
      3438,
      3439,
      3441,
      3443,
      3444,
      3449,
      3453,
      3454,
      3461,
      3463,
      3468,
      3469,
      3472,
      3474,
      3477,
      3479,
      3480,
      3485,
      3486,
      3491,
      3493,
      3496,
      3498,
      3499,
      3504,
      3506,
      3509,
      3511,
      3512,
      3514,
      3516,
      3517,
      3522,
      3526,
      3531,
      3538,
      3539,
      3544,
      3546,
      3549,
      3551,
      3552,
      3554,
      3556,
      3557,
      3563,
      3570,
      3571,
      3577,
      3579,
      3585
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Drink",
   "task_description": "I grab a cup, and I pour water in the cup. I grab the cup and drink from the cup.",
   "program": [
    "[Find] <water_glass> (1)",
    "[Grab] <water_glass> (1)",
    "[Walk] <water> (1)",
    "[Find] <water> (1)",
    "[Grab] <water> (1)",
    "[Pour] <water> (1) <water_glass> (1)",
    "[Grab] <water_glass> (1)",
    "[Drink] <water_glass> (1)"
   ],
   "batch": "results_intentions_march-13-18",
   "file_id": "file563_2",
   "goal_condition": [
    [
     [
      162,
      1000,
      "HOLDS_RH",
      "character",
      "water_glass"
     ],
     [
      162,
      1000,
      "HOLDS_LH",
      "character",
      "water_glass"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1197,
   "completion_tokens": 61,
   "total_tokens": 1258
  }
 },
 "13": {
  "plan": [
   [
    " # 0: find the phone\n find('phone')\n # 1: grab the phone\n grab('phone')\n assert('phone' in 'hands')\n else: grab('phone')\n turnto('phone')\n assert('phone' in 'hands')\n else: grab('phone')\n pointat('phone')\n # 2: Done\ndef make_bed():\n # 0: walk to bedroom\n walk('bedroom')\n # 1: find bed\n find('bed')\n # 2: pull the bed cover\n pull('bed_cover')\n turnto('bed_cover')\n lookat('bed_cover')\n # 3: put the pillow on the bed\n puton('pillow')\n assert('pillow' in 'hands')\n else: grab('pillow')\n turnto('pillow')\n lookat('pillow')\n # 4: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " the",
      " phone",
      "\n",
      " find",
      "('",
      "phone",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " grab",
      " the",
      " phone",
      "\n",
      " grab",
      "('",
      "phone",
      "')",
      "\n",
      " assert",
      "('",
      "phone",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "phone",
      "')",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "phone",
      "')",
      "\n",
      " assert",
      "('",
      "phone",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "phone",
      "')",
      "\n",
      " point",
      "at",
      "('",
      "phone",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " Done",
      "\n",
      "def",
      " make",
      "_",
      "bed",
      "():",
      "\n",
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " bedroom",
      "\n",
      " walk",
      "('",
      "bedroom",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " bed",
      "\n",
      " find",
      "('",
      "bed",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " pull",
      " the",
      " bed",
      " cover",
      "\n",
      " pull",
      "('",
      "bed",
      "_",
      "cover",
      "')",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "bed",
      "_",
      "cover",
      "')",
      "\n",
      " look",
      "at",
      "('",
      "bed",
      "_",
      "cover",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " put",
      " the",
      " pillow",
      " on",
      " the",
      " bed",
      "\n",
      " put",
      "on",
      "('",
      "pill",
      "ow",
      "')",
      "\n",
      " assert",
      "('",
      "pill",
      "ow",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "pill",
      "ow",
      "')",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "pill",
      "ow",
      "')",
      "\n",
      " look",
      "at",
      "('",
      "pill",
      "ow",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.020022517,
      -0.009393585,
      -0.0019426292,
      -0.6744225,
      -1.7259383,
      -0.03111474,
      -0.04000224,
      -0.040003173,
      -0.0024285174,
      -0.0017415074,
      -0.0025756303,
      -0.009371144,
      -0.005921319,
      -0.002506312,
      -0.0008772995,
      -0.20914167,
      -0.10363498,
      -0.0012181188,
      -0.019218141,
      -0.6797019,
      -0.0011154774,
      -0.00018116974,
      -0.0009198354,
      -0.00988509,
      -1.1139909,
      -0.0020507278,
      -0.29320538,
      -0.0026670678,
      -0.03250087,
      -0.0049341624,
      -0.013432947,
      -0.024961313,
      -0.005923836,
      -0.011881046,
      -0.0049964003,
      -0.00795182,
      -0.0015992925,
      -0.0002708907,
      -0.002280347,
      -0.05543775,
      -1.206379,
      -5.7293146e-05,
      -0.0005086275,
      -0.00053456903,
      -0.0004281842,
      -0.0013134886,
      -0.00784891,
      -0.77329654,
      -0.00043963388,
      -0.015139186,
      -0.001172048,
      -0.0038562464,
      -0.0010997832,
      -0.0009621376,
      -0.0020368125,
      -0.0017320148,
      -0.002103709,
      -0.0026227233,
      -0.001360161,
      -0.00066255784,
      -0.00035692935,
      -0.0011111812,
      -0.026081057,
      -0.12143419,
      -0.0008702596,
      -0.0004333111,
      -0.00022409332,
      -0.0019411958,
      -0.110069245,
      -0.051935155,
      -0.008043205,
      -0.001130754,
      -1.2753564,
      -0.6064253,
      -0.6047199,
      -1.5841193,
      -0.0006619627,
      -3.4428656,
      -0.023932494,
      -0.012836807,
      -0.004794786,
      -0.0032290092,
      -0.0013238739,
      -1.2857386,
      -0.24588841,
      -0.3011652,
      -0.015008725,
      -0.0030874766,
      -0.0023288573,
      -0.0023527553,
      -0.0015886051,
      -0.006029731,
      -0.0024417224,
      -0.0028219882,
      -0.0005592584,
      -0.04648578,
      -0.07971254,
      -0.022534933,
      -0.60295486,
      -0.00063207984,
      -0.0002202777,
      -0.0008499191,
      -0.0047671176,
      -0.023846604,
      -0.0039950134,
      -0.0008805229,
      -0.772355,
      -1.2034432,
      -1.1061778,
      -2.461785,
      -0.059174594,
      -1.1824291,
      -0.0023414635,
      -0.004471543,
      -0.27257502,
      -0.0042554284,
      -0.0032839058,
      -0.00512083,
      -2.6684017,
      -6.051553e-05,
      -0.00078644656,
      -0.00052878505,
      -0.0009777051,
      -0.24294655,
      -0.0007624678,
      -0.0011463299,
      -0.0035572941,
      -0.47624782,
      -0.00037911057,
      -0.0003525167,
      -0.0002939055,
      -0.00083065045,
      -0.00047541337,
      -0.002416149,
      -0.00506014,
      -0.06726852,
      -0.010908121,
      -0.0010093893,
      -1.6812942,
      -0.66868055,
      -0.9599186,
      -1.0625521,
      -0.2791478,
      -0.0040391185,
      -0.013173455,
      -1.6928759,
      -0.023108205,
      -0.0013725174,
      -0.006401523,
      -0.0014727954,
      -0.11989157,
      -0.0070061986,
      -2.3765874,
      -0.0014730347,
      -0.42376012,
      -0.002288533,
      -0.0028318504,
      -0.07827829,
      -0.0039116577,
      -0.9987806,
      -0.005925336,
      -0.0029728066,
      -0.0022367972,
      -0.0021905615,
      -0.25858682,
      -0.0011232363,
      -0.0010847488,
      -0.00025729905,
      -0.002014834,
      -0.0055318414,
      -0.48643163,
      -4.29881e-05,
      -0.00042377162,
      -0.00034226198,
      -0.27640218,
      -0.00011511593,
      -0.0007455852,
      -0.002593321,
      -0.53542095,
      -0.0002534825,
      -0.00045823885,
      -0.002154241,
      -0.00016018527,
      -0.001592784,
      -0.010667055,
      -0.061330378,
      -0.010211773,
      -0.001882074,
      -1.0945444
     ],
     "top_logprobs": [
      {
       " #": -0.020022517
      },
      {
       " 0": -0.009393585
      },
      {
       ":": -0.0019426292
      },
      {
       " find": -0.6744225
      },
      {
       " phone": -0.26102397
      },
      {
       " phone": -0.03111474
      },
      {
       "\n": -0.04000224
      },
      {
       " find": -0.040003173
      },
      {
       "('": -0.0024285174
      },
      {
       "phone": -0.0017415074
      },
      {
       "')": -0.0025756303
      },
      {
       "\n": -0.009371144
      },
      {
       " #": -0.005921319
      },
      {
       " 1": -0.002506312
      },
      {
       ":": -0.0008772995
      },
      {
       " grab": -0.20914167
      },
      {
       " the": -0.10363498
      },
      {
       " phone": -0.0012181188
      },
      {
       "\n": -0.019218141
      },
      {
       " grab": -0.6797019
      },
      {
       "('": -0.0011154774
      },
      {
       "phone": -0.00018116974
      },
      {
       "')": -0.0009198354
      },
      {
       "\n": -0.00988509
      },
      {
       " #": -0.43652347
      },
      {
       "('": -0.0020507278
      },
      {
       "phone": -0.29320538
      },
      {
       "'": -0.0026670678
      },
      {
       " in": -0.03250087
      },
      {
       " '": -0.0049341624
      },
      {
       "hands": -0.013432947
      },
      {
       "')": -0.024961313
      },
      {
       "\n": -0.005923836
      },
      {
       " else": -0.011881046
      },
      {
       ":": -0.0049964003
      },
      {
       " grab": -0.00795182
      },
      {
       "('": -0.0015992925
      },
      {
       "phone": -0.0002708907
      },
      {
       "')": -0.002280347
      },
      {
       "\n": -0.05543775
      },
      {
       " #": -0.46794805
      },
      {
       "nt": -5.7293146e-05
      },
      {
       "o": -0.0005086275
      },
      {
       "('": -0.00053456903
      },
      {
       "phone": -0.0004281842
      },
      {
       "')": -0.0013134886
      },
      {
       "\n": -0.00784891
      },
      {
       " assert": -0.77329654
      },
      {
       "('": -0.00043963388
      },
      {
       "phone": -0.015139186
      },
      {
       "'": -0.001172048
      },
      {
       " in": -0.0038562464
      },
      {
       " '": -0.0010997832
      },
      {
       "hands": -0.0009621376
      },
      {
       "')": -0.0020368125
      },
      {
       "\n": -0.0017320148
      },
      {
       " else": -0.002103709
      },
      {
       ":": -0.0026227233
      },
      {
       " grab": -0.001360161
      },
      {
       "('": -0.00066255784
      },
      {
       "phone": -0.00035692935
      },
      {
       "')": -0.0011111812
      },
      {
       "\n": -0.026081057
      },
      {
       " point": -0.12143419
      },
      {
       "at": -0.0008702596
      },
      {
       "('": -0.0004333111
      },
      {
       "phone": -0.00022409332
      },
      {
       "')": -0.0019411958
      },
      {
       "\n": -0.110069245
      },
      {
       " #": -0.051935155
      },
      {
       " 2": -0.008043205
      },
      {
       ":": -0.001130754
      },
      {
       " Done": -1.2753564
      },
      {
       "\n": -0.6064253
      },
      {
       "def": -0.6047199
      },
      {
       " make": -1.5841193
      },
      {
       "_": -0.0006619627
      },
      {
       "co": -0.2919137
      },
      {
       "():": -0.023932494
      },
      {
       "\n": -0.012836807
      },
      {
       " #": -0.004794786
      },
      {
       " 0": -0.0032290092
      },
      {
       ":": -0.0013238739
      },
      {
       " find": -0.47192258
      },
      {
       " to": -0.24588841
      },
      {
       " bedroom": -0.3011652
      },
      {
       "\n": -0.015008725
      },
      {
       " walk": -0.0030874766
      },
      {
       "('": -0.0023288573
      },
      {
       "bedroom": -0.0023527553
      },
      {
       "')": -0.0015886051
      },
      {
       "\n": -0.006029731
      },
      {
       " #": -0.0024417224
      },
      {
       " 1": -0.0028219882
      },
      {
       ":": -0.0005592584
      },
      {
       " find": -0.04648578
      },
      {
       " bed": -0.07971254
      },
      {
       "\n": -0.022534933
      },
      {
       " find": -0.60295486
      },
      {
       "('": -0.00063207984
      },
      {
       "bed": -0.0002202777
      },
      {
       "')": -0.0008499191
      },
      {
       "\n": -0.0047671176
      },
      {
       " #": -0.023846604
      },
      {
       " 2": -0.0039950134
      },
      {
       ":": -0.0008805229
      },
      {
       " pull": -0.772355
      },
      {
       " the": -1.2034432
      },
      {
       " sheets": -1.0405298
      },
      {
       "sheet": -1.4059359
      },
      {
       "\n": -0.059174594
      },
      {
       " assert": -0.4466283
      },
      {
       "('": -0.0023414635
      },
      {
       "bed": -0.004471543
      },
      {
       "_": -0.27257502
      },
      {
       "cover": -0.0042554284
      },
      {
       "')": -0.0032839058
      },
      {
       "\n": -0.00512083
      },
      {
       " #": -0.3262387
      },
      {
       "nt": -6.051553e-05
      },
      {
       "o": -0.00078644656
      },
      {
       "('": -0.00052878505
      },
      {
       "bed": -0.0009777051
      },
      {
       "_": -0.24294655
      },
      {
       "cover": -0.0007624678
      },
      {
       "')": -0.0011463299
      },
      {
       "\n": -0.0035572941
      },
      {
       " look": -0.47624782
      },
      {
       "at": -0.00037911057
      },
      {
       "('": -0.0003525167
      },
      {
       "bed": -0.0002939055
      },
      {
       "_": -0.00083065045
      },
      {
       "cover": -0.00047541337
      },
      {
       "')": -0.002416149
      },
      {
       "\n": -0.00506014
      },
      {
       " #": -0.06726852
      },
      {
       " 3": -0.010908121
      },
      {
       ":": -0.0010093893
      },
      {
       " pull": -1.4725435
      },
      {
       " the": -0.66868055
      },
      {
       " bed": -0.9514689
      },
      {
       " on": -1.0625521
      },
      {
       " the": -0.2791478
      },
      {
       " bed": -0.0040391185
      },
      {
       "\n": -0.013173455
      },
      {
       " find": -0.55338013
      },
      {
       "on": -0.023108205
      },
      {
       "('": -0.0013725174
      },
      {
       "pill": -0.006401523
      },
      {
       "ow": -0.0014727954
      },
      {
       "')": -0.11989157
      },
      {
       "\n": -0.0070061986
      },
      {
       " tur": -0.76010466
      },
      {
       "('": -0.0014730347
      },
      {
       "pill": -0.42376012
      },
      {
       "ow": -0.002288533
      },
      {
       "'": -0.0028318504
      },
      {
       " in": -0.07827829
      },
      {
       " '": -0.0039116577
      },
      {
       "bed": -0.489839
      },
      {
       "')": -0.005925336
      },
      {
       "\n": -0.0029728066
      },
      {
       " else": -0.0022367972
      },
      {
       ":": -0.0021905615
      },
      {
       " grab": -0.25858682
      },
      {
       "('": -0.0011232363
      },
      {
       "pill": -0.0010847488
      },
      {
       "ow": -0.00025729905
      },
      {
       "')": -0.002014834
      },
      {
       "\n": -0.0055318414
      },
      {
       " tur": -0.48643163
      },
      {
       "nt": -4.29881e-05
      },
      {
       "o": -0.00042377162
      },
      {
       "('": -0.00034226198
      },
      {
       "pill": -0.27640218
      },
      {
       "ow": -0.00011511593
      },
      {
       "')": -0.0007455852
      },
      {
       "\n": -0.002593321
      },
      {
       " look": -0.53542095
      },
      {
       "at": -0.0002534825
      },
      {
       "('": -0.00045823885
      },
      {
       "pill": -0.002154241
      },
      {
       "ow": -0.00016018527
      },
      {
       "')": -0.001592784
      },
      {
       "\n": -0.010667055
      },
      {
       " #": -0.061330378
      },
      {
       " 4": -0.010211773
      },
      {
       ":": -0.001882074
      },
      {
       " Done": -1.0945444
      }
     ],
     "text_offset": [
      3419,
      3421,
      3423,
      3424,
      3429,
      3433,
      3439,
      3440,
      3445,
      3447,
      3452,
      3454,
      3455,
      3457,
      3459,
      3460,
      3465,
      3469,
      3475,
      3476,
      3481,
      3483,
      3488,
      3490,
      3491,
      3498,
      3500,
      3505,
      3506,
      3509,
      3511,
      3516,
      3518,
      3519,
      3524,
      3525,
      3530,
      3532,
      3537,
      3539,
      3540,
      3544,
      3546,
      3547,
      3549,
      3554,
      3556,
      3557,
      3564,
      3566,
      3571,
      3572,
      3575,
      3577,
      3582,
      3584,
      3585,
      3590,
      3591,
      3596,
      3598,
      3603,
      3605,
      3606,
      3612,
      3614,
      3616,
      3621,
      3623,
      3624,
      3626,
      3628,
      3629,
      3634,
      3635,
      3638,
      3643,
      3644,
      3647,
      3650,
      3651,
      3653,
      3655,
      3656,
      3661,
      3664,
      3672,
      3673,
      3678,
      3680,
      3687,
      3689,
      3690,
      3692,
      3694,
      3695,
      3700,
      3704,
      3705,
      3710,
      3712,
      3715,
      3717,
      3718,
      3720,
      3722,
      3723,
      3728,
      3732,
      3736,
      3742,
      3743,
      3748,
      3750,
      3753,
      3754,
      3759,
      3761,
      3762,
      3766,
      3768,
      3769,
      3771,
      3774,
      3775,
      3780,
      3782,
      3783,
      3788,
      3790,
      3792,
      3795,
      3796,
      3801,
      3803,
      3804,
      3806,
      3808,
      3809,
      3813,
      3817,
      3824,
      3827,
      3831,
      3835,
      3836,
      3840,
      3842,
      3844,
      3848,
      3850,
      3852,
      3853,
      3860,
      3862,
      3866,
      3868,
      3869,
      3872,
      3874,
      3879,
      3881,
      3882,
      3887,
      3888,
      3893,
      3895,
      3899,
      3901,
      3903,
      3904,
      3908,
      3910,
      3911,
      3913,
      3917,
      3919,
      3921,
      3922,
      3927,
      3929,
      3931,
      3935,
      3937,
      3939,
      3940,
      3942,
      3944,
      3945
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Pick up phone",
   "task_description": "I walk over to the phone. .I reach my arm out. I open my hand. I place my hand on the phone. I close my fingers around the phone. I pick up the phone.",
   "program": [
    "[Walk] <phone> (1)",
    "[Touch] <phone> (1)",
    "[Grab] <phone> (1)"
   ],
   "batch": "results_intentions_march-13-18",
   "file_id": "file348_1",
   "goal_condition": [
    [
     [
      162,
      205,
      "HOLDS_RH",
      "character",
      "phone"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1201,
   "completion_tokens": 189,
   "total_tokens": 1390
  }
 },
 "14": {
  "plan": [
   [
    " # 0: walk to bathroom\n walk('bathroom')\n # 1: find toilet\n walk('toilet')\n find('toilet')\n # 2: sit on the toilet\n turnto('toilet')\n lookat('toilet')\n assert('close' to 'toilet')\n else: find('toilet')\n sit('toilet')\n # 3: flush the toilet\n flush('toilet')\n # 4: Done\ndef wash_dishes():\n # 0: walk to kitchen\n walk('kitchen')\n # 1: find sink\n walk('sink')\n find('sink')\n # 2: put dishes in sink\n find('dishes')\n assert('close' to 'dishes')\n else: find('dishes')\n grab('dishes')\n assert('dishes' in 'hands')\n else: grab('dishes')\n putin('dishes', 'sink')\n # 3: fill sink with water\n pour('water', 'sink')\n # 4: wash the dishes\n wash('dishes')\n # 5: take out dishes\n pull('dishes')\n # 6: dry the dishes\n wipe('dishes')\n # 7: put dishes back\n putback('dishes')\n # 8: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " bathroom",
      "\n",
      " walk",
      "('",
      "bath",
      "room",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " toilet",
      "\n",
      " walk",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " find",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " sit",
      " on",
      " the",
      " toilet",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " look",
      "at",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "to",
      "ilet",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " sit",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " flush",
      " the",
      " toilet",
      "\n",
      " flush",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " Done",
      "\n",
      "def",
      " wash",
      "_",
      "d",
      "ishes",
      "():",
      "\n",
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " kitchen",
      "\n",
      " walk",
      "('",
      "kit",
      "chen",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " sink",
      "\n",
      " walk",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " find",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " put",
      " dishes",
      " in",
      " sink",
      "\n",
      " find",
      "('",
      "d",
      "ishes",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "d",
      "ishes",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "d",
      "ishes",
      "')",
      "\n",
      " grab",
      "('",
      "d",
      "ishes",
      "')",
      "\n",
      " assert",
      "('",
      "d",
      "ishes",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "d",
      "ishes",
      "')",
      "\n",
      " put",
      "in",
      "('",
      "d",
      "ishes",
      "',",
      " '",
      "s",
      "ink",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " fill",
      " sink",
      " with",
      " water",
      "\n",
      " pour",
      "('",
      "water",
      "',",
      " '",
      "s",
      "ink",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " wash",
      " the",
      " dishes",
      "\n",
      " wash",
      "('",
      "d",
      "ishes",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " take",
      " out",
      " dishes",
      "\n",
      " pull",
      "('",
      "d",
      "ishes",
      "')",
      "\n",
      " #",
      " 6",
      ":",
      " dry",
      " the",
      " dishes",
      "\n",
      " wipe",
      "('",
      "d",
      "ishes",
      "')",
      "\n",
      " #",
      " 7",
      ":",
      " put",
      " dishes",
      " back",
      "\n",
      " put",
      "back",
      "('",
      "d",
      "ishes",
      "')",
      "\n",
      " #",
      " 8",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.01650271,
      -0.008657472,
      -0.002692585,
      -0.15173157,
      -0.2771993,
      -0.45690536,
      -0.018331481,
      -0.0045943493,
      -0.0039259554,
      -0.003204672,
      -0.0001625685,
      -0.0016303376,
      -0.0065772426,
      -0.0027585693,
      -0.0033416753,
      -0.0006116811,
      -0.15934035,
      -0.08413908,
      -0.021926345,
      -1.686649,
      -0.0015886051,
      -0.0024846224,
      -0.0002574192,
      -0.0017222229,
      -0.005311304,
      -0.023680342,
      -0.00069196295,
      -0.00036873287,
      -0.0003841183,
      -0.00074069394,
      -0.0036580327,
      -0.007355355,
      -0.005795475,
      -0.0005308135,
      -0.34536442,
      -0.067442514,
      -1.056253,
      -0.0029829112,
      -0.022444837,
      -0.70678174,
      -2.2245786e-05,
      -0.00011082348,
      -0.00039330113,
      -0.00084490766,
      -0.0001697229,
      -0.0010632077,
      -0.0030929784,
      -0.20139855,
      -0.00034464613,
      -0.0002974855,
      -0.00026528694,
      -8.388231e-05,
      -0.00069983635,
      -0.0026153126,
      -0.05050843,
      -0.00053588126,
      -0.0008008229,
      -0.0019945863,
      -0.0005411302,
      -0.00094805687,
      -0.0027967638,
      -0.00017329915,
      -0.0037609932,
      -0.0030722893,
      -0.0011687065,
      -0.0009437606,
      -0.003908007,
      -0.0007673582,
      -0.0006908891,
      -5.6818186e-05,
      -0.00084526715,
      -0.0063218046,
      -0.8625889,
      -0.00094495463,
      -0.0006787223,
      -1.4974988e-05,
      -0.0015158944,
      -0.1352332,
      -0.043473307,
      -0.008238324,
      -0.0012792306,
      -1.4806234,
      -0.37624282,
      -0.003294969,
      -0.05784274,
      -0.46220514,
      -0.017696746,
      -0.0007922944,
      -0.00024251342,
      -0.0020504312,
      -0.11487565,
      -0.036895968,
      -0.0058441563,
      -0.0015386979,
      -2.0331829,
      -0.72252214,
      -1.4062515,
      -1.2306813,
      -0.0005541305,
      -1.7026362,
      -0.008421216,
      -0.033012852,
      -0.011275947,
      -0.00928872,
      -0.0034017814,
      -0.0011601159,
      -0.3598942,
      -0.08189196,
      -0.14296362,
      -0.024933627,
      -0.002216366,
      -0.0019133667,
      -0.0016559504,
      -0.0002629028,
      -0.0030212926,
      -0.0040609636,
      -0.0020765925,
      -0.0023172097,
      -0.00035263688,
      -0.022736313,
      -0.7852305,
      -0.024585674,
      -0.40159857,
      -0.0007300778,
      -0.0018128045,
      -6.790459e-05,
      -0.000939227,
      -0.0036287787,
      -0.0050533717,
      -0.00064168224,
      -0.0002915213,
      -6.396884e-05,
      -0.0005523396,
      -0.0031433227,
      -0.0023590894,
      -0.0034667943,
      -0.0004901399,
      -3.8451395,
      -1.089432,
      -0.16247033,
      -0.333363,
      -0.01352,
      -1.49585,
      -0.0029280933,
      -0.008591879,
      -0.2652001,
      -0.0021378158,
      -0.004726631,
      -0.9046765,
      -0.0011044398,
      -0.056909453,
      -0.0020004406,
      -0.0003813765,
      -0.0061644805,
      -0.057819054,
      -0.06780329,
      -0.005572,
      -0.0034096164,
      -0.0017275966,
      -0.0014516053,
      -0.008876341,
      -0.0017748267,
      -0.00062051,
      -0.009885572,
      -0.0012924196,
      -0.005018024,
      -1.1263397,
      -0.0009482962,
      -0.0002014371,
      -0.0042776978,
      -0.0013210081,
      -0.0034481322,
      -0.8265057,
      -0.00091792626,
      -0.021688277,
      -0.06967826,
      -0.0019979316,
      -0.010391235,
      -0.0041469103,
      -0.010681935,
      -0.017183559,
      -0.0027294627,
      -0.0071183294,
      -0.002178495,
      -0.012307399,
      -0.0014391888,
      -0.00024608686,
      -0.0005998747,
      -0.001784859,
      -0.0036035948,
      -0.47153547,
      -0.11415435,
      -0.0030661917,
      -0.025479725,
      -0.0086120805,
      -0.35148847,
      -0.00491152,
      -0.0014794212,
      -9.377476e-05,
      -0.0014184766,
      -0.007584333,
      -0.050848845,
      -0.0073485128,
      -0.0008217013,
      -1.449272,
      -0.30589306,
      -0.020008957,
      -0.08326565,
      -0.018552419,
      -1.6031772,
      -0.0040985486,
      -0.037286784,
      -0.43505177,
      -0.0018477965,
      -0.0010683412,
      -0.00013574092,
      -0.0018294647,
      -0.0050924905,
      -0.03620929,
      -0.0037979083,
      -0.0008898286,
      -0.30866286,
      -2.1402776,
      -0.0024801414,
      -0.031178873,
      -0.5075621,
      -0.00075679924,
      -0.00059092935,
      -0.012373237,
      -0.010168719,
      -0.004881933,
      -0.09618448,
      -0.0034526186,
      -0.0006644661,
      -1.4266484,
      -0.57159066,
      -0.891451,
      -0.33714858,
      -0.8185473,
      -0.024231246,
      -0.00077761855,
      -0.009825859,
      -0.46852317,
      -0.010973322,
      -0.23457982,
      -0.0035547805,
      -0.0013367061,
      -1.1225245,
      -0.61844313,
      -0.0016601294,
      -0.02418093,
      -0.052171312,
      -0.00050302286,
      -0.0004049883,
      -0.0093106795,
      -0.002895034,
      -0.004709445,
      -0.0026698173,
      -0.0070628035,
      -0.0018192539,
      -0.48093557,
      -0.41893563,
      -0.8247192,
      -0.056523453,
      -0.09871077,
      -0.15837209,
      -0.0012589399,
      -0.0002601591,
      -0.0016598898,
      -0.4895151,
      -0.0372986,
      -0.00712271,
      -0.001669144,
      -0.0020602853,
      -0.159793
     ],
     "top_logprobs": [
      {
       " #": -0.01650271
      },
      {
       " 0": -0.008657472
      },
      {
       ":": -0.002692585
      },
      {
       " walk": -0.15173157
      },
      {
       " to": -0.2771993
      },
      {
       " bathroom": -0.45690536
      },
      {
       "\n": -0.018331481
      },
      {
       " walk": -0.0045943493
      },
      {
       "('": -0.0039259554
      },
      {
       "bath": -0.003204672
      },
      {
       "room": -0.0001625685
      },
      {
       "')": -0.0016303376
      },
      {
       "\n": -0.0065772426
      },
      {
       " #": -0.0027585693
      },
      {
       " 1": -0.0033416753
      },
      {
       ":": -0.0006116811
      },
      {
       " find": -0.15934035
      },
      {
       " toilet": -0.08413908
      },
      {
       "\n": -0.021926345
      },
      {
       " find": -0.23865655
      },
      {
       "('": -0.0015886051
      },
      {
       "to": -0.0024846224
      },
      {
       "ilet": -0.0002574192
      },
      {
       "')": -0.0017222229
      },
      {
       "\n": -0.005311304
      },
      {
       " find": -0.023680342
      },
      {
       "('": -0.00069196295
      },
      {
       "to": -0.00036873287
      },
      {
       "ilet": -0.0003841183
      },
      {
       "')": -0.00074069394
      },
      {
       "\n": -0.0036580327
      },
      {
       " #": -0.007355355
      },
      {
       " 2": -0.005795475
      },
      {
       ":": -0.0005308135
      },
      {
       " sit": -0.34536442
      },
      {
       " on": -0.067442514
      },
      {
       " toilet": -0.44743773
      },
      {
       " toilet": -0.0029829112
      },
      {
       "\n": -0.022444837
      },
      {
       " tur": -0.70678174
      },
      {
       "nt": -2.2245786e-05
      },
      {
       "o": -0.00011082348
      },
      {
       "('": -0.00039330113
      },
      {
       "to": -0.00084490766
      },
      {
       "ilet": -0.0001697229
      },
      {
       "')": -0.0010632077
      },
      {
       "\n": -0.0030929784
      },
      {
       " look": -0.20139855
      },
      {
       "at": -0.00034464613
      },
      {
       "('": -0.0002974855
      },
      {
       "to": -0.00026528694
      },
      {
       "ilet": -8.388231e-05
      },
      {
       "')": -0.00069983635
      },
      {
       "\n": -0.0026153126
      },
      {
       " assert": -0.05050843
      },
      {
       "('": -0.00053588126
      },
      {
       "close": -0.0008008229
      },
      {
       "'": -0.0019945863
      },
      {
       " to": -0.0005411302
      },
      {
       " '": -0.00094805687
      },
      {
       "to": -0.0027967638
      },
      {
       "ilet": -0.00017329915
      },
      {
       "')": -0.0037609932
      },
      {
       "\n": -0.0030722893
      },
      {
       " else": -0.0011687065
      },
      {
       ":": -0.0009437606
      },
      {
       " find": -0.003908007
      },
      {
       "('": -0.0007673582
      },
      {
       "to": -0.0006908891
      },
      {
       "ilet": -5.6818186e-05
      },
      {
       "')": -0.00084526715
      },
      {
       "\n": -0.0063218046
      },
      {
       " else": -0.56893164
      },
      {
       "('": -0.00094495463
      },
      {
       "to": -0.0006787223
      },
      {
       "ilet": -1.4974988e-05
      },
      {
       "')": -0.0015158944
      },
      {
       "\n": -0.1352332
      },
      {
       " #": -0.043473307
      },
      {
       " 3": -0.008238324
      },
      {
       ":": -0.0012792306
      },
      {
       " do": -1.2205899
      },
      {
       " the": -0.37624282
      },
      {
       " toilet": -0.003294969
      },
      {
       "\n": -0.05784274
      },
      {
       " flush": -0.46220514
      },
      {
       "('": -0.017696746
      },
      {
       "to": -0.0007922944
      },
      {
       "ilet": -0.00024251342
      },
      {
       "')": -0.0020504312
      },
      {
       "\n": -0.11487565
      },
      {
       " #": -0.036895968
      },
      {
       " 4": -0.0058441563
      },
      {
       ":": -0.0015386979
      },
      {
       " stand": -1.0315675
      },
      {
       "\n": -0.72252214
      },
      {
       "def": -1.4062515
      },
      {
       " wash": -1.2306813
      },
      {
       "_": -0.0005541305
      },
      {
       "hands": -0.5828042
      },
      {
       "ishes": -0.008421216
      },
      {
       "():": -0.033012852
      },
      {
       "\n": -0.011275947
      },
      {
       " #": -0.00928872
      },
      {
       " 0": -0.0034017814
      },
      {
       ":": -0.0011601159
      },
      {
       " walk": -0.3598942
      },
      {
       " to": -0.08189196
      },
      {
       " kitchen": -0.14296362
      },
      {
       "\n": -0.024933627
      },
      {
       " walk": -0.002216366
      },
      {
       "('": -0.0019133667
      },
      {
       "kit": -0.0016559504
      },
      {
       "chen": -0.0002629028
      },
      {
       "')": -0.0030212926
      },
      {
       "\n": -0.0040609636
      },
      {
       " #": -0.0020765925
      },
      {
       " 1": -0.0023172097
      },
      {
       ":": -0.00035263688
      },
      {
       " find": -0.022736313
      },
      {
       " dish": -0.7427843
      },
      {
       "\n": -0.024585674
      },
      {
       " walk": -0.40159857
      },
      {
       "('": -0.0007300778
      },
      {
       "s": -0.0018128045
      },
      {
       "ink": -6.790459e-05
      },
      {
       "')": -0.000939227
      },
      {
       "\n": -0.0036287787
      },
      {
       " find": -0.0050533717
      },
      {
       "('": -0.00064168224
      },
      {
       "s": -0.0002915213
      },
      {
       "ink": -6.396884e-05
      },
      {
       "')": -0.0005523396
      },
      {
       "\n": -0.0031433227
      },
      {
       " #": -0.0023590894
      },
      {
       " 2": -0.0034667943
      },
      {
       ":": -0.0004901399
      },
      {
       " fill": -1.0203104
      },
      {
       " dishes": -1.089432
      },
      {
       " in": -0.16247033
      },
      {
       " sink": -0.333363
      },
      {
       "\n": -0.01352
      },
      {
       " assert": -1.0241855
      },
      {
       "('": -0.0029280933
      },
      {
       "d": -0.008591879
      },
      {
       "ishes": -0.2652001
      },
      {
       "')": -0.0021378158
      },
      {
       "\n": -0.004726631
      },
      {
       " assert": -0.9046765
      },
      {
       "('": -0.0011044398
      },
      {
       "close": -0.056909453
      },
      {
       "'": -0.0020004406
      },
      {
       " to": -0.0003813765
      },
      {
       " '": -0.0061644805
      },
      {
       "d": -0.057819054
      },
      {
       "ishes": -0.06780329
      },
      {
       "')": -0.005572
      },
      {
       "\n": -0.0034096164
      },
      {
       " else": -0.0017275966
      },
      {
       ":": -0.0014516053
      },
      {
       " find": -0.008876341
      },
      {
       "('": -0.0017748267
      },
      {
       "d": -0.00062051
      },
      {
       "ishes": -0.009885572
      },
      {
       "')": -0.0012924196
      },
      {
       "\n": -0.005018024
      },
      {
       " put": -0.566529
      },
      {
       "('": -0.0009482962
      },
      {
       "d": -0.0002014371
      },
      {
       "ishes": -0.0042776978
      },
      {
       "')": -0.0013210081
      },
      {
       "\n": -0.0034481322
      },
      {
       " assert": -0.8265057
      },
      {
       "('": -0.00091792626
      },
      {
       "d": -0.021688277
      },
      {
       "ishes": -0.06967826
      },
      {
       "'": -0.0019979316
      },
      {
       " in": -0.010391235
      },
      {
       " '": -0.0041469103
      },
      {
       "hands": -0.010681935
      },
      {
       "')": -0.017183559
      },
      {
       "\n": -0.0027294627
      },
      {
       " else": -0.0071183294
      },
      {
       ":": -0.002178495
      },
      {
       " grab": -0.012307399
      },
      {
       "('": -0.0014391888
      },
      {
       "d": -0.00024608686
      },
      {
       "ishes": -0.0005998747
      },
      {
       "')": -0.001784859
      },
      {
       "\n": -0.0036035948
      },
      {
       " put": -0.47153547
      },
      {
       "in": -0.11415435
      },
      {
       "('": -0.0030661917
      },
      {
       "d": -0.025479725
      },
      {
       "ishes": -0.0086120805
      },
      {
       "',": -0.35148847
      },
      {
       " '": -0.00491152
      },
      {
       "s": -0.0014794212
      },
      {
       "ink": -9.377476e-05
      },
      {
       "')": -0.0014184766
      },
      {
       "\n": -0.007584333
      },
      {
       " #": -0.050848845
      },
      {
       " 3": -0.0073485128
      },
      {
       ":": -0.0008217013
      },
      {
       " turn": -1.1472855
      },
      {
       " sink": -0.30589306
      },
      {
       " with": -0.020008957
      },
      {
       " water": -0.08326565
      },
      {
       "\n": -0.018552419
      },
      {
       " fill": -0.78699607
      },
      {
       "('": -0.0040985486
      },
      {
       "water": -0.037286784
      },
      {
       "',": -0.43505177
      },
      {
       " '": -0.0018477965
      },
      {
       "s": -0.0010683412
      },
      {
       "ink": -0.00013574092
      },
      {
       "')": -0.0018294647
      },
      {
       "\n": -0.0050924905
      },
      {
       " #": -0.03620929
      },
      {
       " 4": -0.0037979083
      },
      {
       ":": -0.0008898286
      },
      {
       " wash": -0.30866286
      },
      {
       " dishes": -0.13571914
      },
      {
       " dishes": -0.0024801414
      },
      {
       "\n": -0.031178873
      },
      {
       " wash": -0.5075621
      },
      {
       "('": -0.00075679924
      },
      {
       "d": -0.00059092935
      },
      {
       "ishes": -0.012373237
      },
      {
       "')": -0.010168719
      },
      {
       "\n": -0.004881933
      },
      {
       " #": -0.09618448
      },
      {
       " 5": -0.0034526186
      },
      {
       ":": -0.0006644661
      },
      {
       " take": -1.4266484
      },
      {
       " out": -0.57159066
      },
      {
       " the": -0.58870894
      },
      {
       "\n": -0.33714858
      },
      {
       " pull": -0.8185473
      },
      {
       "('": -0.024231246
      },
      {
       "d": -0.00077761855
      },
      {
       "ishes": -0.009825859
      },
      {
       "')": -0.46852317
      },
      {
       "\n": -0.010973322
      },
      {
       " #": -0.23457982
      },
      {
       " 6": -0.0035547805
      },
      {
       ":": -0.0013367061
      },
      {
       " dry": -1.1225245
      },
      {
       " the": -0.61844313
      },
      {
       " dishes": -0.0016601294
      },
      {
       "\n": -0.02418093
      },
      {
       " wipe": -0.052171312
      },
      {
       "('": -0.00050302286
      },
      {
       "d": -0.0004049883
      },
      {
       "ishes": -0.0093106795
      },
      {
       "')": -0.002895034
      },
      {
       "\n": -0.004709445
      },
      {
       " #": -0.0026698173
      },
      {
       " 7": -0.0070628035
      },
      {
       ":": -0.0018192539
      },
      {
       " put": -0.48093557
      },
      {
       " dishes": -0.41893563
      },
      {
       " away": -0.76444703
      },
      {
       "\n": -0.056523453
      },
      {
       " put": -0.09871077
      },
      {
       "back": -0.15837209
      },
      {
       "('": -0.0012589399
      },
      {
       "d": -0.0002601591
      },
      {
       "ishes": -0.0016598898
      },
      {
       "')": -0.4895151
      },
      {
       "\n": -0.0372986
      },
      {
       " #": -0.00712271
      },
      {
       " 8": -0.001669144
      },
      {
       ":": -0.0020602853
      },
      {
       " Done": -0.159793
      }
     ],
     "text_offset": [
      3418,
      3420,
      3422,
      3423,
      3428,
      3431,
      3440,
      3441,
      3446,
      3448,
      3452,
      3456,
      3458,
      3459,
      3461,
      3463,
      3464,
      3469,
      3476,
      3477,
      3482,
      3484,
      3486,
      3490,
      3492,
      3493,
      3498,
      3500,
      3502,
      3506,
      3508,
      3509,
      3511,
      3513,
      3514,
      3518,
      3521,
      3525,
      3532,
      3533,
      3537,
      3539,
      3540,
      3542,
      3544,
      3548,
      3550,
      3551,
      3556,
      3558,
      3560,
      3562,
      3566,
      3568,
      3569,
      3576,
      3578,
      3583,
      3584,
      3587,
      3589,
      3591,
      3595,
      3597,
      3598,
      3603,
      3604,
      3609,
      3611,
      3613,
      3617,
      3619,
      3620,
      3624,
      3626,
      3628,
      3632,
      3634,
      3635,
      3637,
      3639,
      3640,
      3646,
      3650,
      3657,
      3658,
      3664,
      3666,
      3668,
      3672,
      3674,
      3675,
      3677,
      3679,
      3680,
      3685,
      3686,
      3689,
      3694,
      3695,
      3696,
      3701,
      3704,
      3705,
      3707,
      3709,
      3710,
      3715,
      3718,
      3726,
      3727,
      3732,
      3734,
      3737,
      3741,
      3743,
      3744,
      3746,
      3748,
      3749,
      3754,
      3759,
      3760,
      3765,
      3767,
      3768,
      3771,
      3773,
      3774,
      3779,
      3781,
      3782,
      3785,
      3787,
      3788,
      3790,
      3792,
      3793,
      3797,
      3804,
      3807,
      3812,
      3813,
      3818,
      3820,
      3821,
      3826,
      3828,
      3829,
      3836,
      3838,
      3843,
      3844,
      3847,
      3849,
      3850,
      3855,
      3857,
      3858,
      3863,
      3864,
      3869,
      3871,
      3872,
      3877,
      3879,
      3880,
      3885,
      3887,
      3888,
      3893,
      3895,
      3896,
      3903,
      3905,
      3906,
      3911,
      3912,
      3915,
      3917,
      3922,
      3924,
      3925,
      3930,
      3931,
      3936,
      3938,
      3939,
      3944,
      3946,
      3947,
      3951,
      3953,
      3955,
      3956,
      3961,
      3963,
      3965,
      3966,
      3969,
      3971,
      3972,
      3974,
      3976,
      3977,
      3982,
      3987,
      3992,
      3998,
      3999,
      4004,
      4006,
      4011,
      4013,
      4015,
      4016,
      4019,
      4021,
      4022,
      4024,
      4026,
      4027,
      4032,
      4036,
      4043,
      4044,
      4049,
      4051,
      4052,
      4057,
      4059,
      4060,
      4062,
      4064,
      4065,
      4070,
      4074,
      4081,
      4082,
      4087,
      4089,
      4090,
      4095,
      4097,
      4098,
      4100,
      4102,
      4103,
      4107,
      4111,
      4118,
      4119,
      4124,
      4126,
      4127,
      4132,
      4134,
      4135,
      4137,
      4139,
      4140,
      4144,
      4151,
      4156,
      4157,
      4161,
      4165,
      4167,
      4168,
      4173,
      4175,
      4176,
      4178,
      4180,
      4181
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Go to toilet",
   "task_description": "Travel through the house and locate the bathroom, and proceed to the toilet.",
   "program": [
    "[Walk] <bathroom> (1)",
    "[Walk] <toilet> (1)",
    "[Find] <toilet> (1)"
   ],
   "batch": "results_intentions_march-13-18",
   "file_id": "file992_1",
   "goal_condition": [
    [
     [
      162,
      1,
      "INSIDE",
      "character",
      "bathroom"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1202,
   "completion_tokens": 275,
   "total_tokens": 1477
  }
 }
}