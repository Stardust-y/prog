{
 "0": {
  "plan": [
   [
    " # 0: walk to bedroom\n walk('bedroom')\n # 1: find dresser\n walk('dresser')\n find('dresser')\n # 2: find coins\n find('coin')\n # 3: grab coins\n assert('close' to 'coin')\n else: find('coin')\n grab('coin')\n # 4: put coins in pocket\n assert('close' to 'coin')\n else: find('coin')\n putin('coin', 'pocket')\n # 5: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " bedroom",
      "\n",
      " walk",
      "('",
      "bedroom",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " dress",
      "er",
      "\n",
      " walk",
      "('",
      "dress",
      "er",
      "')",
      "\n",
      " find",
      "('",
      "dress",
      "er",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " find",
      " coins",
      "\n",
      " find",
      "('",
      "coin",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " grab",
      " coins",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "coin",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "coin",
      "')",
      "\n",
      " grab",
      "('",
      "coin",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " put",
      " coins",
      " in",
      " pocket",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "coin",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "coin",
      "')",
      "\n",
      " put",
      "in",
      "('",
      "coin",
      "',",
      " '",
      "pocket",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.021984164,
      -0.012060325,
      -0.0025216101,
      -0.26620293,
      -0.22146216,
      -0.28623545,
      -0.024211217,
      -0.0047643036,
      -0.004311398,
      -0.0017397184,
      -0.0012939731,
      -0.007967922,
      -0.0020757553,
      -0.0033509452,
      -0.0011466885,
      -0.04725184,
      -0.028617708,
      -0.00083351333,
      -0.017502563,
      -0.40894806,
      -0.0012711133,
      -0.0028084212,
      -0.0003039237,
      -0.0011420337,
      -0.0044707046,
      -0.010166854,
      -0.0007460621,
      -0.0011804029,
      -9.0080226e-05,
      -0.0008205074,
      -0.0050510946,
      -0.0035675226,
      -0.0057052514,
      -0.00062373054,
      -0.4225046,
      -1.1929241,
      -0.09025114,
      -0.17156391,
      -0.0014826428,
      -1.1439294,
      -0.0015906345,
      -0.007353133,
      -0.025276814,
      -0.0062058037,
      -0.0015366677,
      -0.6943033,
      -0.3359897,
      -0.040242292,
      -0.59771574,
      -0.0016437114,
      -0.012409925,
      -0.0022744918,
      -0.00069924124,
      -0.0022775987,
      -0.21518095,
      -0.0039518084,
      -0.00512071,
      -0.0017423447,
      -0.0015084923,
      -0.004259199,
      -0.0016234722,
      -0.008816991,
      -0.001612367,
      -0.00641502,
      -0.0080378,
      -0.0013058488,
      -0.031670738,
      -0.0010482307,
      -0.041138608,
      -0.643974,
      -0.01268401,
      -0.001560608,
      -0.21109338,
      -0.14503981,
      -0.18578582,
      -0.05591031,
      -0.020825291,
      -0.51858014,
      -0.0017373294,
      -0.8414764,
      -0.003091662,
      -0.0056403303,
      -0.012156192,
      -0.48240876,
      -0.004903553,
      -0.004017038,
      -0.0014674207,
      -0.0012652673,
      -0.053846456,
      -0.0009337978,
      -0.003059076,
      -0.0028265913,
      -0.0057449974,
      -0.47967708,
      -0.17037888,
      -0.018192654,
      -0.14780076,
      -0.45270038,
      -0.007851911,
      -0.008985135,
      -0.0027390858,
      -0.5881595,
      -0.03940285,
      -0.009317659,
      -0.0014437264,
      -0.26043865
     ],
     "top_logprobs": [
      {
       " #": -0.021984164
      },
      {
       " 0": -0.012060325
      },
      {
       ":": -0.0025216101
      },
      {
       " walk": -0.26620293
      },
      {
       " to": -0.22146216
      },
      {
       " bedroom": -0.28623545
      },
      {
       "\n": -0.024211217
      },
      {
       " walk": -0.0047643036
      },
      {
       "('": -0.004311398
      },
      {
       "bedroom": -0.0017397184
      },
      {
       "')": -0.0012939731
      },
      {
       "\n": -0.007967922
      },
      {
       " #": -0.0020757553
      },
      {
       " 1": -0.0033509452
      },
      {
       ":": -0.0011466885
      },
      {
       " find": -0.04725184
      },
      {
       " dress": -0.028617708
      },
      {
       "er": -0.00083351333
      },
      {
       "\n": -0.017502563
      },
      {
       " walk": -0.40894806
      },
      {
       "('": -0.0012711133
      },
      {
       "dress": -0.0028084212
      },
      {
       "er": -0.0003039237
      },
      {
       "')": -0.0011420337
      },
      {
       "\n": -0.0044707046
      },
      {
       " find": -0.010166854
      },
      {
       "('": -0.0007460621
      },
      {
       "dress": -0.0011804029
      },
      {
       "er": -9.0080226e-05
      },
      {
       "')": -0.0008205074
      },
      {
       "\n": -0.0050510946
      },
      {
       " #": -0.0035675226
      },
      {
       " 2": -0.0057052514
      },
      {
       ":": -0.00062373054
      },
      {
       " find": -0.4225046
      },
      {
       " coin": -1.020125
      },
      {
       "\n": -0.09025114
      },
      {
       " find": -0.17156391
      },
      {
       "('": -0.0014826428
      },
      {
       "coins": -0.38836548
      },
      {
       "')": -0.0015906345
      },
      {
       "\n": -0.007353133
      },
      {
       " #": -0.025276814
      },
      {
       " 3": -0.0062058037
      },
      {
       ":": -0.0015366677
      },
      {
       " grab": -0.6943033
      },
      {
       " coins": -0.3359897
      },
      {
       "\n": -0.040242292
      },
      {
       " assert": -0.59771574
      },
      {
       "('": -0.0016437114
      },
      {
       "close": -0.012409925
      },
      {
       "'": -0.0022744918
      },
      {
       " to": -0.00069924124
      },
      {
       " '": -0.0022775987
      },
      {
       "coin": -0.21518095
      },
      {
       "')": -0.0039518084
      },
      {
       "\n": -0.00512071
      },
      {
       " else": -0.0017423447
      },
      {
       ":": -0.0015084923
      },
      {
       " find": -0.004259199
      },
      {
       "('": -0.0016234722
      },
      {
       "coin": -0.008816991
      },
      {
       "')": -0.001612367
      },
      {
       "\n": -0.00641502
      },
      {
       " grab": -0.0080378
      },
      {
       "('": -0.0013058488
      },
      {
       "coin": -0.031670738
      },
      {
       "')": -0.0010482307
      },
      {
       "\n": -0.041138608
      },
      {
       " #": -0.643974
      },
      {
       " 4": -0.01268401
      },
      {
       ":": -0.001560608
      },
      {
       " put": -0.21109338
      },
      {
       " coins": -0.14503981
      },
      {
       " in": -0.18578582
      },
      {
       " pocket": -0.05591031
      },
      {
       "\n": -0.020825291
      },
      {
       " assert": -0.51858014
      },
      {
       "('": -0.0017373294
      },
      {
       "coin": -0.692215
      },
      {
       "'": -0.003091662
      },
      {
       " to": -0.0056403303
      },
      {
       " '": -0.012156192
      },
      {
       "coin": -0.48240876
      },
      {
       "')": -0.004903553
      },
      {
       "\n": -0.004017038
      },
      {
       " else": -0.0014674207
      },
      {
       ":": -0.0012652673
      },
      {
       " find": -0.053846456
      },
      {
       "('": -0.0009337978
      },
      {
       "coin": -0.003059076
      },
      {
       "')": -0.0028265913
      },
      {
       "\n": -0.0057449974
      },
      {
       " put": -0.47967708
      },
      {
       "in": -0.17037888
      },
      {
       "('": -0.018192654
      },
      {
       "coin": -0.14780076
      },
      {
       "',": -0.45270038
      },
      {
       " '": -0.007851911
      },
      {
       "pocket": -0.008985135
      },
      {
       "')": -0.0027390858
      },
      {
       "\n": -0.5881595
      },
      {
       " #": -0.03940285
      },
      {
       " 5": -0.009317659
      },
      {
       ":": -0.0014437264
      },
      {
       " Done": -0.26043865
      }
     ],
     "text_offset": [
      3182,
      3184,
      3186,
      3187,
      3192,
      3195,
      3203,
      3204,
      3209,
      3211,
      3218,
      3220,
      3221,
      3223,
      3225,
      3226,
      3231,
      3237,
      3239,
      3240,
      3245,
      3247,
      3252,
      3254,
      3256,
      3257,
      3262,
      3264,
      3269,
      3271,
      3273,
      3274,
      3276,
      3278,
      3279,
      3284,
      3290,
      3291,
      3296,
      3298,
      3302,
      3304,
      3305,
      3307,
      3309,
      3310,
      3315,
      3321,
      3322,
      3329,
      3331,
      3336,
      3337,
      3340,
      3342,
      3346,
      3348,
      3349,
      3354,
      3355,
      3360,
      3362,
      3366,
      3368,
      3369,
      3374,
      3376,
      3380,
      3382,
      3383,
      3385,
      3387,
      3388,
      3392,
      3398,
      3401,
      3408,
      3409,
      3416,
      3418,
      3423,
      3424,
      3427,
      3429,
      3433,
      3435,
      3436,
      3441,
      3442,
      3447,
      3449,
      3453,
      3455,
      3456,
      3460,
      3462,
      3464,
      3468,
      3470,
      3472,
      3478,
      3480,
      3481,
      3483,
      3485,
      3486
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Pick up spare change on dresser",
   "task_description": "Locate all the coins on the dresser top. Pick them up.",
   "program": [
    "[Walk] <bedroom> (1)",
    "[Walk] <dresser> (1)",
    "[Find] <coin> (1)",
    "[Grab] <coin> (1)",
    "[Walk] <cup> (1)",
    "[PutBack] <coin> (1) <cup> (1)",
    "[Walk] <dresser> (1)",
    "[Find] <coin> (2)",
    "[Grab] <coin> (2)",
    "[Walk] <cup> (1)",
    "[PutBack] <coin> (2) <cup> (1)",
    "[Walk] <dresser> (1)",
    "[Find] <coin> (3)",
    "[Grab] <coin> (3)",
    "[Walk] <cup> (1)",
    "[PutBack] <coin> (3) <cup> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_turk_robot",
   "file_id": "split6_1",
   "goal_condition": [
    [
     [
      1003,
      1001,
      "ON",
      "coin",
      "cup"
     ],
     [
      198,
      199,
      "INSIDE",
      "character",
      "bedroom"
     ],
     [
      1000,
      1001,
      "ON",
      "coin",
      "cup"
     ],
     [
      1002,
      1001,
      "ON",
      "coin",
      "cup"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1117,
   "completion_tokens": 106,
   "total_tokens": 1223
  }
 },
 "1": {
  "plan": [
   [
    " # 0: find remote control\n find('remote_control')\n # 1: find television\n find('television')\n # 2: turn on tv with remote control\n assert('close' to 'tv')\n else: find('tv')\n assert('remote_control' in 'hands'):\n else: find('remote_control')\n assert('tv' is 'switchoff')\n else: switchoff('tv')\n switchon('television')\n # 3: watch tv\n turnto('television')\n lookat('television')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " remote",
      " control",
      "\n",
      " find",
      "('",
      "remote",
      "_",
      "control",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " television",
      "\n",
      " find",
      "('",
      "te",
      "levision",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " turn",
      " on",
      " tv",
      " with",
      " remote",
      " control",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "tv",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "tv",
      "')",
      "\n",
      " assert",
      "('",
      "remote",
      "_",
      "control",
      "'",
      " in",
      " '",
      "hands",
      "'",
      "):",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "remote",
      "_",
      "control",
      "')",
      "\n",
      " assert",
      "('",
      "tv",
      "'",
      " is",
      " '",
      "switch",
      "off",
      "')",
      "\n",
      " else",
      ":",
      " switch",
      "off",
      "('",
      "tv",
      "')",
      "\n",
      " switch",
      "on",
      "('",
      "te",
      "levision",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " watch",
      " tv",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "te",
      "levision",
      "')",
      "\n",
      " look",
      "at",
      "('",
      "te",
      "levision",
      "')"
     ],
     "token_logprobs": [
      -0.015403785,
      -0.008165129,
      -0.0016460993,
      -1.2298961,
      -1.3457371,
      -0.19412942,
      -0.026571285,
      -0.014554495,
      -0.0023602834,
      -0.0015847867,
      -0.006517487,
      -0.00088243204,
      -0.0024706414,
      -0.0065249265,
      -0.002967307,
      -0.002727669,
      -0.00045430218,
      -0.06261645,
      -0.30780336,
      -0.012280911,
      -0.017540658,
      -0.0004983709,
      -0.0024910758,
      -0.00047004616,
      -0.0023066357,
      -0.0044484935,
      -0.0015396535,
      -0.0044634617,
      -0.00044011069,
      -0.090100855,
      -0.006878835,
      -0.10218715,
      -0.044879105,
      -0.0048990604,
      -0.0117959995,
      -0.004365456,
      -0.019354742,
      -0.0005356419,
      -0.013603138,
      -0.0016463386,
      -0.00035382994,
      -0.0005411302,
      -0.042498462,
      -0.0029384312,
      -0.0026048552,
      -0.0006882656,
      -0.00065218104,
      -0.0013353939,
      -0.0004266345,
      -0.0006738902,
      -0.0017840217,
      -0.002112966,
      -0.03384394,
      -0.0002484729,
      -0.00034619775,
      -0.0007068762,
      -0.00036193893,
      -0.0007797653,
      -0.0018608755,
      -0.0012134659,
      -0.0014128062,
      -0.20307866,
      -0.0014669428,
      -0.0019073942,
      -0.00064561894,
      -0.0003046399,
      -0.0017056847,
      -0.00023404865,
      -0.00024215765,
      -9.5562886e-05,
      -0.0003151312,
      -0.0008679346,
      -0.0013164725,
      -0.16491678,
      -0.00011416413,
      -0.00076795614,
      -0.0003901998,
      -0.00042651527,
      -0.001030094,
      -0.0017485558,
      -0.0016960731,
      -0.0016539192,
      -0.0009904745,
      -0.0008743174,
      -0.0003380878,
      -0.00024311132,
      -0.0006341674,
      -0.00019082283,
      -0.00017723397,
      -0.0011734813,
      -0.002027792,
      -0.0017665281,
      -0.00010665305,
      -0.00015422201,
      -0.0023981044,
      -0.0001507631,
      -0.0013819472,
      -0.053732917,
      -0.021631267,
      -0.0056819324,
      -0.0006701928,
      -3.4053047,
      -0.7528106,
      -0.026142975,
      -0.31474462,
      -2.6060465e-05,
      -0.00022361554,
      -0.0003848345,
      -0.019585634,
      -0.00041411104,
      -0.0010272283,
      -0.0046001566,
      -0.25125945,
      -0.0003278922,
      -0.0003131028,
      -0.0007096199,
      -0.0010616562,
      -0.0023939216
     ],
     "top_logprobs": [
      {
       " #": -0.015403785
      },
      {
       " 0": -0.008165129
      },
      {
       ":": -0.0016460993
      },
      {
       " walk": -0.43168876
      },
      {
       " the": -1.0303228
      },
      {
       " control": -0.19412942
      },
      {
       "\n": -0.026571285
      },
      {
       " find": -0.014554495
      },
      {
       "('": -0.0023602834
      },
      {
       "remote": -0.0015847867
      },
      {
       "_": -0.006517487
      },
      {
       "control": -0.00088243204
      },
      {
       "')": -0.0024706414
      },
      {
       "\n": -0.0065249265
      },
      {
       " #": -0.002967307
      },
      {
       " 1": -0.002727669
      },
      {
       ":": -0.00045430218
      },
      {
       " find": -0.06261645
      },
      {
       " television": -0.30780336
      },
      {
       "\n": -0.012280911
      },
      {
       " find": -0.017540658
      },
      {
       "('": -0.0004983709
      },
      {
       "te": -0.0024910758
      },
      {
       "levision": -0.00047004616
      },
      {
       "')": -0.0023066357
      },
      {
       "\n": -0.0044484935
      },
      {
       " #": -0.0015396535
      },
      {
       " 2": -0.0044634617
      },
      {
       ":": -0.00044011069
      },
      {
       " turn": -0.090100855
      },
      {
       " on": -0.006878835
      },
      {
       " tv": -0.10218715
      },
      {
       " with": -0.044879105
      },
      {
       " remote": -0.0048990604
      },
      {
       " control": -0.0117959995
      },
      {
       "\n": -0.004365456
      },
      {
       " assert": -0.019354742
      },
      {
       "('": -0.0005356419
      },
      {
       "close": -0.013603138
      },
      {
       "'": -0.0016463386
      },
      {
       " to": -0.00035382994
      },
      {
       " '": -0.0005411302
      },
      {
       "tv": -0.042498462
      },
      {
       "')": -0.0029384312
      },
      {
       "\n": -0.0026048552
      },
      {
       " else": -0.0006882656
      },
      {
       ":": -0.00065218104
      },
      {
       " find": -0.0013353939
      },
      {
       "('": -0.0004266345
      },
      {
       "tv": -0.0006738902
      },
      {
       "')": -0.0017840217
      },
      {
       "\n": -0.002112966
      },
      {
       " assert": -0.03384394
      },
      {
       "('": -0.0002484729
      },
      {
       "remote": -0.00034619775
      },
      {
       "_": -0.0007068762
      },
      {
       "control": -0.00036193893
      },
      {
       "'": -0.0007797653
      },
      {
       " in": -0.0018608755
      },
      {
       " '": -0.0012134659
      },
      {
       "hands": -0.0014128062
      },
      {
       "'": -0.20307866
      },
      {
       "):": -0.0014669428
      },
      {
       "\n": -0.0019073942
      },
      {
       " else": -0.00064561894
      },
      {
       ":": -0.0003046399
      },
      {
       " find": -0.0017056847
      },
      {
       "('": -0.00023404865
      },
      {
       "remote": -0.00024215765
      },
      {
       "_": -9.5562886e-05
      },
      {
       "control": -0.0003151312
      },
      {
       "')": -0.0008679346
      },
      {
       "\n": -0.0013164725
      },
      {
       " assert": -0.16491678
      },
      {
       "('": -0.00011416413
      },
      {
       "tv": -0.00076795614
      },
      {
       "'": -0.0003901998
      },
      {
       " is": -0.00042651527
      },
      {
       " '": -0.001030094
      },
      {
       "switch": -0.0017485558
      },
      {
       "off": -0.0016960731
      },
      {
       "')": -0.0016539192
      },
      {
       "\n": -0.0009904745
      },
      {
       " else": -0.0008743174
      },
      {
       ":": -0.0003380878
      },
      {
       " switch": -0.00024311132
      },
      {
       "off": -0.0006341674
      },
      {
       "('": -0.00019082283
      },
      {
       "tv": -0.00017723397
      },
      {
       "')": -0.0011734813
      },
      {
       "\n": -0.002027792
      },
      {
       " switch": -0.0017665281
      },
      {
       "on": -0.00010665305
      },
      {
       "('": -0.00015422201
      },
      {
       "te": -0.0023981044
      },
      {
       "levision": -0.0001507631
      },
      {
       "')": -0.0013819472
      },
      {
       "\n": -0.053732917
      },
      {
       " #": -0.021631267
      },
      {
       " 3": -0.0056819324
      },
      {
       ":": -0.0006701928
      },
      {
       " look": -0.6887615
      },
      {
       " tv": -0.7528106
      },
      {
       "\n": -0.026142975
      },
      {
       " tur": -0.31474462
      },
      {
       "nt": -2.6060465e-05
      },
      {
       "o": -0.00022361554
      },
      {
       "('": -0.0003848345
      },
      {
       "te": -0.019585634
      },
      {
       "levision": -0.00041411104
      },
      {
       "')": -0.0010272283
      },
      {
       "\n": -0.0046001566
      },
      {
       " look": -0.25125945
      },
      {
       "at": -0.0003278922
      },
      {
       "('": -0.0003131028
      },
      {
       "te": -0.0007096199
      },
      {
       "levision": -0.0010616562
      },
      {
       "')": -0.0023939216
      }
     ],
     "text_offset": [
      3161,
      3163,
      3165,
      3166,
      3171,
      3178,
      3186,
      3187,
      3192,
      3194,
      3200,
      3201,
      3208,
      3210,
      3211,
      3213,
      3215,
      3216,
      3221,
      3232,
      3233,
      3238,
      3240,
      3242,
      3250,
      3252,
      3253,
      3255,
      3257,
      3258,
      3263,
      3266,
      3269,
      3274,
      3281,
      3289,
      3290,
      3297,
      3299,
      3304,
      3305,
      3308,
      3310,
      3312,
      3314,
      3315,
      3320,
      3321,
      3326,
      3328,
      3330,
      3332,
      3333,
      3340,
      3342,
      3348,
      3349,
      3356,
      3357,
      3360,
      3362,
      3367,
      3368,
      3370,
      3371,
      3376,
      3377,
      3382,
      3384,
      3390,
      3391,
      3398,
      3400,
      3401,
      3408,
      3410,
      3412,
      3413,
      3416,
      3418,
      3424,
      3427,
      3429,
      3430,
      3435,
      3436,
      3443,
      3446,
      3448,
      3450,
      3452,
      3453,
      3460,
      3462,
      3464,
      3466,
      3474,
      3476,
      3477,
      3479,
      3481,
      3482,
      3488,
      3491,
      3492,
      3496,
      3498,
      3499,
      3501,
      3503,
      3511,
      3513,
      3514,
      3519,
      3521,
      3523,
      3525,
      3533
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Turn on TV",
   "task_description": "If TV is turned off, pick up/obtain the TV remote and press the green button with the 'I/O' marking.",
   "program": [
    "[Find] <remote_control> (1)",
    "[Grab] <remote_control> (1)",
    "[Find] <television> (1)",
    "[TurnTo] <television> (1)",
    "[PointAt] <television> (1)",
    "[Push] <remote_control> (1)",
    "[SwitchOn] <television> (1)",
    "[Watch] <television> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_turk_robot",
   "file_id": "split58_1",
   "goal_condition": [
    [
     [
      198,
      1000,
      "HOLDS_RH",
      "character",
      "remote_control"
     ],
     [
      198,
      97,
      "FACING",
      "character",
      "television"
     ]
    ],
    [
     [
      97,
      "television",
      "ON"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1109,
   "completion_tokens": 118,
   "total_tokens": 1227
  }
 },
 "2": {
  "plan": [
   [
    " # 0: walk to kitchen\n walk('kitchen')\n # 1: find sink\n find('sink')\n # 2: turn on faucet\n turnto('sink')\n lookat('sink')\n assert('close' to 'sink')\n else: find('sink')\n turnon('faucet')\n # 3: pour water and soap\n assert('close' to 'soap')\n else: find('soap')\n pour('soap')\n # 4: grab sponge and clean\n grab('sponge')\n assert('sponge' in 'hands')\n else: grab('sponge')\n wash('sponge')\n # 5: put back sponge\n putobjback('sponge')\n # 6: turn off faucet\n turnoff('faucet')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " kitchen",
      "\n",
      " walk",
      "('",
      "kit",
      "chen",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " sink",
      "\n",
      " find",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " turn",
      " on",
      " f",
      "auc",
      "et",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " look",
      "at",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "s",
      "ink",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " turn",
      "on",
      "('",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " pour",
      " water",
      " and",
      " soap",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "so",
      "ap",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "so",
      "ap",
      "')",
      "\n",
      " pour",
      "('",
      "so",
      "ap",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " grab",
      " sponge",
      " and",
      " clean",
      "\n",
      " grab",
      "('",
      "sp",
      "onge",
      "')",
      "\n",
      " assert",
      "('",
      "sp",
      "onge",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "sp",
      "onge",
      "')",
      "\n",
      " wash",
      "('",
      "sp",
      "onge",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " put",
      " back",
      " sponge",
      "\n",
      " put",
      "obj",
      "back",
      "('",
      "sp",
      "onge",
      "')",
      "\n",
      " #",
      " 6",
      ":",
      " turn",
      " off",
      " f",
      "auc",
      "et",
      "\n",
      " turn",
      "off",
      "('",
      "f",
      "auc",
      "et",
      "')"
     ],
     "token_logprobs": [
      -0.021769961,
      -0.008299445,
      -0.0021242553,
      -0.69054383,
      -0.2072344,
      -1.6251652,
      -0.0659119,
      -0.005015392,
      -0.0049913093,
      -0.003165566,
      -0.0004351002,
      -0.0064951675,
      -0.0067099067,
      -0.003122574,
      -0.003982923,
      -0.0010415484,
      -0.043674223,
      -0.06523593,
      -0.02126613,
      -0.400042,
      -0.0012432437,
      -0.0011313519,
      -0.000113448885,
      -0.0016145165,
      -0.0052310117,
      -0.016426848,
      -0.0063553364,
      -0.0012296953,
      -1.1285155,
      -0.060905155,
      -0.9151063,
      -0.0022292112,
      -0.002725996,
      -0.043281343,
      -1.2077651,
      -7.5892516e-05,
      -0.00082826347,
      -0.0008946017,
      -1.8305801,
      -6.539934e-05,
      -0.0020245668,
      -0.0068082013,
      -0.8536368,
      -0.00095533516,
      -0.00068731094,
      -0.054145288,
      -0.00015946814,
      -0.0019445402,
      -0.0053682337,
      -0.31074837,
      -0.0013161149,
      -0.022616383,
      -0.0040695816,
      -0.0005027835,
      -0.0015020455,
      -0.34817478,
      -0.0004477438,
      -0.0068111424,
      -0.0036967387,
      -0.001482165,
      -0.0019561825,
      -0.008220836,
      -0.0016912972,
      -0.0009117236,
      -0.00011702421,
      -0.0015973814,
      -0.008495815,
      -2.9786983,
      -0.014819542,
      -0.005356128,
      -0.12682308,
      -0.00079372677,
      -0.00048906606,
      -0.0028300567,
      -0.007295014,
      -0.0200044,
      -0.00939551,
      -0.0012040964,
      -1.3790048,
      -1.9128392,
      -3.4728708,
      -0.64445025,
      -0.28261906,
      -1.4879547,
      -0.0023276634,
      -0.1796119,
      -0.0037726616,
      -0.00047088155,
      -0.0024303095,
      -1.6135074,
      -0.00023810269,
      -0.058206633,
      -0.0065951226,
      -0.0029877527,
      -0.0020088595,
      -0.022584256,
      -0.0022675034,
      -0.000812634,
      -0.00012846824,
      -0.0027632324,
      -0.0065548634,
      -0.9246023,
      -0.008202267,
      -0.20119874,
      -0.00027589937,
      -0.18471526,
      -0.01142292,
      -0.41783673,
      -0.0075899777,
      -0.0011896542,
      -1.5249163,
      -0.2137616,
      -1.0379523,
      -3.225746,
      -0.8510905,
      -0.5455855,
      -0.0015579807,
      -0.0013263818,
      -0.0011161945,
      -0.0011282497,
      -0.004932367,
      -1.227725,
      -0.0012772023,
      -0.19751555,
      -0.002039084,
      -0.0020693056,
      -0.01589857,
      -0.0047041136,
      -0.017497528,
      -0.0115622,
      -0.004089692,
      -0.0024598234,
      -0.0044038915,
      -0.008426207,
      -0.0017297462,
      -0.0007593665,
      -0.0009212678,
      -0.00183639,
      -0.0067018666,
      -0.5194948,
      -0.0028240792,
      -0.68803626,
      -0.00045012985,
      -0.002849664,
      -0.016872719,
      -0.55871594,
      -0.0058494923,
      -0.0020664372,
      -3.7983065,
      -1.3692571,
      -0.22774242,
      -0.26656133,
      -0.40668836,
      -0.92677647,
      -0.0035438356,
      -0.0013260223,
      -0.002317448,
      -0.0010372541,
      -0.0017090283,
      -0.4469181,
      -0.017776284,
      -0.0042295083,
      -0.0029206194,
      -0.5540749,
      -0.041470136,
      -0.09507456,
      -0.0019710534,
      -0.001461098,
      -0.043145914,
      -0.27182302,
      -0.0033123114,
      -0.0010434575,
      -0.0011414367,
      -0.00090444623,
      -0.00038208987,
      -0.0015899183
     ],
     "top_logprobs": [
      {
       " #": -0.021769961
      },
      {
       " 0": -0.008299445
      },
      {
       ":": -0.0021242553
      },
      {
       " walk": -0.69054383
      },
      {
       " to": -0.2072344
      },
      {
       " bathroom": -0.8314317
      },
      {
       "\n": -0.0659119
      },
      {
       " walk": -0.005015392
      },
      {
       "('": -0.0049913093
      },
      {
       "kit": -0.003165566
      },
      {
       "chen": -0.0004351002
      },
      {
       "')": -0.0064951675
      },
      {
       "\n": -0.0067099067
      },
      {
       " #": -0.003122574
      },
      {
       " 1": -0.003982923
      },
      {
       ":": -0.0010415484
      },
      {
       " find": -0.043674223
      },
      {
       " sink": -0.06523593
      },
      {
       "\n": -0.02126613
      },
      {
       " find": -0.400042
      },
      {
       "('": -0.0012432437
      },
      {
       "s": -0.0011313519
      },
      {
       "ink": -0.000113448885
      },
      {
       "')": -0.0016145165
      },
      {
       "\n": -0.0052310117
      },
      {
       " #": -0.016426848
      },
      {
       " 2": -0.0063553364
      },
      {
       ":": -0.0012296953
      },
      {
       " turn": -1.1285155
      },
      {
       " on": -0.060905155
      },
      {
       " f": -0.9151063
      },
      {
       "auc": -0.0022292112
      },
      {
       "et": -0.002725996
      },
      {
       "\n": -0.043281343
      },
      {
       " assert": -0.7070642
      },
      {
       "nt": -7.5892516e-05
      },
      {
       "o": -0.00082826347
      },
      {
       "('": -0.0008946017
      },
      {
       "f": -0.17563868
      },
      {
       "ink": -6.539934e-05
      },
      {
       "')": -0.0020245668
      },
      {
       "\n": -0.0068082013
      },
      {
       " look": -0.8536368
      },
      {
       "at": -0.00095533516
      },
      {
       "('": -0.00068731094
      },
      {
       "s": -0.054145288
      },
      {
       "ink": -0.00015946814
      },
      {
       "')": -0.0019445402
      },
      {
       "\n": -0.0053682337
      },
      {
       " assert": -0.31074837
      },
      {
       "('": -0.0013161149
      },
      {
       "close": -0.022616383
      },
      {
       "'": -0.0040695816
      },
      {
       " to": -0.0005027835
      },
      {
       " '": -0.0015020455
      },
      {
       "s": -0.34817478
      },
      {
       "ink": -0.0004477438
      },
      {
       "')": -0.0068111424
      },
      {
       "\n": -0.0036967387
      },
      {
       " else": -0.001482165
      },
      {
       ":": -0.0019561825
      },
      {
       " find": -0.008220836
      },
      {
       "('": -0.0016912972
      },
      {
       "s": -0.0009117236
      },
      {
       "ink": -0.00011702421
      },
      {
       "')": -0.0015973814
      },
      {
       "\n": -0.008495815
      },
      {
       " switch": -0.30054265
      },
      {
       "on": -0.014819542
      },
      {
       "('": -0.005356128
      },
      {
       "f": -0.12682308
      },
      {
       "auc": -0.00079372677
      },
      {
       "et": -0.00048906606
      },
      {
       "')": -0.0028300567
      },
      {
       "\n": -0.007295014
      },
      {
       " #": -0.0200044
      },
      {
       " 3": -0.00939551
      },
      {
       ":": -0.0012040964
      },
      {
       " grab": -0.9400714
      },
      {
       " deter": -0.94688153
      },
      {
       "\n": -0.94948673
      },
      {
       " soap": -0.64445025
      },
      {
       "\n": -0.28261906
      },
      {
       " pour": -0.68371934
      },
      {
       "('": -0.0023276634
      },
      {
       "close": -0.1796119
      },
      {
       "'": -0.0037726616
      },
      {
       " to": -0.00047088155
      },
      {
       " '": -0.0024303095
      },
      {
       "s": -0.9049274
      },
      {
       "ap": -0.00023810269
      },
      {
       "')": -0.058206633
      },
      {
       "\n": -0.0065951226
      },
      {
       " else": -0.0029877527
      },
      {
       ":": -0.0020088595
      },
      {
       " find": -0.022584256
      },
      {
       "('": -0.0022675034
      },
      {
       "so": -0.000812634
      },
      {
       "ap": -0.00012846824
      },
      {
       "')": -0.0027632324
      },
      {
       "\n": -0.0065548634
      },
      {
       " grab": -0.6948469
      },
      {
       "('": -0.008202267
      },
      {
       "so": -0.20119874
      },
      {
       "ap": -0.00027589937
      },
      {
       "')": -0.18471526
      },
      {
       "\n": -0.01142292
      },
      {
       " #": -0.41783673
      },
      {
       " 4": -0.0075899777
      },
      {
       ":": -0.0011896542
      },
      {
       " wash": -1.0385109
      },
      {
       " sponge": -0.2137616
      },
      {
       "\n": -0.47366127
      },
      {
       " wash": -0.5485361
      },
      {
       "\n": -0.8510905
      },
      {
       " grab": -0.5455855
      },
      {
       "('": -0.0015579807
      },
      {
       "sp": -0.0013263818
      },
      {
       "onge": -0.0011161945
      },
      {
       "')": -0.0011282497
      },
      {
       "\n": -0.004932367
      },
      {
       " wash": -1.0059394
      },
      {
       "('": -0.0012772023
      },
      {
       "sp": -0.19751555
      },
      {
       "onge": -0.002039084
      },
      {
       "'": -0.0020693056
      },
      {
       " in": -0.01589857
      },
      {
       " '": -0.0047041136
      },
      {
       "hands": -0.017497528
      },
      {
       "')": -0.0115622
      },
      {
       "\n": -0.004089692
      },
      {
       " else": -0.0024598234
      },
      {
       ":": -0.0044038915
      },
      {
       " grab": -0.008426207
      },
      {
       "('": -0.0017297462
      },
      {
       "sp": -0.0007593665
      },
      {
       "onge": -0.0009212678
      },
      {
       "')": -0.00183639
      },
      {
       "\n": -0.0067018666
      },
      {
       " wash": -0.5194948
      },
      {
       "('": -0.0028240792
      },
      {
       "sp": -0.68803626
      },
      {
       "onge": -0.00045012985
      },
      {
       "')": -0.002849664
      },
      {
       "\n": -0.016872719
      },
      {
       " #": -0.55871594
      },
      {
       " 5": -0.0058494923
      },
      {
       ":": -0.0020664372
      },
      {
       " turn": -0.55568916
      },
      {
       " sponge": -0.67366236
      },
      {
       " sponge": -0.22774242
      },
      {
       "\n": -0.26656133
      },
      {
       " put": -0.40668836
      },
      {
       "back": -0.52620655
      },
      {
       "back": -0.0035438356
      },
      {
       "('": -0.0013260223
      },
      {
       "sp": -0.002317448
      },
      {
       "onge": -0.0010372541
      },
      {
       "')": -0.0017090283
      },
      {
       "\n": -0.4469181
      },
      {
       " #": -0.017776284
      },
      {
       " 6": -0.0042295083
      },
      {
       ":": -0.0029206194
      },
      {
       " turn": -0.5540749
      },
      {
       " off": -0.041470136
      },
      {
       " f": -0.09507456
      },
      {
       "auc": -0.0019710534
      },
      {
       "et": -0.001461098
      },
      {
       "\n": -0.043145914
      },
      {
       " turn": -0.27182302
      },
      {
       "off": -0.0033123114
      },
      {
       "('": -0.0010434575
      },
      {
       "f": -0.0011414367
      },
      {
       "auc": -0.00090444623
      },
      {
       "et": -0.00038208987
      },
      {
       "')": -0.0015899183
      }
     ],
     "text_offset": [
      3160,
      3162,
      3164,
      3165,
      3170,
      3173,
      3181,
      3182,
      3187,
      3189,
      3192,
      3196,
      3198,
      3199,
      3201,
      3203,
      3204,
      3209,
      3214,
      3215,
      3220,
      3222,
      3223,
      3226,
      3228,
      3229,
      3231,
      3233,
      3234,
      3239,
      3242,
      3244,
      3247,
      3249,
      3250,
      3254,
      3256,
      3257,
      3259,
      3260,
      3263,
      3265,
      3266,
      3271,
      3273,
      3275,
      3276,
      3279,
      3281,
      3282,
      3289,
      3291,
      3296,
      3297,
      3300,
      3302,
      3303,
      3306,
      3308,
      3309,
      3314,
      3315,
      3320,
      3322,
      3323,
      3326,
      3328,
      3329,
      3334,
      3336,
      3338,
      3339,
      3342,
      3344,
      3346,
      3347,
      3349,
      3351,
      3352,
      3357,
      3363,
      3367,
      3372,
      3373,
      3380,
      3382,
      3387,
      3388,
      3391,
      3393,
      3395,
      3397,
      3399,
      3400,
      3405,
      3406,
      3411,
      3413,
      3415,
      3417,
      3419,
      3420,
      3425,
      3427,
      3429,
      3431,
      3433,
      3434,
      3436,
      3438,
      3439,
      3444,
      3451,
      3455,
      3461,
      3462,
      3467,
      3469,
      3471,
      3475,
      3477,
      3478,
      3485,
      3487,
      3489,
      3493,
      3494,
      3497,
      3499,
      3504,
      3506,
      3507,
      3512,
      3513,
      3518,
      3520,
      3522,
      3526,
      3528,
      3529,
      3534,
      3536,
      3538,
      3542,
      3544,
      3545,
      3547,
      3549,
      3550,
      3554,
      3559,
      3566,
      3567,
      3571,
      3574,
      3578,
      3580,
      3582,
      3586,
      3588,
      3589,
      3591,
      3593,
      3594,
      3599,
      3603,
      3605,
      3608,
      3610,
      3611,
      3616,
      3619,
      3621,
      3622,
      3625,
      3627
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Wash sink",
   "task_description": "I spray some cleaner and wait a minte or so then wipe it out.",
   "program": [
    "[Walk] <bathroom> (1)",
    "[Walk] <cleaning_solution> (1)",
    "[Find] <cleaning_solution> (1)",
    "[Grab] <cleaning_solution> (1)",
    "[Walk] <sink> (1)",
    "[Pour] <cleaning_solution> (1) <sink> (1)",
    "[PutObjBack] <cleaning_solution> (1)",
    "[Find] <rag> (1)",
    "[Grab] <rag> (1)",
    "[Walk] <sink> (1)",
    "[Wipe] <sink> (1)",
    "[Wipe] <sink> (1)",
    "[Wipe] <sink> (1)",
    "[PutObjBack] <rag> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_turk_third",
   "file_id": "split87_3",
   "goal_condition": [
    [
     [
      198,
      262,
      "INSIDE",
      "character",
      "bathroom"
     ],
     [
      1000,
      286,
      "INSIDE",
      "cleaning_solution",
      "sink"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1108,
   "completion_tokens": 176,
   "total_tokens": 1284
  }
 },
 "3": {
  "plan": [
   [
    " # 0: find the hanger\n find('hanger')\n # 1: grab the hanger\n grab('hanger')\n assert('hanger' in 'hands')\n else: grab('hanger')\n # 2: find the jacket\n find('clothes_jacket')\n # 3: hang the jacket\n assert('close' to 'hanger')\n else: find('hanger')\n grab('hanger')\n assert('hanger' in 'hands')\n else: grab('hanger')\n turnto('clothes_jacket')\n assert('close' to 'clothes_jacket')\n else: find('clothes_jacket')\n hang('clothes_jacket')\n # 4: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " the",
      " h",
      "anger",
      "\n",
      " find",
      "('",
      "h",
      "anger",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " grab",
      " the",
      " h",
      "anger",
      "\n",
      " grab",
      "('",
      "h",
      "anger",
      "')",
      "\n",
      " assert",
      "('",
      "h",
      "anger",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "h",
      "anger",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " find",
      " the",
      " jacket",
      "\n",
      " find",
      "('",
      "cl",
      "othes",
      "_",
      "j",
      "acket",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " hang",
      " the",
      " jacket",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "h",
      "anger",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "h",
      "anger",
      "')",
      "\n",
      " grab",
      "('",
      "h",
      "anger",
      "')",
      "\n",
      " assert",
      "('",
      "h",
      "anger",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "h",
      "anger",
      "')",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "cl",
      "othes",
      "_",
      "j",
      "acket",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "cl",
      "othes",
      "_",
      "j",
      "acket",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "cl",
      "othes",
      "_",
      "j",
      "acket",
      "')",
      "\n",
      " hang",
      "('",
      "cl",
      "othes",
      "_",
      "j",
      "acket",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.0151466895,
      -0.007351211,
      -0.0018613534,
      -0.81455696,
      -1.9815115,
      -0.49832162,
      -0.0021831545,
      -0.04104719,
      -0.03780446,
      -0.0020487567,
      -0.00044690748,
      -0.0002723231,
      -0.0015190595,
      -0.0102509735,
      -0.004785742,
      -0.0026781242,
      -0.00045978764,
      -0.5447864,
      -0.31181538,
      -0.03773996,
      -0.00072035525,
      -0.022474643,
      -0.77170575,
      -0.0013315736,
      -0.0003082143,
      -0.00019678609,
      -0.001316832,
      -0.0055287853,
      -0.92491466,
      -0.0018381217,
      -0.21758227,
      -0.00043283522,
      -0.001409702,
      -0.022789543,
      -0.0038880806,
      -0.007305401,
      -0.018368695,
      -0.0052571353,
      -0.023196474,
      -0.0037324545,
      -0.009548529,
      -0.001445995,
      -0.0004434504,
      -0.0002737536,
      -0.0031055345,
      -0.0063573155,
      -0.6314803,
      -0.007110525,
      -0.0009865378,
      -0.27386272,
      -0.25424114,
      -0.1294522,
      -0.03569337,
      -0.04357174,
      -0.00088123814,
      -0.23284894,
      -0.0030516053,
      -0.0017948303,
      -0.006493428,
      -0.00047100076,
      -0.0025586023,
      -0.0060516777,
      -0.06468574,
      -0.0041348794,
      -0.000846937,
      -0.8183821,
      -0.695756,
      -0.01550566,
      -1.1228368,
      -0.56105334,
      -0.0015072991,
      -0.41186687,
      -0.00251211,
      -0.0071658758,
      -0.002446261,
      -0.9309252,
      -0.00055699435,
      -0.020932775,
      -0.006787558,
      -0.0070194644,
      -0.0017101039,
      -0.064976886,
      -0.0018488711,
      -0.000975442,
      -0.00038471434,
      -0.004017934,
      -0.0056791743,
      -3.1203177,
      -0.0010851074,
      -0.11374928,
      -0.00027315848,
      -0.0018065943,
      -0.005150484,
      -0.32452947,
      -0.0015292054,
      -0.44279677,
      -0.00051852845,
      -0.001343746,
      -0.011793951,
      -0.0020731278,
      -0.0025098384,
      -0.00785107,
      -0.0039914814,
      -0.0031726817,
      -0.0023162542,
      -0.008503149,
      -0.0019520062,
      -0.00047702223,
      -0.0007344904,
      -0.0020360954,
      -0.0048296438,
      -2.1508162,
      -7.219704e-05,
      -0.000301181,
      -0.0006460958,
      -1.8158971,
      -0.0010695333,
      -0.00059033243,
      -0.0014712418,
      -8.00667e-05,
      -0.0022585432,
      -0.0055345404,
      -1.189342,
      -0.0011074219,
      -1.0383394,
      -0.0024898828,
      -0.00047445972,
      -0.0017920848,
      -0.074726105,
      -0.00082444504,
      -0.000795513,
      -0.003155222,
      -0.0002457311,
      -0.0051166955,
      -0.004006684,
      -0.001289676,
      -0.0016304567,
      -0.0075976625,
      -0.0019724867,
      -0.0008160948,
      -0.00046789853,
      -0.0008710941,
      -0.0016976246,
      -0.00015553238,
      -0.006770035,
      -0.005385192,
      -1.1122631,
      -0.23119551,
      -0.15006611,
      -0.0004605048,
      -0.00031453517,
      -0.001154207,
      -0.00012179443,
      -0.10699523,
      -0.25106752,
      -0.4755573,
      -0.010897935,
      -0.0017634239,
      -0.4673895
     ],
     "top_logprobs": [
      {
       " #": -0.0151466895
      },
      {
       " 0": -0.007351211
      },
      {
       ":": -0.0018613534
      },
      {
       " walk": -0.8058374
      },
      {
       " h": -0.69306886
      },
      {
       " h": -0.49832162
      },
      {
       "anger": -0.0021831545
      },
      {
       "\n": -0.04104719
      },
      {
       " find": -0.03780446
      },
      {
       "('": -0.0020487567
      },
      {
       "h": -0.00044690748
      },
      {
       "anger": -0.0002723231
      },
      {
       "')": -0.0015190595
      },
      {
       "\n": -0.0102509735
      },
      {
       " #": -0.004785742
      },
      {
       " 1": -0.0026781242
      },
      {
       ":": -0.00045978764
      },
      {
       " grab": -0.5447864
      },
      {
       " the": -0.31181538
      },
      {
       " h": -0.03773996
      },
      {
       "anger": -0.00072035525
      },
      {
       "\n": -0.022474643
      },
      {
       " assert": -0.63596654
      },
      {
       "('": -0.0013315736
      },
      {
       "h": -0.0003082143
      },
      {
       "anger": -0.00019678609
      },
      {
       "')": -0.001316832
      },
      {
       "\n": -0.0055287853
      },
      {
       " #": -0.5528758
      },
      {
       "('": -0.0018381217
      },
      {
       "h": -0.21758227
      },
      {
       "anger": -0.00043283522
      },
      {
       "'": -0.001409702
      },
      {
       " in": -0.022789543
      },
      {
       " '": -0.0038880806
      },
      {
       "hands": -0.007305401
      },
      {
       "')": -0.018368695
      },
      {
       "\n": -0.0052571353
      },
      {
       " else": -0.023196474
      },
      {
       ":": -0.0037324545
      },
      {
       " grab": -0.009548529
      },
      {
       "('": -0.001445995
      },
      {
       "h": -0.0004434504
      },
      {
       "anger": -0.0002737536
      },
      {
       "')": -0.0031055345
      },
      {
       "\n": -0.0063573155
      },
      {
       " #": -0.6314803
      },
      {
       " 2": -0.007110525
      },
      {
       ":": -0.0009865378
      },
      {
       " find": -0.27386272
      },
      {
       " the": -0.25424114
      },
      {
       " jacket": -0.1294522
      },
      {
       "\n": -0.03569337
      },
      {
       " find": -0.04357174
      },
      {
       "('": -0.00088123814
      },
      {
       "cl": -0.23284894
      },
      {
       "othes": -0.0030516053
      },
      {
       "_": -0.0017948303
      },
      {
       "j": -0.006493428
      },
      {
       "acket": -0.00047100076
      },
      {
       "')": -0.0025586023
      },
      {
       "\n": -0.0060516777
      },
      {
       " #": -0.06468574
      },
      {
       " 3": -0.0041348794
      },
      {
       ":": -0.000846937
      },
      {
       " hang": -0.8183821
      },
      {
       " the": -0.695756
      },
      {
       " jacket": -0.01550566
      },
      {
       " on": -0.506771
      },
      {
       " assert": -0.56105334
      },
      {
       "('": -0.0015072991
      },
      {
       "close": -0.41186687
      },
      {
       "'": -0.00251211
      },
      {
       " to": -0.0071658758
      },
      {
       " '": -0.002446261
      },
      {
       "cl": -0.6340292
      },
      {
       "anger": -0.00055699435
      },
      {
       "')": -0.020932775
      },
      {
       "\n": -0.006787558
      },
      {
       " else": -0.0070194644
      },
      {
       ":": -0.0017101039
      },
      {
       " find": -0.064976886
      },
      {
       "('": -0.0018488711
      },
      {
       "h": -0.000975442
      },
      {
       "anger": -0.00038471434
      },
      {
       "')": -0.004017934
      },
      {
       "\n": -0.0056791743
      },
      {
       " assert": -0.7766558
      },
      {
       "('": -0.0010851074
      },
      {
       "h": -0.11374928
      },
      {
       "anger": -0.00027315848
      },
      {
       "')": -0.0018065943
      },
      {
       "\n": -0.005150484
      },
      {
       " assert": -0.32452947
      },
      {
       "('": -0.0015292054
      },
      {
       "h": -0.44279677
      },
      {
       "anger": -0.00051852845
      },
      {
       "'": -0.001343746
      },
      {
       " in": -0.011793951
      },
      {
       " '": -0.0020731278
      },
      {
       "hands": -0.0025098384
      },
      {
       "')": -0.00785107
      },
      {
       "\n": -0.0039914814
      },
      {
       " else": -0.0031726817
      },
      {
       ":": -0.0023162542
      },
      {
       " grab": -0.008503149
      },
      {
       "('": -0.0019520062
      },
      {
       "h": -0.00047702223
      },
      {
       "anger": -0.0007344904
      },
      {
       "')": -0.0020360954
      },
      {
       "\n": -0.0048296438
      },
      {
       " hang": -0.8739664
      },
      {
       "nt": -7.219704e-05
      },
      {
       "o": -0.000301181
      },
      {
       "('": -0.0006460958
      },
      {
       "h": -0.21979742
      },
      {
       "othes": -0.0010695333
      },
      {
       "_": -0.00059033243
      },
      {
       "j": -0.0014712418
      },
      {
       "acket": -8.00667e-05
      },
      {
       "')": -0.0022585432
      },
      {
       "\n": -0.0055345404
      },
      {
       " point": -1.1221766
      },
      {
       "('": -0.0011074219
      },
      {
       "cl": -0.93845713
      },
      {
       "'": -0.0024898828
      },
      {
       " to": -0.00047445972
      },
      {
       " '": -0.0017920848
      },
      {
       "cl": -0.074726105
      },
      {
       "othes": -0.00082444504
      },
      {
       "_": -0.000795513
      },
      {
       "j": -0.003155222
      },
      {
       "acket": -0.0002457311
      },
      {
       "')": -0.0051166955
      },
      {
       "\n": -0.004006684
      },
      {
       " else": -0.001289676
      },
      {
       ":": -0.0016304567
      },
      {
       " find": -0.0075976625
      },
      {
       "('": -0.0019724867
      },
      {
       "cl": -0.0008160948
      },
      {
       "othes": -0.00046789853
      },
      {
       "_": -0.0008710941
      },
      {
       "j": -0.0016976246
      },
      {
       "acket": -0.00015553238
      },
      {
       "')": -0.006770035
      },
      {
       "\n": -0.005385192
      },
      {
       " hang": -1.1122631
      },
      {
       "('": -0.23119551
      },
      {
       "cl": -0.15006611
      },
      {
       "othes": -0.0004605048
      },
      {
       "_": -0.00031453517
      },
      {
       "j": -0.001154207
      },
      {
       "acket": -0.00012179443
      },
      {
       "')": -0.10699523
      },
      {
       "\n": -0.25106752
      },
      {
       " #": -0.4755573
      },
      {
       " 4": -0.010897935
      },
      {
       ":": -0.0017634239
      },
      {
       " Done": -0.4673895
      }
     ],
     "text_offset": [
      3165,
      3167,
      3169,
      3170,
      3175,
      3179,
      3181,
      3186,
      3187,
      3192,
      3194,
      3195,
      3200,
      3202,
      3203,
      3205,
      3207,
      3208,
      3213,
      3217,
      3219,
      3224,
      3225,
      3230,
      3232,
      3233,
      3238,
      3240,
      3241,
      3248,
      3250,
      3251,
      3256,
      3257,
      3260,
      3262,
      3267,
      3269,
      3270,
      3275,
      3276,
      3281,
      3283,
      3284,
      3289,
      3291,
      3292,
      3294,
      3296,
      3297,
      3302,
      3306,
      3313,
      3314,
      3319,
      3321,
      3323,
      3328,
      3329,
      3330,
      3335,
      3337,
      3338,
      3340,
      3342,
      3343,
      3348,
      3352,
      3359,
      3360,
      3367,
      3369,
      3374,
      3375,
      3378,
      3380,
      3381,
      3386,
      3388,
      3389,
      3394,
      3395,
      3400,
      3402,
      3403,
      3408,
      3410,
      3411,
      3416,
      3418,
      3419,
      3424,
      3426,
      3427,
      3434,
      3436,
      3437,
      3442,
      3443,
      3446,
      3448,
      3453,
      3455,
      3456,
      3461,
      3462,
      3467,
      3469,
      3470,
      3475,
      3477,
      3478,
      3482,
      3484,
      3485,
      3487,
      3489,
      3494,
      3495,
      3496,
      3501,
      3503,
      3504,
      3511,
      3513,
      3518,
      3519,
      3522,
      3524,
      3526,
      3531,
      3532,
      3533,
      3538,
      3540,
      3541,
      3546,
      3547,
      3552,
      3554,
      3556,
      3561,
      3562,
      3563,
      3568,
      3570,
      3571,
      3576,
      3578,
      3580,
      3585,
      3586,
      3587,
      3592,
      3594,
      3595,
      3597,
      3599,
      3600
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Hang up jacket",
   "task_description": "Upon entering, remove coat and utilize coatrack/hook to store coat by neatly hanging coat on hook.",
   "program": [
    "[Walk] <bedroom> (1)",
    "[Walk] <clothes_jacket> (1)",
    "[Find] <clothes_jacket> (1)",
    "[Find] <clothes_jacket> (1)",
    "[PutOff] <clothes_jacket> (1)",
    "[Grab] <clothes_jacket> (1)",
    "[Find] <hanger> (1)",
    "[PutBack] <clothes_jacket> (1) <hanger> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_turk_third",
   "file_id": "split65_2",
   "goal_condition": [
    [
     [
      198,
      199,
      "INSIDE",
      "character",
      "bedroom"
     ],
     [
      1000,
      244,
      "ON",
      "clothes_jacket",
      "hanger"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1110,
   "completion_tokens": 159,
   "total_tokens": 1269
  }
 },
 "4": {
  "plan": [
   [
    " # 0: find newspaper\n find('newspaper')\n # 1: grab newspaper\n grab('newspaper')\n # 2: find chair\n find('chair')\n # 3: sit on the chair\n sit('chair')\n # 4: look at the newspaper\n lookat('newspaper')\n # 5: read the newspaper\n read('newspaper')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " newspaper",
      "\n",
      " find",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " grab",
      " newspaper",
      "\n",
      " grab",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " find",
      " chair",
      "\n",
      " find",
      "('",
      "chair",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " sit",
      " on",
      " the",
      " chair",
      "\n",
      " sit",
      "('",
      "chair",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " look",
      " at",
      " the",
      " newspaper",
      "\n",
      " look",
      "at",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " read",
      " the",
      " newspaper",
      "\n",
      " read",
      "('",
      "new",
      "sp",
      "aper",
      "')"
     ],
     "token_logprobs": [
      -0.019597547,
      -0.009464705,
      -0.0019743978,
      -0.3646822,
      -0.34362507,
      -0.031797588,
      -0.028202193,
      -0.0023629735,
      -0.0018234939,
      -0.00059367216,
      -0.0008815948,
      -0.002775724,
      -0.008910861,
      -0.0050053275,
      -0.0025827424,
      -0.00042746708,
      -0.257308,
      -0.13381404,
      -0.01635323,
      -0.7795977,
      -0.0013666068,
      -0.00077451725,
      -0.0001617331,
      -0.00078644656,
      -0.0014614556,
      -0.005252703,
      -0.6504563,
      -0.0072177453,
      -0.000604766,
      -0.92538995,
      -1.2515815,
      -0.20905475,
      -0.119046785,
      -0.0011866703,
      -0.00089209457,
      -0.0014244454,
      -0.0052730134,
      -0.016025996,
      -0.007073909,
      -0.0008551662,
      -0.026789151,
      -0.1595203,
      -1.6861358,
      -0.0019874799,
      -0.021550748,
      -0.48542243,
      -0.0014984627,
      -0.0006491971,
      -0.0010355832,
      -0.0054918677,
      -0.011170759,
      -0.0068011796,
      -0.0007217867,
      -2.8780706,
      -0.03991074,
      -0.29227483,
      -0.022956396,
      -0.020496706,
      -0.9083081,
      -0.0023040057,
      -0.00083500484,
      -0.0013085945,
      -0.00025252788,
      -0.00038531228,
      -0.0015098073,
      -0.006533926,
      -0.020106377,
      -0.0044810018,
      -0.0011031248,
      -0.13218419,
      -0.21526787,
      -0.018291539,
      -0.009478245,
      -0.03561906,
      -0.0025017718,
      -0.00071785087,
      -0.0009393453,
      -0.0005273536,
      -0.0018391965
     ],
     "top_logprobs": [
      {
       " #": -0.019597547
      },
      {
       " 0": -0.009464705
      },
      {
       ":": -0.0019743978
      },
      {
       " find": -0.3646822
      },
      {
       " newspaper": -0.34362507
      },
      {
       "\n": -0.031797588
      },
      {
       " find": -0.028202193
      },
      {
       "('": -0.0023629735
      },
      {
       "new": -0.0018234939
      },
      {
       "sp": -0.00059367216
      },
      {
       "aper": -0.0008815948
      },
      {
       "')": -0.002775724
      },
      {
       "\n": -0.008910861
      },
      {
       " #": -0.0050053275
      },
      {
       " 1": -0.0025827424
      },
      {
       ":": -0.00042746708
      },
      {
       " grab": -0.257308
      },
      {
       " newspaper": -0.13381404
      },
      {
       "\n": -0.01635323
      },
      {
       " assert": -0.6282114
      },
      {
       "('": -0.0013666068
      },
      {
       "new": -0.00077451725
      },
      {
       "sp": -0.0001617331
      },
      {
       "aper": -0.00078644656
      },
      {
       "')": -0.0014614556
      },
      {
       "\n": -0.005252703
      },
      {
       " #": -0.6504563
      },
      {
       " 2": -0.0072177453
      },
      {
       ":": -0.000604766
      },
      {
       " find": -0.92538995
      },
      {
       " chair": -1.2515815
      },
      {
       "\n": -0.20905475
      },
      {
       " find": -0.119046785
      },
      {
       "('": -0.0011866703
      },
      {
       "chair": -0.00089209457
      },
      {
       "')": -0.0014244454
      },
      {
       "\n": -0.0052730134
      },
      {
       " #": -0.016025996
      },
      {
       " 3": -0.007073909
      },
      {
       ":": -0.0008551662
      },
      {
       " sit": -0.026789151
      },
      {
       " on": -0.1595203
      },
      {
       " chair": -0.21507037
      },
      {
       " chair": -0.0019874799
      },
      {
       "\n": -0.021550748
      },
      {
       " sit": -0.48542243
      },
      {
       "('": -0.0014984627
      },
      {
       "chair": -0.0006491971
      },
      {
       "')": -0.0010355832
      },
      {
       "\n": -0.0054918677
      },
      {
       " #": -0.011170759
      },
      {
       " 4": -0.0068011796
      },
      {
       ":": -0.0007217867
      },
      {
       " read": -0.55164707
      },
      {
       " at": -0.03991074
      },
      {
       " the": -0.29227483
      },
      {
       " newspaper": -0.022956396
      },
      {
       "\n": -0.020496706
      },
      {
       " tur": -0.69182694
      },
      {
       "at": -0.0023040057
      },
      {
       "('": -0.00083500484
      },
      {
       "new": -0.0013085945
      },
      {
       "sp": -0.00025252788
      },
      {
       "aper": -0.00038531228
      },
      {
       "')": -0.0015098073
      },
      {
       "\n": -0.006533926
      },
      {
       " #": -0.020106377
      },
      {
       " 5": -0.0044810018
      },
      {
       ":": -0.0011031248
      },
      {
       " read": -0.13218419
      },
      {
       " the": -0.21526787
      },
      {
       " newspaper": -0.018291539
      },
      {
       "\n": -0.009478245
      },
      {
       " read": -0.03561906
      },
      {
       "('": -0.0025017718
      },
      {
       "new": -0.00071785087
      },
      {
       "sp": -0.0009393453
      },
      {
       "aper": -0.0005273536
      },
      {
       "')": -0.0018391965
      }
     ],
     "text_offset": [
      3165,
      3167,
      3169,
      3170,
      3175,
      3185,
      3186,
      3191,
      3193,
      3196,
      3198,
      3202,
      3204,
      3205,
      3207,
      3209,
      3210,
      3215,
      3225,
      3226,
      3231,
      3233,
      3236,
      3238,
      3242,
      3244,
      3245,
      3247,
      3249,
      3250,
      3255,
      3261,
      3262,
      3267,
      3269,
      3274,
      3276,
      3277,
      3279,
      3281,
      3282,
      3286,
      3289,
      3293,
      3299,
      3300,
      3304,
      3306,
      3311,
      3313,
      3314,
      3316,
      3318,
      3319,
      3324,
      3327,
      3331,
      3341,
      3342,
      3347,
      3349,
      3351,
      3354,
      3356,
      3360,
      3362,
      3363,
      3365,
      3367,
      3368,
      3373,
      3377,
      3387,
      3388,
      3393,
      3395,
      3398,
      3400,
      3404
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Read newspaper",
   "task_description": "Sit in my chair at my desk. Open up newspaper. Read about current events.",
   "program": [
    "[Walk] <home_office> (1)",
    "[Walk] <chair> (1)",
    "[Find] <chair> (1)",
    "[Sit] <chair> (1)",
    "[Find] <newspaper> (1)",
    "[Grab] <newspaper> (1)",
    "[Open] <newspaper> (1)",
    "[Read] <newspaper> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_july",
   "file_id": "split17_4",
   "goal_condition": [
    [
     [
      198,
      1,
      "INSIDE",
      "character",
      "home_office"
     ],
     [
      198,
      17,
      "ON",
      "character",
      "chair"
     ],
     [
      198,
      1000,
      "HOLDS_RH",
      "character",
      "newspaper"
     ]
    ],
    [
     [
      1000,
      "newspaper",
      "OPEN"
     ],
     [
      198,
      "character",
      "SITTING"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1109,
   "completion_tokens": 79,
   "total_tokens": 1188
  }
 },
 "5": {
  "plan": [
   [
    " # 0: find toilet\n find('toilet')\n # 1: pour toilet cleaner\n assert('close' to 'toilet')\n else: find('toilet')\n pour('toilet_cleaner')\n # 2: grab toilet brush\n grab('toilet_brush')\n # 3: scrub toilet\n assert('close' to 'toilet')\n else: find('toilet')\n turnto('toilet')\n wash('toilet_brush')\n # 4: flush toilet\n flush('toilet')\n # 5: wipe toilet\n wipe('toilet')\n # 6: put cleaner and brush back\n putobjback('toilet_cleaner')\n putobjback('toilet_brush')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " toilet",
      "\n",
      " find",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " pour",
      " toilet",
      " cleaner",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "to",
      "ilet",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " pour",
      "('",
      "to",
      "ilet",
      "_",
      "clean",
      "er",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " grab",
      " toilet",
      " brush",
      "\n",
      " grab",
      "('",
      "to",
      "ilet",
      "_",
      "brush",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " scrub",
      " toilet",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "to",
      "ilet",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " wash",
      "('",
      "to",
      "ilet",
      "_",
      "brush",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " flush",
      " toilet",
      "\n",
      " flush",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " wipe",
      " toilet",
      "\n",
      " wipe",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 6",
      ":",
      " put",
      " cleaner",
      " and",
      " brush",
      " back",
      "\n",
      " put",
      "obj",
      "back",
      "('",
      "to",
      "ilet",
      "_",
      "clean",
      "er",
      "')",
      "\n",
      " put",
      "obj",
      "back",
      "('",
      "to",
      "ilet",
      "_",
      "brush",
      "')"
     ],
     "token_logprobs": [
      -0.020401012,
      -0.009085335,
      -0.0021411593,
      -1.9309855,
      -0.4291844,
      -0.09877649,
      -0.22638933,
      -0.0024638278,
      -0.001773751,
      -0.00014790209,
      -0.0034144009,
      -0.008805566,
      -0.008591758,
      -0.0030681049,
      -0.0013519244,
      -2.095559,
      -2.2436554,
      -0.10516556,
      -0.30659726,
      -0.33039406,
      -0.0021163113,
      -0.03967718,
      -0.005141496,
      -0.00047773935,
      -0.0015733821,
      -0.012647612,
      -0.0017705295,
      -0.3166368,
      -0.0042968527,
      -0.0014421747,
      -0.0017209097,
      -0.005450871,
      -0.0015395334,
      -0.0005102993,
      -3.4048382e-05,
      -0.0025404345,
      -0.0055202143,
      -0.25184506,
      -0.0027036434,
      -0.033998277,
      -0.0012482562,
      -0.35847968,
      -0.020582858,
      -0.0004621737,
      -0.09749147,
      -0.015342168,
      -0.14221932,
      -0.006099772,
      -0.0008232539,
      -1.2419682,
      -0.7420927,
      -0.06969699,
      -0.02090873,
      -0.7616841,
      -0.00093421456,
      -0.006877636,
      -0.00032085512,
      -0.010046313,
      -0.00047290904,
      -0.0028785341,
      -0.0046821954,
      -0.26197577,
      -0.0067956,
      -0.00053588126,
      -0.8232779,
      -0.87942624,
      -0.30138972,
      -1.4452118,
      -0.0013685169,
      -0.775587,
      -0.003676098,
      -0.0065026665,
      -0.0021262874,
      -0.006631121,
      -0.00036110257,
      -0.09402697,
      -0.0032119057,
      -0.0023155361,
      -0.0012263537,
      -0.007522775,
      -0.0015135065,
      -0.00022158712,
      -8.6144464e-05,
      -0.002205255,
      -0.005596935,
      -2.6461387,
      -8.8051806e-05,
      -0.00039950278,
      -0.00061848067,
      -0.002212663,
      -0.00030785665,
      -0.053483326,
      -0.0043585706,
      -3.155753,
      -0.0022667854,
      -0.0019917197,
      -0.0001118973,
      -0.4389041,
      -0.005593579,
      -0.007759597,
      -0.007845844,
      -0.19034006,
      -0.007928029,
      -0.0012888387,
      -0.39201146,
      -0.5964936,
      -0.032063063,
      -0.48546275,
      -0.011327909,
      -0.00042889945,
      -0.00024120306,
      -0.006027391,
      -0.0107914675,
      -0.0069177886,
      -0.0042704535,
      -0.0016107552,
      -2.1705863,
      -0.48295182,
      -0.18768083,
      -0.3647609,
      -0.0007488067,
      -0.00058060983,
      -2.7133337e-05,
      -0.017830953,
      -0.03668627,
      -0.0276888,
      -0.0045148334,
      -0.0021856625,
      -0.7825454,
      -3.7497344,
      -1.8010352,
      -0.030869741,
      -0.13286285,
      -0.024638027,
      -0.27325302,
      -1.0302728,
      -0.020156434,
      -0.0018082671,
      -0.021309907,
      -0.008404685,
      -0.005061578,
      -0.13821125,
      -0.00016459411,
      -0.044255454,
      -0.012108348,
      -0.031806633,
      -0.020233613,
      -0.0007225029,
      -0.00063207984,
      -0.0016474124,
      -0.00011499579,
      -0.0013460156,
      -0.00043235742,
      -0.003003954
     ],
     "top_logprobs": [
      {
       " #": -0.020401012
      },
      {
       " 0": -0.009085335
      },
      {
       ":": -0.0021411593
      },
      {
       " walk": -0.2996989
      },
      {
       " toilet": -0.4291844
      },
      {
       "\n": -0.09877649
      },
      {
       " find": -0.22638933
      },
      {
       "('": -0.0024638278
      },
      {
       "to": -0.001773751
      },
      {
       "ilet": -0.00014790209
      },
      {
       "')": -0.0034144009
      },
      {
       "\n": -0.008805566
      },
      {
       " #": -0.008591758
      },
      {
       " 1": -0.0030681049
      },
      {
       ":": -0.0013519244
      },
      {
       " grab": -1.1167992
      },
      {
       " deter": -1.4349846
      },
      {
       " cleaner": -0.10516556
      },
      {
       "\n": -0.30659726
      },
      {
       " assert": -0.33039406
      },
      {
       "('": -0.0021163113
      },
      {
       "close": -0.03967718
      },
      {
       "'": -0.005141496
      },
      {
       " to": -0.00047773935
      },
      {
       " '": -0.0015733821
      },
      {
       "to": -0.012647612
      },
      {
       "ilet": -0.0017705295
      },
      {
       "')": -0.3166368
      },
      {
       "\n": -0.0042968527
      },
      {
       " else": -0.0014421747
      },
      {
       ":": -0.0017209097
      },
      {
       " find": -0.005450871
      },
      {
       "('": -0.0015395334
      },
      {
       "to": -0.0005102993
      },
      {
       "ilet": -3.4048382e-05
      },
      {
       "')": -0.0025404345
      },
      {
       "\n": -0.0055202143
      },
      {
       " pour": -0.25184506
      },
      {
       "('": -0.0027036434
      },
      {
       "to": -0.033998277
      },
      {
       "ilet": -0.0012482562
      },
      {
       "_": -0.35847968
      },
      {
       "clean": -0.020582858
      },
      {
       "er": -0.0004621737
      },
      {
       "')": -0.09749147
      },
      {
       "\n": -0.015342168
      },
      {
       " #": -0.14221932
      },
      {
       " 2": -0.006099772
      },
      {
       ":": -0.0008232539
      },
      {
       " wipe": -1.1640863
      },
      {
       " toilet": -0.7420927
      },
      {
       " brush": -0.06969699
      },
      {
       "\n": -0.02090873
      },
      {
       " grab": -0.7616841
      },
      {
       "('": -0.00093421456
      },
      {
       "to": -0.006877636
      },
      {
       "ilet": -0.00032085512
      },
      {
       "_": -0.010046313
      },
      {
       "brush": -0.00047290904
      },
      {
       "')": -0.0028785341
      },
      {
       "\n": -0.0046821954
      },
      {
       " #": -0.26197577
      },
      {
       " 3": -0.0067956
      },
      {
       ":": -0.00053588126
      },
      {
       " scrub": -0.8232779
      },
      {
       " the": -0.6591398
      },
      {
       "\n": -0.30138972
      },
      {
       " scrub": -0.7488732
      },
      {
       "('": -0.0013685169
      },
      {
       "close": -0.775587
      },
      {
       "'": -0.003676098
      },
      {
       " to": -0.0065026665
      },
      {
       " '": -0.0021262874
      },
      {
       "to": -0.006631121
      },
      {
       "ilet": -0.00036110257
      },
      {
       "')": -0.09402697
      },
      {
       "\n": -0.0032119057
      },
      {
       " else": -0.0023155361
      },
      {
       ":": -0.0012263537
      },
      {
       " find": -0.007522775
      },
      {
       "('": -0.0015135065
      },
      {
       "to": -0.00022158712
      },
      {
       "ilet": -8.6144464e-05
      },
      {
       "')": -0.002205255
      },
      {
       "\n": -0.005596935
      },
      {
       " scrub": -0.5808207
      },
      {
       "nt": -8.8051806e-05
      },
      {
       "o": -0.00039950278
      },
      {
       "('": -0.00061848067
      },
      {
       "to": -0.002212663
      },
      {
       "ilet": -0.00030785665
      },
      {
       "')": -0.053483326
      },
      {
       "\n": -0.0043585706
      },
      {
       " scrub": -0.6017466
      },
      {
       "('": -0.0022667854
      },
      {
       "to": -0.0019917197
      },
      {
       "ilet": -0.0001118973
      },
      {
       "_": -0.4389041
      },
      {
       "brush": -0.005593579
      },
      {
       "')": -0.007759597
      },
      {
       "\n": -0.007845844
      },
      {
       " #": -0.19034006
      },
      {
       " 4": -0.007928029
      },
      {
       ":": -0.0012888387
      },
      {
       " flush": -0.39201146
      },
      {
       " toilet": -0.5964936
      },
      {
       "\n": -0.032063063
      },
      {
       " flush": -0.48546275
      },
      {
       "('": -0.011327909
      },
      {
       "to": -0.00042889945
      },
      {
       "ilet": -0.00024120306
      },
      {
       "')": -0.006027391
      },
      {
       "\n": -0.0107914675
      },
      {
       " #": -0.0069177886
      },
      {
       " 5": -0.0042704535
      },
      {
       ":": -0.0016107552
      },
      {
       " put": -0.5789278
      },
      {
       " toilet": -0.48295182
      },
      {
       "\n": -0.18768083
      },
      {
       " wipe": -0.3647609
      },
      {
       "('": -0.0007488067
      },
      {
       "to": -0.00058060983
      },
      {
       "ilet": -2.7133337e-05
      },
      {
       "')": -0.017830953
      },
      {
       "\n": -0.03668627
      },
      {
       " #": -0.0276888
      },
      {
       " 6": -0.0045148334
      },
      {
       ":": -0.0021856625
      },
      {
       " put": -0.7825454
      },
      {
       " toilet": -0.6496293
      },
      {
       " back": -0.5339798
      },
      {
       " brush": -0.030869741
      },
      {
       " back": -0.13286285
      },
      {
       "\n": -0.024638027
      },
      {
       " put": -0.27325302
      },
      {
       "back": -0.5677799
      },
      {
       "back": -0.020156434
      },
      {
       "('": -0.0018082671
      },
      {
       "to": -0.021309907
      },
      {
       "ilet": -0.008404685
      },
      {
       "_": -0.005061578
      },
      {
       "clean": -0.13821125
      },
      {
       "er": -0.00016459411
      },
      {
       "')": -0.044255454
      },
      {
       "\n": -0.012108348
      },
      {
       " put": -0.031806633
      },
      {
       "obj": -0.020233613
      },
      {
       "back": -0.0007225029
      },
      {
       "('": -0.00063207984
      },
      {
       "to": -0.0016474124
      },
      {
       "ilet": -0.00011499579
      },
      {
       "_": -0.0013460156
      },
      {
       "brush": -0.00043235742
      },
      {
       "')": -0.003003954
      }
     ],
     "text_offset": [
      3163,
      3165,
      3167,
      3168,
      3173,
      3180,
      3181,
      3186,
      3188,
      3190,
      3194,
      3196,
      3197,
      3199,
      3201,
      3202,
      3207,
      3214,
      3222,
      3223,
      3230,
      3232,
      3237,
      3238,
      3241,
      3243,
      3245,
      3249,
      3251,
      3252,
      3257,
      3258,
      3263,
      3265,
      3267,
      3271,
      3273,
      3274,
      3279,
      3281,
      3283,
      3287,
      3288,
      3293,
      3295,
      3297,
      3298,
      3300,
      3302,
      3303,
      3308,
      3315,
      3321,
      3322,
      3327,
      3329,
      3331,
      3335,
      3336,
      3341,
      3343,
      3344,
      3346,
      3348,
      3349,
      3355,
      3362,
      3363,
      3370,
      3372,
      3377,
      3378,
      3381,
      3383,
      3385,
      3389,
      3391,
      3392,
      3397,
      3398,
      3403,
      3405,
      3407,
      3411,
      3413,
      3414,
      3418,
      3420,
      3421,
      3423,
      3425,
      3429,
      3431,
      3432,
      3437,
      3439,
      3441,
      3445,
      3446,
      3451,
      3453,
      3454,
      3456,
      3458,
      3459,
      3465,
      3472,
      3473,
      3479,
      3481,
      3483,
      3487,
      3489,
      3490,
      3492,
      3494,
      3495,
      3500,
      3507,
      3508,
      3513,
      3515,
      3517,
      3521,
      3523,
      3524,
      3526,
      3528,
      3529,
      3533,
      3541,
      3545,
      3551,
      3556,
      3557,
      3561,
      3564,
      3568,
      3570,
      3572,
      3576,
      3577,
      3582,
      3584,
      3586,
      3587,
      3591,
      3594,
      3598,
      3600,
      3602,
      3606,
      3607,
      3612
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Clean toilet",
   "task_description": "Clean the toilet with a brush.",
   "program": [
    "[Find] <brush> (1)",
    "[Grab] <brush> (1)",
    "[Walk] <bathroom> (1)",
    "[Walk] <toilet> (1)",
    "[Find] <toilet> (1)",
    "[Scrub] <toilet> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_turk_third",
   "file_id": "split74_2",
   "goal_condition": [
    [
     [
      198,
      262,
      "INSIDE",
      "character",
      "bathroom"
     ],
     [
      198,
      1000,
      "HOLDS_RH",
      "character",
      "brush"
     ],
     [
      1000,
      262,
      "INSIDE",
      "brush",
      "bathroom"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1108,
   "completion_tokens": 154,
   "total_tokens": 1262
  }
 },
 "6": {
  "plan": [
   [
    " # 0: walk to home office\n walk('home_office')\n # 1: find computer\n find('computer')\n # 2: turn on computer\n assert('close' to 'computer')\n else: find('computer')\n plugin('computer')\n # 3: open computer\n open('computer')\n # 4: find mouse\n find('mouse')\n # 5: move the mouse to turn on computer\n assert('close' to 'mouse')\n else: find('mouse')\n grab('mouse')\n turnto('mouse')\n pointat('mouse')\n # 6: find keyboard\n find('keyboard')\n # 7: type on the keyboard to open the computer\n grab('keyboard')\n turnto('keyboard')\n pointat('keyboard')\n # 8: Done\n print('Computer started successfully!')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " home",
      " office",
      "\n",
      " walk",
      "('",
      "home",
      "_",
      "office",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " computer",
      "\n",
      " find",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " turn",
      " on",
      " computer",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "computer",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "computer",
      "')",
      "\n",
      " plugin",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " open",
      " computer",
      "\n",
      " open",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " find",
      " mouse",
      "\n",
      " find",
      "('",
      "mouse",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " move",
      " the",
      " mouse",
      " to",
      " turn",
      " on",
      " computer",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "mouse",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "mouse",
      "')",
      "\n",
      " grab",
      "('",
      "mouse",
      "')",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "mouse",
      "')",
      "\n",
      " point",
      "at",
      "('",
      "mouse",
      "')",
      "\n",
      " #",
      " 6",
      ":",
      " find",
      " keyboard",
      "\n",
      " find",
      "('",
      "key",
      "board",
      "')",
      "\n",
      " #",
      " 7",
      ":",
      " type",
      " on",
      " the",
      " keyboard",
      " to",
      " open",
      " the",
      " computer",
      "\n",
      " grab",
      "('",
      "key",
      "board",
      "')",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "key",
      "board",
      "')",
      "\n",
      " point",
      "at",
      "('",
      "key",
      "board",
      "')",
      "\n",
      " #",
      " 8",
      ":",
      " Done",
      "\n",
      " print",
      "('",
      "Computer",
      " started",
      " successfully",
      "!",
      "')"
     ],
     "token_logprobs": [
      -0.021125736,
      -0.01004577,
      -0.0019704555,
      -0.7081028,
      -0.20018281,
      -2.4113925,
      -0.04940988,
      -0.026514424,
      -0.0063824477,
      -0.005095367,
      -0.012691075,
      -0.04277924,
      -0.00087885105,
      -0.0025587215,
      -0.008880491,
      -0.0033000526,
      -0.0036688019,
      -0.00076115556,
      -0.05374242,
      -0.3937927,
      -0.032500375,
      -0.33750203,
      -0.0014510092,
      -0.0014783456,
      -0.0016140387,
      -0.0061484687,
      -0.011240802,
      -0.0055164383,
      -0.0010114159,
      -1.0339226,
      -0.040237017,
      -0.489933,
      -0.023232585,
      -0.76002955,
      -0.002230283,
      -0.057205595,
      -0.005058584,
      -0.0013313342,
      -0.0040033325,
      -0.004517229,
      -0.007293692,
      -0.0053824354,
      -0.0019611404,
      -0.0017659302,
      -0.0053268233,
      -0.0019171288,
      -0.00078501605,
      -0.0028387252,
      -0.0065198266,
      -1.7944672,
      -0.0012233678,
      -0.0021992233,
      -0.0023574156,
      -0.013126288,
      -0.056982514,
      -0.007691241,
      -0.0010204869,
      -3.2145145,
      -1.0339057,
      -0.38537025,
      -0.27011383,
      -0.0028787737,
      -0.001424207,
      -0.0021556765,
      -0.012802212,
      -0.02532205,
      -0.005119931,
      -0.0017310593,
      -0.4669251,
      -0.6728997,
      -0.1829836,
      -0.037761435,
      -0.0011953829,
      -0.0006248053,
      -0.002534938,
      -0.005912805,
      -0.016662395,
      -0.004980766,
      -0.00062730775,
      -1.8655713,
      -2.2186751,
      -0.037427362,
      -1.9561051,
      -1.1622022,
      -0.07441355,
      -1.6741854,
      -0.018737512,
      -0.9187471,
      -0.0021319014,
      -0.13807492,
      -0.0038139443,
      -0.0010865398,
      -0.004615127,
      -0.014394723,
      -0.0132192345,
      -0.0037317956,
      -0.0019749966,
      -0.0018397945,
      -0.0069986354,
      -0.0021280784,
      -0.0014492173,
      -0.00191468,
      -0.0057195183,
      -1.5000929,
      -0.0014565004,
      -0.00042484637,
      -0.0022379905,
      -0.0055343597,
      -1.6235584,
      -0.00012226657,
      -0.00015386345,
      -0.0009811659,
      -0.2507083,
      -0.012776732,
      -0.0040230798,
      -0.52331585,
      -0.0029735246,
      -0.0009226992,
      -0.023577996,
      -0.0042077815,
      -0.059718844,
      -0.6362234,
      -0.007325816,
      -0.002445782,
      -0.8034249,
      -0.13927172,
      -0.028929641,
      -0.02185732,
      -0.0014605,
      -0.0002903283,
      -0.00071272027,
      -0.0018624272,
      -0.0055370573,
      -0.020272419,
      -0.01009803,
      -0.0008412093,
      -0.44503257,
      -1.1075038,
      -1.0061308,
      -0.029731859,
      -1.3863621,
      -2.425666,
      -1.2845253,
      -0.70480925,
      -0.026670756,
      -2.6927311,
      -0.00092067267,
      -0.0016310546,
      -0.0009376754,
      -0.0022250277,
      -0.004361744,
      -0.118229546,
      -7.2672e-05,
      -0.0004910945,
      -0.00053957955,
      -0.0025224474,
      -0.00067341333,
      -0.0010614177,
      -0.0028099746,
      -0.08863999,
      -0.00051160867,
      -0.00057226245,
      -0.00065611774,
      -0.000685521,
      -0.0016860426,
      -0.086782016,
      -1.3178792,
      -0.0032797796,
      -0.0028479896,
      -0.12731166,
      -0.43260413,
      -1.91812,
      -0.20928112,
      -0.24780653,
      -1.8089879,
      -1.8823829,
      -0.63974774,
      -0.0018037278
     ],
     "top_logprobs": [
      {
       " #": -0.021125736
      },
      {
       " 0": -0.01004577
      },
      {
       ":": -0.0019704555
      },
      {
       " walk": -0.7081028
      },
      {
       " to": -0.20018281
      },
      {
       " bedroom": -1.160247
      },
      {
       " office": -0.04940988
      },
      {
       "\n": -0.026514424
      },
      {
       " walk": -0.0063824477
      },
      {
       "('": -0.005095367
      },
      {
       "home": -0.012691075
      },
      {
       "_": -0.04277924
      },
      {
       "office": -0.00087885105
      },
      {
       "')": -0.0025587215
      },
      {
       "\n": -0.008880491
      },
      {
       " #": -0.0033000526
      },
      {
       " 1": -0.0036688019
      },
      {
       ":": -0.00076115556
      },
      {
       " find": -0.05374242
      },
      {
       " computer": -0.3937927
      },
      {
       "\n": -0.032500375
      },
      {
       " find": -0.33750203
      },
      {
       "('": -0.0014510092
      },
      {
       "computer": -0.0014783456
      },
      {
       "')": -0.0016140387
      },
      {
       "\n": -0.0061484687
      },
      {
       " #": -0.011240802
      },
      {
       " 2": -0.0055164383
      },
      {
       ":": -0.0010114159
      },
      {
       " turn": -1.0339226
      },
      {
       " on": -0.040237017
      },
      {
       " computer": -0.489933
      },
      {
       "\n": -0.023232585
      },
      {
       " assert": -0.76002955
      },
      {
       "('": -0.002230283
      },
      {
       "close": -0.057205595
      },
      {
       "'": -0.005058584
      },
      {
       " to": -0.0013313342
      },
      {
       " '": -0.0040033325
      },
      {
       "computer": -0.004517229
      },
      {
       "')": -0.007293692
      },
      {
       "\n": -0.0053824354
      },
      {
       " else": -0.0019611404
      },
      {
       ":": -0.0017659302
      },
      {
       " find": -0.0053268233
      },
      {
       "('": -0.0019171288
      },
      {
       "computer": -0.00078501605
      },
      {
       "')": -0.0028387252
      },
      {
       "\n": -0.0065198266
      },
      {
       " switch": -0.32276934
      },
      {
       "('": -0.0012233678
      },
      {
       "computer": -0.0021992233
      },
      {
       "')": -0.0023574156
      },
      {
       "\n": -0.013126288
      },
      {
       " #": -0.056982514
      },
      {
       " 3": -0.007691241
      },
      {
       ":": -0.0010204869
      },
      {
       " find": -0.54189
      },
      {
       " the": -0.9408492
      },
      {
       "\n": -0.38537025
      },
      {
       " open": -0.27011383
      },
      {
       "('": -0.0028787737
      },
      {
       "computer": -0.001424207
      },
      {
       "')": -0.0021556765
      },
      {
       "\n": -0.012802212
      },
      {
       " #": -0.02532205
      },
      {
       " 4": -0.005119931
      },
      {
       ":": -0.0017310593
      },
      {
       " find": -0.4669251
      },
      {
       " mouse": -0.6728997
      },
      {
       "\n": -0.1829836
      },
      {
       " find": -0.037761435
      },
      {
       "('": -0.0011953829
      },
      {
       "mouse": -0.0006248053
      },
      {
       "')": -0.002534938
      },
      {
       "\n": -0.005912805
      },
      {
       " #": -0.016662395
      },
      {
       " 5": -0.004980766
      },
      {
       ":": -0.00062730775
      },
      {
       " grab": -0.823808
      },
      {
       " mouse": -0.15226682
      },
      {
       " mouse": -0.037427362
      },
      {
       "\n": -0.24970628
      },
      {
       " turn": -1.1622022
      },
      {
       " on": -0.07441355
      },
      {
       " the": -0.38625586
      },
      {
       "\n": -0.018737512
      },
      {
       " assert": -0.9187471
      },
      {
       "('": -0.0021319014
      },
      {
       "close": -0.13807492
      },
      {
       "'": -0.0038139443
      },
      {
       " to": -0.0010865398
      },
      {
       " '": -0.004615127
      },
      {
       "mouse": -0.014394723
      },
      {
       "')": -0.0132192345
      },
      {
       "\n": -0.0037317956
      },
      {
       " else": -0.0019749966
      },
      {
       ":": -0.0018397945
      },
      {
       " find": -0.0069986354
      },
      {
       "('": -0.0021280784
      },
      {
       "mouse": -0.0014492173
      },
      {
       "')": -0.00191468
      },
      {
       "\n": -0.0057195183
      },
      {
       " move": -0.7452873
      },
      {
       "('": -0.0014565004
      },
      {
       "mouse": -0.00042484637
      },
      {
       "')": -0.0022379905
      },
      {
       "\n": -0.0055343597
      },
      {
       " move": -0.8994297
      },
      {
       "nt": -0.00012226657
      },
      {
       "o": -0.00015386345
      },
      {
       "('": -0.0009811659
      },
      {
       "mouse": -0.2507083
      },
      {
       "')": -0.012776732
      },
      {
       "\n": -0.0040230798
      },
      {
       " point": -0.52331585
      },
      {
       "at": -0.0029735246
      },
      {
       "('": -0.0009226992
      },
      {
       "mouse": -0.023577996
      },
      {
       "')": -0.0042077815
      },
      {
       "\n": -0.059718844
      },
      {
       " #": -0.6362234
      },
      {
       " 6": -0.007325816
      },
      {
       ":": -0.002445782
      },
      {
       " find": -0.8034249
      },
      {
       " keyboard": -0.13927172
      },
      {
       "\n": -0.028929641
      },
      {
       " find": -0.02185732
      },
      {
       "('": -0.0014605
      },
      {
       "key": -0.0002903283
      },
      {
       "board": -0.00071272027
      },
      {
       "')": -0.0018624272
      },
      {
       "\n": -0.0055370573
      },
      {
       " #": -0.020272419
      },
      {
       " 7": -0.01009803
      },
      {
       ":": -0.0008412093
      },
      {
       " type": -0.44503257
      },
      {
       " on": -1.1075038
      },
      {
       " keyboard": -0.48814356
      },
      {
       " keyboard": -0.029731859
      },
      {
       "\n": -0.30989367
      },
      {
       " start": -0.9281571
      },
      {
       " the": -1.2845253
      },
      {
       " computer": -0.70480925
      },
      {
       "\n": -0.026670756
      },
      {
       " assert": -0.11270242
      },
      {
       "('": -0.00092067267
      },
      {
       "key": -0.0016310546
      },
      {
       "board": -0.0009376754
      },
      {
       "')": -0.0022250277
      },
      {
       "\n": -0.004361744
      },
      {
       " tur": -0.118229546
      },
      {
       "nt": -7.2672e-05
      },
      {
       "o": -0.0004910945
      },
      {
       "('": -0.00053957955
      },
      {
       "key": -0.0025224474
      },
      {
       "board": -0.00067341333
      },
      {
       "')": -0.0010614177
      },
      {
       "\n": -0.0028099746
      },
      {
       " point": -0.08863999
      },
      {
       "at": -0.00051160867
      },
      {
       "('": -0.00057226245
      },
      {
       "key": -0.00065611774
      },
      {
       "board": -0.000685521
      },
      {
       "')": -0.0016860426
      },
      {
       "\n": -0.086782016
      },
      {
       " type": -0.47036225
      },
      {
       " 8": -0.0032797796
      },
      {
       ":": -0.0028479896
      },
      {
       " Done": -0.12731166
      },
      {
       "\n": -0.43260413
      },
      {
       " print": -1.91812
      },
      {
       "('": -0.20928112
      },
      {
       "Computer": -0.24780653
      },
      {
       " is": -0.50526553
      },
      {
       "')": -0.9382129
      },
      {
       "!": -0.63974774
      },
      {
       "')": -0.0018037278
      }
     ],
     "text_offset": [
      3165,
      3167,
      3169,
      3170,
      3175,
      3178,
      3183,
      3190,
      3191,
      3196,
      3198,
      3202,
      3203,
      3209,
      3211,
      3212,
      3214,
      3216,
      3217,
      3222,
      3231,
      3232,
      3237,
      3239,
      3247,
      3249,
      3250,
      3252,
      3254,
      3255,
      3260,
      3263,
      3272,
      3273,
      3280,
      3282,
      3287,
      3288,
      3291,
      3293,
      3301,
      3303,
      3304,
      3309,
      3310,
      3315,
      3317,
      3325,
      3327,
      3328,
      3335,
      3337,
      3345,
      3347,
      3348,
      3350,
      3352,
      3353,
      3358,
      3367,
      3368,
      3373,
      3375,
      3383,
      3385,
      3386,
      3388,
      3390,
      3391,
      3396,
      3402,
      3403,
      3408,
      3410,
      3415,
      3417,
      3418,
      3420,
      3422,
      3423,
      3428,
      3432,
      3438,
      3441,
      3446,
      3449,
      3458,
      3459,
      3466,
      3468,
      3473,
      3474,
      3477,
      3479,
      3484,
      3486,
      3487,
      3492,
      3493,
      3498,
      3500,
      3505,
      3507,
      3508,
      3513,
      3515,
      3520,
      3522,
      3523,
      3527,
      3529,
      3530,
      3532,
      3537,
      3539,
      3540,
      3546,
      3548,
      3550,
      3555,
      3557,
      3558,
      3560,
      3562,
      3563,
      3568,
      3577,
      3578,
      3583,
      3585,
      3588,
      3593,
      3595,
      3596,
      3598,
      3600,
      3601,
      3606,
      3609,
      3613,
      3622,
      3625,
      3630,
      3634,
      3643,
      3644,
      3649,
      3651,
      3654,
      3659,
      3661,
      3662,
      3666,
      3668,
      3669,
      3671,
      3674,
      3679,
      3681,
      3682,
      3688,
      3690,
      3692,
      3695,
      3700,
      3702,
      3703,
      3705,
      3707,
      3708,
      3713,
      3714,
      3720,
      3722,
      3730,
      3738,
      3751,
      3752
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Start computer",
   "task_description": "Sit in desk chair, press power button, let computer power on",
   "program": [
    "[Walk] <home_office> (1)",
    "[Walk] <chair> (1)",
    "[Find] <chair> (1)",
    "[Sit] <chair> (1)",
    "[Find] <computer> (1)",
    "[TurnTo] <computer> (1)",
    "[LookAt] <computer> (1)",
    "[SwitchOn] <computer> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_kellensecond",
   "file_id": "split11_9",
   "goal_condition": [
    [
     [
      198,
      1,
      "INSIDE",
      "character",
      "home_office"
     ],
     [
      198,
      17,
      "ON",
      "character",
      "chair"
     ],
     [
      198,
      98,
      "FACING",
      "character",
      "computer"
     ]
    ],
    [
     [
      98,
      "computer",
      "ON"
     ],
     [
      198,
      "character",
      "SITTING"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1107,
   "completion_tokens": 178,
   "total_tokens": 1285
  }
 },
 "7": {
  "plan": [
   [
    " # 0: walk into bedroom\n walk('bedroom')\n # 1: find alarm clock\n find('alarm_clock')\n # 2: grab alarm clock\n grab('alarm_clock')\n # 3: find bed\n find('bed')\n # 4: put alarm clock on bed\n puton('alarm_clock')\n # 5: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " into",
      " bedroom",
      "\n",
      " walk",
      "('",
      "bedroom",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " alarm",
      " clock",
      "\n",
      " find",
      "('",
      "al",
      "arm",
      "_",
      "clock",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " grab",
      " alarm",
      " clock",
      "\n",
      " grab",
      "('",
      "al",
      "arm",
      "_",
      "clock",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " find",
      " bed",
      "\n",
      " find",
      "('",
      "bed",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " put",
      " alarm",
      " clock",
      " on",
      " bed",
      "\n",
      " put",
      "on",
      "('",
      "al",
      "arm",
      "_",
      "clock",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.020204661,
      -0.00917442,
      -0.0020226566,
      -0.9526421,
      -2.7169113,
      -0.09391402,
      -0.030761186,
      -0.0056682653,
      -0.006539265,
      -0.0017048494,
      -0.001416805,
      -0.010642294,
      -0.002519041,
      -0.0030184211,
      -0.00054363545,
      -0.04377267,
      -0.43073708,
      -0.07378175,
      -0.022512987,
      -0.19580464,
      -0.0010857044,
      -0.0034326408,
      -0.00019988645,
      -0.019101305,
      -0.00052962045,
      -0.0025700135,
      -0.006522525,
      -0.010553201,
      -0.0034437054,
      -0.0009161371,
      -0.3235511,
      -0.31921685,
      -0.0076514785,
      -0.025399202,
      -0.4427332,
      -0.0012128681,
      -0.0004964617,
      -0.00017699462,
      -0.0039768806,
      -0.00039055935,
      -0.001592187,
      -0.0061012115,
      -0.38113892,
      -0.006009942,
      -0.0007959898,
      -1.5734104,
      -1.9180951,
      -0.24986216,
      -0.25377062,
      -0.0008364372,
      -0.0009848651,
      -0.0007136739,
      -0.0058798264,
      -0.0127546415,
      -0.005933311,
      -0.00070878543,
      -0.13636278,
      -0.1137064,
      -0.006697726,
      -0.19960083,
      -0.26539946,
      -0.037499327,
      -1.058799,
      -0.053829975,
      -0.0018623089,
      -0.09321258,
      -0.00018915485,
      -0.0027499045,
      -0.00069244066,
      -0.8492651,
      -0.5307776,
      -0.08613091,
      -0.005973124,
      -0.0016520091,
      -0.60067856
     ],
     "top_logprobs": [
      {
       " #": -0.020204661
      },
      {
       " 0": -0.00917442
      },
      {
       ":": -0.0020226566
      },
      {
       " find": -0.64991915
      },
      {
       " to": -0.32769138
      },
      {
       " bedroom": -0.09391402
      },
      {
       "\n": -0.030761186
      },
      {
       " walk": -0.0056682653
      },
      {
       "('": -0.006539265
      },
      {
       "bedroom": -0.0017048494
      },
      {
       "')": -0.001416805
      },
      {
       "\n": -0.010642294
      },
      {
       " #": -0.002519041
      },
      {
       " 1": -0.0030184211
      },
      {
       ":": -0.00054363545
      },
      {
       " find": -0.04377267
      },
      {
       " alarm": -0.43073708
      },
      {
       " clock": -0.07378175
      },
      {
       "\n": -0.022512987
      },
      {
       " find": -0.19580464
      },
      {
       "('": -0.0010857044
      },
      {
       "al": -0.0034326408
      },
      {
       "arm": -0.00019988645
      },
      {
       "_": -0.019101305
      },
      {
       "clock": -0.00052962045
      },
      {
       "')": -0.0025700135
      },
      {
       "\n": -0.006522525
      },
      {
       " #": -0.010553201
      },
      {
       " 2": -0.0034437054
      },
      {
       ":": -0.0009161371
      },
      {
       " grab": -0.3235511
      },
      {
       " alarm": -0.31921685
      },
      {
       " clock": -0.0076514785
      },
      {
       "\n": -0.025399202
      },
      {
       " grab": -0.4427332
      },
      {
       "('": -0.0012128681
      },
      {
       "al": -0.0004964617
      },
      {
       "arm": -0.00017699462
      },
      {
       "_": -0.0039768806
      },
      {
       "clock": -0.00039055935
      },
      {
       "')": -0.001592187
      },
      {
       "\n": -0.0061012115
      },
      {
       " #": -0.38113892
      },
      {
       " 3": -0.006009942
      },
      {
       ":": -0.0007959898
      },
      {
       " put": -0.63057834
      },
      {
       " night": -0.36122188
      },
      {
       "\n": -0.24986216
      },
      {
       " find": -0.25377062
      },
      {
       "('": -0.0008364372
      },
      {
       "bed": -0.0009848651
      },
      {
       "')": -0.0007136739
      },
      {
       "\n": -0.0058798264
      },
      {
       " #": -0.0127546415
      },
      {
       " 4": -0.005933311
      },
      {
       ":": -0.00070878543
      },
      {
       " put": -0.13636278
      },
      {
       " alarm": -0.1137064
      },
      {
       " clock": -0.006697726
      },
      {
       " on": -0.19960083
      },
      {
       " bed": -0.26539946
      },
      {
       "\n": -0.037499327
      },
      {
       " assert": -0.7251809
      },
      {
       "on": -0.053829975
      },
      {
       "('": -0.0018623089
      },
      {
       "al": -0.09321258
      },
      {
       "arm": -0.00018915485
      },
      {
       "_": -0.0027499045
      },
      {
       "clock": -0.00069244066
      },
      {
       "',": -0.8017187
      },
      {
       "\n": -0.5307776
      },
      {
       " #": -0.08613091
      },
      {
       " 5": -0.005973124
      },
      {
       ":": -0.0016520091
      },
      {
       " Done": -0.60067856
      }
     ],
     "text_offset": [
      3177,
      3179,
      3181,
      3182,
      3187,
      3192,
      3200,
      3201,
      3206,
      3208,
      3215,
      3217,
      3218,
      3220,
      3222,
      3223,
      3228,
      3234,
      3240,
      3241,
      3246,
      3248,
      3250,
      3253,
      3254,
      3259,
      3261,
      3262,
      3264,
      3266,
      3267,
      3272,
      3278,
      3284,
      3285,
      3290,
      3292,
      3294,
      3297,
      3298,
      3303,
      3305,
      3306,
      3308,
      3310,
      3311,
      3316,
      3320,
      3321,
      3326,
      3328,
      3331,
      3333,
      3334,
      3336,
      3338,
      3339,
      3343,
      3349,
      3355,
      3358,
      3362,
      3363,
      3367,
      3369,
      3371,
      3373,
      3376,
      3377,
      3382,
      3384,
      3385,
      3387,
      3389,
      3390
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Put alarm clock in bedroom",
   "task_description": "Take alarm clock. Sit it on stand, next to bed. Plug in alarm clock. Set time, according to watch. Set alarm, depending on what time you have to get up.",
   "program": [
    "[Walk] <bedroom> (1)",
    "[Walk] <alarm_clock> (1)",
    "[Find] <alarm_clock> (1)",
    "[Grab] <alarm_clock> (1)",
    "[Find] <dresser> (1)",
    "[Open] <dresser> (1)",
    "[PutBack] <alarm_clock> (1) <dresser> (1)",
    "[SwitchOn] <alarm_clock> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_kellensecond",
   "file_id": "split11_6",
   "goal_condition": [
    [
     [
      1000,
      241,
      "ON",
      "alarm_clock",
      "dresser"
     ],
     [
      198,
      199,
      "INSIDE",
      "character",
      "bedroom"
     ]
    ],
    [
     [
      241,
      "dresser",
      "OPEN"
     ],
     [
      1000,
      "alarm_clock",
      "ON"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1114,
   "completion_tokens": 75,
   "total_tokens": 1189
  }
 },
 "8": {
  "plan": [
   [
    " # 0: find mirror\n find('mirror')\n # 1: turn to the mirror\n turnto('mirror')\n # 2: look at the mirror\n lookat('mirror')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " mirror",
      "\n",
      " find",
      "('",
      "mir",
      "ror",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " turn",
      " to",
      " the",
      " mirror",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "mir",
      "ror",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " look",
      " at",
      " the",
      " mirror",
      "\n",
      " look",
      "at",
      "('",
      "mir",
      "ror",
      "')"
     ],
     "token_logprobs": [
      -0.024280462,
      -0.010105558,
      -0.0020535963,
      -1.3443561,
      -0.47156033,
      -0.030672193,
      -0.055660047,
      -0.00289079,
      -0.0015855029,
      -0.00096559647,
      -0.001388633,
      -0.009851804,
      -0.005292789,
      -0.0031985114,
      -0.00073926337,
      -1.4281669,
      -0.15369914,
      -1.3945894,
      -0.01032848,
      -0.022761742,
      -0.21064363,
      -3.4762696e-05,
      -0.0003170395,
      -0.00079217425,
      -0.00052842835,
      -0.0013516861,
      -0.0010434575,
      -0.0060662497,
      -0.2874384,
      -0.00516061,
      -0.00077368284,
      -0.1263371,
      -0.10004347,
      -0.067189984,
      -0.011236703,
      -0.0093348045,
      -0.04726565,
      -0.0011714529,
      -0.00060989487,
      -0.00031751726,
      -0.0005472136,
      -0.0020162635
     ],
     "top_logprobs": [
      {
       " #": -0.024280462
      },
      {
       " 0": -0.010105558
      },
      {
       ":": -0.0020535963
      },
      {
       " walk": -0.4425082
      },
      {
       " mirror": -0.47156033
      },
      {
       "\n": -0.030672193
      },
      {
       " find": -0.055660047
      },
      {
       "('": -0.00289079
      },
      {
       "mir": -0.0015855029
      },
      {
       "ror": -0.00096559647
      },
      {
       "')": -0.001388633
      },
      {
       "\n": -0.009851804
      },
      {
       " #": -0.005292789
      },
      {
       " 1": -0.0031985114
      },
      {
       ":": -0.00073926337
      },
      {
       " walk": -1.4246849
      },
      {
       " to": -0.15369914
      },
      {
       " mirror": -0.49906152
      },
      {
       " mirror": -0.01032848
      },
      {
       "\n": -0.022761742
      },
      {
       " tur": -0.21064363
      },
      {
       "nt": -3.4762696e-05
      },
      {
       "o": -0.0003170395
      },
      {
       "('": -0.00079217425
      },
      {
       "mir": -0.00052842835
      },
      {
       "ror": -0.0013516861
      },
      {
       "')": -0.0010434575
      },
      {
       "\n": -0.0060662497
      },
      {
       " #": -0.2874384
      },
      {
       " 2": -0.00516061
      },
      {
       ":": -0.00077368284
      },
      {
       " look": -0.1263371
      },
      {
       " at": -0.10004347
      },
      {
       " the": -0.067189984
      },
      {
       " mirror": -0.011236703
      },
      {
       "\n": -0.0093348045
      },
      {
       " look": -0.04726565
      },
      {
       "at": -0.0011714529
      },
      {
       "('": -0.00060989487
      },
      {
       "mir": -0.00031751726
      },
      {
       "ror": -0.0005472136
      },
      {
       "')": -0.0020162635
      }
     ],
     "text_offset": [
      3165,
      3167,
      3169,
      3170,
      3175,
      3182,
      3183,
      3188,
      3190,
      3193,
      3196,
      3198,
      3199,
      3201,
      3203,
      3204,
      3209,
      3212,
      3216,
      3223,
      3224,
      3228,
      3230,
      3231,
      3233,
      3236,
      3239,
      3241,
      3242,
      3244,
      3246,
      3247,
      3252,
      3255,
      3259,
      3266,
      3267,
      3272,
      3274,
      3276,
      3279,
      3282
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Look at mirror",
   "task_description": "I look at my reflection to check my cleanliness.",
   "program": [
    "[Walk] <bathroom> (1)",
    "[Walk] <mirror> (1)",
    "[Find] <mirror> (1)",
    "[TurnTo] <mirror> (1)",
    "[LookAt] <mirror> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_kellensecond",
   "file_id": "split3_4",
   "goal_condition": [
    [
     [
      198,
      1000,
      "FACING",
      "character",
      "mirror"
     ],
     [
      198,
      262,
      "INSIDE",
      "character",
      "bathroom"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1110,
   "completion_tokens": 42,
   "total_tokens": 1152
  }
 },
 "9": {
  "plan": [
   [
    " # 0: walk to bed room\n walk('bedroom')\n # 1: find bed\n walk('bed')\n find('bed')\n # 2: lay down on bed\n turnto('bed')\n lookat('bed')\n assert('close' to 'bed')\n else: find('bed')\n else: turnto('bed')\n sit('bed')\n lie()\n # 3: take a nap\n sleep()\ndef make_a_cup_of_coffee():\n # 0: walk to kitchen\n walk('kitchen')\n # 1: find coffee maker\n find('coffee_maker')\n # 2: grab the coffee pot\n grab('coffee_pot')\n # 3: find coffee\n find('coffee')\n # 4: pour coffee in to the pot\n pour('coffee')\n # 5: put the pot on the coffee maker\n puton('coffee_pot')\n # 6: switch on the coffee maker\n switchon('coffee_maker')\n # 7: wait for the coffee to be done\n waitfor('coffee_maker')\n # 8: take the pot off\n takeoff('coffee_pot')\n # 9: serve the coffee\n serve('coffee')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " bed",
      " room",
      "\n",
      " walk",
      "('",
      "bedroom",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " bed",
      "\n",
      " walk",
      "('",
      "bed",
      "')",
      "\n",
      " find",
      "('",
      "bed",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " lay",
      " down",
      " on",
      " bed",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "bed",
      "')",
      "\n",
      " look",
      "at",
      "('",
      "bed",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "bed",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "bed",
      "')",
      "\n",
      " else",
      ":",
      " tur",
      "nt",
      "o",
      "('",
      "bed",
      "')",
      "\n",
      " sit",
      "('",
      "bed",
      "')",
      "\n",
      " lie",
      "()",
      "\n",
      " #",
      " 3",
      ":",
      " take",
      " a",
      " nap",
      "\n",
      " sleep",
      "()",
      "\n",
      "def",
      " make",
      "_",
      "a",
      "_",
      "cup",
      "_",
      "of",
      "_",
      "co",
      "ffee",
      "():",
      "\n",
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " kitchen",
      "\n",
      " walk",
      "('",
      "kit",
      "chen",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " coffee",
      " maker",
      "\n",
      " find",
      "('",
      "co",
      "ffee",
      "_",
      "maker",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " grab",
      " the",
      " coffee",
      " pot",
      "\n",
      " grab",
      "('",
      "co",
      "ffee",
      "_",
      "pot",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " find",
      " coffee",
      "\n",
      " find",
      "('",
      "co",
      "ffee",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " pour",
      " coffee",
      " in",
      " to",
      " the",
      " pot",
      "\n",
      " pour",
      "('",
      "co",
      "ffee",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " put",
      " the",
      " pot",
      " on",
      " the",
      " coffee",
      " maker",
      "\n",
      " put",
      "on",
      "('",
      "co",
      "ffee",
      "_",
      "pot",
      "')",
      "\n",
      " #",
      " 6",
      ":",
      " switch",
      " on",
      " the",
      " coffee",
      " maker",
      "\n",
      " switch",
      "on",
      "('",
      "co",
      "ffee",
      "_",
      "maker",
      "')",
      "\n",
      " #",
      " 7",
      ":",
      " wait",
      " for",
      " the",
      " coffee",
      " to",
      " be",
      " done",
      "\n",
      " wait",
      "for",
      "('",
      "co",
      "ffee",
      "_",
      "maker",
      "')",
      "\n",
      " #",
      " 8",
      ":",
      " take",
      " the",
      " pot",
      " off",
      "\n",
      " take",
      "off",
      "('",
      "co",
      "ffee",
      "_",
      "pot",
      "')",
      "\n",
      " #",
      " 9",
      ":",
      " serve",
      " the",
      " coffee",
      "\n",
      " serve",
      "('",
      "co",
      "ffee",
      "')"
     ],
     "token_logprobs": [
      -0.019428277,
      -0.010427252,
      -0.0022933127,
      -0.5913296,
      -0.68024486,
      -1.2674958,
      -0.8999654,
      -0.022065021,
      -0.0049148146,
      -0.0041888067,
      -0.027681507,
      -0.001263237,
      -0.0058042267,
      -0.005179303,
      -0.0038221413,
      -0.0006933953,
      -0.06905569,
      -0.034591615,
      -0.016772034,
      -0.601467,
      -0.00073926337,
      -0.0002939055,
      -0.0007588887,
      -0.0027863043,
      -0.005790259,
      -0.00043653257,
      -9.186649e-05,
      -0.0002912829,
      -0.003530078,
      -0.0015535043,
      -0.0047587915,
      -0.0004896621,
      -0.19109395,
      -0.013938348,
      -0.027210943,
      -0.010474895,
      -0.011001584,
      -0.020802531,
      -2.3078366e-05,
      -0.00011058788,
      -0.00022087281,
      -0.00013931624,
      -0.00082349137,
      -0.0023030492,
      -0.0217018,
      -0.00012226657,
      -0.00024525335,
      -0.00010402765,
      -0.00018224075,
      -0.0018273152,
      -0.0076358025,
      -0.0002629028,
      -0.0004236524,
      -0.00082301453,
      -0.0003392808,
      -0.0003746971,
      -0.00012977766,
      -0.0008141856,
      -0.0017099839,
      -0.00055114744,
      -0.00058866065,
      -0.0014336386,
      -0.0004645588,
      -0.00010665305,
      -0.0004941948,
      -0.0021484469,
      -0.13125171,
      -0.0006636326,
      -0.0034262398,
      -2.4986643e-05,
      -0.00030606854,
      -0.000403677,
      -0.00013001703,
      -0.00037016338,
      -0.0012314853,
      -0.20442231,
      -0.00031536963,
      -7.1958624e-05,
      -0.00071176566,
      -0.0029957623,
      -1.279937,
      -0.81276083,
      -0.014700317,
      -1.0206722,
      -0.014649087,
      -0.0016339213,
      -1.1316919,
      -0.27338156,
      -0.021747421,
      -0.026203241,
      -0.04525459,
      -0.047770124,
      -1.3922592,
      -1.5898062,
      -0.9842591,
      -0.00071785087,
      -3.5882115,
      -6.2299914e-05,
      -1.9343364,
      -0.0026707135,
      -0.0051613883,
      -0.0003266982,
      -0.45369333,
      -0.009377401,
      -0.051045604,
      -0.016333543,
      -0.013424972,
      -0.007297595,
      -0.0021843503,
      -0.71292055,
      -0.11144916,
      -0.08110805,
      -0.042519607,
      -0.0036192064,
      -0.003300292,
      -0.0018818356,
      -8.149626e-05,
      -0.0031306462,
      -0.0072280127,
      -0.0035941426,
      -0.0037944973,
      -0.00072494993,
      -0.040688425,
      -0.19203886,
      -1.701734,
      -0.034741998,
      -0.33659285,
      -0.0014776293,
      -0.00042019345,
      -0.061845563,
      -0.011450474,
      -0.0058533894,
      -0.0021854232,
      -0.007090176,
      -0.011657054,
      -0.004055099,
      -0.00090540084,
      -2.457532,
      -2.1774957,
      -0.13712303,
      -0.5415905,
      -0.045310535,
      -0.46614885,
      -0.0012663401,
      -0.00030213463,
      -0.004840904,
      -0.0032020397,
      -0.0022786744,
      -0.004043368,
      -0.005649322,
      -0.13952944,
      -0.0057803066,
      -0.001093223,
      -3.4265788,
      -1.2535261,
      -0.52938455,
      -0.040348347,
      -0.0010824228,
      -0.0019903465,
      -0.0037846272,
      -0.0059062704,
      -0.0051151384,
      -0.014571426,
      -0.004123508,
      -0.00094626687,
      -0.5404629,
      -0.54303074,
      -0.8500681,
      -1.4927932,
      -0.75883156,
      -0.7494385,
      -0.016052283,
      -0.34361517,
      -0.0033869492,
      -0.0004934796,
      -0.0016214419,
      -0.9146726,
      -0.014088918,
      -0.10922336,
      -0.0030462241,
      -0.0011335014,
      -1.6379875,
      -0.52363765,
      -0.22570048,
      -0.34988406,
      -0.09763059,
      -1.346518,
      -0.011722908,
      -0.019859863,
      -0.21880995,
      -0.04701829,
      -0.0010274677,
      -0.09261769,
      -0.001950573,
      -0.0028034,
      -0.0636751,
      -0.11833481,
      -0.009467532,
      -0.07637216,
      -0.0028891156,
      -0.0015315934,
      -0.71215,
      -0.046047676,
      -0.032919034,
      -0.048650842,
      -0.007292311,
      -0.019550439,
      -0.040106345,
      -0.00083500484,
      -0.0006793165,
      -0.000179498,
      -0.005216812,
      -0.0010249014,
      -0.0028788939,
      -0.0016000087,
      -0.0058331843,
      -0.0036299757,
      -0.0073564365,
      -0.000807982,
      -0.55115503,
      -0.29989588,
      -0.5179564,
      -0.02143291,
      -0.24049506,
      -0.29486585,
      -1.5758806,
      -0.016539432,
      -0.27159894,
      -3.2483623,
      -0.02550308,
      -0.017515,
      -0.008985734,
      -0.35719112,
      -0.28939834,
      -0.03830642,
      -0.013166146,
      -0.0052473703,
      -0.001422417,
      -0.0015449071,
      -2.625077,
      -0.23031703,
      -0.31622514,
      -0.53951454,
      -1.9416268,
      -0.67680514,
      -0.03155158,
      -0.0008947209,
      -0.00114287,
      -0.0005583038,
      -0.0006842087,
      -0.0075703384,
      -0.0028515772,
      -0.004364858,
      -0.0018644575,
      -0.0043310337,
      -0.001121327,
      -3.9023945,
      -0.22649048,
      -0.01720921,
      -0.08522381,
      -0.3543757,
      -0.011006768,
      -0.0011018135,
      -0.0014288637,
      -0.44941804
     ],
     "top_logprobs": [
      {
       " #": -0.019428277
      },
      {
       " 0": -0.010427252
      },
      {
       ":": -0.0022933127
      },
      {
       " walk": -0.5913296
      },
      {
       " to": -0.68024486
      },
      {
       " bedroom": -0.40353078
      },
      {
       "\n": -0.56573206
      },
      {
       "\n": -0.022065021
      },
      {
       " walk": -0.0049148146
      },
      {
       "('": -0.0041888067
      },
      {
       "bedroom": -0.027681507
      },
      {
       "')": -0.001263237
      },
      {
       "\n": -0.0058042267
      },
      {
       " #": -0.005179303
      },
      {
       " 1": -0.0038221413
      },
      {
       ":": -0.0006933953
      },
      {
       " find": -0.06905569
      },
      {
       " bed": -0.034591615
      },
      {
       "\n": -0.016772034
      },
      {
       " walk": -0.601467
      },
      {
       "('": -0.00073926337
      },
      {
       "bed": -0.0002939055
      },
      {
       "')": -0.0007588887
      },
      {
       "\n": -0.0027863043
      },
      {
       " find": -0.005790259
      },
      {
       "('": -0.00043653257
      },
      {
       "bed": -9.186649e-05
      },
      {
       "')": -0.0002912829
      },
      {
       "\n": -0.003530078
      },
      {
       " #": -0.0015535043
      },
      {
       " 2": -0.0047587915
      },
      {
       ":": -0.0004896621
      },
      {
       " lay": -0.19109395
      },
      {
       " down": -0.013938348
      },
      {
       " on": -0.027210943
      },
      {
       " bed": -0.010474895
      },
      {
       "\n": -0.011001584
      },
      {
       " tur": -0.020802531
      },
      {
       "nt": -2.3078366e-05
      },
      {
       "o": -0.00011058788
      },
      {
       "('": -0.00022087281
      },
      {
       "bed": -0.00013931624
      },
      {
       "')": -0.00082349137
      },
      {
       "\n": -0.0023030492
      },
      {
       " look": -0.0217018
      },
      {
       "at": -0.00012226657
      },
      {
       "('": -0.00024525335
      },
      {
       "bed": -0.00010402765
      },
      {
       "')": -0.00018224075
      },
      {
       "\n": -0.0018273152
      },
      {
       " assert": -0.0076358025
      },
      {
       "('": -0.0002629028
      },
      {
       "close": -0.0004236524
      },
      {
       "'": -0.00082301453
      },
      {
       " to": -0.0003392808
      },
      {
       " '": -0.0003746971
      },
      {
       "bed": -0.00012977766
      },
      {
       "')": -0.0008141856
      },
      {
       "\n": -0.0017099839
      },
      {
       " else": -0.00055114744
      },
      {
       ":": -0.00058866065
      },
      {
       " find": -0.0014336386
      },
      {
       "('": -0.0004645588
      },
      {
       "bed": -0.00010665305
      },
      {
       "')": -0.0004941948
      },
      {
       "\n": -0.0021484469
      },
      {
       " else": -0.13125171
      },
      {
       ":": -0.0006636326
      },
      {
       " tur": -0.0034262398
      },
      {
       "nt": -2.4986643e-05
      },
      {
       "o": -0.00030606854
      },
      {
       "('": -0.000403677
      },
      {
       "bed": -0.00013001703
      },
      {
       "')": -0.00037016338
      },
      {
       "\n": -0.0012314853
      },
      {
       " sit": -0.20442231
      },
      {
       "('": -0.00031536963
      },
      {
       "bed": -7.1958624e-05
      },
      {
       "')": -0.00071176566
      },
      {
       "\n": -0.0029957623
      },
      {
       " sleep": -0.5611983
      },
      {
       "('": -0.60007805
      },
      {
       "\n": -0.014700317
      },
      {
       " sleep": -0.51982623
      },
      {
       " 3": -0.014649087
      },
      {
       ":": -0.0016339213
      },
      {
       " take": -1.1316919
      },
      {
       " a": -0.27338156
      },
      {
       " nap": -0.021747421
      },
      {
       "\n": -0.026203241
      },
      {
       " sleep": -0.04525459
      },
      {
       "()": -0.047770124
      },
      {
       "<|endoftext|>": -0.3086964
      },
      {
       " #": -0.6583411
      },
      {
       " make": -0.9842591
      },
      {
       "_": -0.00071785087
      },
      {
       "co": -0.35956234
      },
      {
       "_": -6.2299914e-05
      },
      {
       "sand": -0.9887282
      },
      {
       "_": -0.0026707135
      },
      {
       "of": -0.0051613883
      },
      {
       "_": -0.0003266982
      },
      {
       "co": -0.45369333
      },
      {
       "ffee": -0.009377401
      },
      {
       "():": -0.051045604
      },
      {
       "\n": -0.016333543
      },
      {
       " #": -0.013424972
      },
      {
       " 0": -0.007297595
      },
      {
       ":": -0.0021843503
      },
      {
       " walk": -0.71292055
      },
      {
       " to": -0.11144916
      },
      {
       " kitchen": -0.08110805
      },
      {
       "\n": -0.042519607
      },
      {
       " walk": -0.0036192064
      },
      {
       "('": -0.003300292
      },
      {
       "kit": -0.0018818356
      },
      {
       "chen": -8.149626e-05
      },
      {
       "')": -0.0031306462
      },
      {
       "\n": -0.0072280127
      },
      {
       " #": -0.0035941426
      },
      {
       " 1": -0.0037944973
      },
      {
       ":": -0.00072494993
      },
      {
       " find": -0.040688425
      },
      {
       " coffee": -0.19203886
      },
      {
       " pot": -0.36374688
      },
      {
       "\n": -0.034741998
      },
      {
       " find": -0.33659285
      },
      {
       "('": -0.0014776293
      },
      {
       "co": -0.00042019345
      },
      {
       "ffee": -0.061845563
      },
      {
       "_": -0.011450474
      },
      {
       "maker": -0.0058533894
      },
      {
       "')": -0.0021854232
      },
      {
       "\n": -0.007090176
      },
      {
       " #": -0.011657054
      },
      {
       " 2": -0.004055099
      },
      {
       ":": -0.00090540084
      },
      {
       " turn": -1.6121389
      },
      {
       " coffee": -0.44395718
      },
      {
       " coffee": -0.13712303
      },
      {
       " pot": -0.5415905
      },
      {
       "\n": -0.045310535
      },
      {
       " grab": -0.46614885
      },
      {
       "('": -0.0012663401
      },
      {
       "co": -0.00030213463
      },
      {
       "ffee": -0.004840904
      },
      {
       "_": -0.0032020397
      },
      {
       "pot": -0.0022786744
      },
      {
       "')": -0.004043368
      },
      {
       "\n": -0.005649322
      },
      {
       " #": -0.13952944
      },
      {
       " 3": -0.0057803066
      },
      {
       ":": -0.001093223
      },
      {
       " fill": -0.48419535
      },
      {
       " the": -1.175071
      },
      {
       "\n": -0.52938455
      },
      {
       " find": -0.040348347
      },
      {
       "('": -0.0010824228
      },
      {
       "co": -0.0019903465
      },
      {
       "ffee": -0.0037846272
      },
      {
       "')": -0.0059062704
      },
      {
       "\n": -0.0051151384
      },
      {
       " #": -0.014571426
      },
      {
       " 4": -0.004123508
      },
      {
       ":": -0.00094626687
      },
      {
       " pour": -0.5404629
      },
      {
       " coffee": -0.54303074
      },
      {
       " into": -0.66460323
      },
      {
       " the": -0.9253617
      },
      {
       " the": -0.75883156
      },
      {
       " coffee": -0.6824676
      },
      {
       "\n": -0.016052283
      },
      {
       " pour": -0.34361517
      },
      {
       "('": -0.0033869492
      },
      {
       "co": -0.0004934796
      },
      {
       "ffee": -0.0016214419
      },
      {
       "')": -0.9146726
      },
      {
       "\n": -0.014088918
      },
      {
       " #": -0.10922336
      },
      {
       " 5": -0.0030462241
      },
      {
       ":": -0.0011335014
      },
      {
       " find": -1.2801405
      },
      {
       " the": -0.52363765
      },
      {
       " pot": -0.22570048
      },
      {
       " on": -0.34988406
      },
      {
       " the": -0.09763059
      },
      {
       " stove": -0.5339875
      },
      {
       " maker": -0.011722908
      },
      {
       "\n": -0.019859863
      },
      {
       " put": -0.21880995
      },
      {
       "on": -0.04701829
      },
      {
       "('": -0.0010274677
      },
      {
       "co": -0.09261769
      },
      {
       "ffee": -0.001950573
      },
      {
       "_": -0.0028034
      },
      {
       "pot": -0.0636751
      },
      {
       "')": -0.11833481
      },
      {
       "\n": -0.009467532
      },
      {
       " #": -0.07637216
      },
      {
       " 6": -0.0028891156
      },
      {
       ":": -0.0015315934
      },
      {
       " switch": -0.71215
      },
      {
       " on": -0.046047676
      },
      {
       " the": -0.032919034
      },
      {
       " coffee": -0.048650842
      },
      {
       " maker": -0.007292311
      },
      {
       "\n": -0.019550439
      },
      {
       " switch": -0.040106345
      },
      {
       "on": -0.00083500484
      },
      {
       "('": -0.0006793165
      },
      {
       "co": -0.000179498
      },
      {
       "ffee": -0.005216812
      },
      {
       "_": -0.0010249014
      },
      {
       "maker": -0.0028788939
      },
      {
       "')": -0.0016000087
      },
      {
       "\n": -0.0058331843
      },
      {
       " #": -0.0036299757
      },
      {
       " 7": -0.0073564365
      },
      {
       ":": -0.000807982
      },
      {
       " wait": -0.55115503
      },
      {
       " for": -0.29989588
      },
      {
       " the": -0.5179564
      },
      {
       " coffee": -0.02143291
      },
      {
       " to": -0.24049506
      },
      {
       " be": -0.29486585
      },
      {
       " ready": -0.35999557
      },
      {
       "\n": -0.016539432
      },
      {
       " wait": -0.27159894
      },
      {
       "('": -0.7869204
      },
      {
       "('": -0.02550308
      },
      {
       "co": -0.017515
      },
      {
       "ffee": -0.008985734
      },
      {
       "_": -0.35719112
      },
      {
       "maker": -0.28939834
      },
      {
       "')": -0.03830642
      },
      {
       "\n": -0.013166146
      },
      {
       " #": -0.0052473703
      },
      {
       " 8": -0.001422417
      },
      {
       ":": -0.0015449071
      },
      {
       " grab": -0.44030833
      },
      {
       " the": -0.23031703
      },
      {
       " pot": -0.31622514
      },
      {
       " off": -0.53951454
      },
      {
       " the": -0.26741907
      },
      {
       " take": -0.67680514
      },
      {
       "off": -0.03155158
      },
      {
       "('": -0.0008947209
      },
      {
       "co": -0.00114287
      },
      {
       "ffee": -0.0005583038
      },
      {
       "_": -0.0006842087
      },
      {
       "pot": -0.0075703384
      },
      {
       "')": -0.0028515772
      },
      {
       "\n": -0.004364858
      },
      {
       " #": -0.0018644575
      },
      {
       " 9": -0.0043310337
      },
      {
       ":": -0.001121327
      },
      {
       " pour": -0.6129442
      },
      {
       " the": -0.22649048
      },
      {
       " coffee": -0.01720921
      },
      {
       "\n": -0.08522381
      },
      {
       " serve": -0.3543757
      },
      {
       "('": -0.011006768
      },
      {
       "co": -0.0011018135
      },
      {
       "ffee": -0.0014288637
      },
      {
       "')": -0.44941804
      }
     ],
     "text_offset": [
      3159,
      3161,
      3163,
      3164,
      3169,
      3172,
      3176,
      3181,
      3182,
      3187,
      3189,
      3196,
      3198,
      3199,
      3201,
      3203,
      3204,
      3209,
      3213,
      3214,
      3219,
      3221,
      3224,
      3226,
      3227,
      3232,
      3234,
      3237,
      3239,
      3240,
      3242,
      3244,
      3245,
      3249,
      3254,
      3257,
      3261,
      3262,
      3266,
      3268,
      3269,
      3271,
      3274,
      3276,
      3277,
      3282,
      3284,
      3286,
      3289,
      3291,
      3292,
      3299,
      3301,
      3306,
      3307,
      3310,
      3312,
      3315,
      3317,
      3318,
      3323,
      3324,
      3329,
      3331,
      3334,
      3336,
      3337,
      3342,
      3343,
      3347,
      3349,
      3350,
      3352,
      3355,
      3357,
      3358,
      3362,
      3364,
      3367,
      3369,
      3370,
      3374,
      3376,
      3377,
      3379,
      3381,
      3382,
      3387,
      3389,
      3393,
      3394,
      3400,
      3402,
      3403,
      3406,
      3411,
      3412,
      3413,
      3414,
      3417,
      3418,
      3420,
      3421,
      3423,
      3427,
      3430,
      3431,
      3433,
      3435,
      3436,
      3441,
      3444,
      3452,
      3453,
      3458,
      3460,
      3463,
      3467,
      3469,
      3470,
      3472,
      3474,
      3475,
      3480,
      3487,
      3493,
      3494,
      3499,
      3501,
      3503,
      3507,
      3508,
      3513,
      3515,
      3516,
      3518,
      3520,
      3521,
      3526,
      3530,
      3537,
      3541,
      3542,
      3547,
      3549,
      3551,
      3555,
      3556,
      3559,
      3561,
      3562,
      3564,
      3566,
      3567,
      3572,
      3579,
      3580,
      3585,
      3587,
      3589,
      3593,
      3595,
      3596,
      3598,
      3600,
      3601,
      3606,
      3613,
      3616,
      3619,
      3623,
      3627,
      3628,
      3633,
      3635,
      3637,
      3641,
      3643,
      3644,
      3646,
      3648,
      3649,
      3653,
      3657,
      3661,
      3664,
      3668,
      3675,
      3681,
      3682,
      3686,
      3688,
      3690,
      3692,
      3696,
      3697,
      3700,
      3702,
      3703,
      3705,
      3707,
      3708,
      3715,
      3718,
      3722,
      3729,
      3735,
      3736,
      3743,
      3745,
      3747,
      3749,
      3753,
      3754,
      3759,
      3761,
      3762,
      3764,
      3766,
      3767,
      3772,
      3776,
      3780,
      3787,
      3790,
      3793,
      3798,
      3799,
      3804,
      3807,
      3809,
      3811,
      3815,
      3816,
      3821,
      3823,
      3824,
      3826,
      3828,
      3829,
      3834,
      3838,
      3842,
      3846,
      3847,
      3852,
      3855,
      3857,
      3859,
      3863,
      3864,
      3867,
      3869,
      3870,
      3872,
      3874,
      3875,
      3881,
      3885,
      3892,
      3893,
      3899,
      3901,
      3903,
      3907
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Take nap",
   "task_description": "Sleep for a short amount of time during the day",
   "program": [
    "[Walk] <bedroom> (1)",
    "[Walk] <bed> (1)",
    "[Find] <bed> (1)",
    "[Lie] <bed> (1)",
    "[Sleep]"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_july",
   "file_id": "split6_5",
   "goal_condition": [
    [
     [
      198,
      199,
      "INSIDE",
      "character",
      "bedroom"
     ],
     [
      198,
      260,
      "ON",
      "character",
      "bed"
     ]
    ],
    [
     [
      198,
      "character",
      "LYING"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1108,
   "completion_tokens": 265,
   "total_tokens": 1373
  }
 },
 "10": {
  "plan": [
   [
    " # 0: find sink\n find('sink')\n # 1: turn on faucet\n switchon('faucet')\n # 2: pour some water\n pour('water')\n # 3: grab towel\n grab('towel')\n # 4: wash face\n wash('face')\n # 5: dry face\n wipe('face')\n # 6: put towel back\n putback('towel')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " sink",
      "\n",
      " find",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " turn",
      " on",
      " f",
      "auc",
      "et",
      "\n",
      " switch",
      "on",
      "('",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " pour",
      " some",
      " water",
      "\n",
      " pour",
      "('",
      "water",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " grab",
      " towel",
      "\n",
      " grab",
      "('",
      "t",
      "ow",
      "el",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " wash",
      " face",
      "\n",
      " wash",
      "('",
      "face",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " dry",
      " face",
      "\n",
      " wipe",
      "('",
      "face",
      "')",
      "\n",
      " #",
      " 6",
      ":",
      " put",
      " towel",
      " back",
      "\n",
      " put",
      "back",
      "('",
      "t",
      "ow",
      "el",
      "')"
     ],
     "token_logprobs": [
      -0.018426249,
      -0.0069351937,
      -0.0016933256,
      -0.9722132,
      -0.48791724,
      -0.03536863,
      -0.13967788,
      -0.0020858485,
      -0.0011456128,
      -0.00014015351,
      -0.001628845,
      -0.008190909,
      -0.009651737,
      -0.0034877872,
      -0.00072142907,
      -0.90177846,
      -0.19035123,
      -0.873133,
      -0.0023985812,
      -0.002667665,
      -0.03842199,
      -3.519613,
      -0.0030405454,
      -0.0017976969,
      -0.005243595,
      -0.0005519829,
      -0.00083315483,
      -0.0022535832,
      -0.0052144146,
      -0.059512217,
      -0.005372847,
      -0.000787282,
      -1.4768286,
      -3.251892,
      -0.0273223,
      -0.44880778,
      -0.6659135,
      -0.004610997,
      -0.048720993,
      -0.018726157,
      -0.0078787645,
      -0.03259847,
      -0.0052788253,
      -0.0009705497,
      -0.61892223,
      -2.046489,
      -0.03930043,
      -0.87863547,
      -0.0013732346,
      -0.00043032994,
      -0.00074844714,
      -0.000100332174,
      -0.0021674423,
      -0.005057864,
      -0.044165812,
      -0.004502259,
      -0.00059092935,
      -1.8180168,
      -0.08095712,
      -0.13038309,
      -0.5712866,
      -0.0029747204,
      -0.0032190236,
      -0.002672148,
      -0.0049306895,
      -0.018670041,
      -0.003802935,
      -0.0010022292,
      -0.91202855,
      -0.11063466,
      -0.1974923,
      -0.09359141,
      -0.001258403,
      -0.030028414,
      -0.025347358,
      -0.024099715,
      -0.010146079,
      -0.004447535,
      -0.0017044907,
      -0.897196,
      -0.40619826,
      -0.09848711,
      -0.023531739,
      -0.08410218,
      -0.52539086,
      -0.003990287,
      -0.0006378657,
      -0.00034083053,
      -2.9280032e-05,
      -0.00981773
     ],
     "top_logprobs": [
      {
       " #": -0.018426249
      },
      {
       " 0": -0.0069351937
      },
      {
       ":": -0.0016933256
      },
      {
       " walk": -0.7238297
      },
      {
       " sink": -0.48791724
      },
      {
       "\n": -0.03536863
      },
      {
       " find": -0.13967788
      },
      {
       "('": -0.0020858485
      },
      {
       "s": -0.0011456128
      },
      {
       "ink": -0.00014015351
      },
      {
       "')": -0.001628845
      },
      {
       "\n": -0.008190909
      },
      {
       " #": -0.009651737
      },
      {
       " 1": -0.0034877872
      },
      {
       ":": -0.00072142907
      },
      {
       " turn": -0.90177846
      },
      {
       " on": -0.19035123
      },
      {
       " f": -0.873133
      },
      {
       "auc": -0.0023985812
      },
      {
       "et": -0.002667665
      },
      {
       "\n": -0.03842199
      },
      {
       " assert": -0.7310626
      },
      {
       "on": -0.0030405454
      },
      {
       "('": -0.0017976969
      },
      {
       "f": -0.005243595
      },
      {
       "auc": -0.0005519829
      },
      {
       "et": -0.00083315483
      },
      {
       "')": -0.0022535832
      },
      {
       "\n": -0.0052144146
      },
      {
       " #": -0.059512217
      },
      {
       " 2": -0.005372847
      },
      {
       ":": -0.000787282
      },
      {
       " pour": -1.4768286
      },
      {
       " water": -0.15352352
      },
      {
       " water": -0.0273223
      },
      {
       "\n": -0.44880778
      },
      {
       " pour": -0.6659135
      },
      {
       "('": -0.004610997
      },
      {
       "water": -0.048720993
      },
      {
       "')": -0.018726157
      },
      {
       "\n": -0.0078787645
      },
      {
       " #": -0.03259847
      },
      {
       " 3": -0.0052788253
      },
      {
       ":": -0.0009705497
      },
      {
       " grab": -0.61892223
      },
      {
       " a": -1.0693476
      },
      {
       "\n": -0.03930043
      },
      {
       " find": -0.77571964
      },
      {
       "('": -0.0013732346
      },
      {
       "t": -0.00043032994
      },
      {
       "ow": -0.00074844714
      },
      {
       "el": -0.000100332174
      },
      {
       "')": -0.0021674423
      },
      {
       "\n": -0.005057864
      },
      {
       " #": -0.044165812
      },
      {
       " 4": -0.004502259
      },
      {
       ":": -0.00059092935
      },
      {
       " wipe": -0.47454607
      },
      {
       " face": -0.08095712
      },
      {
       "\n": -0.13038309
      },
      {
       " wash": -0.5712866
      },
      {
       "('": -0.0029747204
      },
      {
       "face": -0.0032190236
      },
      {
       "')": -0.002672148
      },
      {
       "\n": -0.0049306895
      },
      {
       " #": -0.018670041
      },
      {
       " 5": -0.003802935
      },
      {
       ":": -0.0010022292
      },
      {
       " wipe": -0.7569287
      },
      {
       " face": -0.11063466
      },
      {
       "\n": -0.1974923
      },
      {
       " wipe": -0.09359141
      },
      {
       "('": -0.001258403
      },
      {
       "face": -0.030028414
      },
      {
       "')": -0.025347358
      },
      {
       "\n": -0.024099715
      },
      {
       " #": -0.010146079
      },
      {
       " 6": -0.004447535
      },
      {
       ":": -0.0017044907
      },
      {
       " turn": -0.8009483
      },
      {
       " towel": -0.40619826
      },
      {
       " back": -0.09848711
      },
      {
       "\n": -0.023531739
      },
      {
       " put": -0.08410218
      },
      {
       "back": -0.52539086
      },
      {
       "('": -0.003990287
      },
      {
       "t": -0.0006378657
      },
      {
       "ow": -0.00034083053
      },
      {
       "el": -2.9280032e-05
      },
      {
       "')": -0.00981773
      }
     ],
     "text_offset": [
      3160,
      3162,
      3164,
      3165,
      3170,
      3175,
      3176,
      3181,
      3183,
      3184,
      3187,
      3189,
      3190,
      3192,
      3194,
      3195,
      3200,
      3203,
      3205,
      3208,
      3210,
      3211,
      3218,
      3220,
      3222,
      3223,
      3226,
      3228,
      3230,
      3231,
      3233,
      3235,
      3236,
      3241,
      3246,
      3252,
      3253,
      3258,
      3260,
      3265,
      3267,
      3268,
      3270,
      3272,
      3273,
      3278,
      3284,
      3285,
      3290,
      3292,
      3293,
      3295,
      3297,
      3299,
      3300,
      3302,
      3304,
      3305,
      3310,
      3315,
      3316,
      3321,
      3323,
      3327,
      3329,
      3330,
      3332,
      3334,
      3335,
      3339,
      3344,
      3345,
      3350,
      3352,
      3356,
      3358,
      3359,
      3361,
      3363,
      3364,
      3368,
      3374,
      3379,
      3380,
      3384,
      3388,
      3390,
      3391,
      3393,
      3395
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Wash face",
   "task_description": "Turn on water faucet. Get rag wet. Get face soap out. Squirt face soap in hands and put it on face. Rub soap into face. Wash soap off of face. Dry face off on the hand towel. Hang out rag and hand towel.",
   "program": [
    "[Walk] <bathroom> (1)",
    "[Walk] <sink> (1)",
    "[Find] <rag> (1)",
    "[Grab] <rag> (1)",
    "[Find] <faucet> (1)",
    "[SwitchOn] <faucet> (1)",
    "[Wash] <rag> (1)",
    "[Find] <face_soap> (1)",
    "[Grab] <face_soap> (1)",
    "[Pour] <face_soap> (1) <rag> (1)",
    "[PutObjBack] <face_soap> (1)",
    "[Find] <face> (1)",
    "[Scrub] <face> (1)",
    "[PutBack] <rag> (1) <sink> (1)",
    "[Rinse] <face> (1)",
    "[Rinse] <rag> (1)",
    "[SwitchOff] <faucet> (1)",
    "[Grab] <rag> (1)",
    "[PutObjBack] <rag> (1)",
    "[Find] <towel> (1)",
    "[Grab] <towel> (1)",
    "[Wipe] <face> (1)",
    "[PutObjBack] <towel> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upworknturk_second",
   "file_id": "split145_3",
   "goal_condition": [
    [
     [
      198,
      262,
      "INSIDE",
      "character",
      "bathroom"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1107,
   "completion_tokens": 90,
   "total_tokens": 1197
  }
 },
 "11": {
  "plan": [
   [
    " # 0: find bed\n find('bed')\n # 1: lay down on bed\n turnto('bed')\n lookat('bed')\n assert('close' to 'bed')\n else: find('bed')\n sit('bed')\n sleep()\n # 2: close eyes and rest\n close('eyes')\n rest()",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " bed",
      "\n",
      " find",
      "('",
      "bed",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " lay",
      " down",
      " on",
      " bed",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "bed",
      "')",
      "\n",
      " look",
      "at",
      "('",
      "bed",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "bed",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "bed",
      "')",
      "\n",
      " sit",
      "('",
      "bed",
      "')",
      "\n",
      " sleep",
      "()",
      "\n",
      " #",
      " 2",
      ":",
      " close",
      " eyes",
      " and",
      " rest",
      "\n",
      " close",
      "('",
      "eyes",
      "')",
      "\n",
      " rest",
      "()"
     ],
     "token_logprobs": [
      -0.21456137,
      -0.06558909,
      -0.0026726266,
      -0.8982869,
      -0.34213796,
      -0.019923279,
      -0.043484144,
      -0.002837291,
      -0.00084455,
      -0.002201371,
      -0.009142598,
      -0.0035429383,
      -0.0022838106,
      -0.00045132102,
      -0.55731297,
      -0.066974916,
      -0.20754412,
      -0.04727334,
      -0.008734554,
      -0.2270628,
      -2.8565719e-05,
      -0.00028854018,
      -0.0004821529,
      -9.56821e-05,
      -0.0008065496,
      -0.0034716388,
      -0.051539578,
      -0.00026552632,
      -0.00035740712,
      -0.00014396913,
      -0.00022433081,
      -0.0029258216,
      -0.01680277,
      -0.000554368,
      -0.0011940707,
      -0.0015812038,
      -0.00023285468,
      -0.0009980513,
      -0.00020107947,
      -0.0021801677,
      -0.003321221,
      -0.00078262907,
      -0.00083172426,
      -0.0031774652,
      -0.0007318678,
      -0.00015374424,
      -0.0013775317,
      -0.003456685,
      -2.1851034,
      -0.0010544962,
      -0.00010355082,
      -0.00075143116,
      -0.0057980525,
      -0.22594766,
      -0.0032947296,
      -0.3019226,
      -0.20611602,
      -0.007628655,
      -0.00093481154,
      -0.84430134,
      -0.23162341,
      -2.51798,
      -2.8609734,
      -0.021180589,
      -0.20283018,
      -0.7570306,
      -0.014482346,
      -0.002182199,
      -0.09068314,
      -0.08936663,
      -0.02636393
     ],
     "top_logprobs": [
      {
       " #": -0.21456137
      },
      {
       " 0": -0.06558909
      },
      {
       ":": -0.0026726266
      },
      {
       " find": -0.8982869
      },
      {
       " bed": -0.34213796
      },
      {
       "\n": -0.019923279
      },
      {
       " find": -0.043484144
      },
      {
       "('": -0.002837291
      },
      {
       "bed": -0.00084455
      },
      {
       "')": -0.002201371
      },
      {
       "\n": -0.009142598
      },
      {
       " #": -0.0035429383
      },
      {
       " 1": -0.0022838106
      },
      {
       ":": -0.00045132102
      },
      {
       " lay": -0.55731297
      },
      {
       " down": -0.066974916
      },
      {
       " on": -0.20754412
      },
      {
       " bed": -0.04727334
      },
      {
       "\n": -0.008734554
      },
      {
       " tur": -0.2270628
      },
      {
       "nt": -2.8565719e-05
      },
      {
       "o": -0.00028854018
      },
      {
       "('": -0.0004821529
      },
      {
       "bed": -9.56821e-05
      },
      {
       "')": -0.0008065496
      },
      {
       "\n": -0.0034716388
      },
      {
       " look": -0.051539578
      },
      {
       "at": -0.00026552632
      },
      {
       "('": -0.00035740712
      },
      {
       "bed": -0.00014396913
      },
      {
       "')": -0.00022433081
      },
      {
       "\n": -0.0029258216
      },
      {
       " assert": -0.01680277
      },
      {
       "('": -0.000554368
      },
      {
       "close": -0.0011940707
      },
      {
       "'": -0.0015812038
      },
      {
       " to": -0.00023285468
      },
      {
       " '": -0.0009980513
      },
      {
       "bed": -0.00020107947
      },
      {
       "')": -0.0021801677
      },
      {
       "\n": -0.003321221
      },
      {
       " else": -0.00078262907
      },
      {
       ":": -0.00083172426
      },
      {
       " find": -0.0031774652
      },
      {
       "('": -0.0007318678
      },
      {
       "bed": -0.00015374424
      },
      {
       "')": -0.0013775317
      },
      {
       "\n": -0.003456685
      },
      {
       " else": -0.34065518
      },
      {
       "('": -0.0010544962
      },
      {
       "bed": -0.00010355082
      },
      {
       "')": -0.00075143116
      },
      {
       "\n": -0.0057980525
      },
      {
       " sleep": -0.22594766
      },
      {
       "()": -0.0032947296
      },
      {
       "\n": -0.3019226
      },
      {
       " #": -0.20611602
      },
      {
       " 2": -0.007628655
      },
      {
       ":": -0.00093481154
      },
      {
       " close": -0.84430134
      },
      {
       " eyes": -0.23162341
      },
      {
       "\n": -0.104138166
      },
      {
       " relax": -0.97748864
      },
      {
       "\n": -0.021180589
      },
      {
       " close": -0.20283018
      },
      {
       "('": -0.7570306
      },
      {
       "eyes": -0.014482346
      },
      {
       "')": -0.002182199
      },
      {
       "\n": -0.09068314
      },
      {
       " rest": -0.08936663
      },
      {
       "()": -0.02636393
      }
     ],
     "text_offset": [
      3156,
      3158,
      3160,
      3161,
      3166,
      3170,
      3171,
      3176,
      3178,
      3181,
      3183,
      3184,
      3186,
      3188,
      3189,
      3193,
      3198,
      3201,
      3205,
      3206,
      3210,
      3212,
      3213,
      3215,
      3218,
      3220,
      3221,
      3226,
      3228,
      3230,
      3233,
      3235,
      3236,
      3243,
      3245,
      3250,
      3251,
      3254,
      3256,
      3259,
      3261,
      3262,
      3267,
      3268,
      3273,
      3275,
      3278,
      3280,
      3281,
      3285,
      3287,
      3290,
      3292,
      3293,
      3299,
      3301,
      3302,
      3304,
      3306,
      3307,
      3313,
      3318,
      3322,
      3327,
      3328,
      3334,
      3336,
      3340,
      3342,
      3343,
      3348
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Sleep",
   "task_description": "Relax for the night or during the day, lying on the bed.",
   "program": [
    "[Walk] <bedroom> (1)",
    "[Walk] <bed> (1)",
    "[Lie] <bed> (1)",
    "[Sleep]"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upworknturk_second",
   "file_id": "split1_3",
   "goal_condition": [
    [
     [
      198,
      260,
      "ON",
      "character",
      "bed"
     ],
     [
      198,
      199,
      "INSIDE",
      "character",
      "bedroom"
     ]
    ],
    [
     [
      198,
      "character",
      "LYING"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1105,
   "completion_tokens": 71,
   "total_tokens": 1176
  }
 },
 "12": {
  "plan": [
   [
    " # 0: walk to the desk\n walk('desk')\n # 1: find newspaper\n find('newspaper')\n # 2: grab the newspaper\n grab('newspaper')\n # 3: look at the newspaper\n turnto('newspaper')\n lookat('newspaper')\n # 4: sit on chair\n find('chair')\n assert('close' to 'chair')\n else: find('chair')\n sit('chair')\n # 5: read the newspaper\n read('newspaper')\n # 6: put newspaper back\n putback('newspaper')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " the",
      " desk",
      "\n",
      " walk",
      "('",
      "des",
      "k",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " newspaper",
      "\n",
      " find",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " grab",
      " the",
      " newspaper",
      "\n",
      " grab",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " look",
      " at",
      " the",
      " newspaper",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " look",
      "at",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " sit",
      " on",
      " chair",
      "\n",
      " find",
      "('",
      "chair",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "chair",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "chair",
      "')",
      "\n",
      " sit",
      "('",
      "chair",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " read",
      " the",
      " newspaper",
      "\n",
      " read",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " #",
      " 6",
      ":",
      " put",
      " newspaper",
      " back",
      "\n",
      " put",
      "back",
      "('",
      "new",
      "sp",
      "aper",
      "')"
     ],
     "token_logprobs": [
      -0.020527067,
      -0.01003656,
      -0.0021911585,
      -1.1602583,
      -0.23860116,
      -2.3848732,
      -2.5753531,
      -0.036896586,
      -0.011786174,
      -0.003762908,
      -0.008441175,
      -0.0004218633,
      -0.0012232504,
      -0.008946764,
      -0.008837434,
      -0.0033965777,
      -0.00073210715,
      -0.114392094,
      -0.66349757,
      -0.025171736,
      -0.03756146,
      -0.0011818353,
      -0.0019048852,
      -0.0005292629,
      -0.00039532955,
      -0.0020396782,
      -0.005303694,
      -0.009558217,
      -0.005094407,
      -0.00059164374,
      -0.20958692,
      -0.98541075,
      -0.021405384,
      -0.023467848,
      -0.3976479,
      -0.0012684878,
      -0.0011683488,
      -0.00016602462,
      -0.00013264055,
      -0.0012533896,
      -0.0042678798,
      -0.24406189,
      -0.0045560277,
      -0.00070115045,
      -3.610212,
      -0.059348766,
      -0.115878746,
      -0.037688646,
      -0.017457802,
      -0.59072536,
      -7.076466e-05,
      -0.0003525167,
      -0.0005457812,
      -0.0018059964,
      -0.00026516683,
      -0.00017043721,
      -0.0010399977,
      -0.005475025,
      -0.046947077,
      -0.0004946726,
      -0.00046694485,
      -0.00081907597,
      -0.00030499752,
      -0.0013528799,
      -0.0011866703,
      -0.005413177,
      -0.009144643,
      -0.0069755875,
      -0.0010907168,
      -3.6861503,
      -0.6802137,
      -1.7605897,
      -0.19664581,
      -0.22958812,
      -0.0013386162,
      -0.0014126861,
      -0.0014058818,
      -0.0040310407,
      -0.87734044,
      -0.0010789611,
      -0.008256654,
      -0.0027351996,
      -0.00042472623,
      -0.0020725308,
      -0.0016578606,
      -0.0059557953,
      -0.0040947795,
      -0.00265637,
      -0.0021571098,
      -0.005438887,
      -0.0019483042,
      -0.0010036626,
      -0.0020102947,
      -0.0065328465,
      -0.023142915,
      -0.0011338572,
      -0.00082933734,
      -0.0012640724,
      -0.0073613003,
      -0.007971587,
      -0.008011663,
      -0.0010419079,
      -0.13098837,
      -0.19653052,
      -0.05366342,
      -0.009346956,
      -0.17511,
      -0.0023062762,
      -0.0016256217,
      -0.00018390873,
      -0.00036193893,
      -0.0021445036,
      -0.351772,
      -0.063273765,
      -0.0046732733,
      -0.0017429409,
      -0.86145896,
      -1.2995713,
      -0.12212708,
      -0.06469623,
      -0.33557194,
      -0.55306214,
      -0.003015015,
      -0.0019600056,
      -0.00060130615,
      -0.00090283365,
      -0.006736788
     ],
     "top_logprobs": [
      {
       " #": -0.020527067
      },
      {
       " 0": -0.01003656
      },
      {
       ":": -0.0021911585
      },
      {
       " find": -0.5177964
      },
      {
       " to": -0.23860116
      },
      {
       " living": -0.7902753
      },
      {
       " living": -0.33578855
      },
      {
       "\n": -0.036896586
      },
      {
       " walk": -0.011786174
      },
      {
       "('": -0.003762908
      },
      {
       "des": -0.008441175
      },
      {
       "k": -0.0004218633
      },
      {
       "')": -0.0012232504
      },
      {
       "\n": -0.008946764
      },
      {
       " #": -0.008837434
      },
      {
       " 1": -0.0033965777
      },
      {
       ":": -0.00073210715
      },
      {
       " find": -0.114392094
      },
      {
       " newspaper": -0.66349757
      },
      {
       "\n": -0.025171736
      },
      {
       " find": -0.03756146
      },
      {
       "('": -0.0011818353
      },
      {
       "new": -0.0019048852
      },
      {
       "sp": -0.0005292629
      },
      {
       "aper": -0.00039532955
      },
      {
       "')": -0.0020396782
      },
      {
       "\n": -0.005303694
      },
      {
       " #": -0.009558217
      },
      {
       " 2": -0.005094407
      },
      {
       ":": -0.00059164374
      },
      {
       " grab": -0.20958692
      },
      {
       " newspaper": -0.52936083
      },
      {
       " newspaper": -0.021405384
      },
      {
       "\n": -0.023467848
      },
      {
       " grab": -0.3976479
      },
      {
       "('": -0.0012684878
      },
      {
       "new": -0.0011683488
      },
      {
       "sp": -0.00016602462
      },
      {
       "aper": -0.00013264055
      },
      {
       "')": -0.0012533896
      },
      {
       "\n": -0.0042678798
      },
      {
       " #": -0.24406189
      },
      {
       " 3": -0.0045560277
      },
      {
       ":": -0.00070115045
      },
      {
       " sit": -0.9114685
      },
      {
       " at": -0.059348766
      },
      {
       " the": -0.115878746
      },
      {
       " newspaper": -0.037688646
      },
      {
       "\n": -0.017457802
      },
      {
       " tur": -0.59072536
      },
      {
       "nt": -7.076466e-05
      },
      {
       "o": -0.0003525167
      },
      {
       "('": -0.0005457812
      },
      {
       "new": -0.0018059964
      },
      {
       "sp": -0.00026516683
      },
      {
       "aper": -0.00017043721
      },
      {
       "')": -0.0010399977
      },
      {
       "\n": -0.005475025
      },
      {
       " look": -0.046947077
      },
      {
       "at": -0.0004946726
      },
      {
       "('": -0.00046694485
      },
      {
       "new": -0.00081907597
      },
      {
       "sp": -0.00030499752
      },
      {
       "aper": -0.0013528799
      },
      {
       "')": -0.0011866703
      },
      {
       "\n": -0.005413177
      },
      {
       " #": -0.009144643
      },
      {
       " 4": -0.0069755875
      },
      {
       ":": -0.0010907168
      },
      {
       " read": -0.12133411
      },
      {
       " on": -0.6802137
      },
      {
       " the": -0.34388742
      },
      {
       "\n": -0.19664581
      },
      {
       " find": -0.22958812
      },
      {
       "('": -0.0013386162
      },
      {
       "chair": -0.0014126861
      },
      {
       "')": -0.0014058818
      },
      {
       "\n": -0.0040310407
      },
      {
       " sit": -0.5861332
      },
      {
       "('": -0.0010789611
      },
      {
       "close": -0.008256654
      },
      {
       "'": -0.0027351996
      },
      {
       " to": -0.00042472623
      },
      {
       " '": -0.0020725308
      },
      {
       "chair": -0.0016578606
      },
      {
       "')": -0.0059557953
      },
      {
       "\n": -0.0040947795
      },
      {
       " else": -0.00265637
      },
      {
       ":": -0.0021571098
      },
      {
       " find": -0.005438887
      },
      {
       "('": -0.0019483042
      },
      {
       "chair": -0.0010036626
      },
      {
       "')": -0.0020102947
      },
      {
       "\n": -0.0065328465
      },
      {
       " sit": -0.023142915
      },
      {
       "('": -0.0011338572
      },
      {
       "chair": -0.00082933734
      },
      {
       "')": -0.0012640724
      },
      {
       "\n": -0.0073613003
      },
      {
       " #": -0.007971587
      },
      {
       " 5": -0.008011663
      },
      {
       ":": -0.0010419079
      },
      {
       " read": -0.13098837
      },
      {
       " the": -0.19653052
      },
      {
       " newspaper": -0.05366342
      },
      {
       "\n": -0.009346956
      },
      {
       " read": -0.17511
      },
      {
       "('": -0.0023062762
      },
      {
       "new": -0.0016256217
      },
      {
       "sp": -0.00018390873
      },
      {
       "aper": -0.00036193893
      },
      {
       "')": -0.0021445036
      },
      {
       "\n": -0.351772
      },
      {
       " #": -0.063273765
      },
      {
       " 6": -0.0046732733
      },
      {
       ":": -0.0017429409
      },
      {
       " put": -0.86145896
      },
      {
       " the": -0.6776994
      },
      {
       " back": -0.12212708
      },
      {
       "\n": -0.06469623
      },
      {
       " put": -0.33557194
      },
      {
       "back": -0.55306214
      },
      {
       "('": -0.003015015
      },
      {
       "new": -0.0019600056
      },
      {
       "sp": -0.00060130615
      },
      {
       "aper": -0.00090283365
      },
      {
       "')": -0.006736788
      }
     ],
     "text_offset": [
      3160,
      3162,
      3164,
      3165,
      3170,
      3173,
      3177,
      3182,
      3183,
      3188,
      3190,
      3193,
      3194,
      3196,
      3197,
      3199,
      3201,
      3202,
      3207,
      3217,
      3218,
      3223,
      3225,
      3228,
      3230,
      3234,
      3236,
      3237,
      3239,
      3241,
      3242,
      3247,
      3251,
      3261,
      3262,
      3267,
      3269,
      3272,
      3274,
      3278,
      3280,
      3281,
      3283,
      3285,
      3286,
      3291,
      3294,
      3298,
      3308,
      3309,
      3313,
      3315,
      3316,
      3318,
      3321,
      3323,
      3327,
      3329,
      3330,
      3335,
      3337,
      3339,
      3342,
      3344,
      3348,
      3350,
      3351,
      3353,
      3355,
      3356,
      3360,
      3363,
      3369,
      3370,
      3375,
      3377,
      3382,
      3384,
      3385,
      3392,
      3394,
      3399,
      3400,
      3403,
      3405,
      3410,
      3412,
      3413,
      3418,
      3419,
      3424,
      3426,
      3431,
      3433,
      3434,
      3438,
      3440,
      3445,
      3447,
      3448,
      3450,
      3452,
      3453,
      3458,
      3462,
      3472,
      3473,
      3478,
      3480,
      3483,
      3485,
      3489,
      3491,
      3492,
      3494,
      3496,
      3497,
      3501,
      3511,
      3516,
      3517,
      3521,
      3525,
      3527,
      3530,
      3532,
      3536
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Read news",
   "task_description": "Read news articles in a newspaper",
   "program": [
    "[Walk] <home_office> (1)",
    "[Walk] <chair> (1)",
    "[Find] <chair> (1)",
    "[Sit] <chair> (1)",
    "[Find] <newspaper> (1)",
    "[Grab] <newspaper> (1)",
    "[Read] <newspaper> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_july",
   "file_id": "split15_4",
   "goal_condition": [
    [
     [
      198,
      1,
      "INSIDE",
      "character",
      "home_office"
     ],
     [
      198,
      17,
      "ON",
      "character",
      "chair"
     ],
     [
      198,
      1000,
      "HOLDS_RH",
      "character",
      "newspaper"
     ]
    ],
    [
     [
      198,
      "character",
      "SITTING"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1107,
   "completion_tokens": 127,
   "total_tokens": 1234
  }
 },
 "13": {
  "plan": [
   [
    " # 0: walk to bedroom\n walk('bedroom')\n # 1: find shoes\n find('shoes')\n # 2: grab shoes\n assert('close' to 'shoes')\n else: find('shoes')\n grab('shoes')\n # 3: put on shoes\n assert('shoes' in 'hands')\n else: grab('shoes')\n puton('shoes')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " bedroom",
      "\n",
      " walk",
      "('",
      "bedroom",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " shoes",
      "\n",
      " find",
      "('",
      "sh",
      "oes",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " grab",
      " shoes",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "sh",
      "oes",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "sh",
      "oes",
      "')",
      "\n",
      " grab",
      "('",
      "sh",
      "oes",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " put",
      " on",
      " shoes",
      "\n",
      " assert",
      "('",
      "sh",
      "oes",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "sh",
      "oes",
      "')",
      "\n",
      " put",
      "on",
      "('",
      "sh",
      "oes",
      "')"
     ],
     "token_logprobs": [
      -0.014975632,
      -0.008257256,
      -0.0020567016,
      -1.4408718,
      -0.19107728,
      -0.48983654,
      -0.025746647,
      -0.0047927494,
      -0.0039627575,
      -0.0013909019,
      -0.0011878634,
      -0.008468945,
      -0.0030138202,
      -0.003662041,
      -0.0006654207,
      -0.038747724,
      -0.5614766,
      -0.02431393,
      -0.45537692,
      -0.0011056329,
      -0.0038975957,
      -0.0047933483,
      -0.002356342,
      -0.005575716,
      -0.017118497,
      -0.0042560874,
      -0.00075155037,
      -0.55848014,
      -0.3113524,
      -0.03383598,
      -0.8048685,
      -0.0018226585,
      -0.006866654,
      -0.003031875,
      -0.00048286718,
      -0.005335633,
      -0.0006793165,
      -0.0023364455,
      -0.004474596,
      -0.006449815,
      -0.0015567876,
      -0.0015296832,
      -0.0042618336,
      -0.0013699502,
      -0.0002789997,
      -0.0011800453,
      -0.0019349849,
      -0.007170256,
      -0.009899298,
      -0.00094423845,
      -0.000118572985,
      -0.000106295425,
      -0.0017829479,
      -0.0054729274,
      -0.46021652,
      -0.008944478,
      -0.00083882327,
      -0.089816116,
      -0.36946625,
      -0.09973633,
      -0.016348325,
      -0.5915456,
      -0.001272906,
      -0.11889465,
      -0.002841834,
      -0.0015432355,
      -0.012909381,
      -0.0041630673,
      -0.008645567,
      -0.020466777,
      -0.003978556,
      -0.0038847297,
      -0.002373966,
      -0.009153006,
      -0.0012981491,
      -0.00023786427,
      -0.00017055642,
      -0.002308547,
      -0.0055964566,
      -0.100072585,
      -0.011334963,
      -0.000887681,
      -0.00025002356,
      -0.00044607394,
      -0.0025464701
     ],
     "top_logprobs": [
      {
       " #": -0.014975632
      },
      {
       " 0": -0.008257256
      },
      {
       ":": -0.0020567016
      },
      {
       " find": -0.4683748
      },
      {
       " to": -0.19107728
      },
      {
       " bedroom": -0.48983654
      },
      {
       "\n": -0.025746647
      },
      {
       " walk": -0.0047927494
      },
      {
       "('": -0.0039627575
      },
      {
       "bedroom": -0.0013909019
      },
      {
       "')": -0.0011878634
      },
      {
       "\n": -0.008468945
      },
      {
       " #": -0.0030138202
      },
      {
       " 1": -0.003662041
      },
      {
       ":": -0.0006654207
      },
      {
       " find": -0.038747724
      },
      {
       " shoes": -0.5614766
      },
      {
       "\n": -0.02431393
      },
      {
       " find": -0.45537692
      },
      {
       "('": -0.0011056329
      },
      {
       "sh": -0.0038975957
      },
      {
       "oes": -0.0047933483
      },
      {
       "')": -0.002356342
      },
      {
       "\n": -0.005575716
      },
      {
       " #": -0.017118497
      },
      {
       " 2": -0.0042560874
      },
      {
       ":": -0.00075155037
      },
      {
       " grab": -0.55848014
      },
      {
       " shoes": -0.3113524
      },
      {
       "\n": -0.03383598
      },
      {
       " grab": -0.6153496
      },
      {
       "('": -0.0018226585
      },
      {
       "close": -0.006866654
      },
      {
       "'": -0.003031875
      },
      {
       " to": -0.00048286718
      },
      {
       " '": -0.005335633
      },
      {
       "sh": -0.0006793165
      },
      {
       "oes": -0.0023364455
      },
      {
       "')": -0.004474596
      },
      {
       "\n": -0.006449815
      },
      {
       " else": -0.0015567876
      },
      {
       ":": -0.0015296832
      },
      {
       " find": -0.0042618336
      },
      {
       "('": -0.0013699502
      },
      {
       "sh": -0.0002789997
      },
      {
       "oes": -0.0011800453
      },
      {
       "')": -0.0019349849
      },
      {
       "\n": -0.007170256
      },
      {
       " grab": -0.009899298
      },
      {
       "('": -0.00094423845
      },
      {
       "sh": -0.000118572985
      },
      {
       "oes": -0.000106295425
      },
      {
       "')": -0.0017829479
      },
      {
       "\n": -0.0054729274
      },
      {
       " #": -0.46021652
      },
      {
       " 3": -0.008944478
      },
      {
       ":": -0.00083882327
      },
      {
       " put": -0.089816116
      },
      {
       " on": -0.36946625
      },
      {
       " shoes": -0.09973633
      },
      {
       "\n": -0.016348325
      },
      {
       " assert": -0.5915456
      },
      {
       "('": -0.001272906
      },
      {
       "sh": -0.11889465
      },
      {
       "oes": -0.002841834
      },
      {
       "'": -0.0015432355
      },
      {
       " in": -0.012909381
      },
      {
       " '": -0.0041630673
      },
      {
       "hands": -0.008645567
      },
      {
       "')": -0.020466777
      },
      {
       "\n": -0.003978556
      },
      {
       " else": -0.0038847297
      },
      {
       ":": -0.002373966
      },
      {
       " grab": -0.009153006
      },
      {
       "('": -0.0012981491
      },
      {
       "sh": -0.00023786427
      },
      {
       "oes": -0.00017055642
      },
      {
       "')": -0.002308547
      },
      {
       "\n": -0.0055964566
      },
      {
       " put": -0.100072585
      },
      {
       "on": -0.011334963
      },
      {
       "('": -0.000887681
      },
      {
       "sh": -0.00025002356
      },
      {
       "oes": -0.00044607394
      },
      {
       "')": -0.0025464701
      }
     ],
     "text_offset": [
      3168,
      3170,
      3172,
      3173,
      3178,
      3181,
      3189,
      3190,
      3195,
      3197,
      3204,
      3206,
      3207,
      3209,
      3211,
      3212,
      3217,
      3223,
      3224,
      3229,
      3231,
      3233,
      3236,
      3238,
      3239,
      3241,
      3243,
      3244,
      3249,
      3255,
      3256,
      3263,
      3265,
      3270,
      3271,
      3274,
      3276,
      3278,
      3281,
      3283,
      3284,
      3289,
      3290,
      3295,
      3297,
      3299,
      3302,
      3304,
      3305,
      3310,
      3312,
      3314,
      3317,
      3319,
      3320,
      3322,
      3324,
      3325,
      3329,
      3332,
      3338,
      3339,
      3346,
      3348,
      3350,
      3353,
      3354,
      3357,
      3359,
      3364,
      3366,
      3367,
      3372,
      3373,
      3378,
      3380,
      3382,
      3385,
      3387,
      3388,
      3392,
      3394,
      3396,
      3398,
      3401
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Put on your shoes",
   "task_description": "Sit on a chair with your shoes in front of you.  Put them on one at a time.",
   "program": [
    "[Walk] <home_office> (1)",
    "[Walk] <shoes> (1)",
    "[Find] <shoes> (1)",
    "[Grab] <shoes> (1)",
    "[Find] <chair> (1)",
    "[Sit] <chair> (1)",
    "[Find] <feet_both> (1)",
    "[PutBack] <shoes> (1) <feet_both> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_july",
   "file_id": "split8_1",
   "goal_condition": [
    [
     [
      198,
      1,
      "INSIDE",
      "character",
      "home_office"
     ],
     [
      198,
      17,
      "ON",
      "character",
      "chair"
     ],
     [
      1000,
      1001,
      "ON",
      "shoes",
      "feet_both"
     ]
    ],
    [
     [
      198,
      "character",
      "SITTING"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1112,
   "completion_tokens": 85,
   "total_tokens": 1197
  }
 },
 "14": {
  "plan": [
   [
    " # 0: find sink\n walk('sink')\n find('sink')\n # 1: turn on faucet\n assert('close' to 'faucet')\n else: find('faucet')\n turnon('faucet')\n # 2: grab soap\n find('soap')\n grab('soap')\n assert('soap' in 'hands')\n else: grab('soap')\n # 3: wash hands\n wash('hands')\n # 4: turn off faucet\n assert('close' to 'faucet')\n else: find('faucet')\n turnoff('faucet')\n # 5: done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " sink",
      "\n",
      " walk",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " find",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " turn",
      " on",
      " f",
      "auc",
      "et",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " turn",
      "on",
      "('",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " grab",
      " soap",
      "\n",
      " find",
      "('",
      "so",
      "ap",
      "')",
      "\n",
      " grab",
      "('",
      "so",
      "ap",
      "')",
      "\n",
      " assert",
      "('",
      "so",
      "ap",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "so",
      "ap",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " wash",
      " hands",
      "\n",
      " wash",
      "('",
      "hands",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " turn",
      " off",
      " f",
      "auc",
      "et",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " turn",
      "off",
      "('",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " done"
     ],
     "token_logprobs": [
      -0.023906427,
      -0.012133566,
      -0.0023675147,
      -0.70306945,
      -0.2727176,
      -0.033714533,
      -2.1579874,
      -0.0059673083,
      -0.026848784,
      -0.00032478993,
      -0.0016893861,
      -0.00993608,
      -0.0401651,
      -0.0014667044,
      -0.00039449416,
      -7.8752586e-05,
      -0.0013206523,
      -0.008297461,
      -0.011617134,
      -0.005599273,
      -0.00090897986,
      -0.48749137,
      -0.11974999,
      -0.97854835,
      -0.0026961716,
      -0.0025314104,
      -0.03425934,
      -0.9213806,
      -0.0025048805,
      -0.019068437,
      -0.0049558487,
      -0.00064681104,
      -0.002746916,
      -0.081361644,
      -0.00082695123,
      -0.00047493746,
      -0.00967876,
      -0.0074378606,
      -0.0022145747,
      -0.0017573313,
      -0.016068092,
      -0.0021536453,
      -0.0020808312,
      -0.0023455268,
      -0.00033594016,
      -0.002712368,
      -0.008175344,
      -1.9877715,
      -0.021588083,
      -0.0036697558,
      -0.0011081991,
      -0.0006162157,
      -0.0005365965,
      -0.0023676348,
      -0.006267401,
      -0.037008595,
      -0.00795903,
      -0.000994292,
      -1.3693508,
      -0.17385599,
      -0.046143107,
      -0.70680916,
      -0.0018395551,
      -0.00055472564,
      -8.566857e-05,
      -0.0020202068,
      -0.004540938,
      -0.14297153,
      -0.0016915345,
      -0.00015374424,
      -0.00011404399,
      -0.0013327666,
      -0.004120395,
      -1.3847601,
      -0.0025016544,
      -0.05539863,
      -0.0001233404,
      -0.0023805986,
      -0.02402236,
      -0.006003463,
      -0.02107594,
      -0.013565979,
      -0.0046489625,
      -0.016305856,
      -0.004334446,
      -0.038540244,
      -0.0022505964,
      -0.00027136848,
      -6.754697e-05,
      -0.003178662,
      -0.0046633924,
      -0.3746023,
      -0.0072078984,
      -0.0010120138,
      -0.6786368,
      -0.118561335,
      -0.19142671,
      -0.7689585,
      -0.0037226437,
      -0.14452116,
      -0.010418519,
      -0.007988831,
      -0.44114774,
      -0.0062079625,
      -0.0020757553,
      -0.28055432,
      -0.03483821,
      -0.06861211,
      -0.0018322129,
      -0.0011550435,
      -0.018851334,
      -1.5595452,
      -0.0013352747,
      -0.044705063,
      -0.002704717,
      -0.00036098433,
      -0.0021727008,
      -0.0012735011,
      -0.00056104746,
      -0.0002644525,
      -0.003431742,
      -0.0032807363,
      -0.0022011315,
      -0.0011789715,
      -0.005020361,
      -0.001361354,
      -0.00031894777,
      -0.00033391267,
      -0.00014706762,
      -0.0017643785,
      -0.0061936276,
      -0.22123092,
      -0.006779037,
      -0.0010490679,
      -0.00037362418,
      -0.0010701293,
      -0.00029307103,
      -0.001977087,
      -0.04631359,
      -0.009283788,
      -0.00559196,
      -0.0016520091,
      -1.6623172
     ],
     "top_logprobs": [
      {
       " #": -0.023906427
      },
      {
       " 0": -0.012133566
      },
      {
       ":": -0.0023675147
      },
      {
       " find": -0.70306945
      },
      {
       " sink": -0.2727176
      },
      {
       "\n": -0.033714533
      },
      {
       " find": -0.14246157
      },
      {
       "('": -0.0059673083
      },
      {
       "s": -0.026848784
      },
      {
       "ink": -0.00032478993
      },
      {
       "')": -0.0016893861
      },
      {
       "\n": -0.00993608
      },
      {
       " find": -0.0401651
      },
      {
       "('": -0.0014667044
      },
      {
       "s": -0.00039449416
      },
      {
       "ink": -7.8752586e-05
      },
      {
       "')": -0.0013206523
      },
      {
       "\n": -0.008297461
      },
      {
       " #": -0.011617134
      },
      {
       " 1": -0.005599273
      },
      {
       ":": -0.00090897986
      },
      {
       " turn": -0.48749137
      },
      {
       " on": -0.11974999
      },
      {
       " f": -0.97854835
      },
      {
       "auc": -0.0026961716
      },
      {
       "et": -0.0025314104
      },
      {
       "\n": -0.03425934
      },
      {
       " assert": -0.9213806
      },
      {
       "('": -0.0025048805
      },
      {
       "close": -0.019068437
      },
      {
       "'": -0.0049558487
      },
      {
       " to": -0.00064681104
      },
      {
       " '": -0.002746916
      },
      {
       "f": -0.081361644
      },
      {
       "auc": -0.00082695123
      },
      {
       "et": -0.00047493746
      },
      {
       "')": -0.00967876
      },
      {
       "\n": -0.0074378606
      },
      {
       " else": -0.0022145747
      },
      {
       ":": -0.0017573313
      },
      {
       " find": -0.016068092
      },
      {
       "('": -0.0021536453
      },
      {
       "f": -0.0020808312
      },
      {
       "auc": -0.0023455268
      },
      {
       "et": -0.00033594016
      },
      {
       "')": -0.002712368
      },
      {
       "\n": -0.008175344
      },
      {
       " switch": -0.6015286
      },
      {
       "on": -0.021588083
      },
      {
       "('": -0.0036697558
      },
      {
       "f": -0.0011081991
      },
      {
       "auc": -0.0006162157
      },
      {
       "et": -0.0005365965
      },
      {
       "')": -0.0023676348
      },
      {
       "\n": -0.006267401
      },
      {
       " #": -0.037008595
      },
      {
       " 2": -0.00795903
      },
      {
       ":": -0.000994292
      },
      {
       " grab": -1.3693508
      },
      {
       " soap": -0.17385599
      },
      {
       "\n": -0.046143107
      },
      {
       " find": -0.70680916
      },
      {
       "('": -0.0018395551
      },
      {
       "so": -0.00055472564
      },
      {
       "ap": -8.566857e-05
      },
      {
       "')": -0.0020202068
      },
      {
       "\n": -0.004540938
      },
      {
       " grab": -0.14297153
      },
      {
       "('": -0.0016915345
      },
      {
       "so": -0.00015374424
      },
      {
       "ap": -0.00011404399
      },
      {
       "')": -0.0013327666
      },
      {
       "\n": -0.004120395
      },
      {
       " #": -0.35914734
      },
      {
       "('": -0.0025016544
      },
      {
       "so": -0.05539863
      },
      {
       "ap": -0.0001233404
      },
      {
       "'": -0.0023805986
      },
      {
       " in": -0.02402236
      },
      {
       " '": -0.006003463
      },
      {
       "hands": -0.02107594
      },
      {
       "')": -0.013565979
      },
      {
       "\n": -0.0046489625
      },
      {
       " else": -0.016305856
      },
      {
       ":": -0.004334446
      },
      {
       " grab": -0.038540244
      },
      {
       "('": -0.0022505964
      },
      {
       "so": -0.00027136848
      },
      {
       "ap": -6.754697e-05
      },
      {
       "')": -0.003178662
      },
      {
       "\n": -0.0046633924
      },
      {
       " #": -0.3746023
      },
      {
       " 3": -0.0072078984
      },
      {
       ":": -0.0010120138
      },
      {
       " wash": -0.6786368
      },
      {
       " hands": -0.118561335
      },
      {
       "\n": -0.19142671
      },
      {
       " wash": -0.7689585
      },
      {
       "('": -0.0037226437
      },
      {
       "hands": -0.14452116
      },
      {
       "')": -0.010418519
      },
      {
       "\n": -0.007988831
      },
      {
       " #": -0.44114774
      },
      {
       " 4": -0.0062079625
      },
      {
       ":": -0.0020757553
      },
      {
       " turn": -0.28055432
      },
      {
       " off": -0.03483821
      },
      {
       " f": -0.06861211
      },
      {
       "auc": -0.0018322129
      },
      {
       "et": -0.0011550435
      },
      {
       "\n": -0.018851334
      },
      {
       " turn": -0.48842302
      },
      {
       "('": -0.0013352747
      },
      {
       "close": -0.044705063
      },
      {
       "'": -0.002704717
      },
      {
       " to": -0.00036098433
      },
      {
       " '": -0.0021727008
      },
      {
       "f": -0.0012735011
      },
      {
       "auc": -0.00056104746
      },
      {
       "et": -0.0002644525
      },
      {
       "')": -0.003431742
      },
      {
       "\n": -0.0032807363
      },
      {
       " else": -0.0022011315
      },
      {
       ":": -0.0011789715
      },
      {
       " find": -0.005020361
      },
      {
       "('": -0.001361354
      },
      {
       "f": -0.00031894777
      },
      {
       "auc": -0.00033391267
      },
      {
       "et": -0.00014706762
      },
      {
       "')": -0.0017643785
      },
      {
       "\n": -0.0061936276
      },
      {
       " turn": -0.22123092
      },
      {
       "off": -0.006779037
      },
      {
       "('": -0.0010490679
      },
      {
       "f": -0.00037362418
      },
      {
       "auc": -0.0010701293
      },
      {
       "et": -0.00029307103
      },
      {
       "')": -0.001977087
      },
      {
       "\n": -0.04631359
      },
      {
       " #": -0.009283788
      },
      {
       " 5": -0.00559196
      },
      {
       ":": -0.0016520091
      },
      {
       " Done": -0.91880304
      }
     ],
     "text_offset": [
      3163,
      3165,
      3167,
      3168,
      3173,
      3178,
      3179,
      3184,
      3186,
      3187,
      3190,
      3192,
      3193,
      3198,
      3200,
      3201,
      3204,
      3206,
      3207,
      3209,
      3211,
      3212,
      3217,
      3220,
      3222,
      3225,
      3227,
      3228,
      3235,
      3237,
      3242,
      3243,
      3246,
      3248,
      3249,
      3252,
      3254,
      3256,
      3257,
      3262,
      3263,
      3268,
      3270,
      3271,
      3274,
      3276,
      3278,
      3279,
      3284,
      3286,
      3288,
      3289,
      3292,
      3294,
      3296,
      3297,
      3299,
      3301,
      3302,
      3307,
      3312,
      3313,
      3318,
      3320,
      3322,
      3324,
      3326,
      3327,
      3332,
      3334,
      3336,
      3338,
      3340,
      3341,
      3348,
      3350,
      3352,
      3354,
      3355,
      3358,
      3360,
      3365,
      3367,
      3368,
      3373,
      3374,
      3379,
      3381,
      3383,
      3385,
      3387,
      3388,
      3390,
      3392,
      3393,
      3398,
      3404,
      3405,
      3410,
      3412,
      3417,
      3419,
      3420,
      3422,
      3424,
      3425,
      3430,
      3434,
      3436,
      3439,
      3441,
      3442,
      3449,
      3451,
      3456,
      3457,
      3460,
      3462,
      3463,
      3466,
      3468,
      3470,
      3471,
      3476,
      3477,
      3482,
      3484,
      3485,
      3488,
      3490,
      3492,
      3493,
      3498,
      3501,
      3503,
      3504,
      3507,
      3509,
      3511,
      3512,
      3514,
      3516,
      3517
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Hand washing",
   "task_description": "Turn on the faucet. Soap up your hands. Then rinse under the running water of the faucet. Turn off faucet and dry hands.",
   "program": [
    "[Walk] <bathroom> (1)",
    "[Walk] <sink> (1)",
    "[Find] <faucet> (1)",
    "[SwitchOn] <faucet> (1)",
    "[Find] <soap> (1)",
    "[Grab] <soap> (1)",
    "[Find] <hands_both> (1)",
    "[Scrub] <hands_both> (1)",
    "[PutObjBack] <soap> (1)",
    "[Wash] <hands_both> (1)",
    "[SwitchOff] <faucet> (1)",
    "[Find] <towel> (1)",
    "[Grab] <towel> (1)",
    "[Wipe] <hands_both> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_july",
   "file_id": "split4_7",
   "goal_condition": [
    [
     [
      198,
      262,
      "INSIDE",
      "character",
      "bathroom"
     ],
     [
      198,
      1002,
      "HOLDS_RH",
      "character",
      "towel"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1107,
   "completion_tokens": 143,
   "total_tokens": 1250
  }
 },
 "15": {
  "plan": [
   [
    " # 0: find a cup\n find('cup')\n # 1: grab cup\n assert('close' to 'cup')\n else: find('cup')\n grab('cup')\n # 2: fill the cup with water\n assert('close' to 'cup')\n else: find('cup')\n pour('water','cup')\n # 3: drink the water\n assert('close' to 'cup')\n else: find('cup')\n drink('cup')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " a",
      " cup",
      "\n",
      " find",
      "('",
      "cup",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " grab",
      " cup",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "cup",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "cup",
      "')",
      "\n",
      " grab",
      "('",
      "cup",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " fill",
      " the",
      " cup",
      " with",
      " water",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "cup",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "cup",
      "')",
      "\n",
      " pour",
      "('",
      "water",
      "','",
      "cup",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " drink",
      " the",
      " water",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "cup",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "cup",
      "')",
      "\n",
      " drink",
      "('",
      "cup",
      "')"
     ],
     "token_logprobs": [
      -0.08184933,
      -0.036736175,
      -0.0045111813,
      -0.18914056,
      -2.2469897,
      -0.14781907,
      -0.059118755,
      -0.020607134,
      -0.005695539,
      -0.0008472927,
      -0.0029825517,
      -0.014009794,
      -0.010248748,
      -0.00501683,
      -0.00090623525,
      -0.1699829,
      -1.049942,
      -0.031050056,
      -0.6781703,
      -0.0029957623,
      -0.004670758,
      -0.003334319,
      -0.00048155588,
      -0.005869038,
      -0.00037243115,
      -0.0075839725,
      -0.0085176965,
      -0.002404736,
      -0.0020902685,
      -0.0047977213,
      -0.0021227044,
      -0.00024179816,
      -0.0018353153,
      -0.008563504,
      -0.0039893286,
      -0.0014129244,
      -0.00017460952,
      -0.0014659873,
      -0.0062383707,
      -0.8688366,
      -0.012876657,
      -0.0017757822,
      -0.81125015,
      -1.6932976,
      -0.0013943625,
      -0.5580454,
      -0.7065104,
      -0.03652311,
      -0.7611932,
      -0.0025137817,
      -0.19936441,
      -0.0058549484,
      -0.00054291834,
      -0.0030460446,
      -1.5834005,
      -0.032846846,
      -0.0049033137,
      -0.0028975457,
      -0.0016610839,
      -0.03464814,
      -0.0013169494,
      -0.00036229656,
      -0.0010321224,
      -0.0057951147,
      -1.265193,
      -0.014077311,
      -0.36264148,
      -1.7056441,
      -0.010604283,
      -0.0033319283,
      -0.0097248005,
      -0.033651836,
      -0.013425758,
      -0.0011636941,
      -0.11879732,
      -0.65080935,
      -0.30979902,
      -0.05322517,
      -0.48076597,
      -0.0013697118,
      -0.20675232,
      -0.002640293,
      -0.0005630759,
      -0.0026248156,
      -0.0075296815,
      -0.0038391347,
      -0.0024643065,
      -0.0013701896,
      -0.0012869284,
      -0.02690983,
      -0.0008951977,
      -0.0002311867,
      -0.005414796,
      -0.0053723673,
      -0.12112566,
      -0.0037303593,
      -0.21661969,
      -0.0060082017
     ],
     "top_logprobs": [
      {
       " #": -0.08184933
      },
      {
       " 0": -0.036736175
      },
      {
       ":": -0.0045111813
      },
      {
       " find": -0.18914056
      },
      {
       " cup": -0.95732737
      },
      {
       " cup": -0.14781907
      },
      {
       "\n": -0.059118755
      },
      {
       " find": -0.020607134
      },
      {
       "('": -0.005695539
      },
      {
       "cup": -0.0008472927
      },
      {
       "')": -0.0029825517
      },
      {
       "\n": -0.014009794
      },
      {
       " #": -0.010248748
      },
      {
       " 1": -0.00501683
      },
      {
       ":": -0.00090623525
      },
      {
       " grab": -0.1699829
      },
      {
       " the": -0.8429909
      },
      {
       "\n": -0.031050056
      },
      {
       " assert": -0.6781703
      },
      {
       "('": -0.0029957623
      },
      {
       "close": -0.004670758
      },
      {
       "'": -0.003334319
      },
      {
       " to": -0.00048155588
      },
      {
       " '": -0.005869038
      },
      {
       "cup": -0.00037243115
      },
      {
       "')": -0.0075839725
      },
      {
       "\n": -0.0085176965
      },
      {
       " else": -0.002404736
      },
      {
       ":": -0.0020902685
      },
      {
       " find": -0.0047977213
      },
      {
       "('": -0.0021227044
      },
      {
       "cup": -0.00024179816
      },
      {
       "')": -0.0018353153
      },
      {
       "\n": -0.008563504
      },
      {
       " grab": -0.0039893286
      },
      {
       "('": -0.0014129244
      },
      {
       "cup": -0.00017460952
      },
      {
       "')": -0.0014659873
      },
      {
       "\n": -0.0062383707
      },
      {
       " assert": -0.61451167
      },
      {
       " 2": -0.012876657
      },
      {
       ":": -0.0017757822
      },
      {
       " fill": -0.81125015
      },
      {
       " cup": -0.34353566
      },
      {
       " cup": -0.0013943625
      },
      {
       " with": -0.5580454
      },
      {
       " water": -0.7065104
      },
      {
       "\n": -0.03652311
      },
      {
       " assert": -0.7611932
      },
      {
       "('": -0.0025137817
      },
      {
       "close": -0.19936441
      },
      {
       "'": -0.0058549484
      },
      {
       " to": -0.00054291834
      },
      {
       " '": -0.0030460446
      },
      {
       "f": -1.1505915
      },
      {
       "')": -0.032846846
      },
      {
       "\n": -0.0049033137
      },
      {
       " else": -0.0028975457
      },
      {
       ":": -0.0016610839
      },
      {
       " find": -0.03464814
      },
      {
       "('": -0.0013169494
      },
      {
       "cup": -0.00036229656
      },
      {
       "')": -0.0010321224
      },
      {
       "\n": -0.0057951147
      },
      {
       " fill": -0.89610773
      },
      {
       "('": -0.014077311
      },
      {
       "water": -0.36264148
      },
      {
       "',": -0.6494336
      },
      {
       "cup": -0.010604283
      },
      {
       "')": -0.0033319283
      },
      {
       "\n": -0.0097248005
      },
      {
       " #": -0.033651836
      },
      {
       " 3": -0.013425758
      },
      {
       ":": -0.0011636941
      },
      {
       " drink": -0.11879732
      },
      {
       " the": -0.65080935
      },
      {
       " water": -0.30979902
      },
      {
       "\n": -0.05322517
      },
      {
       " assert": -0.48076597
      },
      {
       "('": -0.0013697118
      },
      {
       "close": -0.20675232
      },
      {
       "'": -0.002640293
      },
      {
       " to": -0.0005630759
      },
      {
       " '": -0.0026248156
      },
      {
       "cup": -0.0075296815
      },
      {
       "')": -0.0038391347
      },
      {
       "\n": -0.0024643065
      },
      {
       " else": -0.0013701896
      },
      {
       ":": -0.0012869284
      },
      {
       " find": -0.02690983
      },
      {
       "('": -0.0008951977
      },
      {
       "cup": -0.0002311867
      },
      {
       "')": -0.005414796
      },
      {
       "\n": -0.0053723673
      },
      {
       " drink": -0.12112566
      },
      {
       "('": -0.0037303593
      },
      {
       "cup": -0.21661969
      },
      {
       "')": -0.0060082017
      }
     ],
     "text_offset": [
      3156,
      3158,
      3160,
      3161,
      3166,
      3168,
      3172,
      3173,
      3178,
      3180,
      3183,
      3185,
      3186,
      3188,
      3190,
      3191,
      3196,
      3200,
      3201,
      3208,
      3210,
      3215,
      3216,
      3219,
      3221,
      3224,
      3226,
      3227,
      3232,
      3233,
      3238,
      3240,
      3243,
      3245,
      3246,
      3251,
      3253,
      3256,
      3258,
      3259,
      3261,
      3263,
      3264,
      3269,
      3273,
      3277,
      3282,
      3288,
      3289,
      3296,
      3298,
      3303,
      3304,
      3307,
      3309,
      3312,
      3314,
      3315,
      3320,
      3321,
      3326,
      3328,
      3331,
      3333,
      3334,
      3339,
      3341,
      3346,
      3349,
      3352,
      3354,
      3355,
      3357,
      3359,
      3360,
      3366,
      3370,
      3376,
      3377,
      3384,
      3386,
      3391,
      3392,
      3395,
      3397,
      3400,
      3402,
      3403,
      3408,
      3409,
      3414,
      3416,
      3419,
      3421,
      3422,
      3428,
      3430,
      3433
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Drink",
   "task_description": "I bring the cup filled with water to my lips. I tilt the cup upwards slowly, so that the water falls into my mouth.",
   "program": [
    "[Find] <water_glass> (1)",
    "[Grab] <water_glass> (1)",
    "[Drink] <water_glass> (1)"
   ],
   "batch": "results_intentions_march-13-18",
   "file_id": "file146_1",
   "goal_condition": [
    [
     [
      198,
      1000,
      "HOLDS_RH",
      "character",
      "water_glass"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1105,
   "completion_tokens": 98,
   "total_tokens": 1203
  }
 },
 "16": {
  "plan": [
   [
    " # 0: walk to bathroom\n walk('bathroom')\n # 1: find the toilet\n find('toilet')\n # 2: pull the toilet lid\n pull('toilet_lid')\n # 3: sit on the toilet\n assert('close' to 'toilet')\n else: find('toilet')\n sit('toilet')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " bathroom",
      "\n",
      " walk",
      "('",
      "bath",
      "room",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " the",
      " toilet",
      "\n",
      " find",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " pull",
      " the",
      " toilet",
      " lid",
      "\n",
      " pull",
      "('",
      "to",
      "ilet",
      "_",
      "l",
      "id",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " sit",
      " on",
      " the",
      " toilet",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "to",
      "ilet",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " sit",
      "('",
      "to",
      "ilet",
      "')"
     ],
     "token_logprobs": [
      -0.017130807,
      -0.009094538,
      -0.0025975027,
      -0.13072097,
      -0.2646752,
      -0.351289,
      -0.02252524,
      -0.0048405444,
      -0.0039263153,
      -0.0018890623,
      -0.0001910622,
      -0.0019793566,
      -0.0070914375,
      -0.0024435145,
      -0.003412487,
      -0.0006893384,
      -0.15553963,
      -3.100841,
      -0.02336467,
      -0.029904291,
      -0.21144898,
      -0.0012803064,
      -0.0008793289,
      -0.0003282479,
      -0.003454175,
      -0.0057331272,
      -0.014036509,
      -0.004303137,
      -0.00062217895,
      -3.593669,
      -0.35680896,
      -0.4055895,
      -2.3595092,
      -0.31830254,
      -0.903359,
      -0.0030446106,
      -0.031110253,
      -0.00035382994,
      -0.2886803,
      -0.0020934937,
      -0.00019547573,
      -0.0043928744,
      -0.0108306315,
      -0.012644956,
      -0.0070051793,
      -0.0009735328,
      -0.39409018,
      -0.07110444,
      -0.1503638,
      -0.0048743864,
      -0.051618844,
      -1.4211006,
      -0.0018031899,
      -0.004522317,
      -0.0044190967,
      -0.015758932,
      -0.0027916236,
      -0.0013699502,
      -0.0007788107,
      -0.014102218,
      -0.003417212,
      -0.0020089794,
      -0.0013796804,
      -0.007831322,
      -0.0014255212,
      -0.0008138261,
      -0.00018522002,
      -0.0026610915,
      -0.005409341,
      -0.16271338,
      -0.0007958706,
      -0.00029605313,
      -3.2616e-05,
      -0.0023005402
     ],
     "top_logprobs": [
      {
       " #": -0.017130807
      },
      {
       " 0": -0.009094538
      },
      {
       ":": -0.0025975027
      },
      {
       " walk": -0.13072097
      },
      {
       " to": -0.2646752
      },
      {
       " bathroom": -0.351289
      },
      {
       "\n": -0.02252524
      },
      {
       " walk": -0.0048405444
      },
      {
       "('": -0.0039263153
      },
      {
       "bath": -0.0018890623
      },
      {
       "room": -0.0001910622
      },
      {
       "')": -0.0019793566
      },
      {
       "\n": -0.0070914375
      },
      {
       " #": -0.0024435145
      },
      {
       " 1": -0.003412487
      },
      {
       ":": -0.0006893384
      },
      {
       " find": -0.15553963
      },
      {
       " toilet": -0.06012419
      },
      {
       " toilet": -0.02336467
      },
      {
       "\n": -0.029904291
      },
      {
       " find": -0.21144898
      },
      {
       "('": -0.0012803064
      },
      {
       "to": -0.0008793289
      },
      {
       "ilet": -0.0003282479
      },
      {
       "')": -0.003454175
      },
      {
       "\n": -0.0057331272
      },
      {
       " #": -0.014036509
      },
      {
       " 2": -0.004303137
      },
      {
       ":": -0.00062217895
      },
      {
       " sit": -0.5687535
      },
      {
       " the": -0.35680896
      },
      {
       " toilet": -0.4055895
      },
      {
       "\n": -1.3156487
      },
      {
       "\n": -0.31830254
      },
      {
       " assert": -0.6549506
      },
      {
       "('": -0.0030446106
      },
      {
       "to": -0.031110253
      },
      {
       "ilet": -0.00035382994
      },
      {
       "_": -0.2886803
      },
      {
       "l": -0.0020934937
      },
      {
       "id": -0.00019547573
      },
      {
       "')": -0.0043928744
      },
      {
       "\n": -0.0108306315
      },
      {
       " #": -0.012644956
      },
      {
       " 3": -0.0070051793
      },
      {
       ":": -0.0009735328
      },
      {
       " sit": -0.39409018
      },
      {
       " on": -0.07110444
      },
      {
       " the": -0.1503638
      },
      {
       " toilet": -0.0048743864
      },
      {
       "\n": -0.051618844
      },
      {
       " sit": -0.43917662
      },
      {
       "('": -0.0018031899
      },
      {
       "close": -0.004522317
      },
      {
       "'": -0.0044190967
      },
      {
       " to": -0.015758932
      },
      {
       " '": -0.0027916236
      },
      {
       "to": -0.0013699502
      },
      {
       "ilet": -0.0007788107
      },
      {
       "')": -0.014102218
      },
      {
       "\n": -0.003417212
      },
      {
       " else": -0.0020089794
      },
      {
       ":": -0.0013796804
      },
      {
       " find": -0.007831322
      },
      {
       "('": -0.0014255212
      },
      {
       "to": -0.0008138261
      },
      {
       "ilet": -0.00018522002
      },
      {
       "')": -0.0026610915
      },
      {
       "\n": -0.005409341
      },
      {
       " sit": -0.16271338
      },
      {
       "('": -0.0007958706
      },
      {
       "to": -0.00029605313
      },
      {
       "ilet": -3.2616e-05
      },
      {
       "')": -0.0023005402
      }
     ],
     "text_offset": [
      3163,
      3165,
      3167,
      3168,
      3173,
      3176,
      3185,
      3186,
      3191,
      3193,
      3197,
      3201,
      3203,
      3204,
      3206,
      3208,
      3209,
      3214,
      3218,
      3225,
      3226,
      3231,
      3233,
      3235,
      3239,
      3241,
      3242,
      3244,
      3246,
      3247,
      3252,
      3256,
      3263,
      3267,
      3268,
      3273,
      3275,
      3277,
      3281,
      3282,
      3283,
      3285,
      3287,
      3288,
      3290,
      3292,
      3293,
      3297,
      3300,
      3304,
      3311,
      3312,
      3319,
      3321,
      3326,
      3327,
      3330,
      3332,
      3334,
      3338,
      3340,
      3341,
      3346,
      3347,
      3352,
      3354,
      3356,
      3360,
      3362,
      3363,
      3367,
      3369,
      3371,
      3375
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Go to toilet",
   "task_description": "I walk into the bathroom. I walk over to the toilet. I sit on the toilet.",
   "program": [
    "[Walk] <bathroom> (1)",
    "[Walk] <toilet> (1)",
    "[Sit] <toilet> (1)"
   ],
   "batch": "results_intentions_march-13-18",
   "file_id": "file547_1",
   "goal_condition": [
    [
     [
      198,
      283,
      "ON",
      "character",
      "toilet"
     ],
     [
      198,
      262,
      "INSIDE",
      "character",
      "bathroom"
     ]
    ],
    [
     [
      198,
      "character",
      "SITTING"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1110,
   "completion_tokens": 74,
   "total_tokens": 1184
  }
 },
 "17": {
  "plan": [
   [
    " # 0: walk to living room\n walk('living_room')\n # 1: find phone\n find('phone')\n # 2: grab the phone\n grab('phone')\n # 3: walk to bedroom\n walk('bedroom')\n # 4: put phone on nightstand\n find('nightstand')\n puton('phone')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " living",
      " room",
      "\n",
      " walk",
      "('",
      "living",
      "_",
      "room",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " phone",
      "\n",
      " find",
      "('",
      "phone",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " grab",
      " the",
      " phone",
      "\n",
      " grab",
      "('",
      "phone",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " walk",
      " to",
      " bedroom",
      "\n",
      " walk",
      "('",
      "bedroom",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " put",
      " phone",
      " on",
      " night",
      "stand",
      "\n",
      " find",
      "('",
      "night",
      "stand",
      "')",
      "\n",
      " put",
      "on",
      "('",
      "phone",
      "')"
     ],
     "token_logprobs": [
      -0.019773107,
      -0.010126088,
      -0.0020363335,
      -0.81584376,
      -0.25897658,
      -3.1409123,
      -0.05397623,
      -0.028228063,
      -0.005773772,
      -0.0046095587,
      -0.019203074,
      -0.2325401,
      -0.00018522002,
      -0.002252748,
      -0.0101536065,
      -0.0018389572,
      -0.0032659646,
      -0.0006715069,
      -0.03883955,
      -0.20511751,
      -0.026201833,
      -0.27126414,
      -0.0010462021,
      -0.0010161897,
      -0.0018978987,
      -0.0072879298,
      -0.0081272125,
      -0.004591654,
      -0.001278873,
      -0.44743493,
      -1.2397927,
      -0.0017971,
      -0.02411419,
      -0.48029825,
      -0.0010185777,
      -0.00019964804,
      -0.0020500727,
      -0.02190837,
      -0.37904698,
      -0.0071210293,
      -0.00082444504,
      -4.712178,
      -0.12386438,
      -0.107668884,
      -0.023238627,
      -0.010574223,
      -0.0021147588,
      -0.004020209,
      -0.0013632642,
      -0.016761247,
      -0.0065257656,
      -0.0057693943,
      -0.0012681301,
      -0.26485252,
      -0.93338937,
      -0.24497749,
      -0.24468495,
      -0.2110052,
      -0.014285341,
      -0.22884339,
      -0.0015869362,
      -0.0016480704,
      -0.003107208,
      -0.0017206704,
      -0.0051565347,
      -0.6619998,
      -0.06873009,
      -0.0014319677,
      -0.18368284,
      -0.24059254
     ],
     "top_logprobs": [
      {
       " #": -0.019773107
      },
      {
       " 0": -0.010126088
      },
      {
       ":": -0.0020363335
      },
      {
       " find": -0.75769544
      },
      {
       " to": -0.25897658
      },
      {
       " bedroom": -0.34619644
      },
      {
       " room": -0.05397623
      },
      {
       "\n": -0.028228063
      },
      {
       " walk": -0.005773772
      },
      {
       "('": -0.0046095587
      },
      {
       "living": -0.019203074
      },
      {
       "_": -0.2325401
      },
      {
       "room": -0.00018522002
      },
      {
       "')": -0.002252748
      },
      {
       "\n": -0.0101536065
      },
      {
       " #": -0.0018389572
      },
      {
       " 1": -0.0032659646
      },
      {
       ":": -0.0006715069
      },
      {
       " find": -0.03883955
      },
      {
       " phone": -0.20511751
      },
      {
       "\n": -0.026201833
      },
      {
       " find": -0.27126414
      },
      {
       "('": -0.0010462021
      },
      {
       "phone": -0.0010161897
      },
      {
       "')": -0.0018978987
      },
      {
       "\n": -0.0072879298
      },
      {
       " #": -0.0081272125
      },
      {
       " 2": -0.004591654
      },
      {
       ":": -0.001278873
      },
      {
       " grab": -0.44743493
      },
      {
       " phone": -0.35968104
      },
      {
       " phone": -0.0017971
      },
      {
       "\n": -0.02411419
      },
      {
       " grab": -0.48029825
      },
      {
       "('": -0.0010185777
      },
      {
       "phone": -0.00019964804
      },
      {
       "')": -0.0020500727
      },
      {
       "\n": -0.02190837
      },
      {
       " #": -0.37904698
      },
      {
       " 3": -0.0071210293
      },
      {
       ":": -0.00082444504
      },
      {
       " put": -1.4329689
      },
      {
       " to": -0.12386438
      },
      {
       " bedroom": -0.107668884
      },
      {
       "\n": -0.023238627
      },
      {
       " walk": -0.010574223
      },
      {
       "('": -0.0021147588
      },
      {
       "bedroom": -0.004020209
      },
      {
       "')": -0.0013632642
      },
      {
       "\n": -0.016761247
      },
      {
       " #": -0.0065257656
      },
      {
       " 4": -0.0057693943
      },
      {
       ":": -0.0012681301
      },
      {
       " put": -0.26485252
      },
      {
       " the": -0.66617465
      },
      {
       " on": -0.24497749
      },
      {
       " night": -0.24468495
      },
      {
       "stand": -0.2110052
      },
      {
       "\n": -0.014285341
      },
      {
       " find": -0.22884339
      },
      {
       "('": -0.0015869362
      },
      {
       "night": -0.0016480704
      },
      {
       "stand": -0.003107208
      },
      {
       "')": -0.0017206704
      },
      {
       "\n": -0.0051565347
      },
      {
       " put": -0.6619998
      },
      {
       "on": -0.06873009
      },
      {
       "('": -0.0014319677
      },
      {
       "phone": -0.18368284
      },
      {
       "')": -0.24059254
      }
     ],
     "text_offset": [
      3164,
      3166,
      3168,
      3169,
      3174,
      3177,
      3184,
      3189,
      3190,
      3195,
      3197,
      3203,
      3204,
      3208,
      3210,
      3211,
      3213,
      3215,
      3216,
      3221,
      3227,
      3228,
      3233,
      3235,
      3240,
      3242,
      3243,
      3245,
      3247,
      3248,
      3253,
      3257,
      3263,
      3264,
      3269,
      3271,
      3276,
      3278,
      3279,
      3281,
      3283,
      3284,
      3289,
      3292,
      3300,
      3301,
      3306,
      3308,
      3315,
      3317,
      3318,
      3320,
      3322,
      3323,
      3327,
      3333,
      3336,
      3342,
      3347,
      3348,
      3353,
      3355,
      3360,
      3365,
      3367,
      3368,
      3372,
      3374,
      3376,
      3381
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Pick up phone",
   "task_description": "I go to my home office. I walk towards my desk. I see the phone. I pick it up.",
   "program": [
    "[Walk] <home_office> (1)",
    "[Walk] <desk> (1)",
    "[Find] <phone> (1)",
    "[TurnTo] <phone> (1)",
    "[LookAt] <phone> (1)",
    "[Grab] <phone> (1)"
   ],
   "batch": "results_intentions_march-13-18",
   "file_id": "file870_1",
   "goal_condition": [
    [
     [
      198,
      1,
      "INSIDE",
      "character",
      "home_office"
     ],
     [
      198,
      1000,
      "HOLDS_RH",
      "character",
      "phone"
     ],
     [
      198,
      1000,
      "FACING",
      "character",
      "phone"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1109,
   "completion_tokens": 70,
   "total_tokens": 1179
  }
 }
}