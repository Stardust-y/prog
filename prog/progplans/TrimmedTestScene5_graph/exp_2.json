{
 "0": {
  "plan": [
   [
    " # 0: walk to bedroom\n walk('bedroom')\n # 1: find dresser\n walk('dresser')\n find('dresser')\n # 2: find coins\n find('coins')\n # 3: grab the coins\n grab('coins')\n # 4: put the coins in your pocket\n putin('coins', 'pocket')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " bedroom",
      "\n",
      " walk",
      "('",
      "bedroom",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " dress",
      "er",
      "\n",
      " walk",
      "('",
      "dress",
      "er",
      "')",
      "\n",
      " find",
      "('",
      "dress",
      "er",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " find",
      " coins",
      "\n",
      " find",
      "('",
      "coins",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " grab",
      " the",
      " coins",
      "\n",
      " grab",
      "('",
      "coins",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " put",
      " the",
      " coins",
      " in",
      " your",
      " pocket",
      "\n",
      " put",
      "in",
      "('",
      "coins",
      "',",
      " '",
      "pocket",
      "')"
     ],
     "token_logprobs": [
      -0.019926688,
      -0.013125201,
      -0.002704002,
      -0.24214573,
      -0.17697795,
      -0.24085179,
      -0.024739992,
      -0.004618002,
      -0.004364858,
      -0.0019543953,
      -0.0010304535,
      -0.008334186,
      -0.0016696219,
      -0.0033812074,
      -0.000823849,
      -0.05074675,
      -0.035667364,
      -0.0007374715,
      -0.019846063,
      -0.35963622,
      -0.0012695625,
      -0.0029407039,
      -0.00024441796,
      -0.00095557363,
      -0.0046984246,
      -0.009912602,
      -0.0006870716,
      -0.0010108217,
      -8.149626e-05,
      -0.0008660254,
      -0.0053866263,
      -0.0042349566,
      -0.0054280995,
      -0.00069291756,
      -0.70961833,
      -1.0619495,
      -0.09605599,
      -0.20534891,
      -0.0013583719,
      -0.3099967,
      -0.0019343888,
      -0.0059600538,
      -0.01741152,
      -0.005787201,
      -0.0012664603,
      -0.78764325,
      -1.6462885,
      -0.024577547,
      -0.029023582,
      -0.84156984,
      -0.0013250668,
      -0.0056271465,
      -0.0013642197,
      -0.047733054,
      -0.27853194,
      -0.008305276,
      -0.0014439647,
      -0.23402476,
      -0.8662592,
      -0.005475744,
      -0.22511846,
      -1.4526621,
      -0.017309269,
      -0.020792,
      -0.41100776,
      -0.08886014,
      -0.008968714,
      -0.13652667,
      -0.32868806,
      -0.0040893327,
      -0.011666038,
      -0.0028287428
     ],
     "top_logprobs": [
      {
       " #": -0.019926688
      },
      {
       " 0": -0.013125201
      },
      {
       ":": -0.002704002
      },
      {
       " walk": -0.24214573
      },
      {
       " to": -0.17697795
      },
      {
       " bedroom": -0.24085179
      },
      {
       "\n": -0.024739992
      },
      {
       " walk": -0.004618002
      },
      {
       "('": -0.004364858
      },
      {
       "bedroom": -0.0019543953
      },
      {
       "')": -0.0010304535
      },
      {
       "\n": -0.008334186
      },
      {
       " #": -0.0016696219
      },
      {
       " 1": -0.0033812074
      },
      {
       ":": -0.000823849
      },
      {
       " find": -0.05074675
      },
      {
       " dress": -0.035667364
      },
      {
       "er": -0.0007374715
      },
      {
       "\n": -0.019846063
      },
      {
       " walk": -0.35963622
      },
      {
       "('": -0.0012695625
      },
      {
       "dress": -0.0029407039
      },
      {
       "er": -0.00024441796
      },
      {
       "')": -0.00095557363
      },
      {
       "\n": -0.0046984246
      },
      {
       " find": -0.009912602
      },
      {
       "('": -0.0006870716
      },
      {
       "dress": -0.0010108217
      },
      {
       "er": -8.149626e-05
      },
      {
       "')": -0.0008660254
      },
      {
       "\n": -0.0053866263
      },
      {
       " #": -0.0042349566
      },
      {
       " 2": -0.0054280995
      },
      {
       ":": -0.00069291756
      },
      {
       " find": -0.70961833
      },
      {
       " coins": -1.0619495
      },
      {
       "\n": -0.09605599
      },
      {
       " find": -0.20534891
      },
      {
       "('": -0.0013583719
      },
      {
       "coins": -0.3099967
      },
      {
       "')": -0.0019343888
      },
      {
       "\n": -0.0059600538
      },
      {
       " #": -0.01741152
      },
      {
       " 3": -0.005787201
      },
      {
       ":": -0.0012664603
      },
      {
       " pick": -0.68061715
      },
      {
       " coins": -0.2518919
      },
      {
       " coins": -0.024577547
      },
      {
       "\n": -0.029023582
      },
      {
       " assert": -0.63750255
      },
      {
       "('": -0.0013250668
      },
      {
       "coins": -0.0056271465
      },
      {
       "')": -0.0013642197
      },
      {
       "\n": -0.047733054
      },
      {
       " #": -0.27853194
      },
      {
       " 4": -0.008305276
      },
      {
       ":": -0.0014439647
      },
      {
       " put": -0.23402476
      },
      {
       " the": -0.8662592
      },
      {
       " coins": -0.005475744
      },
      {
       " in": -0.22511846
      },
      {
       " pocket": -0.540795
      },
      {
       " pocket": -0.017309269
      },
      {
       "\n": -0.020792
      },
      {
       " put": -0.41100776
      },
      {
       "in": -0.08886014
      },
      {
       "('": -0.008968714
      },
      {
       "coins": -0.13652667
      },
      {
       "',": -0.32868806
      },
      {
       " '": -0.0040893327
      },
      {
       "pocket": -0.011666038
      },
      {
       "')": -0.0028287428
      }
     ],
     "text_offset": [
      3182,
      3184,
      3186,
      3187,
      3192,
      3195,
      3203,
      3204,
      3209,
      3211,
      3218,
      3220,
      3221,
      3223,
      3225,
      3226,
      3231,
      3237,
      3239,
      3240,
      3245,
      3247,
      3252,
      3254,
      3256,
      3257,
      3262,
      3264,
      3269,
      3271,
      3273,
      3274,
      3276,
      3278,
      3279,
      3284,
      3290,
      3291,
      3296,
      3298,
      3303,
      3305,
      3306,
      3308,
      3310,
      3311,
      3316,
      3320,
      3326,
      3327,
      3332,
      3334,
      3339,
      3341,
      3342,
      3344,
      3346,
      3347,
      3351,
      3355,
      3361,
      3364,
      3369,
      3376,
      3377,
      3381,
      3383,
      3385,
      3390,
      3392,
      3394,
      3400
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Pick up spare change on dresser",
   "task_description": "Locate all the coins on the dresser top. Pick them up.",
   "program": [
    "[Walk] <bedroom> (1)",
    "[Walk] <dresser> (1)",
    "[Find] <coin> (1)",
    "[Grab] <coin> (1)",
    "[Walk] <cup> (1)",
    "[PutBack] <coin> (1) <cup> (1)",
    "[Walk] <dresser> (1)",
    "[Find] <coin> (2)",
    "[Grab] <coin> (2)",
    "[Walk] <cup> (1)",
    "[PutBack] <coin> (2) <cup> (1)",
    "[Walk] <dresser> (1)",
    "[Find] <coin> (3)",
    "[Grab] <coin> (3)",
    "[Walk] <cup> (1)",
    "[PutBack] <coin> (3) <cup> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_turk_robot",
   "file_id": "split6_1",
   "goal_condition": [
    [
     [
      1003,
      1001,
      "ON",
      "coin",
      "cup"
     ],
     [
      198,
      199,
      "INSIDE",
      "character",
      "bedroom"
     ],
     [
      1000,
      1001,
      "ON",
      "coin",
      "cup"
     ],
     [
      1002,
      1001,
      "ON",
      "coin",
      "cup"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1117,
   "completion_tokens": 72,
   "total_tokens": 1189
  }
 },
 "1": {
  "plan": [
   [
    " # 0: walk to living room\n walk('living_room')\n # 1: find TV\n find('television')\n # 2: turn on the TV\n assert('close' to 'television')\n else: find('television')\n assert('television' is 'switchoff')\n else: switchoff('television')\n switchon('television')\n # 3: find couch and sit on it\n find('couch')\n assert('close' to 'couch')\n else: find('couch')\n sit('couch')\n # 4: watch TV\n lookat('television')\ndef water_plant():\n # 0: walk to living room\n walk('living_room')\n # 1: find the plant\n find('plant')\n # 2: find watering can\n find('watering_can')\n # 3: grab watering can\n assert('close' to 'watering_can')\n else: find('watering_can')\n grab('watering_can')\n assert('watering_can' in 'hands')\n else: grab('watering_can')\n # 4: water the plant\n assert('watering_can' in 'hands')\n else: grab('watering_can')\n pour('watering_can')\n # 5: put watering can back\n assert('watering_can' in 'hands')\n else: grab('watering_can')\n putobjback('watering_can')\n # 6: done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " living",
      " room",
      "\n",
      " walk",
      "('",
      "living",
      "_",
      "room",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " TV",
      "\n",
      " find",
      "('",
      "te",
      "levision",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " turn",
      " on",
      " the",
      " TV",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "te",
      "levision",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "te",
      "levision",
      "')",
      "\n",
      " assert",
      "('",
      "te",
      "levision",
      "'",
      " is",
      " '",
      "switch",
      "off",
      "')",
      "\n",
      " else",
      ":",
      " switch",
      "off",
      "('",
      "te",
      "levision",
      "')",
      "\n",
      " switch",
      "on",
      "('",
      "te",
      "levision",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " find",
      " couch",
      " and",
      " sit",
      " on",
      " it",
      "\n",
      " find",
      "('",
      "c",
      "ouch",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "c",
      "ouch",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "c",
      "ouch",
      "')",
      "\n",
      " sit",
      "('",
      "c",
      "ouch",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " watch",
      " TV",
      "\n",
      " look",
      "at",
      "('",
      "te",
      "levision",
      "')",
      "\n",
      "def",
      " water",
      "_",
      "plant",
      "():",
      "\n",
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " living",
      " room",
      "\n",
      " walk",
      "('",
      "living",
      "_",
      "room",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " the",
      " plant",
      "\n",
      " find",
      "('",
      "plant",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " find",
      " watering",
      " can",
      "\n",
      " find",
      "('",
      "water",
      "ing",
      "_",
      "can",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " grab",
      " watering",
      " can",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "water",
      "ing",
      "_",
      "can",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "water",
      "ing",
      "_",
      "can",
      "')",
      "\n",
      " grab",
      "('",
      "water",
      "ing",
      "_",
      "can",
      "')",
      "\n",
      " assert",
      "('",
      "water",
      "ing",
      "_",
      "can",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "water",
      "ing",
      "_",
      "can",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " water",
      " the",
      " plant",
      "\n",
      " assert",
      "('",
      "water",
      "ing",
      "_",
      "can",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "water",
      "ing",
      "_",
      "can",
      "')",
      "\n",
      " pour",
      "('",
      "water",
      "ing",
      "_",
      "can",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " put",
      " watering",
      " can",
      " back",
      "\n",
      " assert",
      "('",
      "water",
      "ing",
      "_",
      "can",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "water",
      "ing",
      "_",
      "can",
      "')",
      "\n",
      " put",
      "obj",
      "back",
      "('",
      "water",
      "ing",
      "_",
      "can",
      "')",
      "\n",
      " #",
      " 6",
      ":",
      " done"
     ],
     "token_logprobs": [
      -0.013420743,
      -0.008695169,
      -0.0016933256,
      -0.2498047,
      -0.28167656,
      -0.32327896,
      -0.056386344,
      -0.019572565,
      -0.0033674506,
      -0.0036317694,
      -0.010111578,
      -0.27712405,
      -0.00016316361,
      -0.001792801,
      -0.0064543136,
      -0.00130173,
      -0.0028406382,
      -0.00056498323,
      -0.02212084,
      -3.0100117,
      -0.23284827,
      -0.5482826,
      -0.00086685986,
      -0.3439544,
      -0.00075417483,
      -0.002009338,
      -0.006594883,
      -0.0043639005,
      -0.0057838443,
      -0.0006341674,
      -0.3695285,
      -0.018994989,
      -0.5643117,
      -0.11505305,
      -0.027100027,
      -0.24584527,
      -0.0011144064,
      -0.008720722,
      -0.0028471535,
      -0.0008209852,
      -0.0015229991,
      -0.13152407,
      -0.00090384827,
      -0.0035969538,
      -0.006631121,
      -0.0012868103,
      -0.0013852906,
      -0.0043555773,
      -0.0015663385,
      -0.002003545,
      -0.0012965985,
      -0.0037025416,
      -0.006572863,
      -3.4616857,
      -0.0013371839,
      -0.27820528,
      -0.0011203715,
      -0.0063387197,
      -0.011037564,
      -0.012295634,
      -0.018282672,
      -0.008367902,
      -0.011405919,
      -0.005771313,
      -0.0037017034,
      -0.002828861,
      -0.0024645447,
      -0.017835323,
      -0.0009996048,
      -0.0036064663,
      -0.0002131233,
      -0.0029802793,
      -0.007346472,
      -0.007687818,
      -0.00026779127,
      -0.00039807137,
      -0.0045090253,
      -0.00064180145,
      -0.0015065821,
      -0.3202325,
      -0.025916621,
      -0.0091946935,
      -0.0006511063,
      -1.030216,
      -0.46681076,
      -0.045647122,
      -0.0017961444,
      -0.035656124,
      -0.0013473288,
      -0.0066086235,
      -0.017578691,
      -0.00047964763,
      -0.00033796768,
      -8.8051806e-05,
      -0.00060023234,
      -0.0017368518,
      -0.056645688,
      -0.00030570905,
      -0.0013380183,
      -0.0010321224,
      -0.00021061805,
      -0.00060929876,
      -0.0002644525,
      -4.394177e-05,
      -0.0011423923,
      -0.0016000087,
      -0.00041876204,
      -0.0005443507,
      -0.0011096315,
      -0.00065361155,
      -8.972073e-05,
      -7.827482e-05,
      -0.0011292051,
      -0.0019198762,
      -0.0022372752,
      -0.0003803027,
      -0.00011416413,
      -7.827482e-05,
      -0.00097639667,
      -0.17080049,
      -0.011746972,
      -0.0048070042,
      -0.0005704706,
      -2.1256993,
      -0.81627554,
      -0.017433172,
      -1.1370825,
      -0.0013630259,
      -0.00054590043,
      -0.0018111328,
      -0.0009975744,
      -0.0020817858,
      -2.7225828,
      -1.0301727,
      -5.1822653,
      -0.002037768,
      -2.2547603,
      -0.024475656,
      -0.015573766,
      -0.011933343,
      -0.006569323,
      -0.0021691143,
      -0.46605596,
      -0.05785745,
      -0.68111926,
      -0.030073868,
      -0.021138825,
      -0.0037801398,
      -0.0024389732,
      -0.0021886493,
      -0.005704892,
      -6.9690854e-05,
      -0.00092234253,
      -0.009296661,
      -0.001551473,
      -0.0032222527,
      -0.0006059581,
      -0.019147966,
      -2.4569643,
      -0.2094245,
      -0.030630583,
      -0.037470058,
      -0.0012591783,
      -0.060850743,
      -0.0017954282,
      -0.00551548,
      -0.008103415,
      -0.0039977673,
      -0.00075238576,
      -0.60578555,
      -2.280203,
      -0.03860665,
      -0.038352,
      -0.03592627,
      -0.0018068337,
      -0.00375884,
      -0.0066137197,
      -0.018708607,
      -0.00042889945,
      -0.0022333318,
      -0.00495968,
      -0.014062019,
      -0.0040428895,
      -0.0011806423,
      -0.79392576,
      -0.7413436,
      -0.0032491006,
      -0.036595944,
      -1.0840765,
      -0.00126443,
      -0.0035696158,
      -0.0020927757,
      -0.00041840534,
      -0.0019711736,
      -0.012433765,
      -0.0014830022,
      -0.0033130287,
      -0.0002303513,
      -0.0063931854,
      -0.0051635453,
      -0.0011009781,
      -0.0012881234,
      -0.0040831678,
      -0.0015194152,
      -0.00064454606,
      -0.00084228313,
      -0.00067723077,
      -0.0002948601,
      -0.0033159,
      -0.006319645,
      -0.0037483093,
      -0.0008726466,
      -0.00047183523,
      -0.0016280097,
      -0.0017592423,
      -0.0001101101,
      -0.0016124871,
      -0.004549261,
      -0.7499549,
      -0.0014281474,
      -0.011824109,
      -0.0019781608,
      -0.002989786,
      -0.00058526185,
      -0.00183639,
      -0.0240129,
      -0.0032010842,
      -0.005219147,
      -0.019347815,
      -0.0031100775,
      -0.00932319,
      -0.0015214466,
      -0.0024625147,
      -0.0014973889,
      -0.0005831151,
      -0.0005976088,
      -0.0005873513,
      -0.00019988645,
      -0.0025277066,
      -0.0043812026,
      -0.6042104,
      -0.0072177453,
      -0.0010377318,
      -2.2098472,
      -0.12642576,
      -0.010947349,
      -0.035173085,
      -1.3111967,
      -0.0010718011,
      -0.59061587,
      -0.004094898,
      -0.0012293367,
      -0.00020024595,
      -0.0022293294,
      -0.016143866,
      -0.0018952715,
      -0.0027286254,
      -0.0044161025,
      -0.0026783636,
      -0.0020563419,
      -0.0008307697,
      -0.0119014345,
      -0.00088338665,
      -0.00048632707,
      -0.00047505385,
      -0.0003139382,
      -0.00014086877,
      -0.0029655725,
      -0.0035102179,
      -0.1828958,
      -0.0020442184,
      -0.0886123,
      -0.02427766,
      -0.0006026193,
      -0.00020417797,
      -0.09635615,
      -0.013876399,
      -1.2383766,
      -0.0043281596,
      -0.0013990775,
      -0.18601482,
      -0.7518809,
      -0.009359832,
      -0.032831755,
      -0.01915234,
      -0.23887911,
      -0.0006212253,
      -0.007597066,
      -0.0010749033,
      -0.00081442395,
      -0.00025717984,
      -0.0016745188,
      -0.0019954217,
      -0.0014788234,
      -0.00092341634,
      -0.0015305196,
      -0.0018361505,
      -0.00068289746,
      -0.0009157814,
      -0.0058670593,
      -0.0007430809,
      -0.00034154486,
      -0.0004156626,
      -0.00027852194,
      -1.7356348e-05,
      -0.0014876588,
      -0.0036808243,
      -0.009517116,
      -0.25083622,
      -0.0017532724,
      -0.00073234556,
      -0.0008384657,
      -0.0010345085,
      -0.00068993546,
      -0.00020775704,
      -0.0020448172,
      -0.17786908,
      -0.011268953,
      -0.004892655,
      -0.0020576578,
      -2.27461
     ],
     "top_logprobs": [
      {
       " #": -0.013420743
      },
      {
       " 0": -0.008695169
      },
      {
       ":": -0.0016933256
      },
      {
       " walk": -0.2498047
      },
      {
       " to": -0.28167656
      },
      {
       " living": -0.32327896
      },
      {
       " room": -0.056386344
      },
      {
       "\n": -0.019572565
      },
      {
       " walk": -0.0033674506
      },
      {
       "('": -0.0036317694
      },
      {
       "living": -0.010111578
      },
      {
       "_": -0.27712405
      },
      {
       "room": -0.00016316361
      },
      {
       "')": -0.001792801
      },
      {
       "\n": -0.0064543136
      },
      {
       " #": -0.00130173
      },
      {
       " 1": -0.0028406382
      },
      {
       ":": -0.00056498323
      },
      {
       " find": -0.02212084
      },
      {
       " tv": -0.6111154
      },
      {
       "\n": -0.23284827
      },
      {
       " find": -0.5482826
      },
      {
       "('": -0.00086685986
      },
      {
       "te": -0.3439544
      },
      {
       "levision": -0.00075417483
      },
      {
       "')": -0.002009338
      },
      {
       "\n": -0.006594883
      },
      {
       " #": -0.0043639005
      },
      {
       " 2": -0.0057838443
      },
      {
       ":": -0.0006341674
      },
      {
       " turn": -0.3695285
      },
      {
       " on": -0.018994989
      },
      {
       " the": -0.5643117
      },
      {
       " TV": -0.11505305
      },
      {
       "\n": -0.027100027
      },
      {
       " assert": -0.24584527
      },
      {
       "('": -0.0011144064
      },
      {
       "close": -0.008720722
      },
      {
       "'": -0.0028471535
      },
      {
       " to": -0.0008209852
      },
      {
       " '": -0.0015229991
      },
      {
       "te": -0.13152407
      },
      {
       "levision": -0.00090384827
      },
      {
       "')": -0.0035969538
      },
      {
       "\n": -0.006631121
      },
      {
       " else": -0.0012868103
      },
      {
       ":": -0.0013852906
      },
      {
       " find": -0.0043555773
      },
      {
       "('": -0.0015663385
      },
      {
       "te": -0.002003545
      },
      {
       "levision": -0.0012965985
      },
      {
       "')": -0.0037025416
      },
      {
       "\n": -0.006572863
      },
      {
       " switch": -0.17657812
      },
      {
       "('": -0.0013371839
      },
      {
       "te": -0.27820528
      },
      {
       "levision": -0.0011203715
      },
      {
       "'": -0.0063387197
      },
      {
       " is": -0.011037564
      },
      {
       " '": -0.012295634
      },
      {
       "switch": -0.018282672
      },
      {
       "off": -0.008367902
      },
      {
       "')": -0.011405919
      },
      {
       "\n": -0.005771313
      },
      {
       " else": -0.0037017034
      },
      {
       ":": -0.002828861
      },
      {
       " switch": -0.0024645447
      },
      {
       "off": -0.017835323
      },
      {
       "('": -0.0009996048
      },
      {
       "te": -0.0036064663
      },
      {
       "levision": -0.0002131233
      },
      {
       "')": -0.0029802793
      },
      {
       "\n": -0.007346472
      },
      {
       " switch": -0.007687818
      },
      {
       "on": -0.00026779127
      },
      {
       "('": -0.00039807137
      },
      {
       "te": -0.0045090253
      },
      {
       "levision": -0.00064180145
      },
      {
       "')": -0.0015065821
      },
      {
       "\n": -0.3202325
      },
      {
       " #": -0.025916621
      },
      {
       " 3": -0.0091946935
      },
      {
       ":": -0.0006511063
      },
      {
       " find": -1.030216
      },
      {
       " couch": -0.46681076
      },
      {
       " and": -0.045647122
      },
      {
       " sit": -0.0017961444
      },
      {
       " on": -0.035656124
      },
      {
       " it": -0.0013473288
      },
      {
       "\n": -0.0066086235
      },
      {
       " find": -0.017578691
      },
      {
       "('": -0.00047964763
      },
      {
       "c": -0.00033796768
      },
      {
       "ouch": -8.8051806e-05
      },
      {
       "')": -0.00060023234
      },
      {
       "\n": -0.0017368518
      },
      {
       " assert": -0.056645688
      },
      {
       "('": -0.00030570905
      },
      {
       "close": -0.0013380183
      },
      {
       "'": -0.0010321224
      },
      {
       " to": -0.00021061805
      },
      {
       " '": -0.00060929876
      },
      {
       "c": -0.0002644525
      },
      {
       "ouch": -4.394177e-05
      },
      {
       "')": -0.0011423923
      },
      {
       "\n": -0.0016000087
      },
      {
       " else": -0.00041876204
      },
      {
       ":": -0.0005443507
      },
      {
       " find": -0.0011096315
      },
      {
       "('": -0.00065361155
      },
      {
       "c": -8.972073e-05
      },
      {
       "ouch": -7.827482e-05
      },
      {
       "')": -0.0011292051
      },
      {
       "\n": -0.0019198762
      },
      {
       " sit": -0.0022372752
      },
      {
       "('": -0.0003803027
      },
      {
       "c": -0.00011416413
      },
      {
       "ouch": -7.827482e-05
      },
      {
       "')": -0.00097639667
      },
      {
       "\n": -0.17080049
      },
      {
       " #": -0.011746972
      },
      {
       " 4": -0.0048070042
      },
      {
       ":": -0.0005704706
      },
      {
       " touch": -0.860716
      },
      {
       " TV": -0.81627554
      },
      {
       "\n": -0.017433172
      },
      {
       " tur": -0.5662226
      },
      {
       "at": -0.0013630259
      },
      {
       "('": -0.00054590043
      },
      {
       "te": -0.0018111328
      },
      {
       "levision": -0.0009975744
      },
      {
       "')": -0.0020817858
      },
      {
       "<|endoftext|>": -0.0735103
      },
      {
       "def": -1.0301727
      },
      {
       " make": -1.3812231
      },
      {
       "_": -0.002037768
      },
      {
       "pl": -0.28491947
      },
      {
       "():": -0.024475656
      },
      {
       "\n": -0.015573766
      },
      {
       " #": -0.011933343
      },
      {
       " 0": -0.006569323
      },
      {
       ":": -0.0021691143
      },
      {
       " walk": -0.46605596
      },
      {
       " to": -0.05785745
      },
      {
       " living": -0.68111926
      },
      {
       " room": -0.030073868
      },
      {
       "\n": -0.021138825
      },
      {
       " walk": -0.0037801398
      },
      {
       "('": -0.0024389732
      },
      {
       "living": -0.0021886493
      },
      {
       "_": -0.005704892
      },
      {
       "room": -6.9690854e-05
      },
      {
       "')": -0.00092234253
      },
      {
       "\n": -0.009296661
      },
      {
       " #": -0.001551473
      },
      {
       " 1": -0.0032222527
      },
      {
       ":": -0.0006059581
      },
      {
       " find": -0.019147966
      },
      {
       " plant": -0.45368177
      },
      {
       " plant": -0.2094245
      },
      {
       "\n": -0.030630583
      },
      {
       " find": -0.037470058
      },
      {
       "('": -0.0012591783
      },
      {
       "plant": -0.060850743
      },
      {
       "')": -0.0017954282
      },
      {
       "\n": -0.00551548
      },
      {
       " #": -0.008103415
      },
      {
       " 2": -0.0039977673
      },
      {
       ":": -0.00075238576
      },
      {
       " find": -0.60578555
      },
      {
       " the": -0.6935494
      },
      {
       " can": -0.03860665
      },
      {
       "\n": -0.038352
      },
      {
       " find": -0.03592627
      },
      {
       "('": -0.0018068337
      },
      {
       "water": -0.00375884
      },
      {
       "ing": -0.0066137197
      },
      {
       "_": -0.018708607
      },
      {
       "can": -0.00042889945
      },
      {
       "')": -0.0022333318
      },
      {
       "\n": -0.00495968
      },
      {
       " #": -0.014062019
      },
      {
       " 3": -0.0040428895
      },
      {
       ":": -0.0011806423
      },
      {
       " grab": -0.79392576
      },
      {
       " the": -0.7094699
      },
      {
       " can": -0.0032491006
      },
      {
       "\n": -0.036595944
      },
      {
       " grab": -0.42545873
      },
      {
       "('": -0.00126443
      },
      {
       "close": -0.0035696158
      },
      {
       "'": -0.0020927757
      },
      {
       " to": -0.00041840534
      },
      {
       " '": -0.0019711736
      },
      {
       "water": -0.012433765
      },
      {
       "ing": -0.0014830022
      },
      {
       "_": -0.0033130287
      },
      {
       "can": -0.0002303513
      },
      {
       "')": -0.0063931854
      },
      {
       "\n": -0.0051635453
      },
      {
       " else": -0.0011009781
      },
      {
       ":": -0.0012881234
      },
      {
       " find": -0.0040831678
      },
      {
       "('": -0.0015194152
      },
      {
       "water": -0.00064454606
      },
      {
       "ing": -0.00084228313
      },
      {
       "_": -0.00067723077
      },
      {
       "can": -0.0002948601
      },
      {
       "')": -0.0033159
      },
      {
       "\n": -0.006319645
      },
      {
       " grab": -0.0037483093
      },
      {
       "('": -0.0008726466
      },
      {
       "water": -0.00047183523
      },
      {
       "ing": -0.0016280097
      },
      {
       "_": -0.0017592423
      },
      {
       "can": -0.0001101101
      },
      {
       "')": -0.0016124871
      },
      {
       "\n": -0.004549261
      },
      {
       " #": -0.6934697
      },
      {
       "('": -0.0014281474
      },
      {
       "water": -0.011824109
      },
      {
       "ing": -0.0019781608
      },
      {
       "_": -0.002989786
      },
      {
       "can": -0.00058526185
      },
      {
       "'": -0.00183639
      },
      {
       " in": -0.0240129
      },
      {
       " '": -0.0032010842
      },
      {
       "hands": -0.005219147
      },
      {
       "')": -0.019347815
      },
      {
       "\n": -0.0031100775
      },
      {
       " else": -0.00932319
      },
      {
       ":": -0.0015214466
      },
      {
       " grab": -0.0024625147
      },
      {
       "('": -0.0014973889
      },
      {
       "water": -0.0005831151
      },
      {
       "ing": -0.0005976088
      },
      {
       "_": -0.0005873513
      },
      {
       "can": -0.00019988645
      },
      {
       "')": -0.0025277066
      },
      {
       "\n": -0.0043812026
      },
      {
       " #": -0.6042104
      },
      {
       " 4": -0.0072177453
      },
      {
       ":": -0.0010377318
      },
      {
       " pour": -0.43112823
      },
      {
       " the": -0.12642576
      },
      {
       " plant": -0.010947349
      },
      {
       "\n": -0.035173085
      },
      {
       " pour": -0.97162557
      },
      {
       "('": -0.0010718011
      },
      {
       "water": -0.59061587
      },
      {
       "ing": -0.004094898
      },
      {
       "_": -0.0012293367
      },
      {
       "can": -0.00020024595
      },
      {
       "'": -0.0022293294
      },
      {
       " in": -0.016143866
      },
      {
       " '": -0.0018952715
      },
      {
       "hands": -0.0027286254
      },
      {
       "')": -0.0044161025
      },
      {
       "\n": -0.0026783636
      },
      {
       " else": -0.0020563419
      },
      {
       ":": -0.0008307697
      },
      {
       " grab": -0.0119014345
      },
      {
       "('": -0.00088338665
      },
      {
       "water": -0.00048632707
      },
      {
       "ing": -0.00047505385
      },
      {
       "_": -0.0003139382
      },
      {
       "can": -0.00014086877
      },
      {
       "')": -0.0029655725
      },
      {
       "\n": -0.0035102179
      },
      {
       " pour": -0.1828958
      },
      {
       "('": -0.0020442184
      },
      {
       "water": -0.0886123
      },
      {
       "ing": -0.02427766
      },
      {
       "_": -0.0006026193
      },
      {
       "can": -0.00020417797
      },
      {
       "')": -0.09635615
      },
      {
       "\n": -0.013876399
      },
      {
       " tur": -0.6609536
      },
      {
       " 5": -0.0043281596
      },
      {
       ":": -0.0013990775
      },
      {
       " put": -0.18601482
      },
      {
       " watering": -0.7518809
      },
      {
       " can": -0.009359832
      },
      {
       " back": -0.032831755
      },
      {
       "\n": -0.01915234
      },
      {
       " assert": -0.23887911
      },
      {
       "('": -0.0006212253
      },
      {
       "water": -0.007597066
      },
      {
       "ing": -0.0010749033
      },
      {
       "_": -0.00081442395
      },
      {
       "can": -0.00025717984
      },
      {
       "'": -0.0016745188
      },
      {
       " in": -0.0019954217
      },
      {
       " '": -0.0014788234
      },
      {
       "hands": -0.00092341634
      },
      {
       "')": -0.0015305196
      },
      {
       "\n": -0.0018361505
      },
      {
       " else": -0.00068289746
      },
      {
       ":": -0.0009157814
      },
      {
       " grab": -0.0058670593
      },
      {
       "('": -0.0007430809
      },
      {
       "water": -0.00034154486
      },
      {
       "ing": -0.0004156626
      },
      {
       "_": -0.00027852194
      },
      {
       "can": -1.7356348e-05
      },
      {
       "')": -0.0014876588
      },
      {
       "\n": -0.0036808243
      },
      {
       " put": -0.009517116
      },
      {
       "obj": -0.25083622
      },
      {
       "back": -0.0017532724
      },
      {
       "('": -0.00073234556
      },
      {
       "water": -0.0008384657
      },
      {
       "ing": -0.0010345085
      },
      {
       "_": -0.00068993546
      },
      {
       "can": -0.00020775704
      },
      {
       "')": -0.0020448172
      },
      {
       "\n": -0.17786908
      },
      {
       " #": -0.011268953
      },
      {
       " 6": -0.004892655
      },
      {
       ":": -0.0020576578
      },
      {
       " Done": -0.118813895
      }
     ],
     "text_offset": [
      3161,
      3163,
      3165,
      3166,
      3171,
      3174,
      3181,
      3186,
      3187,
      3192,
      3194,
      3200,
      3201,
      3205,
      3207,
      3208,
      3210,
      3212,
      3213,
      3218,
      3221,
      3222,
      3227,
      3229,
      3231,
      3239,
      3241,
      3242,
      3244,
      3246,
      3247,
      3252,
      3255,
      3259,
      3262,
      3263,
      3270,
      3272,
      3277,
      3278,
      3281,
      3283,
      3285,
      3293,
      3295,
      3296,
      3301,
      3302,
      3307,
      3309,
      3311,
      3319,
      3321,
      3322,
      3329,
      3331,
      3333,
      3341,
      3342,
      3345,
      3347,
      3353,
      3356,
      3358,
      3359,
      3364,
      3365,
      3372,
      3375,
      3377,
      3379,
      3387,
      3389,
      3390,
      3397,
      3399,
      3401,
      3403,
      3411,
      3413,
      3414,
      3416,
      3418,
      3419,
      3424,
      3430,
      3434,
      3438,
      3441,
      3444,
      3445,
      3450,
      3452,
      3453,
      3457,
      3459,
      3460,
      3467,
      3469,
      3474,
      3475,
      3478,
      3480,
      3481,
      3485,
      3487,
      3488,
      3493,
      3494,
      3499,
      3501,
      3502,
      3506,
      3508,
      3509,
      3513,
      3515,
      3516,
      3520,
      3522,
      3523,
      3525,
      3527,
      3528,
      3534,
      3537,
      3538,
      3543,
      3545,
      3547,
      3549,
      3557,
      3559,
      3560,
      3563,
      3569,
      3570,
      3575,
      3578,
      3579,
      3581,
      3583,
      3584,
      3589,
      3592,
      3599,
      3604,
      3605,
      3610,
      3612,
      3618,
      3619,
      3623,
      3625,
      3626,
      3628,
      3630,
      3631,
      3636,
      3640,
      3646,
      3647,
      3652,
      3654,
      3659,
      3661,
      3662,
      3664,
      3666,
      3667,
      3672,
      3681,
      3685,
      3686,
      3691,
      3693,
      3698,
      3701,
      3702,
      3705,
      3707,
      3708,
      3710,
      3712,
      3713,
      3718,
      3727,
      3731,
      3732,
      3739,
      3741,
      3746,
      3747,
      3750,
      3752,
      3757,
      3760,
      3761,
      3764,
      3766,
      3767,
      3772,
      3773,
      3778,
      3780,
      3785,
      3788,
      3789,
      3792,
      3794,
      3795,
      3800,
      3802,
      3807,
      3810,
      3811,
      3814,
      3816,
      3817,
      3824,
      3826,
      3831,
      3834,
      3835,
      3838,
      3839,
      3842,
      3844,
      3849,
      3851,
      3852,
      3857,
      3858,
      3863,
      3865,
      3870,
      3873,
      3874,
      3877,
      3879,
      3880,
      3882,
      3884,
      3885,
      3891,
      3895,
      3901,
      3902,
      3909,
      3911,
      3916,
      3919,
      3920,
      3923,
      3924,
      3927,
      3929,
      3934,
      3936,
      3937,
      3942,
      3943,
      3948,
      3950,
      3955,
      3958,
      3959,
      3962,
      3964,
      3965,
      3970,
      3972,
      3977,
      3980,
      3981,
      3984,
      3986,
      3987,
      3989,
      3991,
      3992,
      3996,
      4005,
      4009,
      4014,
      4015,
      4022,
      4024,
      4029,
      4032,
      4033,
      4036,
      4037,
      4040,
      4042,
      4047,
      4049,
      4050,
      4055,
      4056,
      4061,
      4063,
      4068,
      4071,
      4072,
      4075,
      4077,
      4078,
      4082,
      4085,
      4089,
      4091,
      4096,
      4099,
      4100,
      4103,
      4105,
      4106,
      4108,
      4110,
      4111
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Turn on TV",
   "task_description": "If TV is turned off, pick up/obtain the TV remote and press the green button with the 'I/O' marking.",
   "program": [
    "[Find] <remote_control> (1)",
    "[Grab] <remote_control> (1)",
    "[Find] <television> (1)",
    "[TurnTo] <television> (1)",
    "[PointAt] <television> (1)",
    "[Push] <remote_control> (1)",
    "[SwitchOn] <television> (1)",
    "[Watch] <television> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_turk_robot",
   "file_id": "split58_1",
   "goal_condition": [
    [
     [
      198,
      1000,
      "HOLDS_RH",
      "character",
      "remote_control"
     ],
     [
      198,
      97,
      "FACING",
      "character",
      "television"
     ]
    ],
    [
     [
      97,
      "television",
      "ON"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1109,
   "completion_tokens": 321,
   "total_tokens": 1430
  }
 },
 "2": {
  "plan": [
   [
    " # 0: Find sink\n find('sink')\n # 1: Grab sponge\n find('sponge')\n grab('sponge')\n # 2: Pour detergent\n find('detergent')\n pour('detergent')\n # 3: Clean sink\n wash('sink')\n # 4: Put back sponge\n putback('sponge')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " Find",
      " sink",
      "\n",
      " find",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " Grab",
      " sponge",
      "\n",
      " find",
      "('",
      "sp",
      "onge",
      "')",
      "\n",
      " grab",
      "('",
      "sp",
      "onge",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " Pour",
      " deter",
      "gent",
      "\n",
      " find",
      "('",
      "d",
      "eter",
      "gent",
      "')",
      "\n",
      " pour",
      "('",
      "d",
      "eter",
      "gent",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " Clean",
      " sink",
      "\n",
      " wash",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " Put",
      " back",
      " sponge",
      "\n",
      " put",
      "back",
      "('",
      "sp",
      "onge",
      "')"
     ],
     "token_logprobs": [
      -0.020066181,
      -0.0087370165,
      -0.0021973113,
      -3.006587,
      -0.30953148,
      -0.05311793,
      -0.07388468,
      -0.004273447,
      -0.0010378519,
      -0.00025872953,
      -0.0019747573,
      -0.012474442,
      -0.009073367,
      -0.005040192,
      -0.0011941908,
      -1.6132205,
      -0.21920162,
      -0.046530496,
      -1.3160022,
      -0.0016743987,
      -0.00092854706,
      -0.0007928895,
      -0.0017618706,
      -0.007712325,
      -0.14183894,
      -0.0015535043,
      -0.00027447072,
      -0.00044941274,
      -0.00041745167,
      -0.0076164627,
      -0.3017084,
      -0.009381312,
      -0.001603233,
      -0.6599442,
      -0.27187136,
      -0.0013364677,
      -0.46780086,
      -0.9891057,
      -0.0020430225,
      -0.0011776583,
      -0.0002824577,
      -0.00052472914,
      -0.0023084267,
      -0.004921943,
      -0.17985025,
      -0.0027286254,
      -0.0014578736,
      -0.00030797682,
      -0.00071319804,
      -0.031568985,
      -0.009044317,
      -0.035714,
      -0.012840549,
      -0.0011441823,
      -3.6852376,
      -0.29779634,
      -0.28130466,
      -1.4493389,
      -0.0012649078,
      -0.019185515,
      -0.00013025544,
      -0.0045820144,
      -0.0088829575,
      -0.31112465,
      -0.0077060177,
      -0.0015584585,
      -1.8785605,
      -1.5092072,
      -0.11739762,
      -0.02773598,
      -0.28706256,
      -0.41297728,
      -0.0048634848,
      -0.0026521855,
      -0.0003746971,
      -0.12814619
     ],
     "top_logprobs": [
      {
       " #": -0.020066181
      },
      {
       " 0": -0.0087370165
      },
      {
       ":": -0.0021973113
      },
      {
       " find": -0.7896045
      },
      {
       " sink": -0.30953148
      },
      {
       "\n": -0.05311793
      },
      {
       " find": -0.07388468
      },
      {
       "('": -0.004273447
      },
      {
       "s": -0.0010378519
      },
      {
       "ink": -0.00025872953
      },
      {
       "')": -0.0019747573
      },
      {
       "\n": -0.012474442
      },
      {
       " #": -0.009073367
      },
      {
       " 1": -0.005040192
      },
      {
       ":": -0.0011941908
      },
      {
       " Turn": -1.5522684
      },
      {
       " sponge": -0.21920162
      },
      {
       "\n": -0.046530496
      },
      {
       " assert": -0.8079896
      },
      {
       "('": -0.0016743987
      },
      {
       "sp": -0.00092854706
      },
      {
       "onge": -0.0007928895
      },
      {
       "')": -0.0017618706
      },
      {
       "\n": -0.007712325
      },
      {
       " grab": -0.14183894
      },
      {
       "('": -0.0015535043
      },
      {
       "sp": -0.00027447072
      },
      {
       "onge": -0.00044941274
      },
      {
       "')": -0.00041745167
      },
      {
       "\n": -0.0076164627
      },
      {
       " #": -0.3017084
      },
      {
       " 2": -0.009381312
      },
      {
       ":": -0.001603233
      },
      {
       " Pour": -0.6599442
      },
      {
       " deter": -0.27187136
      },
      {
       "gent": -0.0013364677
      },
      {
       "\n": -0.46780086
      },
      {
       " find": -0.9891057
      },
      {
       "('": -0.0020430225
      },
      {
       "d": -0.0011776583
      },
      {
       "eter": -0.0002824577
      },
      {
       "gent": -0.00052472914
      },
      {
       "')": -0.0023084267
      },
      {
       "\n": -0.004921943
      },
      {
       " pour": -0.17985025
      },
      {
       "('": -0.0027286254
      },
      {
       "d": -0.0014578736
      },
      {
       "eter": -0.00030797682
      },
      {
       "gent": -0.00071319804
      },
      {
       "')": -0.031568985
      },
      {
       "\n": -0.009044317
      },
      {
       " #": -0.035714
      },
      {
       " 3": -0.012840549
      },
      {
       ":": -0.0011441823
      },
      {
       " Wash": -0.2771331
      },
      {
       " sink": -0.29779634
      },
      {
       "\n": -0.28130466
      },
      {
       " assert": -0.95528597
      },
      {
       "('": -0.0012649078
      },
      {
       "s": -0.019185515
      },
      {
       "ink": -0.00013025544
      },
      {
       "')": -0.0045820144
      },
      {
       "\n": -0.0088829575
      },
      {
       " #": -0.31112465
      },
      {
       " 4": -0.0077060177
      },
      {
       ":": -0.0015584585
      },
      {
       " W": -0.5465094
      },
      {
       " sponge": -0.42908323
      },
      {
       " sponge": -0.11739762
      },
      {
       "\n": -0.02773598
      },
      {
       " put": -0.28706256
      },
      {
       "back": -0.41297728
      },
      {
       "('": -0.0048634848
      },
      {
       "sp": -0.0026521855
      },
      {
       "onge": -0.0003746971
      },
      {
       "')": -0.12814619
      }
     ],
     "text_offset": [
      3160,
      3162,
      3164,
      3165,
      3170,
      3175,
      3176,
      3181,
      3183,
      3184,
      3187,
      3189,
      3190,
      3192,
      3194,
      3195,
      3200,
      3207,
      3208,
      3213,
      3215,
      3217,
      3221,
      3223,
      3224,
      3229,
      3231,
      3233,
      3237,
      3239,
      3240,
      3242,
      3244,
      3245,
      3250,
      3256,
      3260,
      3261,
      3266,
      3268,
      3269,
      3273,
      3277,
      3279,
      3280,
      3285,
      3287,
      3288,
      3292,
      3296,
      3298,
      3299,
      3301,
      3303,
      3304,
      3310,
      3315,
      3316,
      3321,
      3323,
      3324,
      3327,
      3329,
      3330,
      3332,
      3334,
      3335,
      3339,
      3344,
      3351,
      3352,
      3356,
      3360,
      3362,
      3364,
      3368
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Wash sink",
   "task_description": "I spray some cleaner and wait a minte or so then wipe it out.",
   "program": [
    "[Walk] <bathroom> (1)",
    "[Walk] <cleaning_solution> (1)",
    "[Find] <cleaning_solution> (1)",
    "[Grab] <cleaning_solution> (1)",
    "[Walk] <sink> (1)",
    "[Pour] <cleaning_solution> (1) <sink> (1)",
    "[PutObjBack] <cleaning_solution> (1)",
    "[Find] <rag> (1)",
    "[Grab] <rag> (1)",
    "[Walk] <sink> (1)",
    "[Wipe] <sink> (1)",
    "[Wipe] <sink> (1)",
    "[Wipe] <sink> (1)",
    "[PutObjBack] <rag> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_turk_third",
   "file_id": "split87_3",
   "goal_condition": [
    [
     [
      198,
      262,
      "INSIDE",
      "character",
      "bathroom"
     ],
     [
      1000,
      286,
      "INSIDE",
      "cleaning_solution",
      "sink"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1108,
   "completion_tokens": 76,
   "total_tokens": 1184
  }
 },
 "3": {
  "plan": [
   [
    " # 0: walk to bedroom\n walk('bedroom')\n # 1: find closet\n walk('closet')\n find('closet')\n # 2: find hanger\n find('hanger')\n # 3: grab jacket\n grab('clothes_jacket')\n # 4: find hanger\n find('hanger')\n # 5: put the jacket on hanger\n puton('clothes_jacket', 'hanger')\n # 6: put the hanger back\n assert('close' to 'hanger')\n else: find('hanger')\n putback('hanger')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " bedroom",
      "\n",
      " walk",
      "('",
      "bedroom",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " closet",
      "\n",
      " walk",
      "('",
      "cl",
      "os",
      "et",
      "')",
      "\n",
      " find",
      "('",
      "cl",
      "os",
      "et",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " find",
      " h",
      "anger",
      "\n",
      " find",
      "('",
      "h",
      "anger",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " grab",
      " jacket",
      "\n",
      " grab",
      "('",
      "cl",
      "othes",
      "_",
      "j",
      "acket",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " find",
      " h",
      "anger",
      "\n",
      " find",
      "('",
      "h",
      "anger",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " put",
      " the",
      " jacket",
      " on",
      " h",
      "anger",
      "\n",
      " put",
      "on",
      "('",
      "cl",
      "othes",
      "_",
      "j",
      "acket",
      "',",
      " '",
      "h",
      "anger",
      "')",
      "\n",
      " #",
      " 6",
      ":",
      " put",
      " the",
      " h",
      "anger",
      " back",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "h",
      "anger",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "h",
      "anger",
      "')",
      "\n",
      " put",
      "back",
      "('",
      "h",
      "anger",
      "')"
     ],
     "token_logprobs": [
      -0.013093795,
      -0.007737611,
      -0.0018882251,
      -0.55144167,
      -0.29639652,
      -0.7910211,
      -0.027486173,
      -0.0043815603,
      -0.003573804,
      -0.0013526415,
      -0.0009486529,
      -0.0066954456,
      -0.003586366,
      -0.0035181139,
      -0.0006001122,
      -0.041696995,
      -0.3821519,
      -0.17047302,
      -0.41413718,
      -0.0013581326,
      -0.0008733628,
      -0.0039860373,
      -0.00021192935,
      -0.01176229,
      -0.005161268,
      -0.020627823,
      -0.0008300526,
      -0.00024585033,
      -0.00015088324,
      -0.00010057153,
      -0.0033692452,
      -0.004711599,
      -0.0050353385,
      -0.0053442623,
      -0.0006613648,
      -0.30230194,
      -0.83798933,
      -0.019670492,
      -0.034132347,
      -0.0612082,
      -0.00087455584,
      -0.00051041663,
      -0.0005062424,
      -0.0011274132,
      -0.0048954654,
      -0.014791233,
      -0.0072531067,
      -0.0005823989,
      -0.5615207,
      -1.7327605,
      -0.067187496,
      -0.9153153,
      -0.0013697118,
      -1.5027586,
      -0.005634516,
      -0.009067112,
      -0.0011810008,
      -0.0009921473,
      -0.0024257682,
      -0.00728805,
      -0.077209115,
      -0.009595647,
      -0.0010395199,
      -4.0750575,
      -0.22419125,
      -0.0019579744,
      -0.18047346,
      -0.59531605,
      -0.001409702,
      -0.0038895768,
      -0.00027589937,
      -0.0012237272,
      -0.005450633,
      -0.019603137,
      -0.006180794,
      -0.00096655113,
      -2.2162864,
      -2.1891644,
      -0.06993201,
      -0.060919285,
      -1.3953793,
      -0.0008571955,
      -0.019540714,
      -0.8927822,
      -0.022297693,
      -0.0019168895,
      -0.19349314,
      -0.0016435912,
      -0.0010284232,
      -0.0013138462,
      -3.4048382e-05,
      -0.6356245,
      -0.0065726223,
      -0.0012551796,
      -0.00045752362,
      -0.0023541907,
      -0.5380115,
      -0.034975108,
      -0.0045087845,
      -0.0024941827,
      -1.8524808,
      -1.0202744,
      -0.04178375,
      -0.0012154944,
      -0.2835713,
      -0.20924173,
      -3.1010444,
      -0.0026549348,
      -0.37573683,
      -0.0040134485,
      -0.0008438348,
      -0.0042820047,
      -0.042321354,
      -0.0010331962,
      -0.0077197733,
      -0.0070618424,
      -0.002678004,
      -0.0019591684,
      -0.011567265,
      -0.0021128468,
      -0.0008376312,
      -0.00038328386,
      -0.0018257626,
      -0.010127052,
      -0.21082686,
      -0.39865685,
      -0.002938072,
      -0.008908215,
      -0.00048119825,
      -0.1771009
     ],
     "top_logprobs": [
      {
       " #": -0.013093795
      },
      {
       " 0": -0.007737611
      },
      {
       ":": -0.0018882251
      },
      {
       " walk": -0.55144167
      },
      {
       " to": -0.29639652
      },
      {
       " bedroom": -0.7910211
      },
      {
       "\n": -0.027486173
      },
      {
       " walk": -0.0043815603
      },
      {
       "('": -0.003573804
      },
      {
       "bedroom": -0.0013526415
      },
      {
       "')": -0.0009486529
      },
      {
       "\n": -0.0066954456
      },
      {
       " #": -0.003586366
      },
      {
       " 1": -0.0035181139
      },
      {
       ":": -0.0006001122
      },
      {
       " find": -0.041696995
      },
      {
       " closet": -0.3821519
      },
      {
       "\n": -0.17047302
      },
      {
       " walk": -0.41413718
      },
      {
       "('": -0.0013581326
      },
      {
       "cl": -0.0008733628
      },
      {
       "os": -0.0039860373
      },
      {
       "et": -0.00021192935
      },
      {
       "')": -0.01176229
      },
      {
       "\n": -0.005161268
      },
      {
       " find": -0.020627823
      },
      {
       "('": -0.0008300526
      },
      {
       "cl": -0.00024585033
      },
      {
       "os": -0.00015088324
      },
      {
       "et": -0.00010057153
      },
      {
       "')": -0.0033692452
      },
      {
       "\n": -0.004711599
      },
      {
       " #": -0.0050353385
      },
      {
       " 2": -0.0053442623
      },
      {
       ":": -0.0006613648
      },
      {
       " find": -0.30230194
      },
      {
       " h": -0.83798933
      },
      {
       "anger": -0.019670492
      },
      {
       "\n": -0.034132347
      },
      {
       " find": -0.0612082
      },
      {
       "('": -0.00087455584
      },
      {
       "h": -0.00051041663
      },
      {
       "anger": -0.0005062424
      },
      {
       "')": -0.0011274132
      },
      {
       "\n": -0.0048954654
      },
      {
       " #": -0.014791233
      },
      {
       " 3": -0.0072531067
      },
      {
       ":": -0.0005823989
      },
      {
       " grab": -0.5615207
      },
      {
       " h": -0.5104075
      },
      {
       "\n": -0.067187496
      },
      {
       " grab": -0.9153153
      },
      {
       "('": -0.0013697118
      },
      {
       "j": -0.25720662
      },
      {
       "othes": -0.005634516
      },
      {
       "_": -0.009067112
      },
      {
       "j": -0.0011810008
      },
      {
       "acket": -0.0009921473
      },
      {
       "')": -0.0024257682
      },
      {
       "\n": -0.00728805
      },
      {
       " #": -0.077209115
      },
      {
       " 4": -0.009595647
      },
      {
       ":": -0.0010395199
      },
      {
       " hang": -0.31361184
      },
      {
       " h": -0.22419125
      },
      {
       "anger": -0.0019579744
      },
      {
       "\n": -0.18047346
      },
      {
       " find": -0.59531605
      },
      {
       "('": -0.001409702
      },
      {
       "h": -0.0038895768
      },
      {
       "anger": -0.00027589937
      },
      {
       "')": -0.0012237272
      },
      {
       "\n": -0.005450633
      },
      {
       " #": -0.019603137
      },
      {
       " 5": -0.006180794
      },
      {
       ":": -0.00096655113
      },
      {
       " hang": -0.15867487
      },
      {
       " jacket": -0.6751636
      },
      {
       " jacket": -0.06993201
      },
      {
       " on": -0.060919285
      },
      {
       " the": -0.29921094
      },
      {
       "anger": -0.0008571955
      },
      {
       "\n": -0.019540714
      },
      {
       " assert": -0.84055233
      },
      {
       "on": -0.022297693
      },
      {
       "('": -0.0019168895
      },
      {
       "cl": -0.19349314
      },
      {
       "othes": -0.0016435912
      },
      {
       "_": -0.0010284232
      },
      {
       "j": -0.0013138462
      },
      {
       "acket": -3.4048382e-05
      },
      {
       "',": -0.6356245
      },
      {
       " '": -0.0065726223
      },
      {
       "h": -0.0012551796
      },
      {
       "anger": -0.00045752362
      },
      {
       "')": -0.0023541907
      },
      {
       "\n": -0.5380115
      },
      {
       " #": -0.034975108
      },
      {
       " 6": -0.0045087845
      },
      {
       ":": -0.0024941827
      },
      {
       " Done": -0.60148877
      },
      {
       " h": -0.86596596
      },
      {
       " h": -0.04178375
      },
      {
       "anger": -0.0012154944
      },
      {
       " back": -0.2835713
      },
      {
       "\n": -0.20924173
      },
      {
       " put": -0.078586444
      },
      {
       "('": -0.0026549348
      },
      {
       "close": -0.37573683
      },
      {
       "'": -0.0040134485
      },
      {
       " to": -0.0008438348
      },
      {
       " '": -0.0042820047
      },
      {
       "h": -0.042321354
      },
      {
       "anger": -0.0010331962
      },
      {
       "')": -0.0077197733
      },
      {
       "\n": -0.0070618424
      },
      {
       " else": -0.002678004
      },
      {
       ":": -0.0019591684
      },
      {
       " find": -0.011567265
      },
      {
       "('": -0.0021128468
      },
      {
       "h": -0.0008376312
      },
      {
       "anger": -0.00038328386
      },
      {
       "')": -0.0018257626
      },
      {
       "\n": -0.010127052
      },
      {
       " put": -0.21082686
      },
      {
       "back": -0.39865685
      },
      {
       "('": -0.002938072
      },
      {
       "h": -0.008908215
      },
      {
       "anger": -0.00048119825
      },
      {
       "')": -0.1771009
      }
     ],
     "text_offset": [
      3165,
      3167,
      3169,
      3170,
      3175,
      3178,
      3186,
      3187,
      3192,
      3194,
      3201,
      3203,
      3204,
      3206,
      3208,
      3209,
      3214,
      3221,
      3222,
      3227,
      3229,
      3231,
      3233,
      3235,
      3237,
      3238,
      3243,
      3245,
      3247,
      3249,
      3251,
      3253,
      3254,
      3256,
      3258,
      3259,
      3264,
      3266,
      3271,
      3272,
      3277,
      3279,
      3280,
      3285,
      3287,
      3288,
      3290,
      3292,
      3293,
      3298,
      3305,
      3306,
      3311,
      3313,
      3315,
      3320,
      3321,
      3322,
      3327,
      3329,
      3330,
      3332,
      3334,
      3335,
      3340,
      3342,
      3347,
      3348,
      3353,
      3355,
      3356,
      3361,
      3363,
      3364,
      3366,
      3368,
      3369,
      3373,
      3377,
      3384,
      3387,
      3389,
      3394,
      3395,
      3399,
      3401,
      3403,
      3405,
      3410,
      3411,
      3412,
      3417,
      3419,
      3421,
      3422,
      3427,
      3429,
      3430,
      3432,
      3434,
      3435,
      3439,
      3443,
      3445,
      3450,
      3455,
      3456,
      3463,
      3465,
      3470,
      3471,
      3474,
      3476,
      3477,
      3482,
      3484,
      3485,
      3490,
      3491,
      3496,
      3498,
      3499,
      3504,
      3506,
      3507,
      3511,
      3515,
      3517,
      3518,
      3523
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Hang up jacket",
   "task_description": "Upon entering, remove coat and utilize coatrack/hook to store coat by neatly hanging coat on hook.",
   "program": [
    "[Walk] <bedroom> (1)",
    "[Walk] <clothes_jacket> (1)",
    "[Find] <clothes_jacket> (1)",
    "[Find] <clothes_jacket> (1)",
    "[PutOff] <clothes_jacket> (1)",
    "[Grab] <clothes_jacket> (1)",
    "[Find] <hanger> (1)",
    "[PutBack] <clothes_jacket> (1) <hanger> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_turk_third",
   "file_id": "split65_2",
   "goal_condition": [
    [
     [
      198,
      199,
      "INSIDE",
      "character",
      "bedroom"
     ],
     [
      1000,
      244,
      "ON",
      "clothes_jacket",
      "hanger"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1110,
   "completion_tokens": 130,
   "total_tokens": 1240
  }
 },
 "4": {
  "plan": [
   [
    " # 0: walk to living room\n walk('living_room')\n # 1: find newspaper\n find('newspaper')\n # 2: grab newspaper\n grab('newspaper')\n # 3: find a chair and sit\n find('chair')\n assert('close' to 'chair')\n else: find('chair')\n sit('chair')\n # 4: read newspaper\n read('newspaper')\n # 5: Done\ndef make_coffee():\n # 0: find coffee pot\n find('coffee_pot')\n # 1: grab coffee pot\n grab('coffee_pot')\n # 2: fill coffee pot with water\n fill('coffee_pot')\n # 3: find coffee maker\n find('coffee_maker')\n # 4: place coffee pot on coffee maker\n place('coffee_pot', 'coffee_maker')\n # 5: switch on coffee maker\n switchon('coffee_maker')\n # 6: wait for coffee to be made\n wait('coffee_maker')\n # 7: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " living",
      " room",
      "\n",
      " walk",
      "('",
      "living",
      "_",
      "room",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " newspaper",
      "\n",
      " find",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " grab",
      " newspaper",
      "\n",
      " grab",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " find",
      " a",
      " chair",
      " and",
      " sit",
      "\n",
      " find",
      "('",
      "chair",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "chair",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "chair",
      "')",
      "\n",
      " sit",
      "('",
      "chair",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " read",
      " newspaper",
      "\n",
      " read",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " Done",
      "\n",
      "def",
      " make",
      "_",
      "co",
      "ffee",
      "():",
      "\n",
      " #",
      " 0",
      ":",
      " find",
      " coffee",
      " pot",
      "\n",
      " find",
      "('",
      "co",
      "ffee",
      "_",
      "pot",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " grab",
      " coffee",
      " pot",
      "\n",
      " grab",
      "('",
      "co",
      "ffee",
      "_",
      "pot",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " fill",
      " coffee",
      " pot",
      " with",
      " water",
      "\n",
      " fill",
      "('",
      "co",
      "ffee",
      "_",
      "pot",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " find",
      " coffee",
      " maker",
      "\n",
      " find",
      "('",
      "co",
      "ffee",
      "_",
      "maker",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " place",
      " coffee",
      " pot",
      " on",
      " coffee",
      " maker",
      "\n",
      " place",
      "('",
      "co",
      "ffee",
      "_",
      "pot",
      "',",
      " '",
      "co",
      "ffee",
      "_",
      "maker",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " switch",
      " on",
      " coffee",
      " maker",
      "\n",
      " switch",
      "on",
      "('",
      "co",
      "ffee",
      "_",
      "maker",
      "')",
      "\n",
      " #",
      " 6",
      ":",
      " wait",
      " for",
      " coffee",
      " to",
      " be",
      " made",
      "\n",
      " wait",
      "('",
      "co",
      "ffee",
      "_",
      "maker",
      "')",
      "\n",
      " #",
      " 7",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.016535072,
      -0.010191238,
      -0.0019955419,
      -1.1258,
      -0.19389807,
      -0.66405284,
      -0.09363939,
      -0.024640348,
      -0.0042106556,
      -0.003947079,
      -0.00883641,
      -0.2972761,
      -0.000167457,
      -0.0016108745,
      -0.008943696,
      -0.0016539192,
      -0.0032684775,
      -0.0007071137,
      -0.038480837,
      -0.19624224,
      -0.024107656,
      -0.12089015,
      -0.0011257434,
      -0.0013706664,
      -0.00085039594,
      -0.00041256036,
      -0.0018056388,
      -0.0060479,
      -0.010865998,
      -0.0046393205,
      -0.0005336173,
      -0.47877377,
      -0.3522169,
      -0.028325308,
      -0.3530739,
      -0.0011228778,
      -0.00066387194,
      -0.00023476298,
      -0.0001599459,
      -0.001145135,
      -0.0047851433,
      -0.33513135,
      -0.0052425154,
      -0.0007278128,
      -1.4557728,
      -2.0486712,
      -0.60216063,
      -1.4858366,
      -0.0073347627,
      -1.7058748,
      -0.10928884,
      -0.0011495523,
      -0.0011006205,
      -0.0016662783,
      -0.004663991,
      -0.66863805,
      -0.0011321864,
      -0.006289594,
      -0.002707229,
      -0.00045490012,
      -0.0018162681,
      -0.0012761275,
      -0.0065951226,
      -0.004658421,
      -0.0020582532,
      -0.0021976708,
      -0.005165582,
      -0.0018225383,
      -0.00092842686,
      -0.0014372787,
      -0.005872156,
      -0.0155812735,
      -0.0012193137,
      -0.00075620326,
      -0.0012281437,
      -0.006515086,
      -0.009141456,
      -0.007691481,
      -0.0010849873,
      -0.30208075,
      -0.5749899,
      -0.011704092,
      -1.2719944,
      -0.002453251,
      -0.0010436969,
      -0.00034416933,
      -0.00041530497,
      -0.0020369326,
      -1.0354202,
      -0.1388365,
      -0.005135448,
      -0.0012817987,
      -1.6921369,
      -0.40173903,
      -1.2351464,
      -1.6814021,
      -0.00037791664,
      -0.63397604,
      -0.0074247094,
      -0.040282633,
      -0.0151597,
      -0.005915141,
      -0.0045400397,
      -0.001740674,
      -1.8541244,
      -0.4382557,
      -0.9278524,
      -0.041898232,
      -0.028770627,
      -0.0016738017,
      -0.00017317903,
      -0.060445476,
      -0.006374949,
      -0.0014182372,
      -0.0026293558,
      -0.009253887,
      -0.0034640422,
      -0.0022608147,
      -0.0008117995,
      -1.4445585,
      -0.072251454,
      -0.0194645,
      -0.018583875,
      -0.28369904,
      -0.0009828367,
      -8.972073e-05,
      -0.009040225,
      -0.015127447,
      -0.0003841183,
      -0.0012104219,
      -0.005423485,
      -0.06157491,
      -0.0034538156,
      -0.0006570705,
      -0.8788532,
      -1.0115044,
      -0.006337041,
      -0.14671242,
      -0.017716523,
      -0.027836362,
      -0.5454792,
      -0.034482222,
      -0.008016051,
      -0.012515062,
      -0.0026535015,
      -0.00081442395,
      -0.5093484,
      -0.010282591,
      -0.02183094,
      -0.0037127729,
      -0.0007544141,
      -1.2183648,
      -0.21294396,
      -4.125333,
      -0.045922358,
      -0.024976527,
      -0.00084049406,
      -0.00015505555,
      -0.108962245,
      -0.001693087,
      -0.0016200085,
      -0.0019612594,
      -0.0047014197,
      -0.0055715805,
      -0.0036775933,
      -0.0006254004,
      -2.180091,
      -0.1724712,
      -0.01183629,
      -0.8378375,
      -0.15294223,
      -0.0059310314,
      -0.0126258815,
      -0.726666,
      -0.0770846,
      -0.0002513358,
      -0.008932932,
      -0.0015326691,
      -0.01371885,
      -0.6235701,
      -0.0037853455,
      -0.0020285102,
      -0.009921332,
      -0.0017610351,
      -0.001231963,
      -0.0027387273,
      -0.008187245,
      -0.004552015,
      -0.0025606325,
      -0.0009962613,
      -0.7044319,
      -0.016854897,
      -0.3795775,
      -0.007935181,
      -0.018076846,
      -0.04299588,
      -0.002041471,
      -0.00065027183,
      -6.921402e-05,
      -0.0041067484,
      -0.0012045732,
      -0.0012588807,
      -0.0011397669,
      -0.0065744226,
      -0.0020856091,
      -0.0027811637,
      -0.0014170442,
      -0.431135,
      -0.27592626,
      -0.21843481,
      -0.29105273,
      -0.39744288,
      -1.801639,
      -0.015727852,
      -0.08008241,
      -0.39764866,
      -0.0065282257,
      -0.0029835089,
      -0.25060356,
      -0.045710888,
      -0.020964183,
      -0.01016059,
      -0.0025953532,
      -0.0064283996,
      -0.0011981284,
      -1.7763265
     ],
     "top_logprobs": [
      {
       " #": -0.016535072
      },
      {
       " 0": -0.010191238
      },
      {
       ":": -0.0019955419
      },
      {
       " find": -0.50760263
      },
      {
       " to": -0.19389807
      },
      {
       " living": -0.66405284
      },
      {
       " room": -0.09363939
      },
      {
       "\n": -0.024640348
      },
      {
       " walk": -0.0042106556
      },
      {
       "('": -0.003947079
      },
      {
       "living": -0.00883641
      },
      {
       "_": -0.2972761
      },
      {
       "room": -0.000167457
      },
      {
       "')": -0.0016108745
      },
      {
       "\n": -0.008943696
      },
      {
       " #": -0.0016539192
      },
      {
       " 1": -0.0032684775
      },
      {
       ":": -0.0007071137
      },
      {
       " find": -0.038480837
      },
      {
       " newspaper": -0.19624224
      },
      {
       "\n": -0.024107656
      },
      {
       " find": -0.12089015
      },
      {
       "('": -0.0011257434
      },
      {
       "new": -0.0013706664
      },
      {
       "sp": -0.00085039594
      },
      {
       "aper": -0.00041256036
      },
      {
       "')": -0.0018056388
      },
      {
       "\n": -0.0060479
      },
      {
       " #": -0.010865998
      },
      {
       " 2": -0.0046393205
      },
      {
       ":": -0.0005336173
      },
      {
       " grab": -0.47877377
      },
      {
       " newspaper": -0.3522169
      },
      {
       "\n": -0.028325308
      },
      {
       " grab": -0.3530739
      },
      {
       "('": -0.0011228778
      },
      {
       "new": -0.00066387194
      },
      {
       "sp": -0.00023476298
      },
      {
       "aper": -0.0001599459
      },
      {
       "')": -0.001145135
      },
      {
       "\n": -0.0047851433
      },
      {
       " #": -0.33513135
      },
      {
       " 3": -0.0052425154
      },
      {
       ":": -0.0007278128
      },
      {
       " sit": -0.8103757
      },
      {
       " chair": -0.71243143
      },
      {
       " chair": -0.60216063
      },
      {
       "\n": -0.38657436
      },
      {
       " sit": -0.0073347627
      },
      {
       " on": -0.34836543
      },
      {
       " find": -0.10928884
      },
      {
       "('": -0.0011495523
      },
      {
       "chair": -0.0011006205
      },
      {
       "')": -0.0016662783
      },
      {
       "\n": -0.004663991
      },
      {
       " assert": -0.66863805
      },
      {
       "('": -0.0011321864
      },
      {
       "close": -0.006289594
      },
      {
       "'": -0.002707229
      },
      {
       " to": -0.00045490012
      },
      {
       " '": -0.0018162681
      },
      {
       "chair": -0.0012761275
      },
      {
       "')": -0.0065951226
      },
      {
       "\n": -0.004658421
      },
      {
       " else": -0.0020582532
      },
      {
       ":": -0.0021976708
      },
      {
       " find": -0.005165582
      },
      {
       "('": -0.0018225383
      },
      {
       "chair": -0.00092842686
      },
      {
       "')": -0.0014372787
      },
      {
       "\n": -0.005872156
      },
      {
       " sit": -0.0155812735
      },
      {
       "('": -0.0012193137
      },
      {
       "chair": -0.00075620326
      },
      {
       "')": -0.0012281437
      },
      {
       "\n": -0.006515086
      },
      {
       " #": -0.009141456
      },
      {
       " 4": -0.007691481
      },
      {
       ":": -0.0010849873
      },
      {
       " read": -0.30208075
      },
      {
       " newspaper": -0.5749899
      },
      {
       "\n": -0.011704092
      },
      {
       " tur": -1.2135837
      },
      {
       "('": -0.002453251
      },
      {
       "new": -0.0010436969
      },
      {
       "sp": -0.00034416933
      },
      {
       "aper": -0.00041530497
      },
      {
       "')": -0.0020369326
      },
      {
       "<|endoftext|>": -0.4561012
      },
      {
       " #": -0.1388365
      },
      {
       " 5": -0.005135448
      },
      {
       ":": -0.0012817987
      },
      {
       " put": -0.4537222
      },
      {
       "\n": -0.40173903
      },
      {
       "def": -1.2351464
      },
      {
       " wash": -1.392186
      },
      {
       "_": -0.00037791664
      },
      {
       "co": -0.63397604
      },
      {
       "ffee": -0.0074247094
      },
      {
       "():": -0.040282633
      },
      {
       "\n": -0.0151597
      },
      {
       " #": -0.005915141
      },
      {
       " 0": -0.0045400397
      },
      {
       ":": -0.001740674
      },
      {
       " walk": -0.23003042
      },
      {
       " coffee": -0.4382557
      },
      {
       " maker": -0.8319804
      },
      {
       "\n": -0.041898232
      },
      {
       " find": -0.028770627
      },
      {
       "('": -0.0016738017
      },
      {
       "co": -0.00017317903
      },
      {
       "ffee": -0.060445476
      },
      {
       "_": -0.006374949
      },
      {
       "pot": -0.0014182372
      },
      {
       "')": -0.0026293558
      },
      {
       "\n": -0.009253887
      },
      {
       " #": -0.0034640422
      },
      {
       " 1": -0.0022608147
      },
      {
       ":": -0.0008117995
      },
      {
       " fill": -0.9646973
      },
      {
       " coffee": -0.072251454
      },
      {
       " pot": -0.0194645
      },
      {
       "\n": -0.018583875
      },
      {
       " grab": -0.28369904
      },
      {
       "('": -0.0009828367
      },
      {
       "co": -8.972073e-05
      },
      {
       "ffee": -0.009040225
      },
      {
       "_": -0.015127447
      },
      {
       "pot": -0.0003841183
      },
      {
       "')": -0.0012104219
      },
      {
       "\n": -0.005423485
      },
      {
       " #": -0.06157491
      },
      {
       " 2": -0.0034538156
      },
      {
       ":": -0.0006570705
      },
      {
       " fill": -0.8788532
      },
      {
       " coffee": -1.0115044
      },
      {
       " pot": -0.006337041
      },
      {
       " with": -0.14671242
      },
      {
       " water": -0.017716523
      },
      {
       "\n": -0.027836362
      },
      {
       " fill": -0.5454792
      },
      {
       "('": -0.034482222
      },
      {
       "co": -0.008016051
      },
      {
       "ffee": -0.012515062
      },
      {
       "_": -0.0026535015
      },
      {
       "pot": -0.00081442395
      },
      {
       "')": -0.5093484
      },
      {
       "\n": -0.010282591
      },
      {
       " #": -0.02183094
      },
      {
       " 3": -0.0037127729
      },
      {
       ":": -0.0007544141
      },
      {
       " put": -1.1780167
      },
      {
       " coffee": -0.21294396
      },
      {
       "\n": -0.810361
      },
      {
       "\n": -0.045922358
      },
      {
       " find": -0.024976527
      },
      {
       "('": -0.00084049406
      },
      {
       "co": -0.00015505555
      },
      {
       "ffee": -0.108962245
      },
      {
       "_": -0.001693087
      },
      {
       "maker": -0.0016200085
      },
      {
       "')": -0.0019612594
      },
      {
       "\n": -0.0047014197
      },
      {
       " #": -0.0055715805
      },
      {
       " 4": -0.0036775933
      },
      {
       ":": -0.0006254004
      },
      {
       " plug": -0.90901864
      },
      {
       " coffee": -0.1724712
      },
      {
       " pot": -0.01183629
      },
      {
       " in": -0.80357194
      },
      {
       " coffee": -0.15294223
      },
      {
       " maker": -0.0059310314
      },
      {
       "\n": -0.0126258815
      },
      {
       " place": -0.726666
      },
      {
       "('": -0.0770846
      },
      {
       "co": -0.0002513358
      },
      {
       "ffee": -0.008932932
      },
      {
       "_": -0.0015326691
      },
      {
       "pot": -0.01371885
      },
      {
       "',": -0.6235701
      },
      {
       " '": -0.0037853455
      },
      {
       "co": -0.0020285102
      },
      {
       "ffee": -0.009921332
      },
      {
       "_": -0.0017610351
      },
      {
       "maker": -0.001231963
      },
      {
       "')": -0.0027387273
      },
      {
       "\n": -0.008187245
      },
      {
       " #": -0.004552015
      },
      {
       " 5": -0.0025606325
      },
      {
       ":": -0.0009962613
      },
      {
       " switch": -0.7044319
      },
      {
       " on": -0.016854897
      },
      {
       " coffee": -0.3795775
      },
      {
       " maker": -0.007935181
      },
      {
       "\n": -0.018076846
      },
      {
       " switch": -0.04299588
      },
      {
       "on": -0.002041471
      },
      {
       "('": -0.00065027183
      },
      {
       "co": -6.921402e-05
      },
      {
       "ffee": -0.0041067484
      },
      {
       "_": -0.0012045732
      },
      {
       "maker": -0.0012588807
      },
      {
       "')": -0.0011397669
      },
      {
       "\n": -0.0065744226
      },
      {
       " #": -0.0020856091
      },
      {
       " 6": -0.0027811637
      },
      {
       ":": -0.0014170442
      },
      {
       " wait": -0.431135
      },
      {
       " for": -0.27592626
      },
      {
       " coffee": -0.21843481
      },
      {
       " to": -0.29105273
      },
      {
       " be": -0.39744288
      },
      {
       " ready": -0.48999715
      },
      {
       "\n": -0.015727852
      },
      {
       " wait": -0.08008241
      },
      {
       "('": -0.39764866
      },
      {
       "co": -0.0065282257
      },
      {
       "ffee": -0.0029835089
      },
      {
       "_": -0.25060356
      },
      {
       "maker": -0.045710888
      },
      {
       "')": -0.020964183
      },
      {
       "\n": -0.01016059
      },
      {
       " #": -0.0025953532
      },
      {
       " 7": -0.0064283996
      },
      {
       ":": -0.0011981284
      },
      {
       " grab": -1.1084139
      }
     ],
     "text_offset": [
      3165,
      3167,
      3169,
      3170,
      3175,
      3178,
      3185,
      3190,
      3191,
      3196,
      3198,
      3204,
      3205,
      3209,
      3211,
      3212,
      3214,
      3216,
      3217,
      3222,
      3232,
      3233,
      3238,
      3240,
      3243,
      3245,
      3249,
      3251,
      3252,
      3254,
      3256,
      3257,
      3262,
      3272,
      3273,
      3278,
      3280,
      3283,
      3285,
      3289,
      3291,
      3292,
      3294,
      3296,
      3297,
      3302,
      3304,
      3310,
      3314,
      3318,
      3319,
      3324,
      3326,
      3331,
      3333,
      3334,
      3341,
      3343,
      3348,
      3349,
      3352,
      3354,
      3359,
      3361,
      3362,
      3367,
      3368,
      3373,
      3375,
      3380,
      3382,
      3383,
      3387,
      3389,
      3394,
      3396,
      3397,
      3399,
      3401,
      3402,
      3407,
      3417,
      3418,
      3423,
      3425,
      3428,
      3430,
      3434,
      3436,
      3437,
      3439,
      3441,
      3442,
      3447,
      3448,
      3451,
      3456,
      3457,
      3459,
      3463,
      3466,
      3467,
      3469,
      3471,
      3472,
      3477,
      3484,
      3488,
      3489,
      3494,
      3496,
      3498,
      3502,
      3503,
      3506,
      3508,
      3509,
      3511,
      3513,
      3514,
      3519,
      3526,
      3530,
      3531,
      3536,
      3538,
      3540,
      3544,
      3545,
      3548,
      3550,
      3551,
      3553,
      3555,
      3556,
      3561,
      3568,
      3572,
      3577,
      3583,
      3584,
      3589,
      3591,
      3593,
      3597,
      3598,
      3601,
      3603,
      3604,
      3606,
      3608,
      3609,
      3614,
      3621,
      3627,
      3628,
      3633,
      3635,
      3637,
      3641,
      3642,
      3647,
      3649,
      3650,
      3652,
      3654,
      3655,
      3661,
      3668,
      3672,
      3675,
      3682,
      3688,
      3689,
      3695,
      3697,
      3699,
      3703,
      3704,
      3707,
      3709,
      3711,
      3713,
      3717,
      3718,
      3723,
      3725,
      3726,
      3728,
      3730,
      3731,
      3738,
      3741,
      3748,
      3754,
      3755,
      3762,
      3764,
      3766,
      3768,
      3772,
      3773,
      3778,
      3780,
      3781,
      3783,
      3785,
      3786,
      3791,
      3795,
      3802,
      3805,
      3808,
      3813,
      3814,
      3819,
      3821,
      3823,
      3827,
      3828,
      3833,
      3835,
      3836,
      3838,
      3840,
      3841
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Read newspaper",
   "task_description": "Sit in my chair at my desk. Open up newspaper. Read about current events.",
   "program": [
    "[Walk] <home_office> (1)",
    "[Walk] <chair> (1)",
    "[Find] <chair> (1)",
    "[Sit] <chair> (1)",
    "[Find] <newspaper> (1)",
    "[Grab] <newspaper> (1)",
    "[Open] <newspaper> (1)",
    "[Read] <newspaper> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_july",
   "file_id": "split17_4",
   "goal_condition": [
    [
     [
      198,
      1,
      "INSIDE",
      "character",
      "home_office"
     ],
     [
      198,
      17,
      "ON",
      "character",
      "chair"
     ],
     [
      198,
      1000,
      "HOLDS_RH",
      "character",
      "newspaper"
     ]
    ],
    [
     [
      1000,
      "newspaper",
      "OPEN"
     ],
     [
      198,
      "character",
      "SITTING"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1109,
   "completion_tokens": 226,
   "total_tokens": 1335
  }
 },
 "5": {
  "plan": [
   [
    " # 0: walk to bathroom\n walk('bathroom')\n # 1: find toilet\n find('toilet')\n # 2: clean the toilet\n pull('toilet')\n wipe('toilet')\n pour('detergent')\n wash('toilet')\n flush('toilet')\n # 3: put the toilet back\n push('toilet')\n # 4: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " bathroom",
      "\n",
      " walk",
      "('",
      "bath",
      "room",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " toilet",
      "\n",
      " find",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " clean",
      " the",
      " toilet",
      "\n",
      " pull",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " wipe",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " pour",
      "('",
      "d",
      "eter",
      "gent",
      "')",
      "\n",
      " wash",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " flush",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " put",
      " the",
      " toilet",
      " back",
      "\n",
      " push",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.015961254,
      -0.009048226,
      -0.002096302,
      -0.34585547,
      -0.22830297,
      -0.332051,
      -0.023090519,
      -0.0044972883,
      -0.0041372734,
      -0.002127361,
      -0.00012322118,
      -0.0015871755,
      -0.007560429,
      -0.0021579443,
      -0.0036878234,
      -0.00096619444,
      -0.09179791,
      -0.14600919,
      -0.04379584,
      -0.2541778,
      -0.00093355944,
      -0.0006078664,
      -0.00023774413,
      -0.002673463,
      -0.0058910996,
      -0.016734883,
      -0.0058855223,
      -0.0013700703,
      -3.4159575,
      -0.54226625,
      -0.029942246,
      -0.034310233,
      -2.5114312,
      -0.0042808093,
      -0.020152297,
      -0.0005321858,
      -0.0652559,
      -0.0117185665,
      -1.0126587,
      -0.0011043197,
      -0.0013811126,
      -0.00018093038,
      -0.0028311335,
      -0.009758446,
      -1.0911255,
      -0.0011470452,
      -0.749683,
      -0.004218975,
      -0.0007531019,
      -0.09229015,
      -0.015231474,
      -1.4017787,
      -0.0005230593,
      -0.0027722586,
      -0.000118333635,
      -0.0020307796,
      -0.009959256,
      -0.94268495,
      -0.009697415,
      -0.0009466245,
      -5.3716885e-05,
      -0.0026457915,
      -0.01159223,
      -0.49359336,
      -0.009628327,
      -0.0019352242,
      -0.6612112,
      -1.3166558,
      -0.15697117,
      -0.20575103,
      -0.061464176,
      -0.53751683,
      -0.0042923014,
      -0.0002360752,
      -0.00028293548,
      -0.0019004669,
      -0.33183634,
      -0.136469,
      -0.006273099,
      -0.0020163837,
      -0.3290044
     ],
     "top_logprobs": [
      {
       " #": -0.015961254
      },
      {
       " 0": -0.009048226
      },
      {
       ":": -0.002096302
      },
      {
       " walk": -0.34585547
      },
      {
       " to": -0.22830297
      },
      {
       " bathroom": -0.332051
      },
      {
       "\n": -0.023090519
      },
      {
       " walk": -0.0044972883
      },
      {
       "('": -0.0041372734
      },
      {
       "bath": -0.002127361
      },
      {
       "room": -0.00012322118
      },
      {
       "')": -0.0015871755
      },
      {
       "\n": -0.007560429
      },
      {
       " #": -0.0021579443
      },
      {
       " 1": -0.0036878234
      },
      {
       ":": -0.00096619444
      },
      {
       " find": -0.09179791
      },
      {
       " toilet": -0.14600919
      },
      {
       "\n": -0.04379584
      },
      {
       " find": -0.2541778
      },
      {
       "('": -0.00093355944
      },
      {
       "to": -0.0006078664
      },
      {
       "ilet": -0.00023774413
      },
      {
       "')": -0.002673463
      },
      {
       "\n": -0.0058910996
      },
      {
       " #": -0.016734883
      },
      {
       " 2": -0.0058855223
      },
      {
       ":": -0.0013700703
      },
      {
       " grab": -1.4028158
      },
      {
       " the": -0.54226625
      },
      {
       " toilet": -0.029942246
      },
      {
       "\n": -0.034310233
      },
      {
       " assert": -1.0524638
      },
      {
       "('": -0.0042808093
      },
      {
       "to": -0.020152297
      },
      {
       "ilet": -0.0005321858
      },
      {
       "')": -0.0652559
      },
      {
       "\n": -0.0117185665
      },
      {
       " wipe": -1.0126587
      },
      {
       "('": -0.0011043197
      },
      {
       "to": -0.0013811126
      },
      {
       "ilet": -0.00018093038
      },
      {
       "')": -0.0028311335
      },
      {
       "\n": -0.009758446
      },
      {
       " pour": -1.0911255
      },
      {
       "('": -0.0011470452
      },
      {
       "d": -0.749683
      },
      {
       "eter": -0.004218975
      },
      {
       "gent": -0.0007531019
      },
      {
       "')": -0.09229015
      },
      {
       "\n": -0.015231474
      },
      {
       " scrub": -1.2226033
      },
      {
       "('": -0.0005230593
      },
      {
       "to": -0.0027722586
      },
      {
       "ilet": -0.000118333635
      },
      {
       "')": -0.0020307796
      },
      {
       "\n": -0.009959256
      },
      {
       " flush": -0.94268495
      },
      {
       "('": -0.009697415
      },
      {
       "to": -0.0009466245
      },
      {
       "ilet": -5.3716885e-05
      },
      {
       "')": -0.0026457915
      },
      {
       "\n": -0.01159223
      },
      {
       " #": -0.49359336
      },
      {
       " 3": -0.009628327
      },
      {
       ":": -0.0019352242
      },
      {
       " put": -0.6612112
      },
      {
       " back": -1.1394795
      },
      {
       " toilet": -0.15697117
      },
      {
       " back": -0.20575103
      },
      {
       "\n": -0.061464176
      },
      {
       " push": -0.53751683
      },
      {
       "('": -0.0042923014
      },
      {
       "to": -0.0002360752
      },
      {
       "ilet": -0.00028293548
      },
      {
       "')": -0.0019004669
      },
      {
       "\n": -0.33183634
      },
      {
       " #": -0.136469
      },
      {
       " 4": -0.006273099
      },
      {
       ":": -0.0020163837
      },
      {
       " Done": -0.3290044
      }
     ],
     "text_offset": [
      3163,
      3165,
      3167,
      3168,
      3173,
      3176,
      3185,
      3186,
      3191,
      3193,
      3197,
      3201,
      3203,
      3204,
      3206,
      3208,
      3209,
      3214,
      3221,
      3222,
      3227,
      3229,
      3231,
      3235,
      3237,
      3238,
      3240,
      3242,
      3243,
      3249,
      3253,
      3260,
      3261,
      3266,
      3268,
      3270,
      3274,
      3276,
      3277,
      3282,
      3284,
      3286,
      3290,
      3292,
      3293,
      3298,
      3300,
      3301,
      3305,
      3309,
      3311,
      3312,
      3317,
      3319,
      3321,
      3325,
      3327,
      3328,
      3334,
      3336,
      3338,
      3342,
      3344,
      3345,
      3347,
      3349,
      3350,
      3354,
      3358,
      3365,
      3370,
      3371,
      3376,
      3378,
      3380,
      3384,
      3386,
      3387,
      3389,
      3391,
      3392
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Clean toilet",
   "task_description": "Clean the toilet with a brush.",
   "program": [
    "[Find] <brush> (1)",
    "[Grab] <brush> (1)",
    "[Walk] <bathroom> (1)",
    "[Walk] <toilet> (1)",
    "[Find] <toilet> (1)",
    "[Scrub] <toilet> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_turk_third",
   "file_id": "split74_2",
   "goal_condition": [
    [
     [
      198,
      262,
      "INSIDE",
      "character",
      "bathroom"
     ],
     [
      198,
      1000,
      "HOLDS_RH",
      "character",
      "brush"
     ],
     [
      1000,
      262,
      "INSIDE",
      "brush",
      "bathroom"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1108,
   "completion_tokens": 81,
   "total_tokens": 1189
  }
 },
 "6": {
  "plan": [
   [
    " # 0: walk to office room\n walk('office_room')\n # 1: find computer\n find('computer')\n # 2: turn on computer\n assert('close' to 'computer')\n else: find('computer')\n switchon('computer')\n # 3: find mouse\n find('mouse')\n # 4: grab mouse\n assert('close' to 'mouse')\n else: find('mouse')\n grab('mouse')\n # 5: use mouse to navigate\n assert('close' to 'computer')\n else: find('computer')\n turnto('computer')\n assert('mouse' in 'hands')\n else: grab('mouse')\n pointat('mouse')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " office",
      " room",
      "\n",
      " walk",
      "('",
      "office",
      "_",
      "room",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " computer",
      "\n",
      " find",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " turn",
      " on",
      " computer",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "computer",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "computer",
      "')",
      "\n",
      " switch",
      "on",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " find",
      " mouse",
      "\n",
      " find",
      "('",
      "mouse",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " grab",
      " mouse",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "mouse",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "mouse",
      "')",
      "\n",
      " grab",
      "('",
      "mouse",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " use",
      " mouse",
      " to",
      " navigate",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "computer",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "computer",
      "')",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "computer",
      "')",
      "\n",
      " assert",
      "('",
      "mouse",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "mouse",
      "')",
      "\n",
      " point",
      "at",
      "('",
      "mouse",
      "')"
     ],
     "token_logprobs": [
      -0.018939467,
      -0.010198104,
      -0.0021563927,
      -0.5994457,
      -0.18535987,
      -2.456682,
      -3.1260922,
      -0.027703505,
      -0.004660458,
      -0.0051679206,
      -1.0106322,
      -0.34863627,
      -0.00022087281,
      -0.0021801677,
      -0.008918618,
      -0.002252868,
      -0.0041116555,
      -0.0007318678,
      -0.046540607,
      -0.5620477,
      -0.068823695,
      -0.5566982,
      -0.0011266972,
      -0.0018623089,
      -0.0016516515,
      -0.006885018,
      -0.010551694,
      -0.0056801336,
      -0.00096404675,
      -0.8985631,
      -0.027712084,
      -0.61629075,
      -0.026771765,
      -0.7546293,
      -0.0017334473,
      -0.037246257,
      -0.004115307,
      -0.0008778965,
      -0.0043561775,
      -0.0025339813,
      -0.0063418993,
      -0.006237471,
      -0.0019823427,
      -0.0017368518,
      -0.005689846,
      -0.0019910636,
      -0.0007967051,
      -0.0021938474,
      -0.0066465423,
      -0.2498421,
      -0.0037359246,
      -0.0009907138,
      -0.0010410706,
      -0.0017227007,
      -0.014400829,
      -0.02372892,
      -0.0063658343,
      -0.00078418164,
      -0.7355573,
      -0.5606693,
      -0.12570128,
      -0.03999331,
      -0.0010439344,
      -0.00045346864,
      -0.0016859225,
      -0.0050404323,
      -0.023717262,
      -0.0072397776,
      -0.0009221041,
      -0.60613406,
      -0.09682155,
      -0.07557543,
      -0.9357243,
      -0.0011777775,
      -0.008053664,
      -0.0018891806,
      -0.0008257573,
      -0.0036545624,
      -0.0011608283,
      -0.0033714573,
      -0.004140625,
      -0.0015794138,
      -0.0013140846,
      -0.00420826,
      -0.001869653,
      -0.00087276584,
      -0.0010905985,
      -0.0053148395,
      -0.0054817977,
      -0.0011897736,
      -0.00022146793,
      -0.001173839,
      -0.014315632,
      -0.299862,
      -0.0060031055,
      -0.0011736015,
      -1.9319258,
      -0.06860145,
      -0.39662257,
      -3.4249222,
      -0.661278,
      -1.1375961,
      -0.0014614556,
      -1.4839116,
      -0.0038831744,
      -0.00071928324,
      -0.004247467,
      -1.4615687,
      -0.033956774,
      -0.0053226906,
      -0.009432093,
      -0.001117747,
      -0.015659193,
      -0.0011172693,
      -0.0064658327,
      -0.003506211,
      -0.0058913403,
      -1.2071118,
      -0.00011928824,
      -0.00028114737,
      -0.0007539364,
      -0.14757594,
      -0.002232138,
      -0.007415702,
      -1.2957884,
      -0.0011272951,
      -0.05512953,
      -0.0025571678,
      -0.016804403,
      -0.004632674,
      -0.02780008,
      -0.017021244,
      -0.0042397445,
      -0.0042553083,
      -0.0021569896,
      -0.022235101,
      -0.0018075499,
      -0.0006780653,
      -0.0029753193,
      -0.0067247893,
      -0.32529494,
      -0.003345563,
      -0.0007981976,
      -0.24245985,
      -0.01785498
     ],
     "top_logprobs": [
      {
       " #": -0.018939467
      },
      {
       " 0": -0.010198104
      },
      {
       ":": -0.0021563927
      },
      {
       " walk": -0.5994457
      },
      {
       " to": -0.18535987
      },
      {
       " bedroom": -1.3772103
      },
      {
       "\n": -0.08294439
      },
      {
       "\n": -0.027703505
      },
      {
       " walk": -0.004660458
      },
      {
       "('": -0.0051679206
      },
      {
       "home": -0.53304166
      },
      {
       "_": -0.34863627
      },
      {
       "room": -0.00022087281
      },
      {
       "')": -0.0021801677
      },
      {
       "\n": -0.008918618
      },
      {
       " #": -0.002252868
      },
      {
       " 1": -0.0041116555
      },
      {
       ":": -0.0007318678
      },
      {
       " find": -0.046540607
      },
      {
       " computer": -0.5620477
      },
      {
       "\n": -0.068823695
      },
      {
       " find": -0.5566982
      },
      {
       "('": -0.0011266972
      },
      {
       "computer": -0.0018623089
      },
      {
       "')": -0.0016516515
      },
      {
       "\n": -0.006885018
      },
      {
       " #": -0.010551694
      },
      {
       " 2": -0.0056801336
      },
      {
       ":": -0.00096404675
      },
      {
       " turn": -0.8985631
      },
      {
       " on": -0.027712084
      },
      {
       " computer": -0.61629075
      },
      {
       "\n": -0.026771765
      },
      {
       " assert": -0.7546293
      },
      {
       "('": -0.0017334473
      },
      {
       "close": -0.037246257
      },
      {
       "'": -0.004115307
      },
      {
       " to": -0.0008778965
      },
      {
       " '": -0.0043561775
      },
      {
       "computer": -0.0025339813
      },
      {
       "')": -0.0063418993
      },
      {
       "\n": -0.006237471
      },
      {
       " else": -0.0019823427
      },
      {
       ":": -0.0017368518
      },
      {
       " find": -0.005689846
      },
      {
       "('": -0.0019910636
      },
      {
       "computer": -0.0007967051
      },
      {
       "')": -0.0021938474
      },
      {
       "\n": -0.0066465423
      },
      {
       " switch": -0.2498421
      },
      {
       "on": -0.0037359246
      },
      {
       "('": -0.0009907138
      },
      {
       "computer": -0.0010410706
      },
      {
       "')": -0.0017227007
      },
      {
       "\n": -0.014400829
      },
      {
       " #": -0.02372892
      },
      {
       " 3": -0.0063658343
      },
      {
       ":": -0.00078418164
      },
      {
       " find": -0.7355573
      },
      {
       " mouse": -0.5606693
      },
      {
       "\n": -0.12570128
      },
      {
       " find": -0.03999331
      },
      {
       "('": -0.0010439344
      },
      {
       "mouse": -0.00045346864
      },
      {
       "')": -0.0016859225
      },
      {
       "\n": -0.0050404323
      },
      {
       " #": -0.023717262
      },
      {
       " 4": -0.0072397776
      },
      {
       ":": -0.0009221041
      },
      {
       " grab": -0.60613406
      },
      {
       " mouse": -0.09682155
      },
      {
       "\n": -0.07557543
      },
      {
       " grab": -0.5120707
      },
      {
       "('": -0.0011777775
      },
      {
       "close": -0.008053664
      },
      {
       "'": -0.0018891806
      },
      {
       " to": -0.0008257573
      },
      {
       " '": -0.0036545624
      },
      {
       "mouse": -0.0011608283
      },
      {
       "')": -0.0033714573
      },
      {
       "\n": -0.004140625
      },
      {
       " else": -0.0015794138
      },
      {
       ":": -0.0013140846
      },
      {
       " find": -0.00420826
      },
      {
       "('": -0.001869653
      },
      {
       "mouse": -0.00087276584
      },
      {
       "')": -0.0010905985
      },
      {
       "\n": -0.0053148395
      },
      {
       " grab": -0.0054817977
      },
      {
       "('": -0.0011897736
      },
      {
       "mouse": -0.00022146793
      },
      {
       "')": -0.001173839
      },
      {
       "\n": -0.014315632
      },
      {
       " #": -0.299862
      },
      {
       " 5": -0.0060031055
      },
      {
       ":": -0.0011736015
      },
      {
       " move": -0.8889112
      },
      {
       " mouse": -0.06860145
      },
      {
       " to": -0.39662257
      },
      {
       " open": -1.9404045
      },
      {
       "\n": -0.661278
      },
      {
       " assert": -1.1375961
      },
      {
       "('": -0.0014614556
      },
      {
       "mouse": -0.26559845
      },
      {
       "'": -0.0038831744
      },
      {
       " to": -0.00071928324
      },
      {
       " '": -0.004247467
      },
      {
       "mouse": -0.27197635
      },
      {
       "')": -0.033956774
      },
      {
       "\n": -0.0053226906
      },
      {
       " else": -0.009432093
      },
      {
       ":": -0.001117747
      },
      {
       " find": -0.015659193
      },
      {
       "('": -0.0011172693
      },
      {
       "computer": -0.0064658327
      },
      {
       "')": -0.003506211
      },
      {
       "\n": -0.0058913403
      },
      {
       " tur": -1.2071118
      },
      {
       "nt": -0.00011928824
      },
      {
       "o": -0.00028114737
      },
      {
       "('": -0.0007539364
      },
      {
       "computer": -0.14757594
      },
      {
       "')": -0.002232138
      },
      {
       "\n": -0.007415702
      },
      {
       " point": -0.7357355
      },
      {
       "('": -0.0011272951
      },
      {
       "mouse": -0.05512953
      },
      {
       "'": -0.0025571678
      },
      {
       " in": -0.016804403
      },
      {
       " '": -0.004632674
      },
      {
       "hands": -0.02780008
      },
      {
       "')": -0.017021244
      },
      {
       "\n": -0.0042397445
      },
      {
       " else": -0.0042553083
      },
      {
       ":": -0.0021569896
      },
      {
       " grab": -0.022235101
      },
      {
       "('": -0.0018075499
      },
      {
       "mouse": -0.0006780653
      },
      {
       "')": -0.0029753193
      },
      {
       "\n": -0.0067247893
      },
      {
       " point": -0.32529494
      },
      {
       "at": -0.003345563
      },
      {
       "('": -0.0007981976
      },
      {
       "mouse": -0.24245985
      },
      {
       "')": -0.01785498
      }
     ],
     "text_offset": [
      3165,
      3167,
      3169,
      3170,
      3175,
      3178,
      3185,
      3190,
      3191,
      3196,
      3198,
      3204,
      3205,
      3209,
      3211,
      3212,
      3214,
      3216,
      3217,
      3222,
      3231,
      3232,
      3237,
      3239,
      3247,
      3249,
      3250,
      3252,
      3254,
      3255,
      3260,
      3263,
      3272,
      3273,
      3280,
      3282,
      3287,
      3288,
      3291,
      3293,
      3301,
      3303,
      3304,
      3309,
      3310,
      3315,
      3317,
      3325,
      3327,
      3328,
      3335,
      3337,
      3339,
      3347,
      3349,
      3350,
      3352,
      3354,
      3355,
      3360,
      3366,
      3367,
      3372,
      3374,
      3379,
      3381,
      3382,
      3384,
      3386,
      3387,
      3392,
      3398,
      3399,
      3406,
      3408,
      3413,
      3414,
      3417,
      3419,
      3424,
      3426,
      3427,
      3432,
      3433,
      3438,
      3440,
      3445,
      3447,
      3448,
      3453,
      3455,
      3460,
      3462,
      3463,
      3465,
      3467,
      3468,
      3472,
      3478,
      3481,
      3490,
      3491,
      3498,
      3500,
      3505,
      3506,
      3509,
      3511,
      3519,
      3521,
      3522,
      3527,
      3528,
      3533,
      3535,
      3543,
      3545,
      3546,
      3550,
      3552,
      3553,
      3555,
      3563,
      3565,
      3566,
      3573,
      3575,
      3580,
      3581,
      3584,
      3586,
      3591,
      3593,
      3594,
      3599,
      3600,
      3605,
      3607,
      3612,
      3614,
      3615,
      3621,
      3623,
      3625,
      3630
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Start computer",
   "task_description": "Sit in desk chair, press power button, let computer power on",
   "program": [
    "[Walk] <home_office> (1)",
    "[Walk] <chair> (1)",
    "[Find] <chair> (1)",
    "[Sit] <chair> (1)",
    "[Find] <computer> (1)",
    "[TurnTo] <computer> (1)",
    "[LookAt] <computer> (1)",
    "[SwitchOn] <computer> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_kellensecond",
   "file_id": "split11_9",
   "goal_condition": [
    [
     [
      198,
      1,
      "INSIDE",
      "character",
      "home_office"
     ],
     [
      198,
      17,
      "ON",
      "character",
      "chair"
     ],
     [
      198,
      98,
      "FACING",
      "character",
      "computer"
     ]
    ],
    [
     [
      98,
      "computer",
      "ON"
     ],
     [
      198,
      "character",
      "SITTING"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1107,
   "completion_tokens": 145,
   "total_tokens": 1252
  }
 },
 "7": {
  "plan": [
   [
    " # 0: walk to bedroom\n walk('bedroom')\n # 1: find alarm clock\n find('alarm_clock')\n # 2: grab alarm clock\n assert('close' to 'alarm_clock')\n else: find('alarm_clock')\n grab('alarm_clock')\n # 3: put alarm clock on nightstand\n find('nightstand')\n assert('close' to 'nightstand')\n else: find('nightstand')\n puton('alarm_clock')\n # 4: Done\ndone",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " bedroom",
      "\n",
      " walk",
      "('",
      "bedroom",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " alarm",
      " clock",
      "\n",
      " find",
      "('",
      "al",
      "arm",
      "_",
      "clock",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " grab",
      " alarm",
      " clock",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "al",
      "arm",
      "_",
      "clock",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "al",
      "arm",
      "_",
      "clock",
      "')",
      "\n",
      " grab",
      "('",
      "al",
      "arm",
      "_",
      "clock",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " put",
      " alarm",
      " clock",
      " on",
      " night",
      "stand",
      "\n",
      " find",
      "('",
      "night",
      "stand",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "night",
      "stand",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "night",
      "stand",
      "')",
      "\n",
      " put",
      "on",
      "('",
      "al",
      "arm",
      "_",
      "clock",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " Done",
      "\n",
      "done"
     ],
     "token_logprobs": [
      -0.018869735,
      -0.009579821,
      -0.0022456967,
      -0.8226104,
      -0.26069415,
      -0.08292257,
      -0.023099119,
      -0.0049059503,
      -0.0047599906,
      -0.0013984825,
      -0.0011647678,
      -0.0097761415,
      -0.0025978612,
      -0.0031304068,
      -0.0005960573,
      -0.05028476,
      -0.2773342,
      -0.057113394,
      -0.02054173,
      -0.22382034,
      -0.00095020543,
      -0.0030581197,
      -0.0001856978,
      -0.021196477,
      -0.00044058848,
      -0.0026460309,
      -0.0062175593,
      -0.011156296,
      -0.0033491517,
      -0.0008217013,
      -0.42315552,
      -0.3540212,
      -0.007232993,
      -0.026192348,
      -1.2174739,
      -0.0016391738,
      -0.004857076,
      -0.0024878506,
      -0.00038662262,
      -0.0020205653,
      -0.00217043,
      -0.00012250594,
      -0.006029731,
      -0.0004950321,
      -0.0071862256,
      -0.008025243,
      -0.001561325,
      -0.0012735011,
      -0.004077423,
      -0.0010515723,
      -0.00044738431,
      -8.685972e-05,
      -0.0010067648,
      -0.0006359574,
      -0.0032261987,
      -0.0066027427,
      -0.004389043,
      -0.0008936471,
      -0.00035788392,
      -9.370307e-06,
      -0.0023897393,
      -0.0005123239,
      -0.0016782199,
      -0.0053096265,
      -0.3925734,
      -0.007488123,
      -0.0007821523,
      -0.55778545,
      -0.15269604,
      -0.0043129544,
      -0.62570363,
      -0.6601373,
      -0.344314,
      -0.017289924,
      -0.49333972,
      -0.0012856163,
      -0.0007038932,
      -0.0043223533,
      -0.0014652759,
      -0.0052088415,
      -0.5597074,
      -0.00094447786,
      -0.12977003,
      -0.0016875932,
      -0.0002992727,
      -0.0018514985,
      -0.012299252,
      -0.00073437026,
      -0.0045835716,
      -0.004020569,
      -0.0015008507,
      -0.0014230132,
      -0.006284376,
      -0.0009883279,
      -0.0008644729,
      -0.00041613853,
      -0.001263237,
      -0.00532365,
      -0.10881118,
      -0.16009131,
      -0.0013917363,
      -0.29699883,
      -8.459475e-05,
      -0.001856814,
      -0.0003692097,
      -0.36870393,
      -0.30362052,
      -0.08540108,
      -0.011994933,
      -0.0015493253,
      -0.34249705,
      -0.5181866,
      -4.797945
     ],
     "top_logprobs": [
      {
       " #": -0.018869735
      },
      {
       " 0": -0.009579821
      },
      {
       ":": -0.0022456967
      },
      {
       " find": -0.7680773
      },
      {
       " to": -0.26069415
      },
      {
       " bedroom": -0.08292257
      },
      {
       "\n": -0.023099119
      },
      {
       " walk": -0.0049059503
      },
      {
       "('": -0.0047599906
      },
      {
       "bedroom": -0.0013984825
      },
      {
       "')": -0.0011647678
      },
      {
       "\n": -0.0097761415
      },
      {
       " #": -0.0025978612
      },
      {
       " 1": -0.0031304068
      },
      {
       ":": -0.0005960573
      },
      {
       " find": -0.05028476
      },
      {
       " alarm": -0.2773342
      },
      {
       " clock": -0.057113394
      },
      {
       "\n": -0.02054173
      },
      {
       " find": -0.22382034
      },
      {
       "('": -0.00095020543
      },
      {
       "al": -0.0030581197
      },
      {
       "arm": -0.0001856978
      },
      {
       "_": -0.021196477
      },
      {
       "clock": -0.00044058848
      },
      {
       "')": -0.0026460309
      },
      {
       "\n": -0.0062175593
      },
      {
       " #": -0.011156296
      },
      {
       " 2": -0.0033491517
      },
      {
       ":": -0.0008217013
      },
      {
       " grab": -0.42315552
      },
      {
       " alarm": -0.3540212
      },
      {
       " clock": -0.007232993
      },
      {
       "\n": -0.026192348
      },
      {
       " grab": -0.363262
      },
      {
       "('": -0.0016391738
      },
      {
       "close": -0.004857076
      },
      {
       "'": -0.0024878506
      },
      {
       " to": -0.00038662262
      },
      {
       " '": -0.0020205653
      },
      {
       "al": -0.00217043
      },
      {
       "arm": -0.00012250594
      },
      {
       "_": -0.006029731
      },
      {
       "clock": -0.0004950321
      },
      {
       "')": -0.0071862256
      },
      {
       "\n": -0.008025243
      },
      {
       " else": -0.001561325
      },
      {
       ":": -0.0012735011
      },
      {
       " find": -0.004077423
      },
      {
       "('": -0.0010515723
      },
      {
       "al": -0.00044738431
      },
      {
       "arm": -8.685972e-05
      },
      {
       "_": -0.0010067648
      },
      {
       "clock": -0.0006359574
      },
      {
       "')": -0.0032261987
      },
      {
       "\n": -0.0066027427
      },
      {
       " grab": -0.004389043
      },
      {
       "('": -0.0008936471
      },
      {
       "al": -0.00035788392
      },
      {
       "arm": -9.370307e-06
      },
      {
       "_": -0.0023897393
      },
      {
       "clock": -0.0005123239
      },
      {
       "')": -0.0016782199
      },
      {
       "\n": -0.0053096265
      },
      {
       " #": -0.3925734
      },
      {
       " 3": -0.007488123
      },
      {
       ":": -0.0007821523
      },
      {
       " put": -0.55778545
      },
      {
       " alarm": -0.15269604
      },
      {
       " clock": -0.0043129544
      },
      {
       " on": -0.62570363
      },
      {
       " night": -0.6601373
      },
      {
       "stand": -0.344314
      },
      {
       "\n": -0.017289924
      },
      {
       " find": -0.49333972
      },
      {
       "('": -0.0012856163
      },
      {
       "night": -0.0007038932
      },
      {
       "stand": -0.0043223533
      },
      {
       "')": -0.0014652759
      },
      {
       "\n": -0.0052088415
      },
      {
       " assert": -0.5597074
      },
      {
       "('": -0.00094447786
      },
      {
       "close": -0.12977003
      },
      {
       "'": -0.0016875932
      },
      {
       " to": -0.0002992727
      },
      {
       " '": -0.0018514985
      },
      {
       "night": -0.012299252
      },
      {
       "stand": -0.00073437026
      },
      {
       "')": -0.0045835716
      },
      {
       "\n": -0.004020569
      },
      {
       " else": -0.0015008507
      },
      {
       ":": -0.0014230132
      },
      {
       " find": -0.006284376
      },
      {
       "('": -0.0009883279
      },
      {
       "night": -0.0008644729
      },
      {
       "stand": -0.00041613853
      },
      {
       "')": -0.001263237
      },
      {
       "\n": -0.00532365
      },
      {
       " put": -0.10881118
      },
      {
       "on": -0.16009131
      },
      {
       "('": -0.0013917363
      },
      {
       "al": -0.29699883
      },
      {
       "arm": -8.459475e-05
      },
      {
       "_": -0.001856814
      },
      {
       "clock": -0.0003692097
      },
      {
       "')": -0.36870393
      },
      {
       "\n": -0.30362052
      },
      {
       " #": -0.08540108
      },
      {
       " 4": -0.011994933
      },
      {
       ":": -0.0015493253
      },
      {
       " Done": -0.34249705
      },
      {
       "\n": -0.5181866
      },
      {
       "def": -1.0170834
      }
     ],
     "text_offset": [
      3177,
      3179,
      3181,
      3182,
      3187,
      3190,
      3198,
      3199,
      3204,
      3206,
      3213,
      3215,
      3216,
      3218,
      3220,
      3221,
      3226,
      3232,
      3238,
      3239,
      3244,
      3246,
      3248,
      3251,
      3252,
      3257,
      3259,
      3260,
      3262,
      3264,
      3265,
      3270,
      3276,
      3282,
      3283,
      3290,
      3292,
      3297,
      3298,
      3301,
      3303,
      3305,
      3308,
      3309,
      3314,
      3316,
      3317,
      3322,
      3323,
      3328,
      3330,
      3332,
      3335,
      3336,
      3341,
      3343,
      3344,
      3349,
      3351,
      3353,
      3356,
      3357,
      3362,
      3364,
      3365,
      3367,
      3369,
      3370,
      3374,
      3380,
      3386,
      3389,
      3395,
      3400,
      3401,
      3406,
      3408,
      3413,
      3418,
      3420,
      3421,
      3428,
      3430,
      3435,
      3436,
      3439,
      3441,
      3446,
      3451,
      3453,
      3454,
      3459,
      3460,
      3465,
      3467,
      3472,
      3477,
      3479,
      3480,
      3484,
      3486,
      3488,
      3490,
      3493,
      3494,
      3499,
      3501,
      3502,
      3504,
      3506,
      3507,
      3512,
      3513
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Put alarm clock in bedroom",
   "task_description": "Take alarm clock. Sit it on stand, next to bed. Plug in alarm clock. Set time, according to watch. Set alarm, depending on what time you have to get up.",
   "program": [
    "[Walk] <bedroom> (1)",
    "[Walk] <alarm_clock> (1)",
    "[Find] <alarm_clock> (1)",
    "[Grab] <alarm_clock> (1)",
    "[Find] <dresser> (1)",
    "[Open] <dresser> (1)",
    "[PutBack] <alarm_clock> (1) <dresser> (1)",
    "[SwitchOn] <alarm_clock> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_kellensecond",
   "file_id": "split11_6",
   "goal_condition": [
    [
     [
      1000,
      241,
      "ON",
      "alarm_clock",
      "dresser"
     ],
     [
      198,
      199,
      "INSIDE",
      "character",
      "bedroom"
     ]
    ],
    [
     [
      241,
      "dresser",
      "OPEN"
     ],
     [
      1000,
      "alarm_clock",
      "ON"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1114,
   "completion_tokens": 113,
   "total_tokens": 1227
  }
 },
 "8": {
  "plan": [
   [
    " # 0: walk in to bathroom\n walk('bathroom')\n # 1: find mirror\n walk('mirror')\n find('mirror')\n # 2: look at mirror\n turnto('mirror')\n lookat('mirror')\n # 3: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " in",
      " to",
      " bathroom",
      "\n",
      " walk",
      "('",
      "bath",
      "room",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " mirror",
      "\n",
      " walk",
      "('",
      "mir",
      "ror",
      "')",
      "\n",
      " find",
      "('",
      "mir",
      "ror",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " look",
      " at",
      " mirror",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "mir",
      "ror",
      "')",
      "\n",
      " look",
      "at",
      "('",
      "mir",
      "ror",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.02274729,
      -0.010876605,
      -0.0021662475,
      -0.57901406,
      -1.8221014,
      -0.08177979,
      -0.35508776,
      -0.021368057,
      -0.004286734,
      -0.006651523,
      -0.002996301,
      -0.0002022697,
      -0.0017249703,
      -0.0076073934,
      -0.0019443019,
      -0.002820553,
      -0.0008969877,
      -0.048471764,
      -0.21521257,
      -0.016635608,
      -1.8163707,
      -0.0016369043,
      -0.002158543,
      -0.0013007754,
      -0.0010863014,
      -0.0046616555,
      -0.020870572,
      -0.0008384657,
      -0.0005433961,
      -0.0016548748,
      -0.0013518042,
      -0.0054370887,
      -0.005693201,
      -0.009591375,
      -0.00068993546,
      -0.5263911,
      -0.20075507,
      -1.0912465,
      -0.013138125,
      -0.2130509,
      -1.9980816e-05,
      -0.00013740796,
      -0.00055448717,
      -0.00052246416,
      -0.0008289806,
      -0.0008358393,
      -0.004847432,
      -0.038011536,
      -0.0006261147,
      -0.00047845463,
      -0.0003146553,
      -0.00017174664,
      -0.0018390772,
      -0.93398356,
      -0.7755487,
      -0.011254608,
      -0.0016969084,
      -0.43055153
     ],
     "top_logprobs": [
      {
       " #": -0.02274729
      },
      {
       " 0": -0.010876605
      },
      {
       ":": -0.0021662475
      },
      {
       " walk": -0.57901406
      },
      {
       " to": -0.25396794
      },
      {
       " to": -0.08177979
      },
      {
       " bathroom": -0.35508776
      },
      {
       "\n": -0.021368057
      },
      {
       " walk": -0.004286734
      },
      {
       "('": -0.006651523
      },
      {
       "bath": -0.002996301
      },
      {
       "room": -0.0002022697
      },
      {
       "')": -0.0017249703
      },
      {
       "\n": -0.0076073934
      },
      {
       " #": -0.0019443019
      },
      {
       " 1": -0.002820553
      },
      {
       ":": -0.0008969877
      },
      {
       " find": -0.048471764
      },
      {
       " mirror": -0.21521257
      },
      {
       "\n": -0.016635608
      },
      {
       " find": -0.21794498
      },
      {
       "('": -0.0016369043
      },
      {
       "mir": -0.002158543
      },
      {
       "ror": -0.0013007754
      },
      {
       "')": -0.0010863014
      },
      {
       "\n": -0.0046616555
      },
      {
       " find": -0.020870572
      },
      {
       "('": -0.0008384657
      },
      {
       "mir": -0.0005433961
      },
      {
       "ror": -0.0016548748
      },
      {
       "')": -0.0013518042
      },
      {
       "\n": -0.0054370887
      },
      {
       " #": -0.005693201
      },
      {
       " 2": -0.009591375
      },
      {
       ":": -0.00068993546
      },
      {
       " look": -0.5263911
      },
      {
       " at": -0.20075507
      },
      {
       " the": -0.46054545
      },
      {
       "\n": -0.013138125
      },
      {
       " tur": -0.2130509
      },
      {
       "nt": -1.9980816e-05
      },
      {
       "o": -0.00013740796
      },
      {
       "('": -0.00055448717
      },
      {
       "mir": -0.00052246416
      },
      {
       "ror": -0.0008289806
      },
      {
       "')": -0.0008358393
      },
      {
       "\n": -0.004847432
      },
      {
       " look": -0.038011536
      },
      {
       "at": -0.0006261147
      },
      {
       "('": -0.00047845463
      },
      {
       "mir": -0.0003146553
      },
      {
       "ror": -0.00017174664
      },
      {
       "')": -0.0018390772
      },
      {
       "<|endoftext|>": -0.51843435
      },
      {
       " #": -0.7755487
      },
      {
       " 3": -0.011254608
      },
      {
       ":": -0.0016969084
      },
      {
       " Done": -0.43055153
      }
     ],
     "text_offset": [
      3165,
      3167,
      3169,
      3170,
      3175,
      3178,
      3181,
      3190,
      3191,
      3196,
      3198,
      3202,
      3206,
      3208,
      3209,
      3211,
      3213,
      3214,
      3219,
      3226,
      3227,
      3232,
      3234,
      3237,
      3240,
      3242,
      3243,
      3248,
      3250,
      3253,
      3256,
      3258,
      3259,
      3261,
      3263,
      3264,
      3269,
      3272,
      3279,
      3280,
      3284,
      3286,
      3287,
      3289,
      3292,
      3295,
      3297,
      3298,
      3303,
      3305,
      3307,
      3310,
      3313,
      3315,
      3316,
      3318,
      3320,
      3321
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Look at mirror",
   "task_description": "I look at my reflection to check my cleanliness.",
   "program": [
    "[Walk] <bathroom> (1)",
    "[Walk] <mirror> (1)",
    "[Find] <mirror> (1)",
    "[TurnTo] <mirror> (1)",
    "[LookAt] <mirror> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_kellensecond",
   "file_id": "split3_4",
   "goal_condition": [
    [
     [
      198,
      1000,
      "FACING",
      "character",
      "mirror"
     ],
     [
      198,
      262,
      "INSIDE",
      "character",
      "bathroom"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1110,
   "completion_tokens": 58,
   "total_tokens": 1168
  }
 },
 "9": {
  "plan": [
   [
    " # 0: find bed\n find('bed')\n # 1: lay down on bed\n assert('close' to 'bed')\n else: find('bed')\n else: turnto('bed')\n sit('bed')\n # 2: lay down on bed\n lay('bed')\n # 3: sleep for a while\n sleep()\n # 4: wake up\n wakeup()",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " bed",
      "\n",
      " find",
      "('",
      "bed",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " lay",
      " down",
      " on",
      " bed",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "bed",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "bed",
      "')",
      "\n",
      " else",
      ":",
      " tur",
      "nt",
      "o",
      "('",
      "bed",
      "')",
      "\n",
      " sit",
      "('",
      "bed",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " lay",
      " down",
      " on",
      " bed",
      "\n",
      " lay",
      "('",
      "bed",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " sleep",
      " for",
      " a",
      " while",
      "\n",
      " sleep",
      "()",
      "\n",
      " #",
      " 4",
      ":",
      " wake",
      " up",
      "\n",
      " wake",
      "up",
      "()"
     ],
     "token_logprobs": [
      -0.016958317,
      -0.011363656,
      -0.0023332792,
      -1.2028681,
      -0.6375737,
      -0.036612634,
      -0.19368224,
      -0.0019540377,
      -0.00036146207,
      -0.0014710035,
      -0.008106959,
      -0.0043400144,
      -0.0035780505,
      -0.00058251905,
      -0.6626368,
      -0.12769356,
      -0.20924577,
      -0.07951632,
      -0.015302949,
      -1.5211796,
      -0.0017261633,
      -0.006277118,
      -0.002982193,
      -0.0010134461,
      -0.0024617964,
      -0.0002386978,
      -0.003986994,
      -0.005604608,
      -0.001624666,
      -0.0014802567,
      -0.005078774,
      -0.001500493,
      -0.00025968134,
      -0.00082253676,
      -0.0056750397,
      -1.5512651,
      -0.0030844281,
      -0.026702834,
      -7.398424e-05,
      -0.0002974855,
      -0.0006723386,
      -0.00023810269,
      -0.0022192926,
      -0.0030677472,
      -0.2269219,
      -0.0011139287,
      -9.806815e-05,
      -0.00033039556,
      -0.005306452,
      -0.5679724,
      -0.008017132,
      -0.0010611783,
      -4.5747538,
      -0.08293662,
      -0.9581702,
      -0.07483376,
      -0.078393616,
      -1.7284929,
      -0.09569158,
      -0.0023097408,
      -0.0013883947,
      -0.0063973856,
      -0.112435065,
      -0.0064146603,
      -0.0010360611,
      -0.9010009,
      -2.6543553,
      -0.45983133,
      -0.31304255,
      -0.012181772,
      -0.021065043,
      -0.05476065,
      -0.73858905,
      -0.066050634,
      -0.0068710335,
      -0.0015492062,
      -0.31881276,
      -0.09276123,
      -0.14355558,
      -0.011737684,
      -0.0013507315,
      -0.004200539
     ],
     "top_logprobs": [
      {
       " #": -0.016958317
      },
      {
       " 0": -0.011363656
      },
      {
       ":": -0.0023332792
      },
      {
       " walk": -0.58779204
      },
      {
       " bed": -0.6375737
      },
      {
       "\n": -0.036612634
      },
      {
       " find": -0.19368224
      },
      {
       "('": -0.0019540377
      },
      {
       "bed": -0.00036146207
      },
      {
       "')": -0.0014710035
      },
      {
       "\n": -0.008106959
      },
      {
       " #": -0.0043400144
      },
      {
       " 1": -0.0035780505
      },
      {
       ":": -0.00058251905
      },
      {
       " lay": -0.6626368
      },
      {
       " down": -0.12769356
      },
      {
       " on": -0.20924577
      },
      {
       " bed": -0.07951632
      },
      {
       "\n": -0.015302949
      },
      {
       " tur": -0.29070505
      },
      {
       "('": -0.0017261633
      },
      {
       "close": -0.006277118
      },
      {
       "'": -0.002982193
      },
      {
       " to": -0.0010134461
      },
      {
       " '": -0.0024617964
      },
      {
       "bed": -0.0002386978
      },
      {
       "')": -0.003986994
      },
      {
       "\n": -0.005604608
      },
      {
       " else": -0.001624666
      },
      {
       ":": -0.0014802567
      },
      {
       " find": -0.005078774
      },
      {
       "('": -0.001500493
      },
      {
       "bed": -0.00025968134
      },
      {
       "')": -0.00082253676
      },
      {
       "\n": -0.0056750397
      },
      {
       " tur": -0.84226257
      },
      {
       ":": -0.0030844281
      },
      {
       " tur": -0.026702834
      },
      {
       "nt": -7.398424e-05
      },
      {
       "o": -0.0002974855
      },
      {
       "('": -0.0006723386
      },
      {
       "bed": -0.00023810269
      },
      {
       "')": -0.0022192926
      },
      {
       "\n": -0.0030677472
      },
      {
       " sit": -0.2269219
      },
      {
       "('": -0.0011139287
      },
      {
       "bed": -9.806815e-05
      },
      {
       "')": -0.00033039556
      },
      {
       "\n": -0.005306452
      },
      {
       " #": -0.5679724
      },
      {
       " 2": -0.008017132
      },
      {
       ":": -0.0010611783
      },
      {
       " close": -1.1988395
      },
      {
       " down": -0.08293662
      },
      {
       " on": -0.9581702
      },
      {
       " bed": -0.07483376
      },
      {
       "\n": -0.078393616
      },
      {
       " lie": -0.42532748
      },
      {
       "('": -0.09569158
      },
      {
       "bed": -0.0023097408
      },
      {
       "')": -0.0013883947
      },
      {
       "\n": -0.0063973856
      },
      {
       " #": -0.112435065
      },
      {
       " 3": -0.0064146603
      },
      {
       ":": -0.0010360611
      },
      {
       " sleep": -0.9010009
      },
      {
       "\n": -0.10667931
      },
      {
       " a": -0.45983133
      },
      {
       " while": -0.31304255
      },
      {
       "\n": -0.012181772
      },
      {
       " sleep": -0.021065043
      },
      {
       "()": -0.05476065
      },
      {
       "<|endoftext|>": -0.68043005
      },
      {
       " #": -0.066050634
      },
      {
       " 4": -0.0068710335
      },
      {
       ":": -0.0015492062
      },
      {
       " wake": -0.31881276
      },
      {
       " up": -0.09276123
      },
      {
       "\n": -0.14355558
      },
      {
       " wake": -0.011737684
      },
      {
       "up": -0.0013507315
      },
      {
       "()": -0.004200539
      }
     ],
     "text_offset": [
      3159,
      3161,
      3163,
      3164,
      3169,
      3173,
      3174,
      3179,
      3181,
      3184,
      3186,
      3187,
      3189,
      3191,
      3192,
      3196,
      3201,
      3204,
      3208,
      3209,
      3216,
      3218,
      3223,
      3224,
      3227,
      3229,
      3232,
      3234,
      3235,
      3240,
      3241,
      3246,
      3248,
      3251,
      3253,
      3254,
      3259,
      3260,
      3264,
      3266,
      3267,
      3269,
      3272,
      3274,
      3275,
      3279,
      3281,
      3284,
      3286,
      3287,
      3289,
      3291,
      3292,
      3296,
      3301,
      3304,
      3308,
      3309,
      3313,
      3315,
      3318,
      3320,
      3321,
      3323,
      3325,
      3326,
      3332,
      3336,
      3338,
      3344,
      3345,
      3351,
      3353,
      3354,
      3356,
      3358,
      3359,
      3364,
      3367,
      3368,
      3373,
      3375
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Take nap",
   "task_description": "Sleep for a short amount of time during the day",
   "program": [
    "[Walk] <bedroom> (1)",
    "[Walk] <bed> (1)",
    "[Find] <bed> (1)",
    "[Lie] <bed> (1)",
    "[Sleep]"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_july",
   "file_id": "split6_5",
   "goal_condition": [
    [
     [
      198,
      199,
      "INSIDE",
      "character",
      "bedroom"
     ],
     [
      198,
      260,
      "ON",
      "character",
      "bed"
     ]
    ],
    [
     [
      198,
      "character",
      "LYING"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1108,
   "completion_tokens": 82,
   "total_tokens": 1190
  }
 },
 "10": {
  "plan": [
   [
    " # 0: find sink\n find('sink')\n # 1: turn faucet on\n assert('close' to 'faucet')\n else: find('faucet')\n switchon('faucet')\n # 2: wash face\n assert('close' to 'sink')\n else: find('sink')\n wash('face')\n # 3: turn off faucet\n switchoff('faucet')\n # 4: done\n \ndef take_shower():\n # 0: walk to bathroom\n walk('bathroom')\n # 1: find shower\n find('shower')\n # 2: turn on the shower\n switchon('shower')\n # 3: pull the curtain\n pull('curtain')\n # 4: take a shower\n standup()\n wash('body')\n # 5: turn off the shower\n switchoff('shower')\n # 6: pull the curtain\n pull('curtain')\n # 7: done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " sink",
      "\n",
      " find",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " turn",
      " f",
      "auc",
      "et",
      " on",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " switch",
      "on",
      "('",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " wash",
      " face",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "s",
      "ink",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " wash",
      "('",
      "face",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " turn",
      " off",
      " f",
      "auc",
      "et",
      "\n",
      " switch",
      "off",
      "('",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " done",
      "\n",
      " ",
      "\n",
      "def",
      " take",
      "_",
      "sh",
      "ower",
      "():",
      "\n",
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " bathroom",
      "\n",
      " walk",
      "('",
      "bath",
      "room",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " shower",
      "\n",
      " find",
      "('",
      "sh",
      "ower",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " turn",
      " on",
      " the",
      " shower",
      "\n",
      " switch",
      "on",
      "('",
      "sh",
      "ower",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " pull",
      " the",
      " curtain",
      "\n",
      " pull",
      "('",
      "cur",
      "tain",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " take",
      " a",
      " shower",
      "\n",
      " stand",
      "up",
      "()",
      "\n",
      " wash",
      "('",
      "body",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " turn",
      " off",
      " the",
      " shower",
      "\n",
      " switch",
      "off",
      "('",
      "sh",
      "ower",
      "')",
      "\n",
      " #",
      " 6",
      ":",
      " pull",
      " the",
      " curtain",
      "\n",
      " pull",
      "('",
      "cur",
      "tain",
      "')",
      "\n",
      " #",
      " 7",
      ":",
      " done"
     ],
     "token_logprobs": [
      -0.015405419,
      -0.007120669,
      -0.0017706478,
      -0.78026056,
      -0.43812048,
      -0.033831052,
      -0.19008462,
      -0.0017967414,
      -0.00089113996,
      -0.000106533844,
      -0.0016420396,
      -0.007999105,
      -0.008244936,
      -0.0033402399,
      -0.00076520955,
      -0.8415579,
      -3.163144,
      -0.0031527102,
      -0.0026680243,
      -0.5865039,
      -0.07436777,
      -0.91364175,
      -0.0023034078,
      -0.015481993,
      -0.004692018,
      -0.0005745265,
      -0.0026830852,
      -0.3990176,
      -0.0007086653,
      -0.00059271755,
      -0.009340939,
      -0.008193975,
      -0.0021703101,
      -0.001788501,
      -0.006339199,
      -0.0021723423,
      -0.003771584,
      -0.001721028,
      -0.00024036579,
      -0.0043324097,
      -0.009425594,
      -0.891852,
      -0.0017013276,
      -0.0011506272,
      -0.0011233556,
      -0.0003875763,
      -0.00028138483,
      -0.0019452574,
      -0.006906204,
      -0.043973826,
      -0.0070667057,
      -0.0010738304,
      -1.4402757,
      -0.16422606,
      -0.24939403,
      -0.6516636,
      -0.001283706,
      -0.06424138,
      -0.0030584782,
      -0.0005869927,
      -0.001861711,
      -0.34297064,
      -4.2870764e-05,
      -0.0065942234,
      -0.0039514485,
      -0.0012092289,
      -0.0014017049,
      -0.0055407123,
      -0.00114645,
      -0.002004977,
      -1.8907942e-05,
      -0.0031568955,
      -0.005870597,
      -0.6838171,
      -0.004106269,
      -0.08146956,
      -0.0064888108,
      -0.013686282,
      -0.24467993,
      -0.008502066,
      -0.0021193,
      -0.21459673,
      -1.0931275,
      -0.14256695,
      -0.0011195361,
      -0.001207438,
      -0.031335562,
      -0.3929492,
      -0.003869411,
      -0.0008950785,
      -0.0011493139,
      -0.00067341333,
      -0.00045060576,
      -0.002470402,
      -0.055748083,
      -0.009181159,
      -0.007547157,
      -0.0022482066,
      -1.6138531,
      -0.85537064,
      -3.0124843,
      -0.24686,
      -0.1968423,
      -2.5029514,
      -0.0010019899,
      -0.4348433,
      -0.00019821846,
      -0.018931935,
      -0.011542301,
      -0.012583145,
      -0.012485307,
      -0.0028426694,
      -0.94303036,
      -0.21681166,
      -0.1265517,
      -0.03221946,
      -0.004920626,
      -0.0037196523,
      -0.0014994182,
      -9.9616926e-05,
      -0.0014409816,
      -0.009709814,
      -0.00256834,
      -0.0055498844,
      -0.00077392027,
      -0.21651177,
      -0.061583277,
      -0.04094572,
      -0.21971604,
      -0.0011431094,
      -0.00018426635,
      -7.291136e-05,
      -0.0010953725,
      -0.007055839,
      -0.0062306942,
      -0.0053763827,
      -0.0010384442,
      -0.2144033,
      -0.08654522,
      -1.315438,
      -0.07305077,
      -0.021098096,
      -0.59024125,
      -0.0005082699,
      -0.00080690725,
      -0.00023500233,
      -0.00025777495,
      -0.0009056383,
      -0.0035052535,
      -0.0064601325,
      -0.0050853016,
      -0.0005021884,
      -3.3945258,
      -0.86667466,
      -1.9914341,
      -0.101858094,
      -0.54296005,
      -0.0014865842,
      -0.038340293,
      -7.8872734e-05,
      -0.0024822936,
      -0.0065706433,
      -0.011370832,
      -0.004779214,
      -0.00093296246,
      -1.3434327,
      -0.6701152,
      -0.01346611,
      -0.016648091,
      -1.460838,
      -0.0062136613,
      -0.10172598,
      -0.008182074,
      -0.8425023,
      -0.0033319283,
      -0.06437092,
      -0.0038914916,
      -0.010521033,
      -0.11683427,
      -0.005158333,
      -0.0013660116,
      -0.13224235,
      -0.018002138,
      -0.16578119,
      -0.0043454,
      -0.020003911,
      -0.0048591727,
      -0.00208991,
      -0.0005826383,
      -0.00023202116,
      -6.253833e-05,
      -0.0009216273,
      -0.008178891,
      -0.0057658576,
      -0.0033901178,
      -0.0013792025,
      -2.0132575,
      -0.11777454,
      -0.009588064,
      -0.2656157,
      -0.036668837,
      -0.00091673416,
      -0.0022393065,
      -9.370307e-06,
      -0.0012389456,
      -0.009551717,
      -0.002389021,
      -0.008319882,
      -0.001521088,
      -0.23309477
     ],
     "top_logprobs": [
      {
       " #": -0.015405419
      },
      {
       " 0": -0.007120669
      },
      {
       ":": -0.0017706478
      },
      {
       " find": -0.78026056
      },
      {
       " sink": -0.43812048
      },
      {
       "\n": -0.033831052
      },
      {
       " find": -0.19008462
      },
      {
       "('": -0.0017967414
      },
      {
       "s": -0.00089113996
      },
      {
       "ink": -0.000106533844
      },
      {
       "')": -0.0016420396
      },
      {
       "\n": -0.007999105
      },
      {
       " #": -0.008244936
      },
      {
       " 1": -0.0033402399
      },
      {
       ":": -0.00076520955
      },
      {
       " turn": -0.8415579
      },
      {
       " on": -0.18721189
      },
      {
       "auc": -0.0031527102
      },
      {
       "et": -0.0026680243
      },
      {
       " on": -0.5865039
      },
      {
       "\n": -0.07436777
      },
      {
       " assert": -0.91364175
      },
      {
       "('": -0.0023034078
      },
      {
       "close": -0.015481993
      },
      {
       "'": -0.004692018
      },
      {
       " to": -0.0005745265
      },
      {
       " '": -0.0026830852
      },
      {
       "f": -0.3990176
      },
      {
       "auc": -0.0007086653
      },
      {
       "et": -0.00059271755
      },
      {
       "')": -0.009340939
      },
      {
       "\n": -0.008193975
      },
      {
       " else": -0.0021703101
      },
      {
       ":": -0.001788501
      },
      {
       " find": -0.006339199
      },
      {
       "('": -0.0021723423
      },
      {
       "f": -0.003771584
      },
      {
       "auc": -0.001721028
      },
      {
       "et": -0.00024036579
      },
      {
       "')": -0.0043324097
      },
      {
       "\n": -0.009425594
      },
      {
       " switch": -0.891852
      },
      {
       "on": -0.0017013276
      },
      {
       "('": -0.0011506272
      },
      {
       "f": -0.0011233556
      },
      {
       "auc": -0.0003875763
      },
      {
       "et": -0.00028138483
      },
      {
       "')": -0.0019452574
      },
      {
       "\n": -0.006906204
      },
      {
       " #": -0.043973826
      },
      {
       " 2": -0.0070667057
      },
      {
       ":": -0.0010738304
      },
      {
       " wash": -1.4402757
      },
      {
       " face": -0.16422606
      },
      {
       "\n": -0.24939403
      },
      {
       " assert": -0.6516636
      },
      {
       "('": -0.001283706
      },
      {
       "close": -0.06424138
      },
      {
       "'": -0.0030584782
      },
      {
       " to": -0.0005869927
      },
      {
       " '": -0.001861711
      },
      {
       "s": -0.34297064
      },
      {
       "ink": -4.2870764e-05
      },
      {
       "')": -0.0065942234
      },
      {
       "\n": -0.0039514485
      },
      {
       " else": -0.0012092289
      },
      {
       ":": -0.0014017049
      },
      {
       " find": -0.0055407123
      },
      {
       "('": -0.00114645
      },
      {
       "s": -0.002004977
      },
      {
       "ink": -1.8907942e-05
      },
      {
       "')": -0.0031568955
      },
      {
       "\n": -0.005870597
      },
      {
       " wash": -0.6838171
      },
      {
       "('": -0.004106269
      },
      {
       "face": -0.08146956
      },
      {
       "')": -0.0064888108
      },
      {
       "\n": -0.013686282
      },
      {
       " #": -0.24467993
      },
      {
       " 3": -0.008502066
      },
      {
       ":": -0.0021193
      },
      {
       " turn": -0.21459673
      },
      {
       " f": -0.4437517
      },
      {
       " f": -0.14256695
      },
      {
       "auc": -0.0011195361
      },
      {
       "et": -0.001207438
      },
      {
       "\n": -0.031335562
      },
      {
       " switch": -0.3929492
      },
      {
       "off": -0.003869411
      },
      {
       "('": -0.0008950785
      },
      {
       "f": -0.0011493139
      },
      {
       "auc": -0.00067341333
      },
      {
       "et": -0.00045060576
      },
      {
       "')": -0.002470402
      },
      {
       "\n": -0.055748083
      },
      {
       " #": -0.009181159
      },
      {
       " 4": -0.007547157
      },
      {
       ":": -0.0022482066
      },
      {
       " Done": -0.63590777
      },
      {
       "<|endoftext|>": -0.6299555
      },
      {
       "def": -1.2228259
      },
      {
       "\n": -0.24686
      },
      {
       "def": -0.1968423
      },
      {
       " make": -1.2955539
      },
      {
       "_": -0.0010019899
      },
      {
       "sh": -0.4348433
      },
      {
       "ower": -0.00019821846
      },
      {
       "():": -0.018931935
      },
      {
       "\n": -0.011542301
      },
      {
       " #": -0.012583145
      },
      {
       " 0": -0.012485307
      },
      {
       ":": -0.0028426694
      },
      {
       " find": -0.6878557
      },
      {
       " to": -0.21681166
      },
      {
       " bathroom": -0.1265517
      },
      {
       "\n": -0.03221946
      },
      {
       " walk": -0.004920626
      },
      {
       "('": -0.0037196523
      },
      {
       "bath": -0.0014994182
      },
      {
       "room": -9.9616926e-05
      },
      {
       "')": -0.0014409816
      },
      {
       "\n": -0.009709814
      },
      {
       " #": -0.00256834
      },
      {
       " 1": -0.0055498844
      },
      {
       ":": -0.00077392027
      },
      {
       " find": -0.21651177
      },
      {
       " shower": -0.061583277
      },
      {
       "\n": -0.04094572
      },
      {
       " find": -0.21971604
      },
      {
       "('": -0.0011431094
      },
      {
       "sh": -0.00018426635
      },
      {
       "ower": -7.291136e-05
      },
      {
       "')": -0.0010953725
      },
      {
       "\n": -0.007055839
      },
      {
       " #": -0.0062306942
      },
      {
       " 2": -0.0053763827
      },
      {
       ":": -0.0010384442
      },
      {
       " turn": -0.2144033
      },
      {
       " on": -0.08654522
      },
      {
       " shower": -0.41536593
      },
      {
       " shower": -0.07305077
      },
      {
       "\n": -0.021098096
      },
      {
       " switch": -0.59024125
      },
      {
       "on": -0.0005082699
      },
      {
       "('": -0.00080690725
      },
      {
       "sh": -0.00023500233
      },
      {
       "ower": -0.00025777495
      },
      {
       "')": -0.0009056383
      },
      {
       "\n": -0.0035052535
      },
      {
       " #": -0.0064601325
      },
      {
       " 3": -0.0050853016
      },
      {
       ":": -0.0005021884
      },
      {
       " take": -1.2472385
      },
      {
       " the": -0.86667466
      },
      {
       " shower": -0.311574
      },
      {
       "\n": -0.101858094
      },
      {
       " pull": -0.54296005
      },
      {
       "('": -0.0014865842
      },
      {
       "cur": -0.038340293
      },
      {
       "tain": -7.8872734e-05
      },
      {
       "')": -0.0024822936
      },
      {
       "\n": -0.0065706433
      },
      {
       " #": -0.011370832
      },
      {
       " 4": -0.004779214
      },
      {
       ":": -0.00093296246
      },
      {
       " wash": -1.2956212
      },
      {
       " a": -0.6701152
      },
      {
       " shower": -0.01346611
      },
      {
       "\n": -0.016648091
      },
      {
       " assert": -0.868654
      },
      {
       "up": -0.0062136613
      },
      {
       "()": -0.10172598
      },
      {
       "\n": -0.008182074
      },
      {
       " wash": -0.8425023
      },
      {
       "('": -0.0033319283
      },
      {
       "body": -0.06437092
      },
      {
       "')": -0.0038914916
      },
      {
       "\n": -0.010521033
      },
      {
       " #": -0.11683427
      },
      {
       " 5": -0.005158333
      },
      {
       ":": -0.0013660116
      },
      {
       " turn": -0.13224235
      },
      {
       " off": -0.018002138
      },
      {
       " the": -0.16578119
      },
      {
       " shower": -0.0043454
      },
      {
       "\n": -0.020003911
      },
      {
       " switch": -0.0048591727
      },
      {
       "off": -0.00208991
      },
      {
       "('": -0.0005826383
      },
      {
       "sh": -0.00023202116
      },
      {
       "ower": -6.253833e-05
      },
      {
       "')": -0.0009216273
      },
      {
       "\n": -0.008178891
      },
      {
       " #": -0.0057658576
      },
      {
       " 6": -0.0033901178
      },
      {
       ":": -0.0013792025
      },
      {
       " done": -0.7077936
      },
      {
       " the": -0.11777454
      },
      {
       " curtain": -0.009588064
      },
      {
       "\n": -0.2656157
      },
      {
       " pull": -0.036668837
      },
      {
       "('": -0.00091673416
      },
      {
       "cur": -0.0022393065
      },
      {
       "tain": -9.370307e-06
      },
      {
       "')": -0.0012389456
      },
      {
       "\n": -0.009551717
      },
      {
       " #": -0.002389021
      },
      {
       " 7": -0.008319882
      },
      {
       ":": -0.001521088
      },
      {
       " done": -0.23309477
      }
     ],
     "text_offset": [
      3160,
      3162,
      3164,
      3165,
      3170,
      3175,
      3176,
      3181,
      3183,
      3184,
      3187,
      3189,
      3190,
      3192,
      3194,
      3195,
      3200,
      3202,
      3205,
      3207,
      3210,
      3211,
      3218,
      3220,
      3225,
      3226,
      3229,
      3231,
      3232,
      3235,
      3237,
      3239,
      3240,
      3245,
      3246,
      3251,
      3253,
      3254,
      3257,
      3259,
      3261,
      3262,
      3269,
      3271,
      3273,
      3274,
      3277,
      3279,
      3281,
      3282,
      3284,
      3286,
      3287,
      3292,
      3297,
      3298,
      3305,
      3307,
      3312,
      3313,
      3316,
      3318,
      3319,
      3322,
      3324,
      3325,
      3330,
      3331,
      3336,
      3338,
      3339,
      3342,
      3344,
      3345,
      3350,
      3352,
      3356,
      3358,
      3359,
      3361,
      3363,
      3364,
      3369,
      3373,
      3375,
      3378,
      3380,
      3381,
      3388,
      3391,
      3393,
      3394,
      3397,
      3399,
      3401,
      3402,
      3404,
      3406,
      3407,
      3412,
      3413,
      3414,
      3415,
      3418,
      3423,
      3424,
      3426,
      3430,
      3433,
      3434,
      3436,
      3438,
      3439,
      3444,
      3447,
      3456,
      3457,
      3462,
      3464,
      3468,
      3472,
      3474,
      3475,
      3477,
      3479,
      3480,
      3485,
      3492,
      3493,
      3498,
      3500,
      3502,
      3506,
      3508,
      3509,
      3511,
      3513,
      3514,
      3519,
      3522,
      3526,
      3533,
      3534,
      3541,
      3543,
      3545,
      3547,
      3551,
      3553,
      3554,
      3556,
      3558,
      3559,
      3564,
      3568,
      3576,
      3577,
      3582,
      3584,
      3587,
      3591,
      3593,
      3594,
      3596,
      3598,
      3599,
      3604,
      3606,
      3613,
      3614,
      3620,
      3622,
      3624,
      3625,
      3630,
      3632,
      3636,
      3638,
      3639,
      3641,
      3643,
      3644,
      3649,
      3653,
      3657,
      3664,
      3665,
      3672,
      3675,
      3677,
      3679,
      3683,
      3685,
      3686,
      3688,
      3690,
      3691,
      3696,
      3700,
      3708,
      3709,
      3714,
      3716,
      3719,
      3723,
      3725,
      3726,
      3728,
      3730,
      3731
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Wash face",
   "task_description": "Turn on water faucet. Get rag wet. Get face soap out. Squirt face soap in hands and put it on face. Rub soap into face. Wash soap off of face. Dry face off on the hand towel. Hang out rag and hand towel.",
   "program": [
    "[Walk] <bathroom> (1)",
    "[Walk] <sink> (1)",
    "[Find] <rag> (1)",
    "[Grab] <rag> (1)",
    "[Find] <faucet> (1)",
    "[SwitchOn] <faucet> (1)",
    "[Wash] <rag> (1)",
    "[Find] <face_soap> (1)",
    "[Grab] <face_soap> (1)",
    "[Pour] <face_soap> (1) <rag> (1)",
    "[PutObjBack] <face_soap> (1)",
    "[Find] <face> (1)",
    "[Scrub] <face> (1)",
    "[PutBack] <rag> (1) <sink> (1)",
    "[Rinse] <face> (1)",
    "[Rinse] <rag> (1)",
    "[SwitchOff] <faucet> (1)",
    "[Grab] <rag> (1)",
    "[PutObjBack] <rag> (1)",
    "[Find] <towel> (1)",
    "[Grab] <towel> (1)",
    "[Wipe] <face> (1)",
    "[PutObjBack] <towel> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upworknturk_second",
   "file_id": "split145_3",
   "goal_condition": [
    [
     [
      198,
      262,
      "INSIDE",
      "character",
      "bathroom"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1107,
   "completion_tokens": 210,
   "total_tokens": 1317
  }
 },
 "11": {
  "plan": [
   [
    " # 0: lie down\n lie()\n # 1: close eyes\n close('eyes')\n # 2: sleep\n sleep()",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " lie",
      " down",
      "\n",
      " lie",
      "()",
      "\n",
      " #",
      " 1",
      ":",
      " close",
      " eyes",
      "\n",
      " close",
      "('",
      "eyes",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " sleep",
      "\n",
      " sleep",
      "()"
     ],
     "token_logprobs": [
      -0.26010415,
      -0.07746407,
      -0.0029491347,
      -2.4668484,
      -0.20296292,
      -0.36440903,
      -0.23964484,
      -0.90031147,
      -0.03874184,
      -0.0059021316,
      -0.0033655365,
      -0.00076079794,
      -0.1068095,
      -0.17077892,
      -0.018673748,
      -0.062428582,
      -0.17995192,
      -0.01747642,
      -0.0012025438,
      -0.050636265,
      -0.0028268306,
      -0.004021164,
      -0.00092079,
      -3.0685632,
      -0.04444599,
      -0.15749453,
      -0.016938854
     ],
     "top_logprobs": [
      {
       " #": -0.26010415
      },
      {
       " 0": -0.07746407
      },
      {
       ":": -0.0029491347
      },
      {
       " find": -1.0080777
      },
      {
       " down": -0.20296292
      },
      {
       "\n": -0.36440903
      },
      {
       " lie": -0.23964484
      },
      {
       "('": -0.5473795
      },
      {
       "\n": -0.03874184
      },
      {
       " #": -0.0059021316
      },
      {
       " 1": -0.0033655365
      },
      {
       ":": -0.00076079794
      },
      {
       " close": -0.1068095
      },
      {
       " eyes": -0.17077892
      },
      {
       "\n": -0.018673748
      },
      {
       " close": -0.062428582
      },
      {
       "('": -0.17995192
      },
      {
       "eyes": -0.01747642
      },
      {
       "')": -0.0012025438
      },
      {
       "\n": -0.050636265
      },
      {
       " #": -0.0028268306
      },
      {
       " 2": -0.004021164
      },
      {
       ":": -0.00092079
      },
      {
       " relax": -1.1282556
      },
      {
       "\n": -0.04444599
      },
      {
       " sleep": -0.15749453
      },
      {
       "()": -0.016938854
      }
     ],
     "text_offset": [
      3156,
      3158,
      3160,
      3161,
      3165,
      3170,
      3171,
      3175,
      3177,
      3178,
      3180,
      3182,
      3183,
      3189,
      3194,
      3195,
      3201,
      3203,
      3207,
      3209,
      3210,
      3212,
      3214,
      3215,
      3221,
      3222,
      3228
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Sleep",
   "task_description": "Relax for the night or during the day, lying on the bed.",
   "program": [
    "[Walk] <bedroom> (1)",
    "[Walk] <bed> (1)",
    "[Lie] <bed> (1)",
    "[Sleep]"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upworknturk_second",
   "file_id": "split1_3",
   "goal_condition": [
    [
     [
      198,
      260,
      "ON",
      "character",
      "bed"
     ],
     [
      198,
      199,
      "INSIDE",
      "character",
      "bedroom"
     ]
    ],
    [
     [
      198,
      "character",
      "LYING"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1105,
   "completion_tokens": 27,
   "total_tokens": 1132
  }
 },
 "12": {
  "plan": [
   [
    " # 0: walk to home office\n walk('home_office')\n # 1: find newspaper\n find('newspaper')\n # 2: grab the newspaper\n grab('newspaper')\n assert('close' to 'newspaper')\n else: find('newspaper')\n # 3: sit in chair\n find('chair')\n sit('chair')\n # 4: read the newspaper\n lookat('newspaper')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " home",
      " office",
      "\n",
      " walk",
      "('",
      "home",
      "_",
      "office",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " newspaper",
      "\n",
      " find",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " grab",
      " the",
      " newspaper",
      "\n",
      " grab",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " sit",
      " in",
      " chair",
      "\n",
      " find",
      "('",
      "chair",
      "')",
      "\n",
      " sit",
      "('",
      "chair",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " read",
      " the",
      " newspaper",
      "\n",
      " look",
      "at",
      "('",
      "new",
      "sp",
      "aper",
      "')"
     ],
     "token_logprobs": [
      -0.017193262,
      -0.011151897,
      -0.0022495207,
      -0.92829,
      -0.20435874,
      -1.7262853,
      -0.03767268,
      -0.029570442,
      -0.004864383,
      -0.0045245923,
      -0.011212533,
      -0.040526908,
      -0.0008898286,
      -0.0026764516,
      -0.008733592,
      -0.0036634768,
      -0.0037821147,
      -0.00087944814,
      -0.052085098,
      -1.0792294,
      -0.028511973,
      -0.13704196,
      -0.0012769628,
      -0.001943107,
      -0.00054423057,
      -0.00055508513,
      -0.0023430188,
      -0.0058583063,
      -0.009015507,
      -0.005208362,
      -0.00061669253,
      -0.2563214,
      -1.4836348,
      -0.020159353,
      -0.026238544,
      -0.3596017,
      -0.0012232504,
      -0.0011845818,
      -0.0003640856,
      -0.00015243483,
      -0.001400033,
      -0.0047538225,
      -1.6325605,
      -0.002353712,
      -1.1658181,
      -0.0035885193,
      -0.0010099844,
      -0.003236126,
      -0.0042539914,
      -0.0007845383,
      -0.0025213708,
      -0.008539517,
      -0.0066471426,
      -0.004497408,
      -0.0021490438,
      -0.024321383,
      -0.0019607234,
      -0.0016191732,
      -0.00105915,
      -0.0011860142,
      -0.0051752888,
      -0.0061919484,
      -0.3643451,
      -0.0061680214,
      -0.0009991269,
      -1.3122585,
      -2.3467004,
      -0.5922513,
      -0.14230378,
      -0.20497088,
      -0.0013482834,
      -0.0013741902,
      -0.0013218444,
      -0.004796045,
      -0.62747747,
      -0.0018626666,
      -0.00067579845,
      -0.0013138462,
      -0.005446974,
      -0.10860905,
      -0.0077549117,
      -0.00078620727,
      -0.22123048,
      -0.26261172,
      -0.055539504,
      -0.010877446,
      -1.7980987,
      -0.0020457727,
      -0.0006750832,
      -0.0038746176,
      -0.00023559744,
      -0.0006617234,
      -0.0017809167
     ],
     "top_logprobs": [
      {
       " #": -0.017193262
      },
      {
       " 0": -0.011151897
      },
      {
       ":": -0.0022495207
      },
      {
       " find": -0.67182034
      },
      {
       " to": -0.20435874
      },
      {
       " living": -0.8251642
      },
      {
       " office": -0.03767268
      },
      {
       "\n": -0.029570442
      },
      {
       " walk": -0.004864383
      },
      {
       "('": -0.0045245923
      },
      {
       "home": -0.011212533
      },
      {
       "_": -0.040526908
      },
      {
       "office": -0.0008898286
      },
      {
       "')": -0.0026764516
      },
      {
       "\n": -0.008733592
      },
      {
       " #": -0.0036634768
      },
      {
       " 1": -0.0037821147
      },
      {
       ":": -0.00087944814
      },
      {
       " find": -0.052085098
      },
      {
       " desk": -0.7572212
      },
      {
       "\n": -0.028511973
      },
      {
       " find": -0.13704196
      },
      {
       "('": -0.0012769628
      },
      {
       "new": -0.001943107
      },
      {
       "sp": -0.00054423057
      },
      {
       "aper": -0.00055508513
      },
      {
       "')": -0.0023430188
      },
      {
       "\n": -0.0058583063
      },
      {
       " #": -0.009015507
      },
      {
       " 2": -0.005208362
      },
      {
       ":": -0.00061669253
      },
      {
       " grab": -0.2563214
      },
      {
       " newspaper": -0.30268642
      },
      {
       " newspaper": -0.020159353
      },
      {
       "\n": -0.026238544
      },
      {
       " grab": -0.3596017
      },
      {
       "('": -0.0012232504
      },
      {
       "new": -0.0011845818
      },
      {
       "sp": -0.0003640856
      },
      {
       "aper": -0.00015243483
      },
      {
       "')": -0.001400033
      },
      {
       "\n": -0.0047538225
      },
      {
       " #": -0.25820795
      },
      {
       "('": -0.002353712
      },
      {
       "new": -0.3990142
      },
      {
       "'": -0.0035885193
      },
      {
       " to": -0.0010099844
      },
      {
       " '": -0.003236126
      },
      {
       "new": -0.0042539914
      },
      {
       "sp": -0.0007845383
      },
      {
       "aper": -0.0025213708
      },
      {
       "')": -0.008539517
      },
      {
       "\n": -0.0066471426
      },
      {
       " else": -0.004497408
      },
      {
       ":": -0.0021490438
      },
      {
       " find": -0.024321383
      },
      {
       "('": -0.0019607234
      },
      {
       "new": -0.0016191732
      },
      {
       "sp": -0.00105915
      },
      {
       "aper": -0.0011860142
      },
      {
       "')": -0.0051752888
      },
      {
       "\n": -0.0061919484
      },
      {
       " #": -0.3643451
      },
      {
       " 3": -0.0061680214
      },
      {
       ":": -0.0009991269
      },
      {
       " read": -0.7295586
      },
      {
       " on": -0.7565094
      },
      {
       " chair": -0.5922513
      },
      {
       "\n": -0.14230378
      },
      {
       " find": -0.20497088
      },
      {
       "('": -0.0013482834
      },
      {
       "chair": -0.0013741902
      },
      {
       "')": -0.0013218444
      },
      {
       "\n": -0.004796045
      },
      {
       " sit": -0.62747747
      },
      {
       "('": -0.0018626666
      },
      {
       "chair": -0.00067579845
      },
      {
       "')": -0.0013138462
      },
      {
       "\n": -0.005446974
      },
      {
       " #": -0.10860905
      },
      {
       " 4": -0.0077549117
      },
      {
       ":": -0.00078620727
      },
      {
       " read": -0.22123048
      },
      {
       " the": -0.26261172
      },
      {
       " newspaper": -0.055539504
      },
      {
       "\n": -0.010877446
      },
      {
       " tur": -1.1755944
      },
      {
       "at": -0.0020457727
      },
      {
       "('": -0.0006750832
      },
      {
       "new": -0.0038746176
      },
      {
       "sp": -0.00023559744
      },
      {
       "aper": -0.0006617234
      },
      {
       "')": -0.0017809167
      }
     ],
     "text_offset": [
      3160,
      3162,
      3164,
      3165,
      3170,
      3173,
      3178,
      3185,
      3186,
      3191,
      3193,
      3197,
      3198,
      3204,
      3206,
      3207,
      3209,
      3211,
      3212,
      3217,
      3227,
      3228,
      3233,
      3235,
      3238,
      3240,
      3244,
      3246,
      3247,
      3249,
      3251,
      3252,
      3257,
      3261,
      3271,
      3272,
      3277,
      3279,
      3282,
      3284,
      3288,
      3290,
      3291,
      3298,
      3300,
      3305,
      3306,
      3309,
      3311,
      3314,
      3316,
      3320,
      3322,
      3323,
      3328,
      3329,
      3334,
      3336,
      3339,
      3341,
      3345,
      3347,
      3348,
      3350,
      3352,
      3353,
      3357,
      3360,
      3366,
      3367,
      3372,
      3374,
      3379,
      3381,
      3382,
      3386,
      3388,
      3393,
      3395,
      3396,
      3398,
      3400,
      3401,
      3406,
      3410,
      3420,
      3421,
      3426,
      3428,
      3430,
      3433,
      3435,
      3439
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Read news",
   "task_description": "Read news articles in a newspaper",
   "program": [
    "[Walk] <home_office> (1)",
    "[Walk] <chair> (1)",
    "[Find] <chair> (1)",
    "[Sit] <chair> (1)",
    "[Find] <newspaper> (1)",
    "[Grab] <newspaper> (1)",
    "[Read] <newspaper> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_july",
   "file_id": "split15_4",
   "goal_condition": [
    [
     [
      198,
      1,
      "INSIDE",
      "character",
      "home_office"
     ],
     [
      198,
      17,
      "ON",
      "character",
      "chair"
     ],
     [
      198,
      1000,
      "HOLDS_RH",
      "character",
      "newspaper"
     ]
    ],
    [
     [
      198,
      "character",
      "SITTING"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1107,
   "completion_tokens": 93,
   "total_tokens": 1200
  }
 },
 "13": {
  "plan": [
   [
    " # 0: find shoes\n find('shoes')\n # 1: grab shoes\n assert('close' to 'shoes')\n else: find('shoes')\n grab('shoes')\n assert('shoes' in 'hands')\n else: grab('shoes')\n # 2: put on shoes\n turnto('shoes')\n assert('shoes' in 'hands')\n else: grab('shoes')\n puton('shoes')\n # 3: done\n assert('shoes' on 'feet')\n else: puton('shoes')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " shoes",
      "\n",
      " find",
      "('",
      "sh",
      "oes",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " grab",
      " shoes",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "sh",
      "oes",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "sh",
      "oes",
      "')",
      "\n",
      " grab",
      "('",
      "sh",
      "oes",
      "')",
      "\n",
      " assert",
      "('",
      "sh",
      "oes",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "sh",
      "oes",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " put",
      " on",
      " shoes",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "sh",
      "oes",
      "')",
      "\n",
      " assert",
      "('",
      "sh",
      "oes",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "sh",
      "oes",
      "')",
      "\n",
      " put",
      "on",
      "('",
      "sh",
      "oes",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " done",
      "\n",
      " assert",
      "('",
      "sh",
      "oes",
      "'",
      " on",
      " '",
      "feet",
      "')",
      "\n",
      " else",
      ":",
      " put",
      "on",
      "('",
      "sh",
      "oes",
      "')"
     ],
     "token_logprobs": [
      -0.013738007,
      -0.0097131245,
      -0.0021805272,
      -0.42320174,
      -0.31547123,
      -0.041961074,
      -0.030524757,
      -0.002240859,
      -0.0005738103,
      -0.005233408,
      -0.0031718444,
      -0.007380456,
      -0.008012381,
      -0.0023276634,
      -0.0007421263,
      -0.18957815,
      -0.10642649,
      -0.022524204,
      -0.53509957,
      -0.0016281288,
      -0.005358405,
      -0.0023496503,
      -0.00056868145,
      -0.005485155,
      -0.00046181606,
      -0.0020250445,
      -0.0048374888,
      -0.006873075,
      -0.0013680401,
      -0.0014708842,
      -0.0031701108,
      -0.0012118552,
      -0.00021717734,
      -0.0031934897,
      -0.0017548259,
      -0.007164735,
      -0.0048688166,
      -0.00093069556,
      -0.000111420464,
      -0.0004999197,
      -0.0023319644,
      -0.006349277,
      -0.6690063,
      -0.0013266193,
      -0.005295305,
      -0.003493589,
      -0.0013676825,
      -0.0136341965,
      -0.0036086175,
      -0.0069999555,
      -0.014683866,
      -0.0036113104,
      -0.010106039,
      -0.0020188936,
      -0.0026450744,
      -0.001287288,
      -0.00016900577,
      -0.0009827194,
      -0.0024597032,
      -0.0045593805,
      -0.76430136,
      -0.007583011,
      -0.0010536597,
      -0.1889077,
      -0.36760786,
      -0.09464583,
      -0.018127525,
      -1.2837542,
      -6.623567e-05,
      -0.000162209,
      -0.0006506285,
      -0.0019318205,
      -0.0017697524,
      -0.0015680111,
      -0.0042775776,
      -1.5148219,
      -0.0010321224,
      -0.03673123,
      -0.0008042809,
      -0.0012349479,
      -0.0023653633,
      -0.0017573313,
      -0.007926528,
      -0.002257886,
      -0.0024663396,
      -0.0011825524,
      -0.0011845818,
      -0.002206449,
      -0.00076342054,
      -0.00013848272,
      -7.6605895e-05,
      -0.00083100714,
      -0.0050995005,
      -0.12815616,
      -0.0049558487,
      -0.00078883354,
      -0.00019869342,
      -0.00028269706,
      -0.002349291,
      -0.03315246,
      -0.3469598,
      -0.012542523,
      -0.0016376213,
      -1.4943337,
      -0.12797356,
      -0.63584936,
      -0.0026014468,
      -0.024449825,
      -0.0016563081,
      -0.006329961,
      -0.7404063,
      -0.031724695,
      -0.037242923,
      -0.0063017705,
      -0.71869385,
      -0.0141831655,
      -0.0034157769,
      -0.035197165,
      -0.002910637,
      -0.0023344732,
      -0.00026111372,
      -0.00019714465,
      -0.004625188
     ],
     "top_logprobs": [
      {
       " #": -0.013738007
      },
      {
       " 0": -0.0097131245
      },
      {
       ":": -0.0021805272
      },
      {
       " find": -0.42320174
      },
      {
       " shoes": -0.31547123
      },
      {
       "\n": -0.041961074
      },
      {
       " find": -0.030524757
      },
      {
       "('": -0.002240859
      },
      {
       "sh": -0.0005738103
      },
      {
       "oes": -0.005233408
      },
      {
       "')": -0.0031718444
      },
      {
       "\n": -0.007380456
      },
      {
       " #": -0.008012381
      },
      {
       " 1": -0.0023276634
      },
      {
       ":": -0.0007421263
      },
      {
       " grab": -0.18957815
      },
      {
       " shoes": -0.10642649
      },
      {
       "\n": -0.022524204
      },
      {
       " assert": -0.53509957
      },
      {
       "('": -0.0016281288
      },
      {
       "close": -0.005358405
      },
      {
       "'": -0.0023496503
      },
      {
       " to": -0.00056868145
      },
      {
       " '": -0.005485155
      },
      {
       "sh": -0.00046181606
      },
      {
       "oes": -0.0020250445
      },
      {
       "')": -0.0048374888
      },
      {
       "\n": -0.006873075
      },
      {
       " else": -0.0013680401
      },
      {
       ":": -0.0014708842
      },
      {
       " find": -0.0031701108
      },
      {
       "('": -0.0012118552
      },
      {
       "sh": -0.00021717734
      },
      {
       "oes": -0.0031934897
      },
      {
       "')": -0.0017548259
      },
      {
       "\n": -0.007164735
      },
      {
       " grab": -0.0048688166
      },
      {
       "('": -0.00093069556
      },
      {
       "sh": -0.000111420464
      },
      {
       "oes": -0.0004999197
      },
      {
       "')": -0.0023319644
      },
      {
       "\n": -0.006349277
      },
      {
       " assert": -0.6690063
      },
      {
       "('": -0.0013266193
      },
      {
       "sh": -0.005295305
      },
      {
       "oes": -0.003493589
      },
      {
       "'": -0.0013676825
      },
      {
       " in": -0.0136341965
      },
      {
       " '": -0.0036086175
      },
      {
       "hands": -0.0069999555
      },
      {
       "')": -0.014683866
      },
      {
       "\n": -0.0036113104
      },
      {
       " else": -0.010106039
      },
      {
       ":": -0.0020188936
      },
      {
       " grab": -0.0026450744
      },
      {
       "('": -0.001287288
      },
      {
       "sh": -0.00016900577
      },
      {
       "oes": -0.0009827194
      },
      {
       "')": -0.0024597032
      },
      {
       "\n": -0.0045593805
      },
      {
       " tur": -0.7067833
      },
      {
       " 2": -0.007583011
      },
      {
       ":": -0.0010536597
      },
      {
       " put": -0.1889077
      },
      {
       " on": -0.36760786
      },
      {
       " shoes": -0.09464583
      },
      {
       "\n": -0.018127525
      },
      {
       " put": -0.8190936
      },
      {
       "nt": -6.623567e-05
      },
      {
       "o": -0.000162209
      },
      {
       "('": -0.0006506285
      },
      {
       "sh": -0.0019318205
      },
      {
       "oes": -0.0017697524
      },
      {
       "')": -0.0015680111
      },
      {
       "\n": -0.0042775776
      },
      {
       " look": -0.904827
      },
      {
       "('": -0.0010321224
      },
      {
       "sh": -0.03673123
      },
      {
       "oes": -0.0008042809
      },
      {
       "'": -0.0012349479
      },
      {
       " in": -0.0023653633
      },
      {
       " '": -0.0017573313
      },
      {
       "hands": -0.007926528
      },
      {
       "')": -0.002257886
      },
      {
       "\n": -0.0024663396
      },
      {
       " else": -0.0011825524
      },
      {
       ":": -0.0011845818
      },
      {
       " grab": -0.002206449
      },
      {
       "('": -0.00076342054
      },
      {
       "sh": -0.00013848272
      },
      {
       "oes": -7.6605895e-05
      },
      {
       "')": -0.00083100714
      },
      {
       "\n": -0.0050995005
      },
      {
       " put": -0.12815616
      },
      {
       "on": -0.0049558487
      },
      {
       "('": -0.00078883354
      },
      {
       "sh": -0.00019869342
      },
      {
       "oes": -0.00028269706
      },
      {
       "')": -0.002349291
      },
      {
       "\n": -0.03315246
      },
      {
       " #": -0.3469598
      },
      {
       " 3": -0.012542523
      },
      {
       ":": -0.0016376213
      },
      {
       " Done": -0.4559644
      },
      {
       "\n": -0.12797356
      },
      {
       " assert": -0.63584936
      },
      {
       "('": -0.0026014468
      },
      {
       "sh": -0.024449825
      },
      {
       "oes": -0.0016563081
      },
      {
       "'": -0.006329961
      },
      {
       " on": -0.7404063
      },
      {
       " '": -0.031724695
      },
      {
       "feet": -0.037242923
      },
      {
       "')": -0.0063017705
      },
      {
       "<|endoftext|>": -0.6878769
      },
      {
       " else": -0.0141831655
      },
      {
       ":": -0.0034157769
      },
      {
       " put": -0.035197165
      },
      {
       "on": -0.002910637
      },
      {
       "('": -0.0023344732
      },
      {
       "sh": -0.00026111372
      },
      {
       "oes": -0.00019714465
      },
      {
       "')": -0.004625188
      }
     ],
     "text_offset": [
      3168,
      3170,
      3172,
      3173,
      3178,
      3184,
      3185,
      3190,
      3192,
      3194,
      3197,
      3199,
      3200,
      3202,
      3204,
      3205,
      3210,
      3216,
      3217,
      3224,
      3226,
      3231,
      3232,
      3235,
      3237,
      3239,
      3242,
      3244,
      3245,
      3250,
      3251,
      3256,
      3258,
      3260,
      3263,
      3265,
      3266,
      3271,
      3273,
      3275,
      3278,
      3280,
      3281,
      3288,
      3290,
      3292,
      3295,
      3296,
      3299,
      3301,
      3306,
      3308,
      3309,
      3314,
      3315,
      3320,
      3322,
      3324,
      3327,
      3329,
      3330,
      3332,
      3334,
      3335,
      3339,
      3342,
      3348,
      3349,
      3353,
      3355,
      3356,
      3358,
      3360,
      3363,
      3365,
      3366,
      3373,
      3375,
      3377,
      3380,
      3381,
      3384,
      3386,
      3391,
      3393,
      3394,
      3399,
      3400,
      3405,
      3407,
      3409,
      3412,
      3414,
      3415,
      3419,
      3421,
      3423,
      3425,
      3428,
      3430,
      3431,
      3433,
      3435,
      3436,
      3441,
      3442,
      3449,
      3451,
      3453,
      3456,
      3457,
      3460,
      3462,
      3466,
      3468,
      3469,
      3474,
      3475,
      3479,
      3481,
      3483,
      3485,
      3488
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Put on your shoes",
   "task_description": "Sit on a chair with your shoes in front of you.  Put them on one at a time.",
   "program": [
    "[Walk] <home_office> (1)",
    "[Walk] <shoes> (1)",
    "[Find] <shoes> (1)",
    "[Grab] <shoes> (1)",
    "[Find] <chair> (1)",
    "[Sit] <chair> (1)",
    "[Find] <feet_both> (1)",
    "[PutBack] <shoes> (1) <feet_both> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_july",
   "file_id": "split8_1",
   "goal_condition": [
    [
     [
      198,
      1,
      "INSIDE",
      "character",
      "home_office"
     ],
     [
      198,
      17,
      "ON",
      "character",
      "chair"
     ],
     [
      1000,
      1001,
      "ON",
      "shoes",
      "feet_both"
     ]
    ],
    [
     [
      198,
      "character",
      "SITTING"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1112,
   "completion_tokens": 123,
   "total_tokens": 1235
  }
 },
 "14": {
  "plan": [
   [
    " # 0: walk to the bathroom\n walk('bathroom')\n # 1: turn on the faucet\n assert('close' to 'faucet')\n else: find('faucet')\n plugin('faucet')\n # 2: find the soap\n find('soap')\n # 3: grab the soap\n grab('soap')\n # 4: Wash your hands with the soap\n assert('soap' in 'hands')\n else: grab('soap')\n wash('soap')\n # 5: Turn off the faucet\n plugin('faucet')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " the",
      " bathroom",
      "\n",
      " walk",
      "('",
      "bath",
      "room",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " turn",
      " on",
      " the",
      " f",
      "auc",
      "et",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " plugin",
      "('",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " find",
      " the",
      " soap",
      "\n",
      " find",
      "('",
      "so",
      "ap",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " grab",
      " the",
      " soap",
      "\n",
      " grab",
      "('",
      "so",
      "ap",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " Wash",
      " your",
      " hands",
      " with",
      " the",
      " soap",
      "\n",
      " assert",
      "('",
      "so",
      "ap",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "so",
      "ap",
      "')",
      "\n",
      " wash",
      "('",
      "so",
      "ap",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " Turn",
      " off",
      " the",
      " f",
      "auc",
      "et",
      "\n",
      " plugin",
      "('",
      "f",
      "auc",
      "et",
      "')"
     ],
     "token_logprobs": [
      -0.020667557,
      -0.012326952,
      -0.0024338942,
      -1.1178604,
      -0.1765157,
      -1.4653312,
      -0.861357,
      -0.024460208,
      -0.0064861705,
      -0.00494093,
      -0.0028460766,
      -0.00013657632,
      -0.0016510535,
      -0.009093336,
      -0.0031399145,
      -0.0042605177,
      -0.0013261425,
      -2.4961894,
      -0.085596114,
      -0.34906876,
      -0.5131475,
      -0.0014080313,
      -0.002468608,
      -0.03583934,
      -1.4507422,
      -0.0023460046,
      -0.01384497,
      -0.0057088467,
      -0.00058806554,
      -0.0033760024,
      -0.005988535,
      -0.00054840755,
      -0.0004999197,
      -0.0083302185,
      -0.010444599,
      -0.0017110558,
      -0.00179292,
      -0.033769645,
      -0.0018879866,
      -0.0005186486,
      -0.0022717444,
      -0.0002519309,
      -0.0045499783,
      -0.00923193,
      -2.2906506,
      -0.0013826642,
      -0.001441099,
      -0.00086292316,
      -0.000441422,
      -0.002699639,
      -0.0091737,
      -0.116426036,
      -0.0068742163,
      -0.0007579923,
      -2.1549017,
      -1.7353932,
      -0.052388556,
      -0.057097048,
      -0.0720405,
      -0.0012424093,
      -0.00092544575,
      -0.00010092916,
      -0.0015253869,
      -0.0046732733,
      -0.05063771,
      -0.005487971,
      -0.0007322254,
      -0.20655714,
      -0.12350311,
      -0.00082790584,
      -0.04964325,
      -0.6713421,
      -0.0012353656,
      -0.000108559456,
      -5.264588e-05,
      -0.0012339933,
      -0.0045808167,
      -0.48876083,
      -0.007141262,
      -0.0007068762,
      -4.267247,
      -1.1206847,
      -0.020113312,
      -1.674587,
      -1.2461478,
      -0.0016511736,
      -0.026890239,
      -0.56905943,
      -0.0018768194,
      -0.24956323,
      -8.7696986e-05,
      -0.0023490514,
      -0.018660448,
      -0.00467459,
      -0.014694872,
      -0.02229471,
      -0.0061617224,
      -0.0023829893,
      -0.003553345,
      -0.006939455,
      -0.002200773,
      -0.00027291913,
      -5.6223078e-05,
      -0.0030158523,
      -0.006452573,
      -0.08124787,
      -0.0032873745,
      -0.21972436,
      -0.00056844496,
      -0.0029224143,
      -0.010148186,
      -0.53797984,
      -0.008917235,
      -0.0020714551,
      -1.8431269,
      -0.03243462,
      -0.043198876,
      -0.023952642,
      -0.0008390627,
      -0.0015136267,
      -0.03168384,
      -2.2796142,
      -0.04513723,
      -0.0059914747,
      -0.00073616026,
      -0.00042198348,
      -0.01357752
     ],
     "top_logprobs": [
      {
       " #": -0.020667557
      },
      {
       " 0": -0.012326952
      },
      {
       ":": -0.0024338942
      },
      {
       " find": -0.7540812
      },
      {
       " to": -0.1765157
      },
      {
       " bathroom": -0.7556916
      },
      {
       " bathroom": -0.861357
      },
      {
       "\n": -0.024460208
      },
      {
       " walk": -0.0064861705
      },
      {
       "('": -0.00494093
      },
      {
       "bath": -0.0028460766
      },
      {
       "room": -0.00013657632
      },
      {
       "')": -0.0016510535
      },
      {
       "\n": -0.009093336
      },
      {
       " #": -0.0031399145
      },
      {
       " 1": -0.0042605177
      },
      {
       ":": -0.0013261425
      },
      {
       " find": -0.17624223
      },
      {
       " on": -0.085596114
      },
      {
       " the": -0.34906876
      },
      {
       " f": -0.5131475
      },
      {
       "auc": -0.0014080313
      },
      {
       "et": -0.002468608
      },
      {
       "\n": -0.03583934
      },
      {
       " find": -0.7865273
      },
      {
       "('": -0.0023460046
      },
      {
       "close": -0.01384497
      },
      {
       "'": -0.0057088467
      },
      {
       " to": -0.00058806554
      },
      {
       " '": -0.0033760024
      },
      {
       "f": -0.005988535
      },
      {
       "auc": -0.00054840755
      },
      {
       "et": -0.0004999197
      },
      {
       "')": -0.0083302185
      },
      {
       "\n": -0.010444599
      },
      {
       " else": -0.0017110558
      },
      {
       ":": -0.00179292
      },
      {
       " find": -0.033769645
      },
      {
       "('": -0.0018879866
      },
      {
       "f": -0.0005186486
      },
      {
       "auc": -0.0022717444
      },
      {
       "et": -0.0002519309
      },
      {
       "')": -0.0045499783
      },
      {
       "\n": -0.00923193
      },
      {
       " switch": -0.6944593
      },
      {
       "('": -0.0013826642
      },
      {
       "f": -0.001441099
      },
      {
       "auc": -0.00086292316
      },
      {
       "et": -0.000441422
      },
      {
       "')": -0.002699639
      },
      {
       "\n": -0.0091737
      },
      {
       " #": -0.116426036
      },
      {
       " 2": -0.0068742163
      },
      {
       ":": -0.0007579923
      },
      {
       " grab": -1.432462
      },
      {
       " soap": -0.35231632
      },
      {
       " soap": -0.052388556
      },
      {
       "\n": -0.057097048
      },
      {
       " find": -0.0720405
      },
      {
       "('": -0.0012424093
      },
      {
       "so": -0.00092544575
      },
      {
       "ap": -0.00010092916
      },
      {
       "')": -0.0015253869
      },
      {
       "\n": -0.0046732733
      },
      {
       " #": -0.05063771
      },
      {
       " 3": -0.005487971
      },
      {
       ":": -0.0007322254
      },
      {
       " grab": -0.20655714
      },
      {
       " the": -0.12350311
      },
      {
       " soap": -0.00082790584
      },
      {
       "\n": -0.04964325
      },
      {
       " grab": -0.6713421
      },
      {
       "('": -0.0012353656
      },
      {
       "so": -0.000108559456
      },
      {
       "ap": -5.264588e-05
      },
      {
       "')": -0.0012339933
      },
      {
       "\n": -0.0045808167
      },
      {
       " #": -0.48876083
      },
      {
       " 4": -0.007141262
      },
      {
       ":": -0.0007068762
      },
      {
       " wash": -0.82267684
      },
      {
       " hands": -0.73914146
      },
      {
       " hands": -0.020113312
      },
      {
       "\n": -0.23509684
      },
      {
       " soap": -0.34825006
      },
      {
       " soap": -0.0016511736
      },
      {
       "\n": -0.026890239
      },
      {
       " assert": -0.56905943
      },
      {
       "('": -0.0018768194
      },
      {
       "so": -0.24956323
      },
      {
       "ap": -8.7696986e-05
      },
      {
       "'": -0.0023490514
      },
      {
       " in": -0.018660448
      },
      {
       " '": -0.00467459
      },
      {
       "hands": -0.014694872
      },
      {
       "')": -0.02229471
      },
      {
       "\n": -0.0061617224
      },
      {
       " else": -0.0023829893
      },
      {
       ":": -0.003553345
      },
      {
       " grab": -0.006939455
      },
      {
       "('": -0.002200773
      },
      {
       "so": -0.00027291913
      },
      {
       "ap": -5.6223078e-05
      },
      {
       "')": -0.0030158523
      },
      {
       "\n": -0.006452573
      },
      {
       " wash": -0.08124787
      },
      {
       "('": -0.0032873745
      },
      {
       "so": -0.21972436
      },
      {
       "ap": -0.00056844496
      },
      {
       "')": -0.0029224143
      },
      {
       "\n": -0.010148186
      },
      {
       " #": -0.53797984
      },
      {
       " 5": -0.008917235
      },
      {
       ":": -0.0020714551
      },
      {
       " turn": -0.9448599
      },
      {
       " off": -0.03243462
      },
      {
       " the": -0.043198876
      },
      {
       " f": -0.023952642
      },
      {
       "auc": -0.0008390627
      },
      {
       "et": -0.0015136267
      },
      {
       "\n": -0.03168384
      },
      {
       " tur": -1.1042823
      },
      {
       "('": -0.04513723
      },
      {
       "f": -0.0059914747
      },
      {
       "auc": -0.00073616026
      },
      {
       "et": -0.00042198348
      },
      {
       "')": -0.01357752
      }
     ],
     "text_offset": [
      3163,
      3165,
      3167,
      3168,
      3173,
      3176,
      3180,
      3189,
      3190,
      3195,
      3197,
      3201,
      3205,
      3207,
      3208,
      3210,
      3212,
      3213,
      3218,
      3221,
      3225,
      3227,
      3230,
      3232,
      3233,
      3240,
      3242,
      3247,
      3248,
      3251,
      3253,
      3254,
      3257,
      3259,
      3261,
      3262,
      3267,
      3268,
      3273,
      3275,
      3276,
      3279,
      3281,
      3283,
      3284,
      3291,
      3293,
      3294,
      3297,
      3299,
      3301,
      3302,
      3304,
      3306,
      3307,
      3312,
      3316,
      3321,
      3322,
      3327,
      3329,
      3331,
      3333,
      3335,
      3336,
      3338,
      3340,
      3341,
      3346,
      3350,
      3355,
      3356,
      3361,
      3363,
      3365,
      3367,
      3369,
      3370,
      3372,
      3374,
      3375,
      3380,
      3385,
      3391,
      3396,
      3400,
      3405,
      3406,
      3413,
      3415,
      3417,
      3419,
      3420,
      3423,
      3425,
      3430,
      3432,
      3433,
      3438,
      3439,
      3444,
      3446,
      3448,
      3450,
      3452,
      3453,
      3458,
      3460,
      3462,
      3464,
      3466,
      3467,
      3469,
      3471,
      3472,
      3477,
      3481,
      3485,
      3487,
      3490,
      3492,
      3493,
      3500,
      3502,
      3503,
      3506,
      3508
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Hand washing",
   "task_description": "Turn on the faucet. Soap up your hands. Then rinse under the running water of the faucet. Turn off faucet and dry hands.",
   "program": [
    "[Walk] <bathroom> (1)",
    "[Walk] <sink> (1)",
    "[Find] <faucet> (1)",
    "[SwitchOn] <faucet> (1)",
    "[Find] <soap> (1)",
    "[Grab] <soap> (1)",
    "[Find] <hands_both> (1)",
    "[Scrub] <hands_both> (1)",
    "[PutObjBack] <soap> (1)",
    "[Wash] <hands_both> (1)",
    "[SwitchOff] <faucet> (1)",
    "[Find] <towel> (1)",
    "[Grab] <towel> (1)",
    "[Wipe] <hands_both> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_july",
   "file_id": "split4_7",
   "goal_condition": [
    [
     [
      198,
      262,
      "INSIDE",
      "character",
      "bathroom"
     ],
     [
      198,
      1002,
      "HOLDS_RH",
      "character",
      "towel"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1107,
   "completion_tokens": 127,
   "total_tokens": 1234
  }
 },
 "15": {
  "plan": [
   [
    " # 0: find glass\n find('glass')\n # 1: grab glass\n grab('glass')\n # 2: pour water into glass\n pour('water','glass')\n # 3: drink glass\n turnto('glass')\n drink('glass')\n # 4: put glass back\n putback('glass')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " glass",
      "\n",
      " find",
      "('",
      "glass",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " grab",
      " glass",
      "\n",
      " grab",
      "('",
      "glass",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " pour",
      " water",
      " into",
      " glass",
      "\n",
      " pour",
      "('",
      "water",
      "','",
      "glass",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " drink",
      " glass",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "glass",
      "')",
      "\n",
      " drink",
      "('",
      "glass",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " put",
      " glass",
      " back",
      "\n",
      " put",
      "back",
      "('",
      "glass",
      "')"
     ],
     "token_logprobs": [
      -0.079577245,
      -0.038628332,
      -0.0045841713,
      -0.18100585,
      -3.3793252,
      -0.07239511,
      -0.018264947,
      -0.004835932,
      -0.01418238,
      -0.0025104354,
      -0.012493756,
      -0.007129795,
      -0.004499925,
      -0.0012456307,
      -0.12283151,
      -0.15374002,
      -0.01944736,
      -0.74784696,
      -0.0016785786,
      -0.00067979423,
      -0.0009982907,
      -0.005723415,
      -0.6838335,
      -0.008382448,
      -0.0013399285,
      -1.0924785,
      -1.1910671,
      -0.89879864,
      -0.26471978,
      -0.012907872,
      -0.5548256,
      -0.0064246194,
      -0.07807888,
      -1.6376692,
      -0.014070724,
      -0.003299036,
      -0.011391691,
      -0.020255448,
      -0.010182871,
      -0.0011873855,
      -0.14985137,
      -2.6608033,
      -0.080009386,
      -1.7916527,
      -9.151261e-05,
      -0.00035609488,
      -0.001169662,
      -0.0034337172,
      -0.0015148205,
      -0.007167674,
      -1.1767366,
      -0.004731783,
      -0.030914616,
      -0.0018045631,
      -0.09542275,
      -0.014041769,
      -0.013492453,
      -0.0017642585,
      -0.22448656,
      -0.25118035,
      -0.09375531,
      -0.03159224,
      -0.19720384,
      -0.4081497,
      -0.0028590488,
      -0.0011481208,
      -0.023759989
     ],
     "top_logprobs": [
      {
       " #": -0.079577245
      },
      {
       " 0": -0.038628332
      },
      {
       ":": -0.0045841713
      },
      {
       " find": -0.18100585
      },
      {
       " cup": -0.81958526
      },
      {
       "\n": -0.07239511
      },
      {
       " find": -0.018264947
      },
      {
       "('": -0.004835932
      },
      {
       "glass": -0.01418238
      },
      {
       "')": -0.0025104354
      },
      {
       "\n": -0.012493756
      },
      {
       " #": -0.007129795
      },
      {
       " 1": -0.004499925
      },
      {
       ":": -0.0012456307
      },
      {
       " grab": -0.12283151
      },
      {
       " glass": -0.15374002
      },
      {
       "\n": -0.01944736
      },
      {
       " assert": -0.6613124
      },
      {
       "('": -0.0016785786
      },
      {
       "glass": -0.00067979423
      },
      {
       "')": -0.0009982907
      },
      {
       "\n": -0.005723415
      },
      {
       " #": -0.6838335
      },
      {
       " 2": -0.008382448
      },
      {
       ":": -0.0013399285
      },
      {
       " fill": -0.7856949
      },
      {
       " liquid": -0.80111456
      },
      {
       " into": -0.89879864
      },
      {
       " glass": -0.26471978
      },
      {
       "\n": -0.012907872
      },
      {
       " pour": -0.5548256
      },
      {
       "('": -0.0064246194
      },
      {
       "water": -0.07807888
      },
      {
       "',": -0.71748525
      },
      {
       "glass": -0.014070724
      },
      {
       "')": -0.003299036
      },
      {
       "\n": -0.011391691
      },
      {
       " #": -0.020255448
      },
      {
       " 3": -0.010182871
      },
      {
       ":": -0.0011873855
      },
      {
       " drink": -0.14985137
      },
      {
       "\n": -1.1728407
      },
      {
       "\n": -0.080009386
      },
      {
       " drink": -0.54842186
      },
      {
       "nt": -9.151261e-05
      },
      {
       "o": -0.00035609488
      },
      {
       "('": -0.001169662
      },
      {
       "glass": -0.0034337172
      },
      {
       "')": -0.0015148205
      },
      {
       "\n": -0.007167674
      },
      {
       " look": -0.8701894
      },
      {
       "('": -0.004731783
      },
      {
       "glass": -0.030914616
      },
      {
       "')": -0.0018045631
      },
      {
       "\n": -0.09542275
      },
      {
       " #": -0.014041769
      },
      {
       " 4": -0.013492453
      },
      {
       ":": -0.0017642585
      },
      {
       " put": -0.22448656
      },
      {
       " glass": -0.25118035
      },
      {
       " back": -0.09375531
      },
      {
       "\n": -0.03159224
      },
      {
       " put": -0.19720384
      },
      {
       "back": -0.4081497
      },
      {
       "('": -0.0028590488
      },
      {
       "glass": -0.0011481208
      },
      {
       "')": -0.023759989
      }
     ],
     "text_offset": [
      3156,
      3158,
      3160,
      3161,
      3166,
      3172,
      3173,
      3178,
      3180,
      3185,
      3187,
      3188,
      3190,
      3192,
      3193,
      3198,
      3204,
      3205,
      3210,
      3212,
      3217,
      3219,
      3220,
      3222,
      3224,
      3225,
      3230,
      3236,
      3241,
      3247,
      3248,
      3253,
      3255,
      3260,
      3263,
      3268,
      3270,
      3271,
      3273,
      3275,
      3276,
      3282,
      3288,
      3289,
      3293,
      3295,
      3296,
      3298,
      3303,
      3305,
      3306,
      3312,
      3314,
      3319,
      3321,
      3322,
      3324,
      3326,
      3327,
      3331,
      3337,
      3342,
      3343,
      3347,
      3351,
      3353,
      3358
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Drink",
   "task_description": "I bring the cup filled with water to my lips. I tilt the cup upwards slowly, so that the water falls into my mouth.",
   "program": [
    "[Find] <water_glass> (1)",
    "[Grab] <water_glass> (1)",
    "[Drink] <water_glass> (1)"
   ],
   "batch": "results_intentions_march-13-18",
   "file_id": "file146_1",
   "goal_condition": [
    [
     [
      198,
      1000,
      "HOLDS_RH",
      "character",
      "water_glass"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1105,
   "completion_tokens": 67,
   "total_tokens": 1172
  }
 },
 "16": {
  "plan": [
   [
    " # 0: walk to the bathroom\n walk('bathroom')\n # 1: find the toilet\n find('toilet')\n # 2: open the toilet\n assert('close' to 'toilet')\n else: find('toilet')\n open('toilet')\n # 3: sit on the toilet\n turnto('toilet')\n lookat('toilet')\n assert('close' to 'toilet')\n else: find('toilet')\n sit('toilet')\n # 4: wipe the toilet\n wipe('toilet')\n # 5: done\n sleep()",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " the",
      " bathroom",
      "\n",
      " walk",
      "('",
      "bath",
      "room",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " the",
      " toilet",
      "\n",
      " find",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " open",
      " the",
      " toilet",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "to",
      "ilet",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " open",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " sit",
      " on",
      " the",
      " toilet",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " look",
      "at",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "to",
      "ilet",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " sit",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " wipe",
      " the",
      " toilet",
      "\n",
      " wipe",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " done",
      "\n",
      " sleep",
      "()"
     ],
     "token_logprobs": [
      -0.01476159,
      -0.009005222,
      -0.0027465564,
      -0.12503101,
      -0.2729304,
      -1.7764255,
      -0.6781661,
      -0.023505317,
      -0.005012456,
      -0.0040083593,
      -0.0029723279,
      -0.00017723397,
      -0.0014921954,
      -0.008138447,
      -0.0020596883,
      -0.0033073458,
      -0.00062671263,
      -0.14604576,
      -1.2034268,
      -0.014440318,
      -0.032954577,
      -0.13650379,
      -0.00096983457,
      -0.0006305301,
      -0.00022039504,
      -0.0023473196,
      -0.0054134163,
      -0.016105037,
      -0.004336961,
      -0.0006554006,
      -1.5504009,
      -0.111651346,
      -0.28278568,
      -0.9248452,
      -1.0665071,
      -0.001854903,
      -0.0041593555,
      -0.003469367,
      -0.00076879055,
      -0.0019059607,
      -0.0014476668,
      -0.00030368532,
      -0.005125502,
      -0.0063300817,
      -0.0022620058,
      -0.0018599201,
      -0.005673721,
      -0.0015130286,
      -0.00063858187,
      -0.00033999607,
      -0.001856814,
      -0.008006558,
      -0.040569488,
      -0.0009779445,
      -0.0008262341,
      -2.6060465e-05,
      -0.0018132824,
      -0.015468373,
      -0.011478511,
      -0.008408113,
      -0.00096130127,
      -0.29104316,
      -0.07631401,
      -0.080886744,
      -0.002130469,
      -0.02350684,
      -1.8922913,
      -5.7770918e-05,
      -0.00020155631,
      -0.00045883397,
      -0.00044333027,
      -0.0003278922,
      -0.0011997992,
      -0.0040228427,
      -0.3627608,
      -0.00050719705,
      -0.00043271598,
      -0.0002048951,
      -4.7399757e-05,
      -0.0009042069,
      -0.0029064526,
      -0.36887053,
      -0.00065230025,
      -0.0018151933,
      -0.0019016608,
      -0.00028854018,
      -0.0005401756,
      -0.0019850917,
      -0.0009905946,
      -0.0024926302,
      -0.002348156,
      -0.0008987768,
      -0.000789669,
      -0.00431074,
      -0.0008759873,
      -0.00034536046,
      -4.5613506e-05,
      -0.0008470562,
      -0.0036131043,
      -0.05555053,
      -0.00087133347,
      -0.00035311276,
      -0.000107007865,
      -0.001315517,
      -0.122458614,
      -0.017131593,
      -0.008951211,
      -0.0018299423,
      -3.1962128,
      -0.49098033,
      -0.07374761,
      -0.1407605,
      -0.34251738,
      -0.0011444216,
      -0.00041578274,
      -6.158372e-05,
      -0.0015609657,
      -0.046928898,
      -0.035671316,
      -0.0049749557,
      -0.0011861325,
      -3.5783782,
      -0.31358472,
      -4.969662,
      -0.03676938
     ],
     "top_logprobs": [
      {
       " #": -0.01476159
      },
      {
       " 0": -0.009005222
      },
      {
       ":": -0.0027465564
      },
      {
       " walk": -0.12503101
      },
      {
       " to": -0.2729304
      },
      {
       " bathroom": -0.57609004
      },
      {
       " bathroom": -0.6781661
      },
      {
       "\n": -0.023505317
      },
      {
       " walk": -0.005012456
      },
      {
       "('": -0.0040083593
      },
      {
       "bath": -0.0029723279
      },
      {
       "room": -0.00017723397
      },
      {
       "')": -0.0014921954
      },
      {
       "\n": -0.008138447
      },
      {
       " #": -0.0020596883
      },
      {
       " 1": -0.0033073458
      },
      {
       ":": -0.00062671263
      },
      {
       " find": -0.14604576
      },
      {
       " toilet": -0.38090658
      },
      {
       " toilet": -0.014440318
      },
      {
       "\n": -0.032954577
      },
      {
       " find": -0.13650379
      },
      {
       "('": -0.00096983457
      },
      {
       "to": -0.0006305301
      },
      {
       "ilet": -0.00022039504
      },
      {
       "')": -0.0023473196
      },
      {
       "\n": -0.0054134163
      },
      {
       " #": -0.016105037
      },
      {
       " 2": -0.004336961
      },
      {
       ":": -0.0006554006
      },
      {
       " sit": -0.58758366
      },
      {
       " the": -0.111651346
      },
      {
       " toilet": -0.28278568
      },
      {
       "\n": -0.9248452
      },
      {
       " open": -0.6019666
      },
      {
       "('": -0.001854903
      },
      {
       "close": -0.0041593555
      },
      {
       "'": -0.003469367
      },
      {
       " to": -0.00076879055
      },
      {
       " '": -0.0019059607
      },
      {
       "to": -0.0014476668
      },
      {
       "ilet": -0.00030368532
      },
      {
       "')": -0.005125502
      },
      {
       "\n": -0.0063300817
      },
      {
       " else": -0.0022620058
      },
      {
       ":": -0.0018599201
      },
      {
       " find": -0.005673721
      },
      {
       "('": -0.0015130286
      },
      {
       "to": -0.00063858187
      },
      {
       "ilet": -0.00033999607
      },
      {
       "')": -0.001856814
      },
      {
       "\n": -0.008006558
      },
      {
       " open": -0.040569488
      },
      {
       "('": -0.0009779445
      },
      {
       "to": -0.0008262341
      },
      {
       "ilet": -2.6060465e-05
      },
      {
       "')": -0.0018132824
      },
      {
       "\n": -0.015468373
      },
      {
       " #": -0.011478511
      },
      {
       " 3": -0.008408113
      },
      {
       ":": -0.00096130127
      },
      {
       " sit": -0.29104316
      },
      {
       " on": -0.07631401
      },
      {
       " the": -0.080886744
      },
      {
       " toilet": -0.002130469
      },
      {
       "\n": -0.02350684
      },
      {
       " sit": -0.39271685
      },
      {
       "nt": -5.7770918e-05
      },
      {
       "o": -0.00020155631
      },
      {
       "('": -0.00045883397
      },
      {
       "to": -0.00044333027
      },
      {
       "ilet": -0.0003278922
      },
      {
       "')": -0.0011997992
      },
      {
       "\n": -0.0040228427
      },
      {
       " look": -0.3627608
      },
      {
       "at": -0.00050719705
      },
      {
       "('": -0.00043271598
      },
      {
       "to": -0.0002048951
      },
      {
       "ilet": -4.7399757e-05
      },
      {
       "')": -0.0009042069
      },
      {
       "\n": -0.0029064526
      },
      {
       " assert": -0.36887053
      },
      {
       "('": -0.00065230025
      },
      {
       "close": -0.0018151933
      },
      {
       "'": -0.0019016608
      },
      {
       " to": -0.00028854018
      },
      {
       " '": -0.0005401756
      },
      {
       "to": -0.0019850917
      },
      {
       "ilet": -0.0009905946
      },
      {
       "')": -0.0024926302
      },
      {
       "\n": -0.002348156
      },
      {
       " else": -0.0008987768
      },
      {
       ":": -0.000789669
      },
      {
       " find": -0.00431074
      },
      {
       "('": -0.0008759873
      },
      {
       "to": -0.00034536046
      },
      {
       "ilet": -4.5613506e-05
      },
      {
       "')": -0.0008470562
      },
      {
       "\n": -0.0036131043
      },
      {
       " sit": -0.05555053
      },
      {
       "('": -0.00087133347
      },
      {
       "to": -0.00035311276
      },
      {
       "ilet": -0.000107007865
      },
      {
       "')": -0.001315517
      },
      {
       "\n": -0.122458614
      },
      {
       " #": -0.017131593
      },
      {
       " 4": -0.008951211
      },
      {
       ":": -0.0018299423
      },
      {
       " flush": -1.3840083
      },
      {
       " the": -0.49098033
      },
      {
       " toilet": -0.07374761
      },
      {
       "\n": -0.1407605
      },
      {
       " wipe": -0.34251738
      },
      {
       "('": -0.0011444216
      },
      {
       "to": -0.00041578274
      },
      {
       "ilet": -6.158372e-05
      },
      {
       "')": -0.0015609657
      },
      {
       "\n": -0.046928898
      },
      {
       " #": -0.035671316
      },
      {
       " 5": -0.0049749557
      },
      {
       ":": -0.0011861325
      },
      {
       " flush": -0.9167724
      },
      {
       "\n": -0.31358472
      },
      {
       " stand": -1.5912197
      },
      {
       "()": -0.03676938
      }
     ],
     "text_offset": [
      3163,
      3165,
      3167,
      3168,
      3173,
      3176,
      3180,
      3189,
      3190,
      3195,
      3197,
      3201,
      3205,
      3207,
      3208,
      3210,
      3212,
      3213,
      3218,
      3222,
      3229,
      3230,
      3235,
      3237,
      3239,
      3243,
      3245,
      3246,
      3248,
      3250,
      3251,
      3256,
      3260,
      3267,
      3268,
      3275,
      3277,
      3282,
      3283,
      3286,
      3288,
      3290,
      3294,
      3296,
      3297,
      3302,
      3303,
      3308,
      3310,
      3312,
      3316,
      3318,
      3319,
      3324,
      3326,
      3328,
      3332,
      3334,
      3335,
      3337,
      3339,
      3340,
      3344,
      3347,
      3351,
      3358,
      3359,
      3363,
      3365,
      3366,
      3368,
      3370,
      3374,
      3376,
      3377,
      3382,
      3384,
      3386,
      3388,
      3392,
      3394,
      3395,
      3402,
      3404,
      3409,
      3410,
      3413,
      3415,
      3417,
      3421,
      3423,
      3424,
      3429,
      3430,
      3435,
      3437,
      3439,
      3443,
      3445,
      3446,
      3450,
      3452,
      3454,
      3458,
      3460,
      3461,
      3463,
      3465,
      3466,
      3471,
      3475,
      3482,
      3483,
      3488,
      3490,
      3492,
      3496,
      3498,
      3499,
      3501,
      3503,
      3504,
      3509,
      3510,
      3516
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Go to toilet",
   "task_description": "I walk into the bathroom. I walk over to the toilet. I sit on the toilet.",
   "program": [
    "[Walk] <bathroom> (1)",
    "[Walk] <toilet> (1)",
    "[Sit] <toilet> (1)"
   ],
   "batch": "results_intentions_march-13-18",
   "file_id": "file547_1",
   "goal_condition": [
    [
     [
      198,
      283,
      "ON",
      "character",
      "toilet"
     ],
     [
      198,
      262,
      "INSIDE",
      "character",
      "bathroom"
     ]
    ],
    [
     [
      198,
      "character",
      "SITTING"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1110,
   "completion_tokens": 125,
   "total_tokens": 1235
  }
 },
 "17": {
  "plan": [
   [
    " # 0: find phone\n find('phone')\n # 1: grab phone\n grab('phone')\n # 2: check for messages\n touch('phone')\n # 3: put phone back\n putobjback('phone')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " phone",
      "\n",
      " find",
      "('",
      "phone",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " grab",
      " phone",
      "\n",
      " grab",
      "('",
      "phone",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " check",
      " for",
      " messages",
      "\n",
      " touch",
      "('",
      "phone",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " put",
      " phone",
      " back",
      "\n",
      " put",
      "obj",
      "back",
      "('",
      "phone",
      "')"
     ],
     "token_logprobs": [
      -0.016545797,
      -0.009825617,
      -0.0020761145,
      -0.7208709,
      -0.25379276,
      -0.044626158,
      -0.03995931,
      -0.0021099793,
      -0.0010347478,
      -0.00265625,
      -0.009467293,
      -0.003967248,
      -0.0027299414,
      -0.0011783754,
      -0.18263875,
      -0.12235825,
      -0.020612549,
      -0.8645286,
      -0.0011414367,
      -0.00016161484,
      -0.0009132752,
      -0.0090792,
      -0.60243136,
      -0.0060004652,
      -0.0010161897,
      -2.69412,
      -2.322801,
      -1.0186276,
      -0.05242574,
      -2.2489471,
      -0.0027026269,
      -0.0054005925,
      -0.0027346038,
      -0.12713261,
      -0.44013238,
      -0.007159631,
      -0.001508374,
      -0.5150006,
      -0.39922488,
      -0.09185143,
      -0.042091615,
      -0.2289139,
      -0.95189106,
      -0.0033004112,
      -0.0014535155,
      -0.00024954765,
      -0.002735319
     ],
     "top_logprobs": [
      {
       " #": -0.016545797
      },
      {
       " 0": -0.009825617
      },
      {
       ":": -0.0020761145
      },
      {
       " find": -0.7208709
      },
      {
       " phone": -0.25379276
      },
      {
       "\n": -0.044626158
      },
      {
       " find": -0.03995931
      },
      {
       "('": -0.0021099793
      },
      {
       "phone": -0.0010347478
      },
      {
       "')": -0.00265625
      },
      {
       "\n": -0.009467293
      },
      {
       " #": -0.003967248
      },
      {
       " 1": -0.0027299414
      },
      {
       ":": -0.0011783754
      },
      {
       " grab": -0.18263875
      },
      {
       " phone": -0.12235825
      },
      {
       "\n": -0.020612549
      },
      {
       " assert": -0.57457817
      },
      {
       "('": -0.0011414367
      },
      {
       "phone": -0.00016161484
      },
      {
       "')": -0.0009132752
      },
      {
       "\n": -0.0090792
      },
      {
       " #": -0.60243136
      },
      {
       " 2": -0.0060004652
      },
      {
       ":": -0.0010161897
      },
      {
       " turn": -1.6844715
      },
      {
       " phone": -0.43922374
      },
      {
       " messages": -1.0186276
      },
      {
       "\n": -0.05242574
      },
      {
       " tur": -1.2287598
      },
      {
       "('": -0.0027026269
      },
      {
       "phone": -0.0054005925
      },
      {
       "')": -0.0027346038
      },
      {
       "\n": -0.12713261
      },
      {
       " #": -0.44013238
      },
      {
       " 3": -0.007159631
      },
      {
       ":": -0.001508374
      },
      {
       " put": -0.5150006
      },
      {
       " phone": -0.39922488
      },
      {
       " back": -0.09185143
      },
      {
       "\n": -0.042091615
      },
      {
       " put": -0.2289139
      },
      {
       "back": -0.5300037
      },
      {
       "back": -0.0033004112
      },
      {
       "('": -0.0014535155
      },
      {
       "phone": -0.00024954765
      },
      {
       "')": -0.002735319
      }
     ],
     "text_offset": [
      3164,
      3166,
      3168,
      3169,
      3174,
      3180,
      3181,
      3186,
      3188,
      3193,
      3195,
      3196,
      3198,
      3200,
      3201,
      3206,
      3212,
      3213,
      3218,
      3220,
      3225,
      3227,
      3228,
      3230,
      3232,
      3233,
      3239,
      3243,
      3252,
      3253,
      3259,
      3261,
      3266,
      3268,
      3269,
      3271,
      3273,
      3274,
      3278,
      3284,
      3289,
      3290,
      3294,
      3297,
      3301,
      3303,
      3308
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Pick up phone",
   "task_description": "I go to my home office. I walk towards my desk. I see the phone. I pick it up.",
   "program": [
    "[Walk] <home_office> (1)",
    "[Walk] <desk> (1)",
    "[Find] <phone> (1)",
    "[TurnTo] <phone> (1)",
    "[LookAt] <phone> (1)",
    "[Grab] <phone> (1)"
   ],
   "batch": "results_intentions_march-13-18",
   "file_id": "file870_1",
   "goal_condition": [
    [
     [
      198,
      1,
      "INSIDE",
      "character",
      "home_office"
     ],
     [
      198,
      1000,
      "HOLDS_RH",
      "character",
      "phone"
     ],
     [
      198,
      1000,
      "FACING",
      "character",
      "phone"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1109,
   "completion_tokens": 47,
   "total_tokens": 1156
  }
 }
}