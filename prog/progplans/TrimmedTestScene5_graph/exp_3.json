{
 "0": {
  "plan": [
   [
    " # 0: walk to bedroom\n walk('bedroom')\n # 1: find dresser\n walk('dresser')\n find('dresser')\n # 2: find coins\n find('coins')\n # 3: grab the coins\n assert('close' to 'coins')\n else: find('coins')\n grab('coins')\n assert('coins' in 'hands')\n else: grab('coins')\n # 4: put the coins in pocket\n putin('pocket' 'coins')\n # 5: done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " bedroom",
      "\n",
      " walk",
      "('",
      "bedroom",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " dress",
      "er",
      "\n",
      " walk",
      "('",
      "dress",
      "er",
      "')",
      "\n",
      " find",
      "('",
      "dress",
      "er",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " find",
      " coins",
      "\n",
      " find",
      "('",
      "coins",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " grab",
      " the",
      " coins",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "coins",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "coins",
      "')",
      "\n",
      " grab",
      "('",
      "coins",
      "')",
      "\n",
      " assert",
      "('",
      "coins",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "coins",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " put",
      " the",
      " coins",
      " in",
      " pocket",
      "\n",
      " put",
      "in",
      "('",
      "pocket",
      "'",
      " '",
      "coins",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " done"
     ],
     "token_logprobs": [
      -0.020773076,
      -0.01141032,
      -0.0022893692,
      -0.2657557,
      -0.19508581,
      -0.22892094,
      -0.023200806,
      -0.0048981034,
      -0.00437695,
      -0.0018813577,
      -0.0012838254,
      -0.008314472,
      -0.0017502266,
      -0.0030526798,
      -0.0007024608,
      -0.045800302,
      -0.03827601,
      -0.00089054485,
      -0.018582355,
      -0.44776237,
      -0.0013662501,
      -0.0033692452,
      -0.00021634194,
      -0.0012891982,
      -0.004437955,
      -0.011877487,
      -0.0006990019,
      -0.0009548583,
      -8.7576846e-05,
      -0.0010972817,
      -0.0051022563,
      -0.0041083037,
      -0.0048519247,
      -0.000699718,
      -0.45414987,
      -1.0654964,
      -0.10884142,
      -0.20627287,
      -0.0015202524,
      -0.28175494,
      -0.001825524,
      -0.0056343963,
      -0.018536026,
      -0.005449194,
      -0.0012927782,
      -0.5905609,
      -1.8598652,
      -0.022988537,
      -0.02476199,
      -0.6562489,
      -0.0015748754,
      -0.011043469,
      -0.0022432497,
      -0.0006196737,
      -0.0027610802,
      -0.015377273,
      -0.0039369646,
      -0.005653339,
      -0.0015271751,
      -0.0014742268,
      -0.00392913,
      -0.0015579807,
      -0.0019595276,
      -0.00260354,
      -0.0057704737,
      -0.010711516,
      -0.0011837445,
      -0.0024460217,
      -0.0012831083,
      -0.12364596,
      -0.77904433,
      -0.0017990109,
      -0.026884545,
      -0.0015345801,
      -0.012242534,
      -0.0039014847,
      -0.013787498,
      -0.0086721415,
      -0.01072718,
      -0.0037684722,
      -0.0033006507,
      -0.0036296162,
      -0.0019683088,
      -0.001225995,
      -0.002406648,
      -0.47654894,
      -0.6990072,
      -0.01094289,
      -0.0015219243,
      -0.47883207,
      -1.0707849,
      -0.0047054323,
      -0.2201502,
      -0.3290878,
      -0.021699363,
      -0.57249635,
      -0.11098791,
      -0.010970729,
      -2.159543,
      -2.459142,
      -0.06806511,
      -0.0051488657,
      -0.0032285312,
      -0.58135897,
      -0.089667395,
      -0.0062551047,
      -0.0013749044,
      -1.4249141
     ],
     "top_logprobs": [
      {
       " #": -0.020773076
      },
      {
       " 0": -0.01141032
      },
      {
       ":": -0.0022893692
      },
      {
       " walk": -0.2657557
      },
      {
       " to": -0.19508581
      },
      {
       " bedroom": -0.22892094
      },
      {
       "\n": -0.023200806
      },
      {
       " walk": -0.0048981034
      },
      {
       "('": -0.00437695
      },
      {
       "bedroom": -0.0018813577
      },
      {
       "')": -0.0012838254
      },
      {
       "\n": -0.008314472
      },
      {
       " #": -0.0017502266
      },
      {
       " 1": -0.0030526798
      },
      {
       ":": -0.0007024608
      },
      {
       " find": -0.045800302
      },
      {
       " dress": -0.03827601
      },
      {
       "er": -0.00089054485
      },
      {
       "\n": -0.018582355
      },
      {
       " walk": -0.44776237
      },
      {
       "('": -0.0013662501
      },
      {
       "dress": -0.0033692452
      },
      {
       "er": -0.00021634194
      },
      {
       "')": -0.0012891982
      },
      {
       "\n": -0.004437955
      },
      {
       " find": -0.011877487
      },
      {
       "('": -0.0006990019
      },
      {
       "dress": -0.0009548583
      },
      {
       "er": -8.7576846e-05
      },
      {
       "')": -0.0010972817
      },
      {
       "\n": -0.0051022563
      },
      {
       " #": -0.0041083037
      },
      {
       " 2": -0.0048519247
      },
      {
       ":": -0.000699718
      },
      {
       " find": -0.45414987
      },
      {
       " coins": -1.0654964
      },
      {
       "\n": -0.10884142
      },
      {
       " find": -0.20627287
      },
      {
       "('": -0.0015202524
      },
      {
       "coins": -0.28175494
      },
      {
       "')": -0.001825524
      },
      {
       "\n": -0.0056343963
      },
      {
       " #": -0.018536026
      },
      {
       " 3": -0.005449194
      },
      {
       ":": -0.0012927782
      },
      {
       " grab": -0.5905609
      },
      {
       " coins": -0.20168598
      },
      {
       " coins": -0.022988537
      },
      {
       "\n": -0.02476199
      },
      {
       " assert": -0.6562489
      },
      {
       "('": -0.0015748754
      },
      {
       "close": -0.011043469
      },
      {
       "'": -0.0022432497
      },
      {
       " to": -0.0006196737
      },
      {
       " '": -0.0027610802
      },
      {
       "coins": -0.015377273
      },
      {
       "')": -0.0039369646
      },
      {
       "\n": -0.005653339
      },
      {
       " else": -0.0015271751
      },
      {
       ":": -0.0014742268
      },
      {
       " find": -0.00392913
      },
      {
       "('": -0.0015579807
      },
      {
       "coins": -0.0019595276
      },
      {
       "')": -0.00260354
      },
      {
       "\n": -0.0057704737
      },
      {
       " grab": -0.010711516
      },
      {
       "('": -0.0011837445
      },
      {
       "coins": -0.0024460217
      },
      {
       "')": -0.0012831083
      },
      {
       "\n": -0.12364596
      },
      {
       " #": -0.76515967
      },
      {
       "('": -0.0017990109
      },
      {
       "coins": -0.026884545
      },
      {
       "'": -0.0015345801
      },
      {
       " in": -0.012242534
      },
      {
       " '": -0.0039014847
      },
      {
       "hands": -0.013787498
      },
      {
       "')": -0.0086721415
      },
      {
       "\n": -0.01072718
      },
      {
       " else": -0.0037684722
      },
      {
       ":": -0.0033006507
      },
      {
       " grab": -0.0036296162
      },
      {
       "('": -0.0019683088
      },
      {
       "coins": -0.001225995
      },
      {
       "')": -0.002406648
      },
      {
       "\n": -0.47654894
      },
      {
       " #": -0.6990072
      },
      {
       " 4": -0.01094289
      },
      {
       ":": -0.0015219243
      },
      {
       " put": -0.47883207
      },
      {
       " coins": -0.56586975
      },
      {
       " coins": -0.0047054323
      },
      {
       " in": -0.2201502
      },
      {
       " pocket": -0.3290878
      },
      {
       "\n": -0.021699363
      },
      {
       " put": -0.57249635
      },
      {
       "in": -0.11098791
      },
      {
       "('": -0.010970729
      },
      {
       "coins": -0.14292422
      },
      {
       "',": -0.6079038
      },
      {
       " '": -0.06806511
      },
      {
       "coins": -0.0051488657
      },
      {
       "')": -0.0032285312
      },
      {
       "\n": -0.58135897
      },
      {
       " #": -0.089667395
      },
      {
       " 5": -0.0062551047
      },
      {
       ":": -0.0013749044
      },
      {
       " Done": -0.32471642
      }
     ],
     "text_offset": [
      3182,
      3184,
      3186,
      3187,
      3192,
      3195,
      3203,
      3204,
      3209,
      3211,
      3218,
      3220,
      3221,
      3223,
      3225,
      3226,
      3231,
      3237,
      3239,
      3240,
      3245,
      3247,
      3252,
      3254,
      3256,
      3257,
      3262,
      3264,
      3269,
      3271,
      3273,
      3274,
      3276,
      3278,
      3279,
      3284,
      3290,
      3291,
      3296,
      3298,
      3303,
      3305,
      3306,
      3308,
      3310,
      3311,
      3316,
      3320,
      3326,
      3327,
      3334,
      3336,
      3341,
      3342,
      3345,
      3347,
      3352,
      3354,
      3355,
      3360,
      3361,
      3366,
      3368,
      3373,
      3375,
      3376,
      3381,
      3383,
      3388,
      3390,
      3391,
      3398,
      3400,
      3405,
      3406,
      3409,
      3411,
      3416,
      3418,
      3419,
      3424,
      3425,
      3430,
      3432,
      3437,
      3439,
      3440,
      3442,
      3444,
      3445,
      3449,
      3453,
      3459,
      3462,
      3469,
      3470,
      3474,
      3476,
      3478,
      3484,
      3485,
      3487,
      3492,
      3494,
      3495,
      3497,
      3499,
      3500
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Pick up spare change on dresser",
   "task_description": "Locate all the coins on the dresser top. Pick them up.",
   "program": [
    "[Walk] <bedroom> (1)",
    "[Walk] <dresser> (1)",
    "[Find] <coin> (1)",
    "[Grab] <coin> (1)",
    "[Walk] <cup> (1)",
    "[PutBack] <coin> (1) <cup> (1)",
    "[Walk] <dresser> (1)",
    "[Find] <coin> (2)",
    "[Grab] <coin> (2)",
    "[Walk] <cup> (1)",
    "[PutBack] <coin> (2) <cup> (1)",
    "[Walk] <dresser> (1)",
    "[Find] <coin> (3)",
    "[Grab] <coin> (3)",
    "[Walk] <cup> (1)",
    "[PutBack] <coin> (3) <cup> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_turk_robot",
   "file_id": "split6_1",
   "goal_condition": [
    [
     [
      1003,
      1001,
      "ON",
      "coin",
      "cup"
     ],
     [
      198,
      199,
      "INSIDE",
      "character",
      "bedroom"
     ],
     [
      1000,
      1001,
      "ON",
      "coin",
      "cup"
     ],
     [
      1002,
      1001,
      "ON",
      "coin",
      "cup"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1117,
   "completion_tokens": 108,
   "total_tokens": 1225
  }
 },
 "1": {
  "plan": [
   [
    " # 0: find the remote control\n find('remote_control')\n # 1: find television\n find('television')\n # 2: turn on tv with remote control\n assert('close' to 'tv')\n else: find('tv')\n assert('remote_control' in 'hands'):\n else: find('remote_control')\n assert('tv' is 'switchoff')\n else: switchoff('tv')\n switchon('television')\n # 3: find couch and sit on it\n find('couch')\n assert('close' to 'couch')\n else: find('couch')\n sit('couch')\n # 4: touch the remote control and set a channel\n assert('close' to 'remote_control')\n else: find('remote_control')\n touch('remote_control')\n # 5: look at the television\n turnto('television')\n lookat('television')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " the",
      " remote",
      " control",
      "\n",
      " find",
      "('",
      "remote",
      "_",
      "control",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " television",
      "\n",
      " find",
      "('",
      "te",
      "levision",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " turn",
      " on",
      " tv",
      " with",
      " remote",
      " control",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "tv",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "tv",
      "')",
      "\n",
      " assert",
      "('",
      "remote",
      "_",
      "control",
      "'",
      " in",
      " '",
      "hands",
      "'",
      "):",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "remote",
      "_",
      "control",
      "')",
      "\n",
      " assert",
      "('",
      "tv",
      "'",
      " is",
      " '",
      "switch",
      "off",
      "')",
      "\n",
      " else",
      ":",
      " switch",
      "off",
      "('",
      "tv",
      "')",
      "\n",
      " switch",
      "on",
      "('",
      "te",
      "levision",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " find",
      " couch",
      " and",
      " sit",
      " on",
      " it",
      "\n",
      " find",
      "('",
      "c",
      "ouch",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "c",
      "ouch",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "c",
      "ouch",
      "')",
      "\n",
      " sit",
      "('",
      "c",
      "ouch",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " touch",
      " the",
      " remote",
      " control",
      " and",
      " set",
      " a",
      " channel",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "remote",
      "_",
      "control",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "remote",
      "_",
      "control",
      "')",
      "\n",
      " touch",
      "('",
      "remote",
      "_",
      "control",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " look",
      " at",
      " the",
      " television",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "te",
      "levision",
      "')",
      "\n",
      " look",
      "at",
      "('",
      "te",
      "levision",
      "')"
     ],
     "token_logprobs": [
      -0.013625496,
      -0.00707727,
      -0.0013999147,
      -1.1606566,
      -1.0819055,
      -0.13029209,
      -0.04781683,
      -0.013041197,
      -0.006361935,
      -0.0009962613,
      -0.0012000377,
      -0.0027682534,
      -0.0005326626,
      -0.0020780228,
      -0.004219574,
      -0.001581323,
      -0.0019828202,
      -0.00024203752,
      -0.0313157,
      -0.087950505,
      -0.003787619,
      -0.0053315577,
      -0.00025872953,
      -0.004415025,
      -0.00011821817,
      -0.0013077591,
      -0.0023328008,
      -0.000981286,
      -0.0026663498,
      -0.0001910622,
      -0.025984215,
      -0.0024221244,
      -0.035677493,
      -0.009464583,
      -0.0019435848,
      -0.0032823507,
      -0.002201491,
      -0.011125495,
      -0.00028150497,
      -0.004571476,
      -0.0010571234,
      -0.00022623815,
      -0.00041589915,
      -0.012018761,
      -0.0014615756,
      -0.0018359121,
      -0.0004347435,
      -0.00037696297,
      -0.0006755591,
      -0.00028126748,
      -0.0004011717,
      -0.0011409608,
      -0.0015401314,
      -0.025567712,
      -0.00011928824,
      -0.00028496297,
      -0.00033963655,
      -0.00019523638,
      -0.0003266982,
      -0.00087837427,
      -0.0005023067,
      -0.0007176115,
      -0.14229581,
      -0.00075477175,
      -0.0012093481,
      -0.0003464352,
      -0.00013550156,
      -0.001464798,
      -0.0004186447,
      -0.00016197246,
      -6.563869e-05,
      -0.00016364138,
      -0.00043844085,
      -0.001005094,
      -0.23446271,
      -8.960433e-05,
      -0.0006746054,
      -0.000259442,
      -0.00029641076,
      -0.0007211925,
      -0.0017372094,
      -0.0014745845,
      -0.0011777775,
      -0.00074188696,
      -0.00079002563,
      -0.00018641399,
      -0.00017091405,
      -0.000391513,
      -0.00014659172,
      -0.0001287076,
      -0.00097520265,
      -0.0013325282,
      -0.00076175254,
      -7.1958624e-05,
      -0.000111778085,
      -0.0030431743,
      -0.00023106657,
      -0.0013663692,
      -0.11879611,
      -0.017474419,
      -0.006854473,
      -0.0006622002,
      -1.6067395,
      -0.02953852,
      -0.0049750763,
      -0.001081229,
      -0.0017244925,
      -0.00048155588,
      -0.0012921803,
      -0.003334319,
      -0.00011404399,
      -0.00017449218,
      -3.941184e-05,
      -0.00028066957,
      -0.0006676894,
      -0.0062723793,
      -7.183848e-05,
      -0.00018522002,
      -0.00025849018,
      -9.24644e-05,
      -0.00011475737,
      -5.20489e-05,
      -1.1753544e-05,
      -0.00034321658,
      -0.00030499752,
      -0.00016280691,
      -4.716134e-05,
      -0.00015970749,
      -0.00017806844,
      -2.0575926e-05,
      -2.0696069e-05,
      -0.0003264598,
      -0.0006215829,
      -0.00094197073,
      -0.000107127074,
      -3.6311474e-05,
      -1.9143545e-05,
      -0.0005291436,
      -0.032837726,
      -0.0077933557,
      -0.0014930316,
      -0.0002581335,
      -0.12481591,
      -0.0006657802,
      -0.00015589187,
      -0.0003554988,
      -0.0016773844,
      -0.0011145219,
      -0.0004077329,
      -0.0001736549,
      -0.00092484785,
      -0.0009831962,
      -7.159913e-05,
      -0.00039878566,
      -0.0001698393,
      -7.398424e-05,
      -5.0260765e-05,
      -0.00017699462,
      -9.151261e-05,
      -0.0006599343,
      -0.0005744072,
      -0.00038650344,
      -0.0001568446,
      -0.000108559456,
      -0.00023845845,
      -0.00012405471,
      -9.56821e-05,
      -9.7234624e-05,
      -0.00021777152,
      -0.0004857301,
      -0.00071081106,
      -0.0010612976,
      -8.471396e-05,
      -9.806815e-05,
      -0.00029068594,
      -0.0003204956,
      -0.0004832248,
      -0.010038425,
      -0.005008862,
      -0.0010583155,
      -0.00023500233,
      -0.0048575546,
      -0.00018188405,
      -0.00065361155,
      -0.00040964116,
      -0.0020896716,
      -0.0013757398,
      -2.0575926e-05,
      -5.5385808e-05,
      -0.000116546435,
      -0.00022719182,
      -3.1901687e-05,
      -0.0007068762,
      -0.0019564219,
      -0.00096476206,
      -4.072407e-05,
      -0.0003464352,
      -0.0001244142,
      -6.599631e-05,
      -0.0018830296
     ],
     "top_logprobs": [
      {
       " #": -0.013625496
      },
      {
       " 0": -0.00707727
      },
      {
       ":": -0.0013999147
      },
      {
       " walk": -0.46095902
      },
      {
       " the": -1.0819055
      },
      {
       " remote": -0.13029209
      },
      {
       " control": -0.04781683
      },
      {
       "\n": -0.013041197
      },
      {
       " find": -0.006361935
      },
      {
       "('": -0.0009962613
      },
      {
       "remote": -0.0012000377
      },
      {
       "_": -0.0027682534
      },
      {
       "control": -0.0005326626
      },
      {
       "')": -0.0020780228
      },
      {
       "\n": -0.004219574
      },
      {
       " #": -0.001581323
      },
      {
       " 1": -0.0019828202
      },
      {
       ":": -0.00024203752
      },
      {
       " find": -0.0313157
      },
      {
       " television": -0.087950505
      },
      {
       "\n": -0.003787619
      },
      {
       " find": -0.0053315577
      },
      {
       "('": -0.00025872953
      },
      {
       "te": -0.004415025
      },
      {
       "levision": -0.00011821817
      },
      {
       "')": -0.0013077591
      },
      {
       "\n": -0.0023328008
      },
      {
       " #": -0.000981286
      },
      {
       " 2": -0.0026663498
      },
      {
       ":": -0.0001910622
      },
      {
       " turn": -0.025984215
      },
      {
       " on": -0.0024221244
      },
      {
       " tv": -0.035677493
      },
      {
       " with": -0.009464583
      },
      {
       " remote": -0.0019435848
      },
      {
       " control": -0.0032823507
      },
      {
       "\n": -0.002201491
      },
      {
       " assert": -0.011125495
      },
      {
       "('": -0.00028150497
      },
      {
       "close": -0.004571476
      },
      {
       "'": -0.0010571234
      },
      {
       " to": -0.00022623815
      },
      {
       " '": -0.00041589915
      },
      {
       "tv": -0.012018761
      },
      {
       "')": -0.0014615756
      },
      {
       "\n": -0.0018359121
      },
      {
       " else": -0.0004347435
      },
      {
       ":": -0.00037696297
      },
      {
       " find": -0.0006755591
      },
      {
       "('": -0.00028126748
      },
      {
       "tv": -0.0004011717
      },
      {
       "')": -0.0011409608
      },
      {
       "\n": -0.0015401314
      },
      {
       " assert": -0.025567712
      },
      {
       "('": -0.00011928824
      },
      {
       "remote": -0.00028496297
      },
      {
       "_": -0.00033963655
      },
      {
       "control": -0.00019523638
      },
      {
       "'": -0.0003266982
      },
      {
       " in": -0.00087837427
      },
      {
       " '": -0.0005023067
      },
      {
       "hands": -0.0007176115
      },
      {
       "'": -0.14229581
      },
      {
       "):": -0.00075477175
      },
      {
       "\n": -0.0012093481
      },
      {
       " else": -0.0003464352
      },
      {
       ":": -0.00013550156
      },
      {
       " find": -0.001464798
      },
      {
       "('": -0.0004186447
      },
      {
       "remote": -0.00016197246
      },
      {
       "_": -6.563869e-05
      },
      {
       "control": -0.00016364138
      },
      {
       "')": -0.00043844085
      },
      {
       "\n": -0.001005094
      },
      {
       " assert": -0.23446271
      },
      {
       "('": -8.960433e-05
      },
      {
       "tv": -0.0006746054
      },
      {
       "'": -0.000259442
      },
      {
       " is": -0.00029641076
      },
      {
       " '": -0.0007211925
      },
      {
       "switch": -0.0017372094
      },
      {
       "off": -0.0014745845
      },
      {
       "')": -0.0011777775
      },
      {
       "\n": -0.00074188696
      },
      {
       " else": -0.00079002563
      },
      {
       ":": -0.00018641399
      },
      {
       " switch": -0.00017091405
      },
      {
       "off": -0.000391513
      },
      {
       "('": -0.00014659172
      },
      {
       "tv": -0.0001287076
      },
      {
       "')": -0.00097520265
      },
      {
       "\n": -0.0013325282
      },
      {
       " switch": -0.00076175254
      },
      {
       "on": -7.1958624e-05
      },
      {
       "('": -0.000111778085
      },
      {
       "te": -0.0030431743
      },
      {
       "levision": -0.00023106657
      },
      {
       "')": -0.0013663692
      },
      {
       "\n": -0.11879611
      },
      {
       " #": -0.017474419
      },
      {
       " 3": -0.006854473
      },
      {
       ":": -0.0006622002
      },
      {
       " look": -0.5469508
      },
      {
       " couch": -0.02953852
      },
      {
       " and": -0.0049750763
      },
      {
       " sit": -0.001081229
      },
      {
       " on": -0.0017244925
      },
      {
       " it": -0.00048155588
      },
      {
       "\n": -0.0012921803
      },
      {
       " find": -0.003334319
      },
      {
       "('": -0.00011404399
      },
      {
       "c": -0.00017449218
      },
      {
       "ouch": -3.941184e-05
      },
      {
       "')": -0.00028066957
      },
      {
       "\n": -0.0006676894
      },
      {
       " assert": -0.0062723793
      },
      {
       "('": -7.183848e-05
      },
      {
       "close": -0.00018522002
      },
      {
       "'": -0.00025849018
      },
      {
       " to": -9.24644e-05
      },
      {
       " '": -0.00011475737
      },
      {
       "c": -5.20489e-05
      },
      {
       "ouch": -1.1753544e-05
      },
      {
       "')": -0.00034321658
      },
      {
       "\n": -0.00030499752
      },
      {
       " else": -0.00016280691
      },
      {
       ":": -4.716134e-05
      },
      {
       " find": -0.00015970749
      },
      {
       "('": -0.00017806844
      },
      {
       "c": -2.0575926e-05
      },
      {
       "ouch": -2.0696069e-05
      },
      {
       "')": -0.0003264598
      },
      {
       "\n": -0.0006215829
      },
      {
       " sit": -0.00094197073
      },
      {
       "('": -0.000107127074
      },
      {
       "c": -3.6311474e-05
      },
      {
       "ouch": -1.9143545e-05
      },
      {
       "')": -0.0005291436
      },
      {
       "\n": -0.032837726
      },
      {
       " #": -0.0077933557
      },
      {
       " 4": -0.0014930316
      },
      {
       ":": -0.0002581335
      },
      {
       " touch": -0.12481591
      },
      {
       " the": -0.0006657802
      },
      {
       " remote": -0.00015589187
      },
      {
       " control": -0.0003554988
      },
      {
       " and": -0.0016773844
      },
      {
       " set": -0.0011145219
      },
      {
       " a": -0.0004077329
      },
      {
       " channel": -0.0001736549
      },
      {
       "\n": -0.00092484785
      },
      {
       " assert": -0.0009831962
      },
      {
       "('": -7.159913e-05
      },
      {
       "close": -0.00039878566
      },
      {
       "'": -0.0001698393
      },
      {
       " to": -7.398424e-05
      },
      {
       " '": -5.0260765e-05
      },
      {
       "remote": -0.00017699462
      },
      {
       "_": -9.151261e-05
      },
      {
       "control": -0.0006599343
      },
      {
       "')": -0.0005744072
      },
      {
       "\n": -0.00038650344
      },
      {
       " else": -0.0001568446
      },
      {
       ":": -0.000108559456
      },
      {
       " find": -0.00023845845
      },
      {
       "('": -0.00012405471
      },
      {
       "remote": -9.56821e-05
      },
      {
       "_": -9.7234624e-05
      },
      {
       "control": -0.00021777152
      },
      {
       "')": -0.0004857301
      },
      {
       "\n": -0.00071081106
      },
      {
       " touch": -0.0010612976
      },
      {
       "('": -8.471396e-05
      },
      {
       "remote": -9.806815e-05
      },
      {
       "_": -0.00029068594
      },
      {
       "control": -0.0003204956
      },
      {
       "')": -0.0004832248
      },
      {
       "\n": -0.010038425
      },
      {
       " #": -0.005008862
      },
      {
       " 5": -0.0010583155
      },
      {
       ":": -0.00023500233
      },
      {
       " look": -0.0048575546
      },
      {
       " at": -0.00018188405
      },
      {
       " the": -0.00065361155
      },
      {
       " television": -0.00040964116
      },
      {
       "\n": -0.0020896716
      },
      {
       " tur": -0.0013757398
      },
      {
       "nt": -2.0575926e-05
      },
      {
       "o": -5.5385808e-05
      },
      {
       "('": -0.000116546435
      },
      {
       "te": -0.00022719182
      },
      {
       "levision": -3.1901687e-05
      },
      {
       "')": -0.0007068762
      },
      {
       "\n": -0.0019564219
      },
      {
       " look": -0.00096476206
      },
      {
       "at": -4.072407e-05
      },
      {
       "('": -0.0003464352
      },
      {
       "te": -0.0001244142
      },
      {
       "levision": -6.599631e-05
      },
      {
       "')": -0.0018830296
      }
     ],
     "text_offset": [
      3161,
      3163,
      3165,
      3166,
      3171,
      3175,
      3182,
      3190,
      3191,
      3196,
      3198,
      3204,
      3205,
      3212,
      3214,
      3215,
      3217,
      3219,
      3220,
      3225,
      3236,
      3237,
      3242,
      3244,
      3246,
      3254,
      3256,
      3257,
      3259,
      3261,
      3262,
      3267,
      3270,
      3273,
      3278,
      3285,
      3293,
      3294,
      3301,
      3303,
      3308,
      3309,
      3312,
      3314,
      3316,
      3318,
      3319,
      3324,
      3325,
      3330,
      3332,
      3334,
      3336,
      3337,
      3344,
      3346,
      3352,
      3353,
      3360,
      3361,
      3364,
      3366,
      3371,
      3372,
      3374,
      3375,
      3380,
      3381,
      3386,
      3388,
      3394,
      3395,
      3402,
      3404,
      3405,
      3412,
      3414,
      3416,
      3417,
      3420,
      3422,
      3428,
      3431,
      3433,
      3434,
      3439,
      3440,
      3447,
      3450,
      3452,
      3454,
      3456,
      3457,
      3464,
      3466,
      3468,
      3470,
      3478,
      3480,
      3481,
      3483,
      3485,
      3486,
      3491,
      3497,
      3501,
      3505,
      3508,
      3511,
      3512,
      3517,
      3519,
      3520,
      3524,
      3526,
      3527,
      3534,
      3536,
      3541,
      3542,
      3545,
      3547,
      3548,
      3552,
      3554,
      3555,
      3560,
      3561,
      3566,
      3568,
      3569,
      3573,
      3575,
      3576,
      3580,
      3582,
      3583,
      3587,
      3589,
      3590,
      3592,
      3594,
      3595,
      3601,
      3605,
      3612,
      3620,
      3624,
      3628,
      3630,
      3638,
      3639,
      3646,
      3648,
      3653,
      3654,
      3657,
      3659,
      3665,
      3666,
      3673,
      3675,
      3676,
      3681,
      3682,
      3687,
      3689,
      3695,
      3696,
      3703,
      3705,
      3706,
      3712,
      3714,
      3720,
      3721,
      3728,
      3730,
      3731,
      3733,
      3735,
      3736,
      3741,
      3744,
      3748,
      3759,
      3760,
      3764,
      3766,
      3767,
      3769,
      3771,
      3779,
      3781,
      3782,
      3787,
      3789,
      3791,
      3793,
      3801
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Turn on TV",
   "task_description": "If TV is turned off, pick up/obtain the TV remote and press the green button with the 'I/O' marking.",
   "program": [
    "[Find] <remote_control> (1)",
    "[Grab] <remote_control> (1)",
    "[Find] <television> (1)",
    "[TurnTo] <television> (1)",
    "[PointAt] <television> (1)",
    "[Push] <remote_control> (1)",
    "[SwitchOn] <television> (1)",
    "[Watch] <television> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_turk_robot",
   "file_id": "split58_1",
   "goal_condition": [
    [
     [
      198,
      1000,
      "HOLDS_RH",
      "character",
      "remote_control"
     ],
     [
      198,
      97,
      "FACING",
      "character",
      "television"
     ]
    ],
    [
     [
      97,
      "television",
      "ON"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1109,
   "completion_tokens": 200,
   "total_tokens": 1309
  }
 },
 "2": {
  "plan": [
   [
    " # 0: walk to bathroom\n walk('bathroom')\n # 1: find sink\n walk('sink')\n find('sink')\n # 2: turn on sink\n turnon('sink')\n # 3: pour soap\n pour('soap')\n # 4: grab sponge\n grab('sponge')\n # 5: wash sink\n wash('sink')\n # 6: wipe sink\n wipe('sink')\n # 7: turn off sink\n turnoff('sink')\n # 8: Done\ndef make_tea():\n # 0: walk to kitchen\n walk('kitchen')\n # 1: find microwave\n walk('microwave')\n find('microwave')\n # 2: grab tea bag\n grab('tea_bag')\n # 3: fill cup with water\n fill('cup')\n # 4: pour water in to microwave\n pour('water')\n # 5: put tea bag in microwave\n putin('tea_bag', 'microwave')\n # 6: switch on microwave\n switchon('microwave')\n # 7: wait for tea\n wait('tea')\n # 8: grab cup\n grab('cup')\n # 9: pour tea\n pour('tea')\n # 10: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " bathroom",
      "\n",
      " walk",
      "('",
      "bath",
      "room",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " sink",
      "\n",
      " walk",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " find",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " turn",
      " on",
      " sink",
      "\n",
      " turn",
      "on",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " pour",
      " soap",
      "\n",
      " pour",
      "('",
      "so",
      "ap",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " grab",
      " sponge",
      "\n",
      " grab",
      "('",
      "sp",
      "onge",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " wash",
      " sink",
      "\n",
      " wash",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " #",
      " 6",
      ":",
      " wipe",
      " sink",
      "\n",
      " wipe",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " #",
      " 7",
      ":",
      " turn",
      " off",
      " sink",
      "\n",
      " turn",
      "off",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " #",
      " 8",
      ":",
      " Done",
      "\n",
      "def",
      " make",
      "_",
      "te",
      "a",
      "():",
      "\n",
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " kitchen",
      "\n",
      " walk",
      "('",
      "kit",
      "chen",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " microwave",
      "\n",
      " walk",
      "('",
      "mic",
      "row",
      "ave",
      "')",
      "\n",
      " find",
      "('",
      "mic",
      "row",
      "ave",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " grab",
      " tea",
      " bag",
      "\n",
      " grab",
      "('",
      "te",
      "a",
      "_",
      "bag",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " fill",
      " cup",
      " with",
      " water",
      "\n",
      " fill",
      "('",
      "cup",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " pour",
      " water",
      " in",
      " to",
      " microwave",
      "\n",
      " pour",
      "('",
      "water",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " put",
      " tea",
      " bag",
      " in",
      " microwave",
      "\n",
      " put",
      "in",
      "('",
      "te",
      "a",
      "_",
      "bag",
      "',",
      " '",
      "mic",
      "row",
      "ave",
      "')",
      "\n",
      " #",
      " 6",
      ":",
      " switch",
      " on",
      " microwave",
      "\n",
      " switch",
      "on",
      "('",
      "mic",
      "row",
      "ave",
      "')",
      "\n",
      " #",
      " 7",
      ":",
      " wait",
      " for",
      " tea",
      "\n",
      " wait",
      "('",
      "te",
      "a",
      "')",
      "\n",
      " #",
      " 8",
      ":",
      " grab",
      " cup",
      "\n",
      " grab",
      "('",
      "cup",
      "')",
      "\n",
      " #",
      " 9",
      ":",
      " pour",
      " tea",
      "\n",
      " pour",
      "('",
      "te",
      "a",
      "')",
      "\n",
      " #",
      " 10",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.019666964,
      -0.007769088,
      -0.0020298231,
      -0.7191959,
      -0.213438,
      -0.7641771,
      -0.023551693,
      -0.004963455,
      -0.004306668,
      -0.00256834,
      -0.00015875288,
      -0.0018808801,
      -0.006822124,
      -0.002261528,
      -0.0030731275,
      -0.0011507472,
      -0.060850997,
      -0.06180004,
      -0.020384101,
      -1.124738,
      -0.0017493903,
      -0.0017023413,
      -0.000143252,
      -0.0013220839,
      -0.0044980077,
      -0.01421811,
      -0.00080929237,
      -0.00025014277,
      -8.912656e-05,
      -0.00092293863,
      -0.0041673174,
      -0.0041554677,
      -0.005404607,
      -0.0010408321,
      -0.84867835,
      -0.036530655,
      -2.6832695,
      -0.22145747,
      -2.1074216,
      -0.033436477,
      -0.0018950322,
      -0.050113343,
      -0.00052162877,
      -0.0052555776,
      -0.0056500416,
      -0.031444363,
      -0.0070987004,
      -0.00086745684,
      -1.0611439,
      -1.442053,
      -0.70706344,
      -1.5409606,
      -0.01003102,
      -0.0052359854,
      -0.0012075581,
      -0.028662423,
      -0.011954092,
      -0.030225597,
      -0.006811502,
      -0.001057957,
      -1.4317309,
      -0.33285213,
      -0.068527535,
      -0.2411451,
      -0.0015929041,
      -0.0013583719,
      -0.0007133182,
      -0.001482165,
      -0.004076046,
      -0.027927503,
      -0.0043707835,
      -0.001102769,
      -0.28754628,
      -0.24235792,
      -0.10463605,
      -0.2229353,
      -0.0016635929,
      -0.08799821,
      -0.00020107947,
      -0.003028048,
      -0.010923904,
      -0.016441874,
      -0.004010933,
      -0.0020821434,
      -1.847146,
      -0.20992221,
      -0.025574561,
      -0.020310253,
      -0.00066398835,
      -0.0012329177,
      -0.00014456424,
      -0.0016445467,
      -0.019575482,
      -0.0055859056,
      -0.0082419915,
      -0.0024151935,
      -0.113129094,
      -0.023004027,
      -0.035056837,
      -0.016889269,
      -0.055128712,
      -0.0025595569,
      -0.0006902931,
      -0.00039914515,
      -0.00017031706,
      -0.0023838237,
      -0.20073374,
      -0.014088798,
      -0.002167203,
      -0.0018264797,
      -0.8503059,
      -1.0957723,
      -0.6065356,
      -1.5762657,
      -0.00030046387,
      -1.5409856,
      -0.0005555619,
      -0.04389592,
      -0.016767005,
      -0.008900697,
      -0.0049838815,
      -0.0020368125,
      -0.28775114,
      -0.043253332,
      -0.025842609,
      -0.02694455,
      -0.0025905718,
      -0.0025979814,
      -0.0013986006,
      -0.0002311867,
      -0.0023026916,
      -0.0066614836,
      -0.0018157904,
      -0.0029921776,
      -0.0005979664,
      -0.049610306,
      -4.4080787,
      -0.01782713,
      -0.6553923,
      -0.0012520745,
      -0.003255261,
      -0.00045811874,
      -0.0003540674,
      -0.0015443093,
      -0.006417121,
      -0.006031889,
      -0.0008165726,
      -0.00044738431,
      -0.0003264598,
      -0.0011856547,
      -0.0013575347,
      -0.005545568,
      -0.0024108316,
      -0.0040264926,
      -0.00097377127,
      -2.5058453,
      -1.0538677,
      -2.3153825,
      -0.050997242,
      -0.08396623,
      -0.000981286,
      -0.0010266341,
      -0.03599819,
      -0.040657636,
      -0.00042675465,
      -0.0014506498,
      -0.0049287127,
      -0.006661603,
      -0.0034416723,
      -0.0008856516,
      -3.0053542,
      -0.40456724,
      -0.02806732,
      -0.12114026,
      -0.021219248,
      -0.39530295,
      -0.04350917,
      -0.0069497786,
      -0.52238214,
      -0.008786203,
      -0.015916074,
      -0.0035060917,
      -0.00094209076,
      -1.7111719,
      -0.11881631,
      -0.8168179,
      -1.0261745,
      -0.42915365,
      -0.027170582,
      -0.06097079,
      -0.0028580923,
      -0.03543106,
      -0.14477678,
      -0.011886838,
      -0.037616543,
      -0.0017418669,
      -0.00079879357,
      -0.5180944,
      -0.20542158,
      -0.020946227,
      -0.046596125,
      -2.3129306,
      -0.008663845,
      -0.046365846,
      -0.10857829,
      -0.0022976727,
      -0.010244231,
      -0.017273853,
      -0.0018040854,
      -0.00012632155,
      -1.0149086,
      -0.0056689847,
      -0.014356871,
      -0.0001902296,
      -5.9085025e-05,
      -0.0016111122,
      -0.008766418,
      -0.0015338629,
      -0.0028961103,
      -0.0007232782,
      -1.646869,
      -0.016128236,
      -0.24842268,
      -0.015340897,
      -0.02480726,
      -0.0007538172,
      -0.00046778028,
      -0.00055090815,
      -0.00042043283,
      -0.00056033314,
      -0.002124137,
      -0.006466434,
      -0.0026673065,
      -0.0043391744,
      -0.0010914339,
      -0.35834756,
      -0.33550182,
      -1.1816839,
      -1.048366,
      -0.13016444,
      -0.37290367,
      -0.11309913,
      -0.00063858187,
      -0.02947437,
      -0.008931068,
      -0.0018765811,
      -0.0013367061,
      -0.0014844354,
      -1.2310982,
      -0.1697619,
      -0.1673169,
      -0.0052292743,
      -0.0009318886,
      -0.0011653648,
      -0.0045411782,
      -0.0050355783,
      -0.0016403678,
      -0.0046685426,
      -0.0018678019,
      -0.5827335,
      -0.027067205,
      -1.3299875,
      -0.004584649,
      -0.0012480187,
      -0.0014814486,
      -7.517727e-05,
      -0.0039082468,
      -0.005649562,
      -0.0008581501,
      -0.008395311,
      -0.0027980797,
      -0.16809474
     ],
     "top_logprobs": [
      {
       " #": -0.019666964
      },
      {
       " 0": -0.007769088
      },
      {
       ":": -0.0020298231
      },
      {
       " walk": -0.7191959
      },
      {
       " to": -0.213438
      },
      {
       " bathroom": -0.7641771
      },
      {
       "\n": -0.023551693
      },
      {
       " walk": -0.004963455
      },
      {
       "('": -0.004306668
      },
      {
       "bath": -0.00256834
      },
      {
       "room": -0.00015875288
      },
      {
       "')": -0.0018808801
      },
      {
       "\n": -0.006822124
      },
      {
       " #": -0.002261528
      },
      {
       " 1": -0.0030731275
      },
      {
       ":": -0.0011507472
      },
      {
       " find": -0.060850997
      },
      {
       " sink": -0.06180004
      },
      {
       "\n": -0.020384101
      },
      {
       " find": -0.41833797
      },
      {
       "('": -0.0017493903
      },
      {
       "s": -0.0017023413
      },
      {
       "ink": -0.000143252
      },
      {
       "')": -0.0013220839
      },
      {
       "\n": -0.0044980077
      },
      {
       " find": -0.01421811
      },
      {
       "('": -0.00080929237
      },
      {
       "s": -0.00025014277
      },
      {
       "ink": -8.912656e-05
      },
      {
       "')": -0.00092293863
      },
      {
       "\n": -0.0041673174
      },
      {
       " #": -0.0041554677
      },
      {
       " 2": -0.005404607
      },
      {
       ":": -0.0010408321
      },
      {
       " turn": -0.84867835
      },
      {
       " on": -0.036530655
      },
      {
       " the": -0.7662573
      },
      {
       "\n": -0.22145747
      },
      {
       " assert": -0.80357426
      },
      {
       "on": -0.033436477
      },
      {
       "('": -0.0018950322
      },
      {
       "s": -0.050113343
      },
      {
       "ink": -0.00052162877
      },
      {
       "')": -0.0052555776
      },
      {
       "\n": -0.0056500416
      },
      {
       " #": -0.031444363
      },
      {
       " 3": -0.0070987004
      },
      {
       ":": -0.00086745684
      },
      {
       " pour": -1.0611439
      },
      {
       " deter": -1.1104279
      },
      {
       "\n": -0.70706344
      },
      {
       " assert": -1.1882508
      },
      {
       "('": -0.01003102
      },
      {
       "so": -0.0052359854
      },
      {
       "ap": -0.0012075581
      },
      {
       "')": -0.028662423
      },
      {
       "\n": -0.011954092
      },
      {
       " #": -0.030225597
      },
      {
       " 4": -0.006811502
      },
      {
       ":": -0.001057957
      },
      {
       " wash": -0.9418379
      },
      {
       " sponge": -0.33285213
      },
      {
       "\n": -0.068527535
      },
      {
       " grab": -0.2411451
      },
      {
       "('": -0.0015929041
      },
      {
       "sp": -0.0013583719
      },
      {
       "onge": -0.0007133182
      },
      {
       "')": -0.001482165
      },
      {
       "\n": -0.004076046
      },
      {
       " #": -0.027927503
      },
      {
       " 5": -0.0043707835
      },
      {
       ":": -0.001102769
      },
      {
       " wash": -0.28754628
      },
      {
       " sink": -0.24235792
      },
      {
       "\n": -0.10463605
      },
      {
       " wash": -0.2229353
      },
      {
       "('": -0.0016635929
      },
      {
       "s": -0.08799821
      },
      {
       "ink": -0.00020107947
      },
      {
       "')": -0.003028048
      },
      {
       "\n": -0.010923904
      },
      {
       " #": -0.016441874
      },
      {
       " 6": -0.004010933
      },
      {
       ":": -0.0020821434
      },
      {
       " turn": -0.76624006
      },
      {
       " sink": -0.20992221
      },
      {
       "\n": -0.025574561
      },
      {
       " wipe": -0.020310253
      },
      {
       "('": -0.00066398835
      },
      {
       "s": -0.0012329177
      },
      {
       "ink": -0.00014456424
      },
      {
       "')": -0.0016445467
      },
      {
       "\n": -0.019575482
      },
      {
       " #": -0.0055859056
      },
      {
       " 7": -0.0082419915
      },
      {
       ":": -0.0024151935
      },
      {
       " turn": -0.113129094
      },
      {
       " off": -0.023004027
      },
      {
       " sink": -0.035056837
      },
      {
       "\n": -0.016889269
      },
      {
       " turn": -0.055128712
      },
      {
       "off": -0.0025595569
      },
      {
       "('": -0.0006902931
      },
      {
       "s": -0.00039914515
      },
      {
       "ink": -0.00017031706
      },
      {
       "')": -0.0023838237
      },
      {
       "\n": -0.20073374
      },
      {
       " #": -0.014088798
      },
      {
       " 8": -0.002167203
      },
      {
       ":": -0.0018264797
      },
      {
       " Done": -0.8503059
      },
      {
       "<|endoftext|>": -0.484079
      },
      {
       "def": -0.6065356
      },
      {
       " make": -1.5762657
      },
      {
       "_": -0.00030046387
      },
      {
       "co": -0.4238877
      },
      {
       "a": -0.0005555619
      },
      {
       "():": -0.04389592
      },
      {
       "\n": -0.016767005
      },
      {
       " #": -0.008900697
      },
      {
       " 0": -0.0049838815
      },
      {
       ":": -0.0020368125
      },
      {
       " walk": -0.28775114
      },
      {
       " to": -0.043253332
      },
      {
       " kitchen": -0.025842609
      },
      {
       "\n": -0.02694455
      },
      {
       " walk": -0.0025905718
      },
      {
       "('": -0.0025979814
      },
      {
       "kit": -0.0013986006
      },
      {
       "chen": -0.0002311867
      },
      {
       "')": -0.0023026916
      },
      {
       "\n": -0.0066614836
      },
      {
       " #": -0.0018157904
      },
      {
       " 1": -0.0029921776
      },
      {
       ":": -0.0005979664
      },
      {
       " find": -0.049610306
      },
      {
       " kettle": -1.1915795
      },
      {
       "\n": -0.01782713
      },
      {
       " walk": -0.6553923
      },
      {
       "('": -0.0012520745
      },
      {
       "mic": -0.003255261
      },
      {
       "row": -0.00045811874
      },
      {
       "ave": -0.0003540674
      },
      {
       "')": -0.0015443093
      },
      {
       "\n": -0.006417121
      },
      {
       " find": -0.006031889
      },
      {
       "('": -0.0008165726
      },
      {
       "mic": -0.00044738431
      },
      {
       "row": -0.0003264598
      },
      {
       "ave": -0.0011856547
      },
      {
       "')": -0.0013575347
      },
      {
       "\n": -0.005545568
      },
      {
       " #": -0.0024108316
      },
      {
       " 2": -0.0040264926
      },
      {
       ":": -0.00097377127
      },
      {
       " find": -0.87667966
      },
      {
       " tea": -1.0538677
      },
      {
       "\n": -0.23544359
      },
      {
       "\n": -0.050997242
      },
      {
       " grab": -0.08396623
      },
      {
       "('": -0.000981286
      },
      {
       "te": -0.0010266341
      },
      {
       "a": -0.03599819
      },
      {
       "_": -0.040657636
      },
      {
       "bag": -0.00042675465
      },
      {
       "')": -0.0014506498
      },
      {
       "\n": -0.0049287127
      },
      {
       " #": -0.006661603
      },
      {
       " 3": -0.0034416723
      },
      {
       ":": -0.0008856516
      },
      {
       " put": -1.034364
      },
      {
       " cup": -0.40456724
      },
      {
       " with": -0.02806732
      },
      {
       " water": -0.12114026
      },
      {
       "\n": -0.021219248
      },
      {
       " fill": -0.39530295
      },
      {
       "('": -0.04350917
      },
      {
       "cup": -0.0069497786
      },
      {
       "')": -0.52238214
      },
      {
       "\n": -0.008786203
      },
      {
       " #": -0.015916074
      },
      {
       " 4": -0.0035060917
      },
      {
       ":": -0.00094209076
      },
      {
       " put": -0.48275447
      },
      {
       " water": -0.11881631
      },
      {
       " into": -0.6626011
      },
      {
       " microwave": -0.82342917
      },
      {
       " microwave": -0.42915365
      },
      {
       "\n": -0.027170582
      },
      {
       " pour": -0.06097079
      },
      {
       "('": -0.0028580923
      },
      {
       "water": -0.03543106
      },
      {
       "')": -0.14477678
      },
      {
       "\n": -0.011886838
      },
      {
       " #": -0.037616543
      },
      {
       " 5": -0.0017418669
      },
      {
       ":": -0.00079879357
      },
      {
       " put": -0.5180944
      },
      {
       " tea": -0.20542158
      },
      {
       " bag": -0.020946227
      },
      {
       " in": -0.046596125
      },
      {
       " to": -0.4104457
      },
      {
       "\n": -0.008663845
      },
      {
       " put": -0.046365846
      },
      {
       "in": -0.10857829
      },
      {
       "('": -0.0022976727
      },
      {
       "te": -0.010244231
      },
      {
       "a": -0.017273853
      },
      {
       "_": -0.0018040854
      },
      {
       "bag": -0.00012632155
      },
      {
       "')": -0.7988861
      },
      {
       " '": -0.0056689847
      },
      {
       "mic": -0.014356871
      },
      {
       "row": -0.0001902296
      },
      {
       "ave": -5.9085025e-05
      },
      {
       "')": -0.0016111122
      },
      {
       "\n": -0.008766418
      },
      {
       " #": -0.0015338629
      },
      {
       " 6": -0.0028961103
      },
      {
       ":": -0.0007232782
      },
      {
       " turn": -0.7872535
      },
      {
       " on": -0.016128236
      },
      {
       " microwave": -0.24842268
      },
      {
       "\n": -0.015340897
      },
      {
       " switch": -0.02480726
      },
      {
       "on": -0.0007538172
      },
      {
       "('": -0.00046778028
      },
      {
       "mic": -0.00055090815
      },
      {
       "row": -0.00042043283
      },
      {
       "ave": -0.00056033314
      },
      {
       "')": -0.002124137
      },
      {
       "\n": -0.006466434
      },
      {
       " #": -0.0026673065
      },
      {
       " 7": -0.0043391744
      },
      {
       ":": -0.0010914339
      },
      {
       " wait": -0.35834756
      },
      {
       " for": -0.33550182
      },
      {
       " tea": -1.1816839
      },
      {
       " to": -0.459227
      },
      {
       " wait": -0.13016444
      },
      {
       "('": -0.37290367
      },
      {
       "te": -0.11309913
      },
      {
       "a": -0.00063858187
      },
      {
       "')": -0.02947437
      },
      {
       "\n": -0.008931068
      },
      {
       " #": -0.0018765811
      },
      {
       " 8": -0.0013367061
      },
      {
       ":": -0.0014844354
      },
      {
       " take": -0.8826752
      },
      {
       " cup": -0.1697619
      },
      {
       "\n": -0.1673169
      },
      {
       " grab": -0.0052292743
      },
      {
       "('": -0.0009318886
      },
      {
       "cup": -0.0011653648
      },
      {
       "')": -0.0045411782
      },
      {
       "\n": -0.0050355783
      },
      {
       " #": -0.0016403678
      },
      {
       " 9": -0.0046685426
      },
      {
       ":": -0.0018678019
      },
      {
       " pour": -0.5827335
      },
      {
       " tea": -0.027067205
      },
      {
       " in": -0.38670066
      },
      {
       " pour": -0.004584649
      },
      {
       "('": -0.0012480187
      },
      {
       "te": -0.0014814486
      },
      {
       "a": -7.517727e-05
      },
      {
       "')": -0.0039082468
      },
      {
       "\n": -0.005649562
      },
      {
       " #": -0.0008581501
      },
      {
       " 10": -0.008395311
      },
      {
       ":": -0.0027980797
      },
      {
       " Done": -0.16809474
      }
     ],
     "text_offset": [
      3160,
      3162,
      3164,
      3165,
      3170,
      3173,
      3182,
      3183,
      3188,
      3190,
      3194,
      3198,
      3200,
      3201,
      3203,
      3205,
      3206,
      3211,
      3216,
      3217,
      3222,
      3224,
      3225,
      3228,
      3230,
      3231,
      3236,
      3238,
      3239,
      3242,
      3244,
      3245,
      3247,
      3249,
      3250,
      3255,
      3258,
      3263,
      3264,
      3269,
      3271,
      3273,
      3274,
      3277,
      3279,
      3280,
      3282,
      3284,
      3285,
      3290,
      3295,
      3296,
      3301,
      3303,
      3305,
      3307,
      3309,
      3310,
      3312,
      3314,
      3315,
      3320,
      3327,
      3328,
      3333,
      3335,
      3337,
      3341,
      3343,
      3344,
      3346,
      3348,
      3349,
      3354,
      3359,
      3360,
      3365,
      3367,
      3368,
      3371,
      3373,
      3374,
      3376,
      3378,
      3379,
      3384,
      3389,
      3390,
      3395,
      3397,
      3398,
      3401,
      3403,
      3404,
      3406,
      3408,
      3409,
      3414,
      3418,
      3423,
      3424,
      3429,
      3432,
      3434,
      3435,
      3438,
      3440,
      3441,
      3443,
      3445,
      3446,
      3451,
      3452,
      3455,
      3460,
      3461,
      3463,
      3464,
      3467,
      3468,
      3470,
      3472,
      3473,
      3478,
      3481,
      3489,
      3490,
      3495,
      3497,
      3500,
      3504,
      3506,
      3507,
      3509,
      3511,
      3512,
      3517,
      3527,
      3528,
      3533,
      3535,
      3538,
      3541,
      3544,
      3546,
      3547,
      3552,
      3554,
      3557,
      3560,
      3563,
      3565,
      3566,
      3568,
      3570,
      3571,
      3576,
      3580,
      3584,
      3585,
      3590,
      3592,
      3594,
      3595,
      3596,
      3599,
      3601,
      3602,
      3604,
      3606,
      3607,
      3612,
      3616,
      3621,
      3627,
      3628,
      3633,
      3635,
      3638,
      3640,
      3641,
      3643,
      3645,
      3646,
      3651,
      3657,
      3660,
      3663,
      3673,
      3674,
      3679,
      3681,
      3686,
      3688,
      3689,
      3691,
      3693,
      3694,
      3698,
      3702,
      3706,
      3709,
      3719,
      3720,
      3724,
      3726,
      3728,
      3730,
      3731,
      3732,
      3735,
      3737,
      3739,
      3742,
      3745,
      3748,
      3750,
      3751,
      3753,
      3755,
      3756,
      3763,
      3766,
      3776,
      3777,
      3784,
      3786,
      3788,
      3791,
      3794,
      3797,
      3799,
      3800,
      3802,
      3804,
      3805,
      3810,
      3814,
      3818,
      3819,
      3824,
      3826,
      3828,
      3829,
      3831,
      3832,
      3834,
      3836,
      3837,
      3842,
      3846,
      3847,
      3852,
      3854,
      3857,
      3859,
      3860,
      3862,
      3864,
      3865,
      3870,
      3874,
      3875,
      3880,
      3882,
      3884,
      3885,
      3887,
      3888,
      3890,
      3893,
      3894
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Wash sink",
   "task_description": "I spray some cleaner and wait a minte or so then wipe it out.",
   "program": [
    "[Walk] <bathroom> (1)",
    "[Walk] <cleaning_solution> (1)",
    "[Find] <cleaning_solution> (1)",
    "[Grab] <cleaning_solution> (1)",
    "[Walk] <sink> (1)",
    "[Pour] <cleaning_solution> (1) <sink> (1)",
    "[PutObjBack] <cleaning_solution> (1)",
    "[Find] <rag> (1)",
    "[Grab] <rag> (1)",
    "[Walk] <sink> (1)",
    "[Wipe] <sink> (1)",
    "[Wipe] <sink> (1)",
    "[Wipe] <sink> (1)",
    "[PutObjBack] <rag> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_turk_third",
   "file_id": "split87_3",
   "goal_condition": [
    [
     [
      198,
      262,
      "INSIDE",
      "character",
      "bathroom"
     ],
     [
      1000,
      286,
      "INSIDE",
      "cleaning_solution",
      "sink"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1108,
   "completion_tokens": 272,
   "total_tokens": 1380
  }
 },
 "3": {
  "plan": [
   [
    " # 0: find jacket\n find('clothes_jacket')\n # 1: find hanger\n find('hanger')\n # 2: grab jacket\n assert('close' to 'clothes_jacket')\n else: find('clothes_jacket')\n grab('clothes_jacket')\n assert('clothes_jacket' in 'hands')\n else: grab('clothes_jacket')\n # 3: grab hanger\n assert('close' to 'hanger')\n else: find('hanger')\n grab('hanger')\n assert('hanger' in 'hands')\n else: grab('hanger')\n # 4: hang the jacket on the hanger\n assert('hanger' in 'hands')\n else: grab('hanger')\n hang('clothes_jacket' 'hanger')\n # 5: done\n",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " jacket",
      "\n",
      " find",
      "('",
      "cl",
      "othes",
      "_",
      "j",
      "acket",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " h",
      "anger",
      "\n",
      " find",
      "('",
      "h",
      "anger",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " grab",
      " jacket",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "cl",
      "othes",
      "_",
      "j",
      "acket",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "cl",
      "othes",
      "_",
      "j",
      "acket",
      "')",
      "\n",
      " grab",
      "('",
      "cl",
      "othes",
      "_",
      "j",
      "acket",
      "')",
      "\n",
      " assert",
      "('",
      "cl",
      "othes",
      "_",
      "j",
      "acket",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "cl",
      "othes",
      "_",
      "j",
      "acket",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " grab",
      " h",
      "anger",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "h",
      "anger",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "h",
      "anger",
      "')",
      "\n",
      " grab",
      "('",
      "h",
      "anger",
      "')",
      "\n",
      " assert",
      "('",
      "h",
      "anger",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "h",
      "anger",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " hang",
      " the",
      " jacket",
      " on",
      " the",
      " h",
      "anger",
      "\n",
      " assert",
      "('",
      "h",
      "anger",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "h",
      "anger",
      "')",
      "\n",
      " hang",
      "('",
      "cl",
      "othes",
      "_",
      "j",
      "acket",
      "'",
      " '",
      "h",
      "anger",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " done",
      "\n"
     ],
     "token_logprobs": [
      -0.01386842,
      -0.0066955653,
      -0.0017418669,
      -0.3662297,
      -1.4553449,
      -0.032372374,
      -0.03347142,
      -0.0015868159,
      -1.0984038,
      -0.0029138662,
      -0.0031256224,
      -0.0009772273,
      -0.00092997943,
      -0.0035153637,
      -0.008606187,
      -0.0048365304,
      -0.0027736917,
      -0.00079193484,
      -0.614862,
      -0.042003963,
      -0.0025189226,
      -0.023606615,
      -0.0740065,
      -0.0009393453,
      -0.0009217446,
      -0.00028353152,
      -0.0014808546,
      -0.0064161,
      -0.00893564,
      -0.005272175,
      -0.0011172693,
      -0.29056475,
      -1.6649777,
      -0.38242996,
      -0.6570123,
      -0.0016720108,
      -0.017661013,
      -0.0026133996,
      -0.0006344049,
      -0.002058373,
      -0.2858113,
      -0.0011400053,
      -0.0015136267,
      -0.000924371,
      -0.0003280123,
      -0.00779726,
      -0.00814007,
      -0.0015239537,
      -0.0018388389,
      -0.0042930213,
      -0.00187025,
      -0.0020343624,
      -0.0008667416,
      -0.00058806554,
      -0.0010058093,
      -2.8326363e-05,
      -0.0031784223,
      -0.006451376,
      -0.006500387,
      -0.000789669,
      -0.0023822712,
      -0.00033594016,
      -0.000515904,
      -0.0007312708,
      -6.9453374e-05,
      -0.001833284,
      -0.0052134553,
      -1.1549526,
      -0.0013793218,
      -0.07249744,
      -0.0015032395,
      -0.0006704322,
      -0.0012682484,
      -8.2927705e-05,
      -0.0022863816,
      -0.018569604,
      -0.0039579705,
      -0.007625593,
      -0.019794142,
      -0.0042890096,
      -0.011683587,
      -0.00319917,
      -0.005510984,
      -0.0013790824,
      -0.0003917514,
      -0.0006676894,
      -0.0008195528,
      -0.000825042,
      -0.00022480857,
      -0.0024064085,
      -0.005801049,
      -0.43243313,
      -0.009210634,
      -0.0012292174,
      -1.0942668,
      -0.018171227,
      -0.0011813575,
      -0.018680185,
      -0.24511151,
      -0.00082551886,
      -0.008318618,
      -0.0019176067,
      -0.00024608686,
      -0.0015826372,
      -0.0016392922,
      -0.00022802629,
      -0.002753369,
      -0.0035835546,
      -0.00052341784,
      -0.00066780584,
      -0.0029528404,
      -0.0010799167,
      -0.0006440683,
      -0.00014074863,
      -0.0012428861,
      -0.004535848,
      -0.00463956,
      -0.0010322416,
      -0.00047553165,
      -0.00018533925,
      -0.001810655,
      -0.0031931312,
      -0.095297456,
      -0.0009379129,
      -0.005559833,
      -0.00049180974,
      -0.0011198947,
      -0.0023068723,
      -0.0014238504,
      -0.0015418039,
      -0.0022983898,
      -0.002572882,
      -0.0049697435,
      -0.00082874123,
      -0.002250357,
      -0.0015895606,
      -0.00081012776,
      -0.00027387374,
      -0.0016955952,
      -0.005440804,
      -0.03743033,
      -0.007278443,
      -0.0010827213,
      -0.44981173,
      -1.7814077,
      -0.05886414,
      -0.7760301,
      -0.27846682,
      -0.0023276634,
      -0.0006338098,
      -0.009747132,
      -0.885185,
      -0.0024651438,
      -0.8477439,
      -0.00079622824,
      -0.0033577036,
      -0.1545143,
      -0.0026588792,
      -0.0078779245,
      -0.085135795,
      -0.012680026,
      -0.05225879,
      -0.0022982706,
      -0.020785488,
      -0.0012154944,
      -0.00056749035,
      -0.00038698118,
      -0.00491176,
      -0.007231732,
      -1.5811183,
      -0.16235505,
      -0.23096615,
      -0.000918404,
      -0.0003924676,
      -0.0007582317,
      -0.00017985563,
      -1.968421,
      -0.7031593,
      -0.028775046,
      -0.00028138483,
      -0.0036713108,
      -0.030961525,
      -0.38404855,
      -0.008861068,
      -0.0020519237,
      -2.4592302,
      -0.2104853
     ],
     "top_logprobs": [
      {
       " #": -0.01386842
      },
      {
       " 0": -0.0066955653
      },
      {
       ":": -0.0017418669
      },
      {
       " find": -0.3662297
      },
      {
       " h": -0.94596744
      },
      {
       "\n": -0.032372374
      },
      {
       " find": -0.03347142
      },
      {
       "('": -0.0015868159
      },
      {
       "j": -0.4109344
      },
      {
       "othes": -0.0029138662
      },
      {
       "_": -0.0031256224
      },
      {
       "j": -0.0009772273
      },
      {
       "acket": -0.00092997943
      },
      {
       "')": -0.0035153637
      },
      {
       "\n": -0.008606187
      },
      {
       " #": -0.0048365304
      },
      {
       " 1": -0.0027736917
      },
      {
       ":": -0.00079193484
      },
      {
       " find": -0.614862
      },
      {
       " h": -0.042003963
      },
      {
       "anger": -0.0025189226
      },
      {
       "\n": -0.023606615
      },
      {
       " find": -0.0740065
      },
      {
       "('": -0.0009393453
      },
      {
       "h": -0.0009217446
      },
      {
       "anger": -0.00028353152
      },
      {
       "')": -0.0014808546
      },
      {
       "\n": -0.0064161
      },
      {
       " #": -0.00893564
      },
      {
       " 2": -0.005272175
      },
      {
       ":": -0.0011172693
      },
      {
       " grab": -0.29056475
      },
      {
       " h": -0.53773177
      },
      {
       "\n": -0.38242996
      },
      {
       " assert": -0.6570123
      },
      {
       "('": -0.0016720108
      },
      {
       "close": -0.017661013
      },
      {
       "'": -0.0026133996
      },
      {
       " to": -0.0006344049
      },
      {
       " '": -0.002058373
      },
      {
       "cl": -0.2858113
      },
      {
       "othes": -0.0011400053
      },
      {
       "_": -0.0015136267
      },
      {
       "j": -0.000924371
      },
      {
       "acket": -0.0003280123
      },
      {
       "')": -0.00779726
      },
      {
       "\n": -0.00814007
      },
      {
       " else": -0.0015239537
      },
      {
       ":": -0.0018388389
      },
      {
       " find": -0.0042930213
      },
      {
       "('": -0.00187025
      },
      {
       "cl": -0.0020343624
      },
      {
       "othes": -0.0008667416
      },
      {
       "_": -0.00058806554
      },
      {
       "j": -0.0010058093
      },
      {
       "acket": -2.8326363e-05
      },
      {
       "')": -0.0031784223
      },
      {
       "\n": -0.006451376
      },
      {
       " grab": -0.006500387
      },
      {
       "('": -0.000789669
      },
      {
       "cl": -0.0023822712
      },
      {
       "othes": -0.00033594016
      },
      {
       "_": -0.000515904
      },
      {
       "j": -0.0007312708
      },
      {
       "acket": -6.9453374e-05
      },
      {
       "')": -0.001833284
      },
      {
       "\n": -0.0052134553
      },
      {
       " #": -0.4107395
      },
      {
       "('": -0.0013793218
      },
      {
       "cl": -0.07249744
      },
      {
       "othes": -0.0015032395
      },
      {
       "_": -0.0006704322
      },
      {
       "j": -0.0012682484
      },
      {
       "acket": -8.2927705e-05
      },
      {
       "'": -0.0022863816
      },
      {
       " in": -0.018569604
      },
      {
       " '": -0.0039579705
      },
      {
       "hands": -0.007625593
      },
      {
       "')": -0.019794142
      },
      {
       "\n": -0.0042890096
      },
      {
       " else": -0.011683587
      },
      {
       ":": -0.00319917
      },
      {
       " grab": -0.005510984
      },
      {
       "('": -0.0013790824
      },
      {
       "cl": -0.0003917514
      },
      {
       "othes": -0.0006676894
      },
      {
       "_": -0.0008195528
      },
      {
       "j": -0.000825042
      },
      {
       "acket": -0.00022480857
      },
      {
       "')": -0.0024064085
      },
      {
       "\n": -0.005801049
      },
      {
       " #": -0.43243313
      },
      {
       " 3": -0.009210634
      },
      {
       ":": -0.0012292174
      },
      {
       " hang": -0.88096607
      },
      {
       " h": -0.018171227
      },
      {
       "anger": -0.0011813575
      },
      {
       "\n": -0.018680185
      },
      {
       " assert": -0.24511151
      },
      {
       "('": -0.00082551886
      },
      {
       "close": -0.008318618
      },
      {
       "'": -0.0019176067
      },
      {
       " to": -0.00024608686
      },
      {
       " '": -0.0015826372
      },
      {
       "h": -0.0016392922
      },
      {
       "anger": -0.00022802629
      },
      {
       "')": -0.002753369
      },
      {
       "\n": -0.0035835546
      },
      {
       " else": -0.00052341784
      },
      {
       ":": -0.00066780584
      },
      {
       " find": -0.0029528404
      },
      {
       "('": -0.0010799167
      },
      {
       "h": -0.0006440683
      },
      {
       "anger": -0.00014074863
      },
      {
       "')": -0.0012428861
      },
      {
       "\n": -0.004535848
      },
      {
       " grab": -0.00463956
      },
      {
       "('": -0.0010322416
      },
      {
       "h": -0.00047553165
      },
      {
       "anger": -0.00018533925
      },
      {
       "')": -0.001810655
      },
      {
       "\n": -0.0031931312
      },
      {
       " assert": -0.095297456
      },
      {
       "('": -0.0009379129
      },
      {
       "h": -0.005559833
      },
      {
       "anger": -0.00049180974
      },
      {
       "'": -0.0011198947
      },
      {
       " in": -0.0023068723
      },
      {
       " '": -0.0014238504
      },
      {
       "hands": -0.0015418039
      },
      {
       "')": -0.0022983898
      },
      {
       "\n": -0.002572882
      },
      {
       " else": -0.0049697435
      },
      {
       ":": -0.00082874123
      },
      {
       " grab": -0.002250357
      },
      {
       "('": -0.0015895606
      },
      {
       "h": -0.00081012776
      },
      {
       "anger": -0.00027387374
      },
      {
       "')": -0.0016955952
      },
      {
       "\n": -0.005440804
      },
      {
       " #": -0.03743033
      },
      {
       " 4": -0.007278443
      },
      {
       ":": -0.0010827213
      },
      {
       " hang": -0.44981173
      },
      {
       " up": -0.8464083
      },
      {
       " jacket": -0.05886414
      },
      {
       "\n": -0.73422873
      },
      {
       " the": -0.27846682
      },
      {
       " h": -0.0023276634
      },
      {
       "anger": -0.0006338098
      },
      {
       "\n": -0.009747132
      },
      {
       " assert": -0.885185
      },
      {
       "('": -0.0024651438
      },
      {
       "h": -0.8477439
      },
      {
       "anger": -0.00079622824
      },
      {
       "'": -0.0033577036
      },
      {
       " in": -0.1545143
      },
      {
       " '": -0.0026588792
      },
      {
       "hands": -0.0078779245
      },
      {
       "')": -0.085135795
      },
      {
       "\n": -0.012680026
      },
      {
       " else": -0.05225879
      },
      {
       ":": -0.0022982706
      },
      {
       " grab": -0.020785488
      },
      {
       "('": -0.0012154944
      },
      {
       "h": -0.00056749035
      },
      {
       "anger": -0.00038698118
      },
      {
       "')": -0.00491176
      },
      {
       "\n": -0.007231732
      },
      {
       " assert": -0.99437803
      },
      {
       "('": -0.16235505
      },
      {
       "cl": -0.23096615
      },
      {
       "othes": -0.000918404
      },
      {
       "_": -0.0003924676
      },
      {
       "j": -0.0007582317
      },
      {
       "acket": -0.00017985563
      },
      {
       "')": -0.8454226
      },
      {
       " '": -0.7031593
      },
      {
       "h": -0.028775046
      },
      {
       "anger": -0.00028138483
      },
      {
       "')": -0.0036713108
      },
      {
       "\n": -0.030961525
      },
      {
       " #": -0.38404855
      },
      {
       " 5": -0.008861068
      },
      {
       ":": -0.0020519237
      },
      {
       " put": -0.56696695
      },
      {
       "\n": -0.2104853
      }
     ],
     "text_offset": [
      3165,
      3167,
      3169,
      3170,
      3175,
      3182,
      3183,
      3188,
      3190,
      3192,
      3197,
      3198,
      3199,
      3204,
      3206,
      3207,
      3209,
      3211,
      3212,
      3217,
      3219,
      3224,
      3225,
      3230,
      3232,
      3233,
      3238,
      3240,
      3241,
      3243,
      3245,
      3246,
      3251,
      3258,
      3259,
      3266,
      3268,
      3273,
      3274,
      3277,
      3279,
      3281,
      3286,
      3287,
      3288,
      3293,
      3295,
      3296,
      3301,
      3302,
      3307,
      3309,
      3311,
      3316,
      3317,
      3318,
      3323,
      3325,
      3326,
      3331,
      3333,
      3335,
      3340,
      3341,
      3342,
      3347,
      3349,
      3350,
      3357,
      3359,
      3361,
      3366,
      3367,
      3368,
      3373,
      3374,
      3377,
      3379,
      3384,
      3386,
      3387,
      3392,
      3393,
      3398,
      3400,
      3402,
      3407,
      3408,
      3409,
      3414,
      3416,
      3417,
      3419,
      3421,
      3422,
      3427,
      3429,
      3434,
      3435,
      3442,
      3444,
      3449,
      3450,
      3453,
      3455,
      3456,
      3461,
      3463,
      3464,
      3469,
      3470,
      3475,
      3477,
      3478,
      3483,
      3485,
      3486,
      3491,
      3493,
      3494,
      3499,
      3501,
      3502,
      3509,
      3511,
      3512,
      3517,
      3518,
      3521,
      3523,
      3528,
      3530,
      3531,
      3536,
      3537,
      3542,
      3544,
      3545,
      3550,
      3552,
      3553,
      3555,
      3557,
      3558,
      3563,
      3567,
      3574,
      3577,
      3581,
      3583,
      3588,
      3589,
      3596,
      3598,
      3599,
      3604,
      3605,
      3608,
      3610,
      3615,
      3617,
      3618,
      3623,
      3624,
      3629,
      3631,
      3632,
      3637,
      3639,
      3640,
      3645,
      3647,
      3649,
      3654,
      3655,
      3656,
      3661,
      3662,
      3664,
      3665,
      3670,
      3672,
      3673,
      3675,
      3677,
      3678,
      3683
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Hang up jacket",
   "task_description": "Upon entering, remove coat and utilize coatrack/hook to store coat by neatly hanging coat on hook.",
   "program": [
    "[Walk] <bedroom> (1)",
    "[Walk] <clothes_jacket> (1)",
    "[Find] <clothes_jacket> (1)",
    "[Find] <clothes_jacket> (1)",
    "[PutOff] <clothes_jacket> (1)",
    "[Grab] <clothes_jacket> (1)",
    "[Find] <hanger> (1)",
    "[PutBack] <clothes_jacket> (1) <hanger> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_turk_third",
   "file_id": "split65_2",
   "goal_condition": [
    [
     [
      198,
      199,
      "INSIDE",
      "character",
      "bedroom"
     ],
     [
      1000,
      244,
      "ON",
      "clothes_jacket",
      "hanger"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1110,
   "completion_tokens": 187,
   "total_tokens": 1297
  }
 },
 "4": {
  "plan": [
   [
    " # 0: walk to the living room\n walk('living_room')\n # 1: find desk\n walk('desk')\n find('desk')\n # 2: find newspaper\n find('newspaper')\n # 3: pick up newspaper\n grab('newspaper')\n # 4: read the newspaper\n turnto('newspaper')\n lookat('newspaper')\n read('newspaper')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " the",
      " living",
      " room",
      "\n",
      " walk",
      "('",
      "living",
      "_",
      "room",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " desk",
      "\n",
      " walk",
      "('",
      "des",
      "k",
      "')",
      "\n",
      " find",
      "('",
      "des",
      "k",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " find",
      " newspaper",
      "\n",
      " find",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " pick",
      " up",
      " newspaper",
      "\n",
      " grab",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " read",
      " the",
      " newspaper",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " look",
      "at",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " read",
      "('",
      "new",
      "sp",
      "aper",
      "')"
     ],
     "token_logprobs": [
      -0.016116427,
      -0.008162544,
      -0.0017028182,
      -1.1387813,
      -0.21658084,
      -2.2718432,
      -0.42078912,
      -0.05673299,
      -0.027447209,
      -0.005439845,
      -0.0042350767,
      -0.013582292,
      -0.17872407,
      -0.00018522002,
      -0.0017495104,
      -0.010388645,
      -0.0016216803,
      -0.0028956328,
      -0.00060094945,
      -0.04116631,
      -4.172588,
      -0.028386137,
      -0.77500796,
      -0.0010709657,
      -0.0038858072,
      -0.00016554873,
      -0.0011740783,
      -0.0036184893,
      -0.01546813,
      -0.00065373076,
      -0.002275927,
      -0.00013156954,
      -0.0007777387,
      -0.0055107437,
      -0.0026079621,
      -0.0054823975,
      -0.00072602095,
      -0.169113,
      -0.14492227,
      -0.022507075,
      -0.025444752,
      -0.0010095066,
      -0.001773034,
      -0.00068337336,
      -0.00043975122,
      -0.0017754228,
      -0.004575726,
      -0.0099540185,
      -0.006765534,
      -0.00072793016,
      -1.7603258,
      -0.0571021,
      -0.9430577,
      -0.06381397,
      -0.6152027,
      -0.0010538982,
      -0.0010219193,
      -0.00015553238,
      -0.00012107918,
      -0.0016066956,
      -0.0045463257,
      -0.30300224,
      -0.0082560545,
      -0.0011511039,
      -0.7167433,
      -1.1516881,
      -0.019599067,
      -0.010679403,
      -0.7412121,
      -7.732115e-05,
      -0.00043903594,
      -0.0006265925,
      -0.0040469,
      -0.00051888794,
      -0.003128494,
      -0.0010732325,
      -0.0048654615,
      -0.3531512,
      -0.0004018879,
      -0.00040463064,
      -0.00062969286,
      -0.0002939055,
      -0.0011033642,
      -0.0015837118,
      -0.06355784,
      -0.2107331,
      -0.014168477,
      -0.00067746826,
      -0.000118453776,
      -8.3284394e-05,
      -0.0022724604
     ],
     "top_logprobs": [
      {
       " #": -0.016116427
      },
      {
       " 0": -0.008162544
      },
      {
       ":": -0.0017028182
      },
      {
       " find": -0.49944758
      },
      {
       " to": -0.21658084
      },
      {
       " living": -0.8134472
      },
      {
       " living": -0.42078912
      },
      {
       " room": -0.05673299
      },
      {
       "\n": -0.027447209
      },
      {
       " walk": -0.005439845
      },
      {
       "('": -0.0042350767
      },
      {
       "living": -0.013582292
      },
      {
       "_": -0.17872407
      },
      {
       "room": -0.00018522002
      },
      {
       "')": -0.0017495104
      },
      {
       "\n": -0.010388645
      },
      {
       " #": -0.0016216803
      },
      {
       " 1": -0.0028956328
      },
      {
       ":": -0.00060094945
      },
      {
       " find": -0.04116631
      },
      {
       " newspaper": -0.78451955
      },
      {
       "\n": -0.028386137
      },
      {
       " find": -0.6412886
      },
      {
       "('": -0.0010709657
      },
      {
       "des": -0.0038858072
      },
      {
       "k": -0.00016554873
      },
      {
       "')": -0.0011740783
      },
      {
       "\n": -0.0036184893
      },
      {
       " find": -0.01546813
      },
      {
       "('": -0.00065373076
      },
      {
       "des": -0.002275927
      },
      {
       "k": -0.00013156954
      },
      {
       "')": -0.0007777387
      },
      {
       "\n": -0.0055107437
      },
      {
       " #": -0.0026079621
      },
      {
       " 2": -0.0054823975
      },
      {
       ":": -0.00072602095
      },
      {
       " find": -0.169113
      },
      {
       " newspaper": -0.14492227
      },
      {
       "\n": -0.022507075
      },
      {
       " find": -0.025444752
      },
      {
       "('": -0.0010095066
      },
      {
       "new": -0.001773034
      },
      {
       "sp": -0.00068337336
      },
      {
       "aper": -0.00043975122
      },
      {
       "')": -0.0017754228
      },
      {
       "\n": -0.004575726
      },
      {
       " #": -0.0099540185
      },
      {
       " 3": -0.006765534
      },
      {
       ":": -0.00072793016
      },
      {
       " grab": -0.5756067
      },
      {
       " up": -0.0571021
      },
      {
       " the": -0.6099784
      },
      {
       "\n": -0.06381397
      },
      {
       " grab": -0.6152027
      },
      {
       "('": -0.0010538982
      },
      {
       "new": -0.0010219193
      },
      {
       "sp": -0.00015553238
      },
      {
       "aper": -0.00012107918
      },
      {
       "')": -0.0016066956
      },
      {
       "\n": -0.0045463257
      },
      {
       " #": -0.30300224
      },
      {
       " 4": -0.0082560545
      },
      {
       ":": -0.0011511039
      },
      {
       " read": -0.7167433
      },
      {
       " newspaper": -0.4477048
      },
      {
       " newspaper": -0.019599067
      },
      {
       "\n": -0.010679403
      },
      {
       " tur": -0.7412121
      },
      {
       "nt": -7.732115e-05
      },
      {
       "o": -0.00043903594
      },
      {
       "('": -0.0006265925
      },
      {
       "new": -0.0040469
      },
      {
       "sp": -0.00051888794
      },
      {
       "aper": -0.003128494
      },
      {
       "')": -0.0010732325
      },
      {
       "\n": -0.0048654615
      },
      {
       " look": -0.3531512
      },
      {
       "at": -0.0004018879
      },
      {
       "('": -0.00040463064
      },
      {
       "new": -0.00062969286
      },
      {
       "sp": -0.0002939055
      },
      {
       "aper": -0.0011033642
      },
      {
       "')": -0.0015837118
      },
      {
       "\n": -0.06355784
      },
      {
       " read": -0.2107331
      },
      {
       "('": -0.014168477
      },
      {
       "new": -0.00067746826
      },
      {
       "sp": -0.000118453776
      },
      {
       "aper": -8.3284394e-05
      },
      {
       "')": -0.0022724604
      }
     ],
     "text_offset": [
      3165,
      3167,
      3169,
      3170,
      3175,
      3178,
      3182,
      3189,
      3194,
      3195,
      3200,
      3202,
      3208,
      3209,
      3213,
      3215,
      3216,
      3218,
      3220,
      3221,
      3226,
      3231,
      3232,
      3237,
      3239,
      3242,
      3243,
      3245,
      3246,
      3251,
      3253,
      3256,
      3257,
      3259,
      3260,
      3262,
      3264,
      3265,
      3270,
      3280,
      3281,
      3286,
      3288,
      3291,
      3293,
      3297,
      3299,
      3300,
      3302,
      3304,
      3305,
      3310,
      3313,
      3323,
      3324,
      3329,
      3331,
      3334,
      3336,
      3340,
      3342,
      3343,
      3345,
      3347,
      3348,
      3353,
      3357,
      3367,
      3368,
      3372,
      3374,
      3375,
      3377,
      3380,
      3382,
      3386,
      3388,
      3389,
      3394,
      3396,
      3398,
      3401,
      3403,
      3407,
      3409,
      3410,
      3415,
      3417,
      3420,
      3422,
      3426
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Read newspaper",
   "task_description": "Sit in my chair at my desk. Open up newspaper. Read about current events.",
   "program": [
    "[Walk] <home_office> (1)",
    "[Walk] <chair> (1)",
    "[Find] <chair> (1)",
    "[Sit] <chair> (1)",
    "[Find] <newspaper> (1)",
    "[Grab] <newspaper> (1)",
    "[Open] <newspaper> (1)",
    "[Read] <newspaper> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_july",
   "file_id": "split17_4",
   "goal_condition": [
    [
     [
      198,
      1,
      "INSIDE",
      "character",
      "home_office"
     ],
     [
      198,
      17,
      "ON",
      "character",
      "chair"
     ],
     [
      198,
      1000,
      "HOLDS_RH",
      "character",
      "newspaper"
     ]
    ],
    [
     [
      1000,
      "newspaper",
      "OPEN"
     ],
     [
      198,
      "character",
      "SITTING"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1109,
   "completion_tokens": 91,
   "total_tokens": 1200
  }
 },
 "5": {
  "plan": [
   [
    " # 0: find toilet\n find('toilet')\n # 1: grab toilet brush\n assert('close' to 'toilet')\n else: find('toilet')\n grab('toilet brush')\n assert('toilet brush' in 'hands')\n else: grab('toilet brush')\n turnto('toilet brush')\n pointat('toilet brush')\n # 2: wash toilet\n assert('toilet brush' in 'hands')\n else: grab('toilet brush')\n wash('toilet brush')\n turnto('toilet brush')\n lookat('toilet brush')\n # 3: put toilet brush back\n assert('toilet brush' in 'hands')\n else: grab('toilet brush')\n putback('toilet brush')\n # 4: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " toilet",
      "\n",
      " find",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " grab",
      " toilet",
      " brush",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "to",
      "ilet",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " grab",
      "('",
      "to",
      "ilet",
      " brush",
      "')",
      "\n",
      " assert",
      "('",
      "to",
      "ilet",
      " brush",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "to",
      "ilet",
      " brush",
      "')",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "to",
      "ilet",
      " brush",
      "')",
      "\n",
      " point",
      "at",
      "('",
      "to",
      "ilet",
      " brush",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " wash",
      " toilet",
      "\n",
      " assert",
      "('",
      "to",
      "ilet",
      " brush",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "to",
      "ilet",
      " brush",
      "')",
      "\n",
      " wash",
      "('",
      "to",
      "ilet",
      " brush",
      "')",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "to",
      "ilet",
      " brush",
      "')",
      "\n",
      " look",
      "at",
      "('",
      "to",
      "ilet",
      " brush",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " put",
      " toilet",
      " brush",
      " back",
      "\n",
      " assert",
      "('",
      "to",
      "ilet",
      " brush",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "to",
      "ilet",
      " brush",
      "')",
      "\n",
      " put",
      "back",
      "('",
      "to",
      "ilet",
      " brush",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.015395191,
      -0.007511064,
      -0.0018412278,
      -2.0219584,
      -0.3791978,
      -0.08904478,
      -0.21754202,
      -0.0018679211,
      -0.0016704582,
      -0.00013621869,
      -0.0032190236,
      -0.0088368915,
      -0.006521027,
      -0.0025105556,
      -0.0010984747,
      -0.99542874,
      -0.6646859,
      -0.51269716,
      -0.026012784,
      -0.7966998,
      -0.0014239677,
      -0.005433073,
      -0.0032053897,
      -0.00046479818,
      -0.0018487511,
      -0.06869459,
      -0.00075775385,
      -1.8198068,
      -0.0036254888,
      -0.0012596542,
      -0.0016418003,
      -0.004548062,
      -0.0016823997,
      -0.0014938671,
      -7.6605895e-05,
      -0.008153228,
      -0.0070066797,
      -0.28356767,
      -0.0011172693,
      -0.02531991,
      -0.0012998199,
      -2.4278529,
      -0.0020022306,
      -0.005620492,
      -0.6980813,
      -0.00114108,
      -0.17568053,
      -0.00067472464,
      -0.07946044,
      -0.002848828,
      -0.013917678,
      -0.004456456,
      -0.008526172,
      -0.024310332,
      -0.003345563,
      -0.0063549755,
      -0.0029896668,
      -0.0067942194,
      -0.0021238977,
      -0.0008249228,
      -0.0001735385,
      -0.004522197,
      -0.0021008404,
      -0.0063073477,
      -0.4574161,
      -5.20489e-05,
      -0.00024120306,
      -0.00059283763,
      -0.012638678,
      -0.00028389008,
      -0.1834705,
      -0.0011417944,
      -0.0032131027,
      -1.390231,
      -0.0012897942,
      -0.0005417281,
      -0.0010190536,
      -7.6726035e-05,
      -0.002862994,
      -0.002279032,
      -0.0057964344,
      -0.0041844365,
      -0.0068201437,
      -0.0008895902,
      -0.35062686,
      -1.1322616,
      -0.70970327,
      -0.06296217,
      -0.0007230407,
      -0.045558725,
      -0.00020739941,
      -0.007741876,
      -0.001798295,
      -0.00203281,
      -0.0015978592,
      -0.0015804895,
      -0.0020584923,
      -0.0023710984,
      -0.0005012338,
      -0.0011400053,
      -0.0021654111,
      -0.0009198354,
      -0.0006379849,
      -1.1991961e-05,
      -0.001518104,
      -0.0014147162,
      -0.0038952022,
      -0.033915773,
      -0.0013358716,
      -0.0006981674,
      -0.00044011069,
      -0.7302044,
      -0.0034243253,
      -0.0050684074,
      -0.08763594,
      -5.8010275e-05,
      -0.00039735518,
      -0.00028126748,
      -0.0021017971,
      -9.0795475e-05,
      -0.083935894,
      -0.00084264076,
      -0.0028531316,
      -0.02948008,
      -0.00059056986,
      -0.0002494275,
      -0.00038042187,
      -0.00012858746,
      -0.002375102,
      -0.0011939513,
      -0.004758194,
      -0.0038934066,
      -0.0067962,
      -0.0010757406,
      -0.12151307,
      -0.8321753,
      -0.0061905095,
      -0.0073485128,
      -0.015946109,
      -0.026822947,
      -0.00042305636,
      -0.0031209,
      -5.598372e-05,
      -0.0016949982,
      -0.00080869725,
      -0.0009545007,
      -0.00080284954,
      -0.00054065336,
      -0.0008084589,
      -0.0011610676,
      -0.00033582002,
      -0.001129683,
      -0.0010778873,
      -0.00045728518,
      -0.0003039237,
      -3.5240468e-05,
      -0.00040892497,
      -0.0008792087,
      -0.002485699,
      -0.004171568,
      -1.9703904,
      -0.0075706993,
      -0.00085003924,
      -0.00020871071,
      -0.0017919645,
      -0.01260765,
      -0.03284832,
      -0.0065381844,
      -0.005831386,
      -0.0020629135,
      -0.29256538
     ],
     "top_logprobs": [
      {
       " #": -0.015395191
      },
      {
       " 0": -0.007511064
      },
      {
       ":": -0.0018412278
      },
      {
       " walk": -0.25364503
      },
      {
       " toilet": -0.3791978
      },
      {
       "\n": -0.08904478
      },
      {
       " find": -0.21754202
      },
      {
       "('": -0.0018679211
      },
      {
       "to": -0.0016704582
      },
      {
       "ilet": -0.00013621869
      },
      {
       "')": -0.0032190236
      },
      {
       "\n": -0.0088368915
      },
      {
       " #": -0.006521027
      },
      {
       " 1": -0.0025105556
      },
      {
       ":": -0.0010984747
      },
      {
       " grab": -0.99542874
      },
      {
       " toilet": -0.6646859
      },
      {
       " brush": -0.51269716
      },
      {
       "\n": -0.026012784
      },
      {
       " assert": -0.7966998
      },
      {
       "('": -0.0014239677
      },
      {
       "close": -0.005433073
      },
      {
       "'": -0.0032053897
      },
      {
       " to": -0.00046479818
      },
      {
       " '": -0.0018487511
      },
      {
       "to": -0.06869459
      },
      {
       "ilet": -0.00075775385
      },
      {
       "_": -0.22317004
      },
      {
       "\n": -0.0036254888
      },
      {
       " else": -0.0012596542
      },
      {
       ":": -0.0016418003
      },
      {
       " find": -0.004548062
      },
      {
       "('": -0.0016823997
      },
      {
       "to": -0.0014938671
      },
      {
       "ilet": -7.6605895e-05
      },
      {
       "')": -0.008153228
      },
      {
       "\n": -0.0070066797
      },
      {
       " grab": -0.28356767
      },
      {
       "('": -0.0011172693
      },
      {
       "to": -0.02531991
      },
      {
       "ilet": -0.0012998199
      },
      {
       "_": -0.12777165
      },
      {
       "')": -0.0020022306
      },
      {
       "\n": -0.005620492
      },
      {
       " assert": -0.6980813
      },
      {
       "('": -0.00114108
      },
      {
       "to": -0.17568053
      },
      {
       "ilet": -0.00067472464
      },
      {
       " brush": -0.07946044
      },
      {
       "'": -0.002848828
      },
      {
       " in": -0.013917678
      },
      {
       " '": -0.004456456
      },
      {
       "hands": -0.008526172
      },
      {
       "')": -0.024310332
      },
      {
       "\n": -0.003345563
      },
      {
       " else": -0.0063549755
      },
      {
       ":": -0.0029896668
      },
      {
       " grab": -0.0067942194
      },
      {
       "('": -0.0021238977
      },
      {
       "to": -0.0008249228
      },
      {
       "ilet": -0.0001735385
      },
      {
       " brush": -0.004522197
      },
      {
       "')": -0.0021008404
      },
      {
       "\n": -0.0063073477
      },
      {
       " tur": -0.4574161
      },
      {
       "nt": -5.20489e-05
      },
      {
       "o": -0.00024120306
      },
      {
       "('": -0.00059283763
      },
      {
       "to": -0.012638678
      },
      {
       "ilet": -0.00028389008
      },
      {
       " brush": -0.1834705
      },
      {
       "')": -0.0011417944
      },
      {
       "\n": -0.0032131027
      },
      {
       " assert": -0.65110856
      },
      {
       "at": -0.0012897942
      },
      {
       "('": -0.0005417281
      },
      {
       "to": -0.0010190536
      },
      {
       "ilet": -7.6726035e-05
      },
      {
       " brush": -0.002862994
      },
      {
       "')": -0.002279032
      },
      {
       "\n": -0.0057964344
      },
      {
       " #": -0.0041844365
      },
      {
       " 2": -0.0068201437
      },
      {
       ":": -0.0008895902
      },
      {
       " wash": -0.35062686
      },
      {
       " with": -1.0134006
      },
      {
       "\n": -0.70970327
      },
      {
       " assert": -0.06296217
      },
      {
       "('": -0.0007230407
      },
      {
       "to": -0.045558725
      },
      {
       "ilet": -0.00020739941
      },
      {
       " brush": -0.007741876
      },
      {
       "'": -0.001798295
      },
      {
       " in": -0.00203281
      },
      {
       " '": -0.0015978592
      },
      {
       "hands": -0.0015804895
      },
      {
       "')": -0.0020584923
      },
      {
       "\n": -0.0023710984
      },
      {
       " else": -0.0005012338
      },
      {
       ":": -0.0011400053
      },
      {
       " grab": -0.0021654111
      },
      {
       "('": -0.0009198354
      },
      {
       "to": -0.0006379849
      },
      {
       "ilet": -1.1991961e-05
      },
      {
       " brush": -0.001518104
      },
      {
       "')": -0.0014147162
      },
      {
       "\n": -0.0038952022
      },
      {
       " wash": -0.033915773
      },
      {
       "('": -0.0013358716
      },
      {
       "to": -0.0006981674
      },
      {
       "ilet": -0.00044011069
      },
      {
       "')": -0.6829107
      },
      {
       "')": -0.0034243253
      },
      {
       "\n": -0.0050684074
      },
      {
       " tur": -0.08763594
      },
      {
       "nt": -5.8010275e-05
      },
      {
       "o": -0.00039735518
      },
      {
       "('": -0.00028126748
      },
      {
       "to": -0.0021017971
      },
      {
       "ilet": -9.0795475e-05
      },
      {
       " brush": -0.083935894
      },
      {
       "')": -0.00084264076
      },
      {
       "\n": -0.0028531316
      },
      {
       " look": -0.02948008
      },
      {
       "at": -0.00059056986
      },
      {
       "('": -0.0002494275
      },
      {
       "to": -0.00038042187
      },
      {
       "ilet": -0.00012858746
      },
      {
       " brush": -0.002375102
      },
      {
       "')": -0.0011939513
      },
      {
       "\n": -0.004758194
      },
      {
       " #": -0.0038934066
      },
      {
       " 3": -0.0067962
      },
      {
       ":": -0.0010757406
      },
      {
       " put": -0.12151307
      },
      {
       " toilet": -0.8321753
      },
      {
       " brush": -0.0061905095
      },
      {
       " back": -0.0073485128
      },
      {
       "\n": -0.015946109
      },
      {
       " assert": -0.026822947
      },
      {
       "('": -0.00042305636
      },
      {
       "to": -0.0031209
      },
      {
       "ilet": -5.598372e-05
      },
      {
       " brush": -0.0016949982
      },
      {
       "'": -0.00080869725
      },
      {
       " in": -0.0009545007
      },
      {
       " '": -0.00080284954
      },
      {
       "hands": -0.00054065336
      },
      {
       "')": -0.0008084589
      },
      {
       "\n": -0.0011610676
      },
      {
       " else": -0.00033582002
      },
      {
       ":": -0.001129683
      },
      {
       " grab": -0.0010778873
      },
      {
       "('": -0.00045728518
      },
      {
       "to": -0.0003039237
      },
      {
       "ilet": -3.5240468e-05
      },
      {
       " brush": -0.00040892497
      },
      {
       "')": -0.0008792087
      },
      {
       "\n": -0.002485699
      },
      {
       " put": -0.004171568
      },
      {
       "obj": -0.1619979
      },
      {
       "('": -0.0075706993
      },
      {
       "to": -0.00085003924
      },
      {
       "ilet": -0.00020871071
      },
      {
       " brush": -0.0017919645
      },
      {
       "')": -0.01260765
      },
      {
       "\n": -0.03284832
      },
      {
       " #": -0.0065381844
      },
      {
       " 4": -0.005831386
      },
      {
       ":": -0.0020629135
      },
      {
       " Done": -0.29256538
      }
     ],
     "text_offset": [
      3163,
      3165,
      3167,
      3168,
      3173,
      3180,
      3181,
      3186,
      3188,
      3190,
      3194,
      3196,
      3197,
      3199,
      3201,
      3202,
      3207,
      3214,
      3220,
      3221,
      3228,
      3230,
      3235,
      3236,
      3239,
      3241,
      3243,
      3247,
      3249,
      3250,
      3255,
      3256,
      3261,
      3263,
      3265,
      3269,
      3271,
      3272,
      3277,
      3279,
      3281,
      3285,
      3291,
      3293,
      3294,
      3301,
      3303,
      3305,
      3309,
      3315,
      3316,
      3319,
      3321,
      3326,
      3328,
      3329,
      3334,
      3335,
      3340,
      3342,
      3344,
      3348,
      3354,
      3356,
      3357,
      3361,
      3363,
      3364,
      3366,
      3368,
      3372,
      3378,
      3380,
      3381,
      3387,
      3389,
      3391,
      3393,
      3397,
      3403,
      3405,
      3406,
      3408,
      3410,
      3411,
      3416,
      3423,
      3424,
      3431,
      3433,
      3435,
      3439,
      3445,
      3446,
      3449,
      3451,
      3456,
      3458,
      3459,
      3464,
      3465,
      3470,
      3472,
      3474,
      3478,
      3484,
      3486,
      3487,
      3492,
      3494,
      3496,
      3500,
      3506,
      3508,
      3509,
      3513,
      3515,
      3516,
      3518,
      3520,
      3524,
      3530,
      3532,
      3533,
      3538,
      3540,
      3542,
      3544,
      3548,
      3554,
      3556,
      3557,
      3559,
      3561,
      3562,
      3566,
      3573,
      3579,
      3584,
      3585,
      3592,
      3594,
      3596,
      3600,
      3606,
      3607,
      3610,
      3612,
      3617,
      3619,
      3620,
      3625,
      3626,
      3631,
      3633,
      3635,
      3639,
      3645,
      3647,
      3648,
      3652,
      3656,
      3658,
      3660,
      3664,
      3670,
      3672,
      3673,
      3675,
      3677,
      3678
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Clean toilet",
   "task_description": "Clean the toilet with a brush.",
   "program": [
    "[Find] <brush> (1)",
    "[Grab] <brush> (1)",
    "[Walk] <bathroom> (1)",
    "[Walk] <toilet> (1)",
    "[Find] <toilet> (1)",
    "[Scrub] <toilet> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_turk_third",
   "file_id": "split74_2",
   "goal_condition": [
    [
     [
      198,
      262,
      "INSIDE",
      "character",
      "bathroom"
     ],
     [
      198,
      1000,
      "HOLDS_RH",
      "character",
      "brush"
     ],
     [
      1000,
      262,
      "INSIDE",
      "brush",
      "bathroom"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1108,
   "completion_tokens": 171,
   "total_tokens": 1279
  }
 },
 "6": {
  "plan": [
   [
    " # 0: walk to bedroom\n walk('bedroom')\n # 1: find desk\n walk('desk')\n find('desk')\n # 2: find computer\n find('computer')\n # 3: Turn on the computer\n turnto('computer')\n lookat('computer')\n assert('close' to 'computer')\n else: find('computer')\n switchon('computer')\n # 4: Start the computer\n pull('keyboard')\n push('mousepad')\n puton('monitor')\n # 5: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " bedroom",
      "\n",
      " walk",
      "('",
      "bedroom",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " desk",
      "\n",
      " walk",
      "('",
      "des",
      "k",
      "')",
      "\n",
      " find",
      "('",
      "des",
      "k",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " find",
      " computer",
      "\n",
      " find",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " Turn",
      " on",
      " the",
      " computer",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "computer",
      "')",
      "\n",
      " look",
      "at",
      "('",
      "computer",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "computer",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "computer",
      "')",
      "\n",
      " switch",
      "on",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " Start",
      " the",
      " computer",
      "\n",
      " pull",
      "('",
      "key",
      "board",
      "')",
      "\n",
      " push",
      "('",
      "mouse",
      "pad",
      "')",
      "\n",
      " put",
      "on",
      "('",
      "monitor",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.018045107,
      -0.008862391,
      -0.0019811485,
      -0.5371746,
      -0.17526652,
      -1.4753456,
      -0.020515932,
      -0.004488249,
      -0.003730838,
      -0.01209037,
      -0.001105035,
      -0.0067237695,
      -0.0040127286,
      -0.0040451623,
      -0.0005170961,
      -0.029602246,
      -0.5069936,
      -0.008331241,
      -0.14951581,
      -0.0006372678,
      -0.0016450246,
      -0.00018069198,
      -0.00091017387,
      -0.0021655303,
      -0.009466089,
      -0.000424607,
      -0.00089997076,
      -8.352281e-05,
      -0.00040618223,
      -0.0043021794,
      -0.002083578,
      -0.0045450097,
      -0.00073556235,
      -0.14322695,
      -0.18290724,
      -0.025728848,
      -0.021202687,
      -0.00083882327,
      -0.001517506,
      -0.0014673024,
      -0.00574176,
      -0.0081174765,
      -0.00784891,
      -0.0009614214,
      -4.369412,
      -0.037226465,
      -0.48789373,
      -0.02859502,
      -0.021213891,
      -2.5913541,
      -7.791906e-05,
      -0.00101106,
      -0.0011203715,
      -0.0021888886,
      -0.0018902563,
      -0.0076389867,
      -0.955023,
      -0.00087300333,
      -0.00068945857,
      -0.0009080253,
      -0.0009406594,
      -0.0052496456,
      -0.48696473,
      -0.0012457508,
      -0.03509462,
      -0.0033713384,
      -0.00047457797,
      -0.0023927276,
      -0.0041660015,
      -0.0060628303,
      -0.003991842,
      -0.0026487203,
      -0.0016225176,
      -0.006376988,
      -0.0019428686,
      -0.0010737103,
      -0.0035352218,
      -0.008823968,
      -0.27605954,
      -0.0029799198,
      -0.0010634462,
      -0.0013762166,
      -0.0024033017,
      -0.31318334,
      -0.082363285,
      -0.012055137,
      -0.0027909067,
      -3.8707957,
      -0.51083267,
      -0.07776965,
      -0.040357035,
      -2.8231125,
      -0.015889306,
      -2.9412918,
      -0.0059488392,
      -0.016683184,
      -0.027479127,
      -0.869569,
      -0.00235204,
      -2.442241,
      -1.2327973,
      -0.002868195,
      -0.15987433,
      -3.7914736,
      -0.2507813,
      -0.0009093366,
      -3.5969167,
      -0.02714284,
      -0.20137304,
      -2.29538,
      -0.013302707,
      -0.0038334513,
      -0.29825023
     ],
     "top_logprobs": [
      {
       " #": -0.018045107
      },
      {
       " 0": -0.008862391
      },
      {
       ":": -0.0019811485
      },
      {
       " walk": -0.5371746
      },
      {
       " to": -0.17526652
      },
      {
       " bedroom": -1.4753456
      },
      {
       "\n": -0.020515932
      },
      {
       " walk": -0.004488249
      },
      {
       "('": -0.003730838
      },
      {
       "bedroom": -0.01209037
      },
      {
       "')": -0.001105035
      },
      {
       "\n": -0.0067237695
      },
      {
       " #": -0.0040127286
      },
      {
       " 1": -0.0040451623
      },
      {
       ":": -0.0005170961
      },
      {
       " find": -0.029602246
      },
      {
       " desk": -0.5069936
      },
      {
       "\n": -0.008331241
      },
      {
       " walk": -0.14951581
      },
      {
       "('": -0.0006372678
      },
      {
       "des": -0.0016450246
      },
      {
       "k": -0.00018069198
      },
      {
       "')": -0.00091017387
      },
      {
       "\n": -0.0021655303
      },
      {
       " find": -0.009466089
      },
      {
       "('": -0.000424607
      },
      {
       "des": -0.00089997076
      },
      {
       "k": -8.352281e-05
      },
      {
       "')": -0.00040618223
      },
      {
       "\n": -0.0043021794
      },
      {
       " #": -0.002083578
      },
      {
       " 2": -0.0045450097
      },
      {
       ":": -0.00073556235
      },
      {
       " find": -0.14322695
      },
      {
       " computer": -0.18290724
      },
      {
       "\n": -0.025728848
      },
      {
       " find": -0.021202687
      },
      {
       "('": -0.00083882327
      },
      {
       "computer": -0.001517506
      },
      {
       "')": -0.0014673024
      },
      {
       "\n": -0.00574176
      },
      {
       " #": -0.0081174765
      },
      {
       " 3": -0.00784891
      },
      {
       ":": -0.0009614214
      },
      {
       " turn": -0.54020494
      },
      {
       " on": -0.037226465
      },
      {
       " the": -0.48789373
      },
      {
       " computer": -0.02859502
      },
      {
       "\n": -0.021213891
      },
      {
       " assert": -0.3159721
      },
      {
       "nt": -7.791906e-05
      },
      {
       "o": -0.00101106
      },
      {
       "('": -0.0011203715
      },
      {
       "computer": -0.0021888886
      },
      {
       "')": -0.0018902563
      },
      {
       "\n": -0.0076389867
      },
      {
       " look": -0.955023
      },
      {
       "at": -0.00087300333
      },
      {
       "('": -0.00068945857
      },
      {
       "computer": -0.0009080253
      },
      {
       "')": -0.0009406594
      },
      {
       "\n": -0.0052496456
      },
      {
       " assert": -0.48696473
      },
      {
       "('": -0.0012457508
      },
      {
       "close": -0.03509462
      },
      {
       "'": -0.0033713384
      },
      {
       " to": -0.00047457797
      },
      {
       " '": -0.0023927276
      },
      {
       "computer": -0.0041660015
      },
      {
       "')": -0.0060628303
      },
      {
       "\n": -0.003991842
      },
      {
       " else": -0.0026487203
      },
      {
       ":": -0.0016225176
      },
      {
       " find": -0.006376988
      },
      {
       "('": -0.0019428686
      },
      {
       "computer": -0.0010737103
      },
      {
       "')": -0.0035352218
      },
      {
       "\n": -0.008823968
      },
      {
       " switch": -0.27605954
      },
      {
       "on": -0.0029799198
      },
      {
       "('": -0.0010634462
      },
      {
       "computer": -0.0013762166
      },
      {
       "')": -0.0024033017
      },
      {
       "\n": -0.31318334
      },
      {
       " #": -0.082363285
      },
      {
       " 4": -0.012055137
      },
      {
       ":": -0.0027909067
      },
      {
       " find": -1.88483
      },
      {
       " the": -0.51083267
      },
      {
       " computer": -0.07776965
      },
      {
       "\n": -0.040357035
      },
      {
       " assert": -1.4369382
      },
      {
       "('": -0.015889306
      },
      {
       "computer": -0.41924983
      },
      {
       "board": -0.0059488392
      },
      {
       "')": -0.016683184
      },
      {
       "\n": -0.027479127
      },
      {
       " push": -0.869569
      },
      {
       "('": -0.00235204
      },
      {
       "key": -0.33197698
      },
      {
       "')": -0.3722007
      },
      {
       "')": -0.002868195
      },
      {
       "\n": -0.15987433
      },
      {
       " #": -1.7362369
      },
      {
       "on": -0.2507813
      },
      {
       "('": -0.0009093366
      },
      {
       "mouse": -0.7140413
      },
      {
       "')": -0.02714284
      },
      {
       "\n": -0.20137304
      },
      {
       " switch": -1.0713657
      },
      {
       " 5": -0.013302707
      },
      {
       ":": -0.0038334513
      },
      {
       " Done": -0.29825023
      }
     ],
     "text_offset": [
      3165,
      3167,
      3169,
      3170,
      3175,
      3178,
      3186,
      3187,
      3192,
      3194,
      3201,
      3203,
      3204,
      3206,
      3208,
      3209,
      3214,
      3219,
      3220,
      3225,
      3227,
      3230,
      3231,
      3233,
      3234,
      3239,
      3241,
      3244,
      3245,
      3247,
      3248,
      3250,
      3252,
      3253,
      3258,
      3267,
      3268,
      3273,
      3275,
      3283,
      3285,
      3286,
      3288,
      3290,
      3291,
      3296,
      3299,
      3303,
      3312,
      3313,
      3317,
      3319,
      3320,
      3322,
      3330,
      3332,
      3333,
      3338,
      3340,
      3342,
      3350,
      3352,
      3353,
      3360,
      3362,
      3367,
      3368,
      3371,
      3373,
      3381,
      3383,
      3384,
      3389,
      3390,
      3395,
      3397,
      3405,
      3407,
      3408,
      3415,
      3417,
      3419,
      3427,
      3429,
      3430,
      3432,
      3434,
      3435,
      3441,
      3445,
      3454,
      3455,
      3460,
      3462,
      3465,
      3470,
      3472,
      3473,
      3478,
      3480,
      3485,
      3488,
      3490,
      3491,
      3495,
      3497,
      3499,
      3506,
      3508,
      3509,
      3511,
      3513,
      3514
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Start computer",
   "task_description": "Sit in desk chair, press power button, let computer power on",
   "program": [
    "[Walk] <home_office> (1)",
    "[Walk] <chair> (1)",
    "[Find] <chair> (1)",
    "[Sit] <chair> (1)",
    "[Find] <computer> (1)",
    "[TurnTo] <computer> (1)",
    "[LookAt] <computer> (1)",
    "[SwitchOn] <computer> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_kellensecond",
   "file_id": "split11_9",
   "goal_condition": [
    [
     [
      198,
      1,
      "INSIDE",
      "character",
      "home_office"
     ],
     [
      198,
      17,
      "ON",
      "character",
      "chair"
     ],
     [
      198,
      98,
      "FACING",
      "character",
      "computer"
     ]
    ],
    [
     [
      98,
      "computer",
      "ON"
     ],
     [
      198,
      "character",
      "SITTING"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1107,
   "completion_tokens": 113,
   "total_tokens": 1220
  }
 },
 "7": {
  "plan": [
   [
    " # 0: walk to bedroom\n walk('bedroom')\n # 1: find alarm clock\n find('alarm_clock')\n # 2: grab alarm clock\n grab('alarm_clock')\n # 3: put alarm clock on nightstand\n find('nightstand')\n puton('nightstand')\n # 4: turn on alarm clock\n switchon('alarm_clock')\n # 5: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " bedroom",
      "\n",
      " walk",
      "('",
      "bedroom",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " alarm",
      " clock",
      "\n",
      " find",
      "('",
      "al",
      "arm",
      "_",
      "clock",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " grab",
      " alarm",
      " clock",
      "\n",
      " grab",
      "('",
      "al",
      "arm",
      "_",
      "clock",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " put",
      " alarm",
      " clock",
      " on",
      " night",
      "stand",
      "\n",
      " find",
      "('",
      "night",
      "stand",
      "')",
      "\n",
      " put",
      "on",
      "('",
      "night",
      "stand",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " turn",
      " on",
      " alarm",
      " clock",
      "\n",
      " switch",
      "on",
      "('",
      "al",
      "arm",
      "_",
      "clock",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.019042008,
      -0.0081458995,
      -0.0018371661,
      -1.0194134,
      -0.2724383,
      -0.079374544,
      -0.02140581,
      -0.005214654,
      -0.0047068708,
      -0.0014051656,
      -0.0013501334,
      -0.009593661,
      -0.0026374245,
      -0.002935023,
      -0.0005278305,
      -0.045210626,
      -0.27658284,
      -0.06146024,
      -0.018028295,
      -0.2618256,
      -0.00092079,
      -0.0029895464,
      -0.00019607085,
      -0.016880358,
      -0.0004941948,
      -0.0029784872,
      -0.005858726,
      -0.011871636,
      -0.003251851,
      -0.0007837038,
      -0.44295058,
      -0.35737228,
      -0.0074792346,
      -0.02530157,
      -0.3887506,
      -0.0010297364,
      -0.00045418294,
      -0.00022766957,
      -0.0035437155,
      -0.00034822334,
      -0.0017455689,
      -0.0055466476,
      -0.28724414,
      -0.006265541,
      -0.00061514095,
      -0.83684814,
      -0.16707814,
      -0.0045155506,
      -0.8418269,
      -0.8827207,
      -0.36444822,
      -0.021705454,
      -0.44708917,
      -0.001346851,
      -0.0012981491,
      -0.004179889,
      -0.0015478921,
      -0.0054216865,
      -0.6086876,
      -0.22718675,
      -0.0015371453,
      -1.4167795,
      -0.00044750448,
      -0.491639,
      -0.3402923,
      -0.10107814,
      -0.00980967,
      -0.0014812093,
      -2.4946816,
      -0.37793148,
      -0.38147092,
      -0.16531914,
      -0.024781048,
      -0.36201364,
      -0.0013491197,
      -0.0010041384,
      -0.003800302,
      -0.00011988616,
      -0.00308383,
      -0.00019929133,
      -0.0027140416,
      -0.17660551,
      -0.03948457,
      -0.006861311,
      -0.0018257626,
      -0.29230115
     ],
     "top_logprobs": [
      {
       " #": -0.019042008
      },
      {
       " 0": -0.0081458995
      },
      {
       ":": -0.0018371661
      },
      {
       " find": -0.59519035
      },
      {
       " to": -0.2724383
      },
      {
       " bedroom": -0.079374544
      },
      {
       "\n": -0.02140581
      },
      {
       " walk": -0.005214654
      },
      {
       "('": -0.0047068708
      },
      {
       "bedroom": -0.0014051656
      },
      {
       "')": -0.0013501334
      },
      {
       "\n": -0.009593661
      },
      {
       " #": -0.0026374245
      },
      {
       " 1": -0.002935023
      },
      {
       ":": -0.0005278305
      },
      {
       " find": -0.045210626
      },
      {
       " alarm": -0.27658284
      },
      {
       " clock": -0.06146024
      },
      {
       "\n": -0.018028295
      },
      {
       " find": -0.2618256
      },
      {
       "('": -0.00092079
      },
      {
       "al": -0.0029895464
      },
      {
       "arm": -0.00019607085
      },
      {
       "_": -0.016880358
      },
      {
       "clock": -0.0004941948
      },
      {
       "')": -0.0029784872
      },
      {
       "\n": -0.005858726
      },
      {
       " #": -0.011871636
      },
      {
       " 2": -0.003251851
      },
      {
       ":": -0.0007837038
      },
      {
       " grab": -0.44295058
      },
      {
       " alarm": -0.35737228
      },
      {
       " clock": -0.0074792346
      },
      {
       "\n": -0.02530157
      },
      {
       " grab": -0.3887506
      },
      {
       "('": -0.0010297364
      },
      {
       "al": -0.00045418294
      },
      {
       "arm": -0.00022766957
      },
      {
       "_": -0.0035437155
      },
      {
       "clock": -0.00034822334
      },
      {
       "')": -0.0017455689
      },
      {
       "\n": -0.0055466476
      },
      {
       " #": -0.28724414
      },
      {
       " 3": -0.006265541
      },
      {
       ":": -0.00061514095
      },
      {
       " put": -0.83684814
      },
      {
       " alarm": -0.16707814
      },
      {
       " clock": -0.0045155506
      },
      {
       " in": -0.68349886
      },
      {
       " night": -0.8827207
      },
      {
       "stand": -0.36444822
      },
      {
       "\n": -0.021705454
      },
      {
       " find": -0.44708917
      },
      {
       "('": -0.001346851
      },
      {
       "night": -0.0012981491
      },
      {
       "stand": -0.004179889
      },
      {
       "')": -0.0015478921
      },
      {
       "\n": -0.0054216865
      },
      {
       " put": -0.6086876
      },
      {
       "on": -0.22718675
      },
      {
       "('": -0.0015371453
      },
      {
       "al": -0.27922162
      },
      {
       "stand": -0.00044750448
      },
      {
       "')": -0.491639
      },
      {
       "\n": -0.3402923
      },
      {
       " #": -0.10107814
      },
      {
       " 4": -0.00980967
      },
      {
       ":": -0.0014812093
      },
      {
       " Done": -0.69610703
      },
      {
       " on": -0.37793148
      },
      {
       " alarm": -0.38147092
      },
      {
       " clock": -0.16531914
      },
      {
       "\n": -0.024781048
      },
      {
       " switch": -0.36201364
      },
      {
       "on": -0.0013491197
      },
      {
       "('": -0.0010041384
      },
      {
       "al": -0.003800302
      },
      {
       "arm": -0.00011988616
      },
      {
       "_": -0.00308383
      },
      {
       "clock": -0.00019929133
      },
      {
       "')": -0.0027140416
      },
      {
       "\n": -0.17660551
      },
      {
       " #": -0.03948457
      },
      {
       " 5": -0.006861311
      },
      {
       ":": -0.0018257626
      },
      {
       " Done": -0.29230115
      }
     ],
     "text_offset": [
      3177,
      3179,
      3181,
      3182,
      3187,
      3190,
      3198,
      3199,
      3204,
      3206,
      3213,
      3215,
      3216,
      3218,
      3220,
      3221,
      3226,
      3232,
      3238,
      3239,
      3244,
      3246,
      3248,
      3251,
      3252,
      3257,
      3259,
      3260,
      3262,
      3264,
      3265,
      3270,
      3276,
      3282,
      3283,
      3288,
      3290,
      3292,
      3295,
      3296,
      3301,
      3303,
      3304,
      3306,
      3308,
      3309,
      3313,
      3319,
      3325,
      3328,
      3334,
      3339,
      3340,
      3345,
      3347,
      3352,
      3357,
      3359,
      3360,
      3364,
      3366,
      3368,
      3373,
      3378,
      3380,
      3381,
      3383,
      3385,
      3386,
      3391,
      3394,
      3400,
      3406,
      3407,
      3414,
      3416,
      3418,
      3420,
      3423,
      3424,
      3429,
      3431,
      3432,
      3434,
      3436,
      3437
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Put alarm clock in bedroom",
   "task_description": "Take alarm clock. Sit it on stand, next to bed. Plug in alarm clock. Set time, according to watch. Set alarm, depending on what time you have to get up.",
   "program": [
    "[Walk] <bedroom> (1)",
    "[Walk] <alarm_clock> (1)",
    "[Find] <alarm_clock> (1)",
    "[Grab] <alarm_clock> (1)",
    "[Find] <dresser> (1)",
    "[Open] <dresser> (1)",
    "[PutBack] <alarm_clock> (1) <dresser> (1)",
    "[SwitchOn] <alarm_clock> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_kellensecond",
   "file_id": "split11_6",
   "goal_condition": [
    [
     [
      1000,
      241,
      "ON",
      "alarm_clock",
      "dresser"
     ],
     [
      198,
      199,
      "INSIDE",
      "character",
      "bedroom"
     ]
    ],
    [
     [
      241,
      "dresser",
      "OPEN"
     ],
     [
      1000,
      "alarm_clock",
      "ON"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1114,
   "completion_tokens": 86,
   "total_tokens": 1200
  }
 },
 "8": {
  "plan": [
   [
    " # 0: walk in to bathroom\n walk('bathroom')\n # 1: find mirror\n find('mirror')\n # 2: look at the mirror\n turnto('mirror')\n lookat('mirror')\n # 3: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " in",
      " to",
      " bathroom",
      "\n",
      " walk",
      "('",
      "bath",
      "room",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " mirror",
      "\n",
      " find",
      "('",
      "mir",
      "ror",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " look",
      " at",
      " the",
      " mirror",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "mir",
      "ror",
      "')",
      "\n",
      " look",
      "at",
      "('",
      "mir",
      "ror",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.022947673,
      -0.0092359595,
      -0.0018439742,
      -0.56010073,
      -1.7097074,
      -0.074543454,
      -0.22787297,
      -0.020106986,
      -0.004529799,
      -0.0065763425,
      -0.002876383,
      -0.00021157267,
      -0.0016963114,
      -0.0071224705,
      -0.0020270767,
      -0.0026080823,
      -0.0009559331,
      -0.04761871,
      -0.30040845,
      -0.01503783,
      -0.2399586,
      -0.0009798546,
      -0.0028735735,
      -0.00092854706,
      -0.0011423923,
      -0.0051664226,
      -0.012334011,
      -0.005544549,
      -0.0008200306,
      -1.0325754,
      -0.18452662,
      -0.5219672,
      -0.009076794,
      -0.010823518,
      -0.3838485,
      -3.023464e-05,
      -0.00015410187,
      -0.00067579845,
      -0.0006242074,
      -0.0015822785,
      -0.0008838635,
      -0.004442207,
      -0.050776727,
      -0.0007291232,
      -0.0005119672,
      -0.00028138483,
      -0.0010655947,
      -0.0018959875,
      -1.0293018,
      -0.5499907,
      -0.008917896,
      -0.0017708872,
      -0.46283746
     ],
     "top_logprobs": [
      {
       " #": -0.022947673
      },
      {
       " 0": -0.0092359595
      },
      {
       ":": -0.0018439742
      },
      {
       " walk": -0.56010073
      },
      {
       " to": -0.2818348
      },
      {
       " to": -0.074543454
      },
      {
       " bathroom": -0.22787297
      },
      {
       "\n": -0.020106986
      },
      {
       " walk": -0.004529799
      },
      {
       "('": -0.0065763425
      },
      {
       "bath": -0.002876383
      },
      {
       "room": -0.00021157267
      },
      {
       "')": -0.0016963114
      },
      {
       "\n": -0.0071224705
      },
      {
       " #": -0.0020270767
      },
      {
       " 1": -0.0026080823
      },
      {
       ":": -0.0009559331
      },
      {
       " find": -0.04761871
      },
      {
       " mirror": -0.30040845
      },
      {
       "\n": -0.01503783
      },
      {
       " find": -0.2399586
      },
      {
       "('": -0.0009798546
      },
      {
       "mir": -0.0028735735
      },
      {
       "ror": -0.00092854706
      },
      {
       "')": -0.0011423923
      },
      {
       "\n": -0.0051664226
      },
      {
       " #": -0.012334011
      },
      {
       " 2": -0.005544549
      },
      {
       ":": -0.0008200306
      },
      {
       " look": -1.0325754
      },
      {
       " at": -0.18452662
      },
      {
       " the": -0.5219672
      },
      {
       " mirror": -0.009076794
      },
      {
       "\n": -0.010823518
      },
      {
       " tur": -0.3838485
      },
      {
       "nt": -3.023464e-05
      },
      {
       "o": -0.00015410187
      },
      {
       "('": -0.00067579845
      },
      {
       "mir": -0.0006242074
      },
      {
       "ror": -0.0015822785
      },
      {
       "')": -0.0008838635
      },
      {
       "\n": -0.004442207
      },
      {
       " look": -0.050776727
      },
      {
       "at": -0.0007291232
      },
      {
       "('": -0.0005119672
      },
      {
       "mir": -0.00028138483
      },
      {
       "ror": -0.0010655947
      },
      {
       "')": -0.0018959875
      },
      {
       "<|endoftext|>": -0.4590607
      },
      {
       " #": -0.5499907
      },
      {
       " 3": -0.008917896
      },
      {
       ":": -0.0017708872
      },
      {
       " Done": -0.46283746
      }
     ],
     "text_offset": [
      3165,
      3167,
      3169,
      3170,
      3175,
      3178,
      3181,
      3190,
      3191,
      3196,
      3198,
      3202,
      3206,
      3208,
      3209,
      3211,
      3213,
      3214,
      3219,
      3226,
      3227,
      3232,
      3234,
      3237,
      3240,
      3242,
      3243,
      3245,
      3247,
      3248,
      3253,
      3256,
      3260,
      3267,
      3268,
      3272,
      3274,
      3275,
      3277,
      3280,
      3283,
      3285,
      3286,
      3291,
      3293,
      3295,
      3298,
      3301,
      3303,
      3304,
      3306,
      3308,
      3309
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Look at mirror",
   "task_description": "I look at my reflection to check my cleanliness.",
   "program": [
    "[Walk] <bathroom> (1)",
    "[Walk] <mirror> (1)",
    "[Find] <mirror> (1)",
    "[TurnTo] <mirror> (1)",
    "[LookAt] <mirror> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_kellensecond",
   "file_id": "split3_4",
   "goal_condition": [
    [
     [
      198,
      1000,
      "FACING",
      "character",
      "mirror"
     ],
     [
      198,
      262,
      "INSIDE",
      "character",
      "bathroom"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1110,
   "completion_tokens": 53,
   "total_tokens": 1163
  }
 },
 "9": {
  "plan": [
   [
    " # 0: walk to bedroom\n walk('bedroom')\n # 1: find bed\n find('bed')\n # 2: lay down on bed\n assert('close' to 'bed')\n else: find('bed')\n lie('bed')\n # 3: close eyes\n close_eyes()\n # 4: take a nap\n sleep()",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " bedroom",
      "\n",
      " walk",
      "('",
      "bedroom",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " bed",
      "\n",
      " find",
      "('",
      "bed",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " lay",
      " down",
      " on",
      " bed",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "bed",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "bed",
      "')",
      "\n",
      " lie",
      "('",
      "bed",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " close",
      " eyes",
      "\n",
      " close",
      "_",
      "eyes",
      "()",
      "\n",
      " #",
      " 4",
      ":",
      " take",
      " a",
      " nap",
      "\n",
      " sleep",
      "()"
     ],
     "token_logprobs": [
      -0.01652174,
      -0.009007026,
      -0.0018251647,
      -0.6999887,
      -0.5495915,
      -0.48980942,
      -0.01656228,
      -0.004199223,
      -0.0039884914,
      -0.0022798702,
      -0.0008066679,
      -0.0071435436,
      -0.003411171,
      -0.003163175,
      -0.00050468993,
      -0.09477707,
      -0.027465772,
      -0.0134322215,
      -0.9623896,
      -0.0009330826,
      -0.00037374342,
      -0.0015422818,
      -0.004443404,
      -0.013544108,
      -0.005032584,
      -0.0005623597,
      -0.28366897,
      -0.046478163,
      -0.07036728,
      -0.04065,
      -0.010701153,
      -1.569818,
      -0.0015469365,
      -0.0045357277,
      -0.0028409967,
      -0.0012815002,
      -0.0025275864,
      -0.00029950924,
      -0.003535341,
      -0.0041753976,
      -0.0014362058,
      -0.0012797083,
      -0.007241039,
      -0.001218239,
      -0.00030380356,
      -0.0006657802,
      -0.0044856723,
      -1.3929404,
      -0.003997648,
      -0.00078406144,
      -0.0010262746,
      -0.0048990604,
      -0.13936402,
      -0.009991465,
      -0.0007784558,
      -0.6465728,
      -0.37946567,
      -0.40429482,
      -0.25787866,
      -2.3137884,
      -0.016595246,
      -0.012768889,
      -0.008571922,
      -0.03646933,
      -0.0055172774,
      -0.0010335548,
      -0.83811384,
      -0.31028378,
      -0.017626856,
      -0.011811501,
      -0.36316356,
      -0.011173593
     ],
     "top_logprobs": [
      {
       " #": -0.01652174
      },
      {
       " 0": -0.009007026
      },
      {
       ":": -0.0018251647
      },
      {
       " walk": -0.6999887
      },
      {
       " to": -0.5495915
      },
      {
       " bedroom": -0.48980942
      },
      {
       "\n": -0.01656228
      },
      {
       " walk": -0.004199223
      },
      {
       "('": -0.0039884914
      },
      {
       "bedroom": -0.0022798702
      },
      {
       "')": -0.0008066679
      },
      {
       "\n": -0.0071435436
      },
      {
       " #": -0.003411171
      },
      {
       " 1": -0.003163175
      },
      {
       ":": -0.00050468993
      },
      {
       " find": -0.09477707
      },
      {
       " bed": -0.027465772
      },
      {
       "\n": -0.0134322215
      },
      {
       " walk": -0.4904458
      },
      {
       "('": -0.0009330826
      },
      {
       "bed": -0.00037374342
      },
      {
       "')": -0.0015422818
      },
      {
       "\n": -0.004443404
      },
      {
       " #": -0.013544108
      },
      {
       " 2": -0.005032584
      },
      {
       ":": -0.0005623597
      },
      {
       " lay": -0.28366897
      },
      {
       " down": -0.046478163
      },
      {
       " on": -0.07036728
      },
      {
       " bed": -0.04065
      },
      {
       "\n": -0.010701153
      },
      {
       " tur": -0.2888788
      },
      {
       "('": -0.0015469365
      },
      {
       "close": -0.0045357277
      },
      {
       "'": -0.0028409967
      },
      {
       " to": -0.0012815002
      },
      {
       " '": -0.0025275864
      },
      {
       "bed": -0.00029950924
      },
      {
       "')": -0.003535341
      },
      {
       "\n": -0.0041753976
      },
      {
       " else": -0.0014362058
      },
      {
       ":": -0.0012797083
      },
      {
       " find": -0.007241039
      },
      {
       "('": -0.001218239
      },
      {
       "bed": -0.00030380356
      },
      {
       "')": -0.0006657802
      },
      {
       "\n": -0.0044856723
      },
      {
       " tur": -1.0645143
      },
      {
       "('": -0.003997648
      },
      {
       "bed": -0.00078406144
      },
      {
       "')": -0.0010262746
      },
      {
       "\n": -0.0048990604
      },
      {
       " #": -0.13936402
      },
      {
       " 3": -0.009991465
      },
      {
       ":": -0.0007784558
      },
      {
       " close": -0.6465728
      },
      {
       " eyes": -0.37946567
      },
      {
       "\n": -0.40429482
      },
      {
       " close": -0.25787866
      },
      {
       "('": -0.44641322
      },
      {
       "eyes": -0.016595246
      },
      {
       "()": -0.012768889
      },
      {
       "\n": -0.008571922
      },
      {
       " #": -0.03646933
      },
      {
       " 4": -0.0055172774
      },
      {
       ":": -0.0010335548
      },
      {
       " take": -0.83811384
      },
      {
       " a": -0.31028378
      },
      {
       " nap": -0.017626856
      },
      {
       "\n": -0.011811501
      },
      {
       " sleep": -0.36316356
      },
      {
       "()": -0.011173593
      }
     ],
     "text_offset": [
      3159,
      3161,
      3163,
      3164,
      3169,
      3172,
      3180,
      3181,
      3186,
      3188,
      3195,
      3197,
      3198,
      3200,
      3202,
      3203,
      3208,
      3212,
      3213,
      3218,
      3220,
      3223,
      3225,
      3226,
      3228,
      3230,
      3231,
      3235,
      3240,
      3243,
      3247,
      3248,
      3255,
      3257,
      3262,
      3263,
      3266,
      3268,
      3271,
      3273,
      3274,
      3279,
      3280,
      3285,
      3287,
      3290,
      3292,
      3293,
      3297,
      3299,
      3302,
      3304,
      3305,
      3307,
      3309,
      3310,
      3316,
      3321,
      3322,
      3328,
      3329,
      3333,
      3335,
      3336,
      3338,
      3340,
      3341,
      3346,
      3348,
      3352,
      3353,
      3359
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Take nap",
   "task_description": "Sleep for a short amount of time during the day",
   "program": [
    "[Walk] <bedroom> (1)",
    "[Walk] <bed> (1)",
    "[Find] <bed> (1)",
    "[Lie] <bed> (1)",
    "[Sleep]"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_july",
   "file_id": "split6_5",
   "goal_condition": [
    [
     [
      198,
      199,
      "INSIDE",
      "character",
      "bedroom"
     ],
     [
      198,
      260,
      "ON",
      "character",
      "bed"
     ]
    ],
    [
     [
      198,
      "character",
      "LYING"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1108,
   "completion_tokens": 72,
   "total_tokens": 1180
  }
 },
 "10": {
  "plan": [
   [
    " # 0: walk to bathroom\n walk('bathroom')\n # 1: find sink\n find('sink')\n # 2: pour water from sink\n pour('sink')\n # 3: wet face\n assert('close' to 'face')\n else: lookat('face')\n wet('face')\n # 4: wash face\n wash('face')\n # 5: wipe face\n wipe('face')\n # 6: Done\n assert('clean' to 'face')\n else: wipe('face')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " bathroom",
      "\n",
      " walk",
      "('",
      "bath",
      "room",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " sink",
      "\n",
      " find",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " pour",
      " water",
      " from",
      " sink",
      "\n",
      " pour",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " wet",
      " face",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "face",
      "')",
      "\n",
      " else",
      ":",
      " look",
      "at",
      "('",
      "face",
      "')",
      "\n",
      " wet",
      "('",
      "face",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " wash",
      " face",
      "\n",
      " wash",
      "('",
      "face",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " wipe",
      " face",
      "\n",
      " wipe",
      "('",
      "face",
      "')",
      "\n",
      " #",
      " 6",
      ":",
      " Done",
      "\n",
      " assert",
      "('",
      "clean",
      "'",
      " to",
      " '",
      "face",
      "')",
      "\n",
      " else",
      ":",
      " wipe",
      "('",
      "face",
      "')"
     ],
     "token_logprobs": [
      -0.016046287,
      -0.0066556637,
      -0.001689266,
      -0.93652326,
      -0.29881942,
      -0.12453707,
      -0.015851762,
      -0.0051388624,
      -0.004286255,
      -0.0027465564,
      -0.0001707939,
      -0.0020587316,
      -0.006706487,
      -0.002267144,
      -0.0030919015,
      -0.0006718608,
      -0.098661035,
      -0.19728966,
      -0.02696206,
      -0.44614816,
      -0.0009425686,
      -0.00076377817,
      -5.5149267e-05,
      -0.001538101,
      -0.005419229,
      -0.022301108,
      -0.0046667443,
      -0.0008694252,
      -2.4440627,
      -0.12639098,
      -3.1413212,
      -1.1389059,
      -0.098671496,
      -1.3780079,
      -0.0031135476,
      -0.54384965,
      -0.00020847135,
      -0.01537564,
      -0.0046649477,
      -0.04831536,
      -0.0056300233,
      -0.0010836769,
      -2.1561396,
      -0.33240613,
      -0.33284387,
      -1.2697468,
      -0.0019534398,
      -0.109546386,
      -0.005141856,
      -0.001172048,
      -0.0058464343,
      -1.7706461,
      -0.006756892,
      -0.0052997987,
      -0.006737149,
      -0.0024156722,
      -3.5070302,
      -0.07538511,
      -0.0024000765,
      -0.02110997,
      -0.0035411436,
      -0.007916794,
      -0.63675505,
      -0.008362132,
      -0.0011957405,
      -0.0065630833,
      -0.005337191,
      -0.027771467,
      -0.007267456,
      -0.0012779183,
      -1.0670952,
      -0.07665894,
      -0.22186068,
      -0.45038724,
      -0.0011318288,
      -0.0008180031,
      -0.001544191,
      -0.00725761,
      -0.050185103,
      -0.004511898,
      -0.0010649977,
      -0.899728,
      -0.04529426,
      -0.04133924,
      -0.14187574,
      -0.0006344049,
      -0.0002965309,
      -0.0009201949,
      -0.09507311,
      -0.022785947,
      -0.0044342447,
      -0.0019807909,
      -0.85668135,
      -0.6365813,
      -1.4946398,
      -0.0038150218,
      -1.6031232,
      -0.020528223,
      -0.21206135,
      -0.003398791,
      -0.0012893165,
      -0.004171089,
      -0.42228836,
      -0.010879557,
      -0.0018631442,
      -1.6355617,
      -0.0039698803,
      -0.00029307103,
      -0.0034523795
     ],
     "top_logprobs": [
      {
       " #": -0.016046287
      },
      {
       " 0": -0.0066556637
      },
      {
       ":": -0.001689266
      },
      {
       " find": -0.7222164
      },
      {
       " to": -0.29881942
      },
      {
       " bathroom": -0.12453707
      },
      {
       "\n": -0.015851762
      },
      {
       " walk": -0.0051388624
      },
      {
       "('": -0.004286255
      },
      {
       "bath": -0.0027465564
      },
      {
       "room": -0.0001707939
      },
      {
       "')": -0.0020587316
      },
      {
       "\n": -0.006706487
      },
      {
       " #": -0.002267144
      },
      {
       " 1": -0.0030919015
      },
      {
       ":": -0.0006718608
      },
      {
       " find": -0.098661035
      },
      {
       " sink": -0.19728966
      },
      {
       "\n": -0.02696206
      },
      {
       " find": -0.44614816
      },
      {
       "('": -0.0009425686
      },
      {
       "s": -0.00076377817
      },
      {
       "ink": -5.5149267e-05
      },
      {
       "')": -0.001538101
      },
      {
       "\n": -0.005419229
      },
      {
       " #": -0.022301108
      },
      {
       " 2": -0.0046667443
      },
      {
       ":": -0.0008694252
      },
      {
       " turn": -0.4829404
      },
      {
       " water": -0.12639098
      },
      {
       "\n": -1.0552857
      },
      {
       " sink": -1.1389059
      },
      {
       "\n": -0.098671496
      },
      {
       " assert": -0.4949074
      },
      {
       "('": -0.0031135476
      },
      {
       "s": -0.54384965
      },
      {
       "ink": -0.00020847135
      },
      {
       "')": -0.01537564
      },
      {
       "\n": -0.0046649477
      },
      {
       " #": -0.04831536
      },
      {
       " 3": -0.0056300233
      },
      {
       ":": -0.0010836769
      },
      {
       " grab": -1.1261361
      },
      {
       " face": -0.33240613
      },
      {
       "\n": -0.33284387
      },
      {
       " assert": -1.2697468
      },
      {
       "('": -0.0019534398
      },
      {
       "close": -0.109546386
      },
      {
       "'": -0.005141856
      },
      {
       " to": -0.001172048
      },
      {
       " '": -0.0058464343
      },
      {
       "s": -0.3172253
      },
      {
       "')": -0.006756892
      },
      {
       "\n": -0.0052997987
      },
      {
       " else": -0.006737149
      },
      {
       ":": -0.0024156722
      },
      {
       " find": -0.55128455
      },
      {
       "at": -0.07538511
      },
      {
       "('": -0.0024000765
      },
      {
       "face": -0.02110997
      },
      {
       "')": -0.0035411436
      },
      {
       "\n": -0.007916794
      },
      {
       " wet": -0.63675505
      },
      {
       "('": -0.008362132
      },
      {
       "face": -0.0011957405
      },
      {
       "')": -0.0065630833
      },
      {
       "\n": -0.005337191
      },
      {
       " #": -0.027771467
      },
      {
       " 4": -0.007267456
      },
      {
       ":": -0.0012779183
      },
      {
       " wash": -1.0670952
      },
      {
       " face": -0.07665894
      },
      {
       "\n": -0.22186068
      },
      {
       " wash": -0.45038724
      },
      {
       "('": -0.0011318288
      },
      {
       "face": -0.0008180031
      },
      {
       "')": -0.001544191
      },
      {
       "\n": -0.00725761
      },
      {
       " #": -0.050185103
      },
      {
       " 5": -0.004511898
      },
      {
       ":": -0.0010649977
      },
      {
       " wipe": -0.899728
      },
      {
       " face": -0.04529426
      },
      {
       "\n": -0.04133924
      },
      {
       " wipe": -0.14187574
      },
      {
       "('": -0.0006344049
      },
      {
       "face": -0.0002965309
      },
      {
       "')": -0.0009201949
      },
      {
       "\n": -0.09507311
      },
      {
       " #": -0.022785947
      },
      {
       " 6": -0.0044342447
      },
      {
       ":": -0.0019807909
      },
      {
       " Done": -0.85668135
      },
      {
       "\n": -0.6365813
      },
      {
       "def": -1.180034
      },
      {
       "('": -0.0038150218
      },
      {
       "face": -0.7119708
      },
      {
       "'": -0.020528223
      },
      {
       " to": -0.21206135
      },
      {
       " '": -0.003398791
      },
      {
       "face": -0.0012893165
      },
      {
       "')": -0.004171089
      },
      {
       "\n": -0.42228836
      },
      {
       " else": -0.010879557
      },
      {
       ":": -0.0018631442
      },
      {
       " wash": -0.38465095
      },
      {
       "('": -0.0039698803
      },
      {
       "face": -0.00029307103
      },
      {
       "')": -0.0034523795
      }
     ],
     "text_offset": [
      3160,
      3162,
      3164,
      3165,
      3170,
      3173,
      3182,
      3183,
      3188,
      3190,
      3194,
      3198,
      3200,
      3201,
      3203,
      3205,
      3206,
      3211,
      3216,
      3217,
      3222,
      3224,
      3225,
      3228,
      3230,
      3231,
      3233,
      3235,
      3236,
      3241,
      3247,
      3252,
      3257,
      3258,
      3263,
      3265,
      3266,
      3269,
      3271,
      3272,
      3274,
      3276,
      3277,
      3281,
      3286,
      3287,
      3294,
      3296,
      3301,
      3302,
      3305,
      3307,
      3311,
      3313,
      3314,
      3319,
      3320,
      3325,
      3327,
      3329,
      3333,
      3335,
      3336,
      3340,
      3342,
      3346,
      3348,
      3349,
      3351,
      3353,
      3354,
      3359,
      3364,
      3365,
      3370,
      3372,
      3376,
      3378,
      3379,
      3381,
      3383,
      3384,
      3389,
      3394,
      3395,
      3400,
      3402,
      3406,
      3408,
      3409,
      3411,
      3413,
      3414,
      3419,
      3420,
      3427,
      3429,
      3434,
      3435,
      3438,
      3440,
      3444,
      3446,
      3447,
      3452,
      3453,
      3458,
      3460,
      3464
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Wash face",
   "task_description": "Turn on water faucet. Get rag wet. Get face soap out. Squirt face soap in hands and put it on face. Rub soap into face. Wash soap off of face. Dry face off on the hand towel. Hang out rag and hand towel.",
   "program": [
    "[Walk] <bathroom> (1)",
    "[Walk] <sink> (1)",
    "[Find] <rag> (1)",
    "[Grab] <rag> (1)",
    "[Find] <faucet> (1)",
    "[SwitchOn] <faucet> (1)",
    "[Wash] <rag> (1)",
    "[Find] <face_soap> (1)",
    "[Grab] <face_soap> (1)",
    "[Pour] <face_soap> (1) <rag> (1)",
    "[PutObjBack] <face_soap> (1)",
    "[Find] <face> (1)",
    "[Scrub] <face> (1)",
    "[PutBack] <rag> (1) <sink> (1)",
    "[Rinse] <face> (1)",
    "[Rinse] <rag> (1)",
    "[SwitchOff] <faucet> (1)",
    "[Grab] <rag> (1)",
    "[PutObjBack] <rag> (1)",
    "[Find] <towel> (1)",
    "[Grab] <towel> (1)",
    "[Wipe] <face> (1)",
    "[PutObjBack] <towel> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upworknturk_second",
   "file_id": "split145_3",
   "goal_condition": [
    [
     [
      198,
      262,
      "INSIDE",
      "character",
      "bathroom"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1107,
   "completion_tokens": 109,
   "total_tokens": 1216
  }
 },
 "11": {
  "plan": [
   [
    " # 0: lay down\n sit('bed')\n lay('bed')\n # 1: close eyes\n close('eyes')\n # 2: drift off to sleep\n drift('sleep')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " lay",
      " down",
      "\n",
      " sit",
      "('",
      "bed",
      "')",
      "\n",
      " lay",
      "('",
      "bed",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " close",
      " eyes",
      "\n",
      " close",
      "('",
      "eyes",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " drift",
      " off",
      " to",
      " sleep",
      "\n",
      " drift",
      "('",
      "sleep",
      "')"
     ],
     "token_logprobs": [
      -0.32816607,
      -0.08912622,
      -0.0030184211,
      -1.9334483,
      -0.04193994,
      -0.598278,
      -2.2192402,
      -0.117167674,
      -0.041622303,
      -0.003131244,
      -0.011944081,
      -1.2331438,
      -0.42070535,
      -0.01759228,
      -0.0021712657,
      -0.0103819,
      -0.0745362,
      -0.0046697995,
      -0.0005102993,
      -0.079712085,
      -0.1661095,
      -0.02355688,
      -0.41823295,
      -0.3782556,
      -0.023995133,
      -0.001538101,
      -0.007348273,
      -0.01050995,
      -0.0036080198,
      -0.0012594176,
      -2.1399846,
      -0.29093337,
      -0.28973675,
      -0.008022419,
      -0.009028858,
      -0.4850517,
      -0.7882299,
      -0.13435486,
      -0.0027702255
     ],
     "top_logprobs": [
      {
       " #": -0.32816607
      },
      {
       " 0": -0.08912622
      },
      {
       ":": -0.0030184211
      },
      {
       " find": -1.013367
      },
      {
       " down": -0.04193994
      },
      {
       "\n": -0.598278
      },
      {
       " lay": -0.37975127
      },
      {
       "('": -0.117167674
      },
      {
       "bed": -0.041622303
      },
      {
       "')": -0.003131244
      },
      {
       "\n": -0.011944081
      },
      {
       " #": -0.95176613
      },
      {
       "('": -0.42070535
      },
      {
       "bed": -0.01759228
      },
      {
       "')": -0.0021712657
      },
      {
       "\n": -0.0103819
      },
      {
       " #": -0.0745362
      },
      {
       " 1": -0.0046697995
      },
      {
       ":": -0.0005102993
      },
      {
       " close": -0.079712085
      },
      {
       " eyes": -0.1661095
      },
      {
       "\n": -0.02355688
      },
      {
       " close": -0.41823295
      },
      {
       "('": -0.3782556
      },
      {
       "eyes": -0.023995133
      },
      {
       "')": -0.001538101
      },
      {
       "\n": -0.007348273
      },
      {
       " #": -0.01050995
      },
      {
       " 2": -0.0036080198
      },
      {
       ":": -0.0012594176
      },
      {
       " relax": -1.1638473
      },
      {
       " off": -0.29093337
      },
      {
       " to": -0.28973675
      },
      {
       " sleep": -0.008022419
      },
      {
       "\n": -0.009028858
      },
      {
       " drift": -0.4850517
      },
      {
       "('": -0.7882299
      },
      {
       "sleep": -0.13435486
      },
      {
       "')": -0.0027702255
      }
     ],
     "text_offset": [
      3156,
      3158,
      3160,
      3161,
      3165,
      3170,
      3171,
      3175,
      3177,
      3180,
      3182,
      3183,
      3187,
      3189,
      3192,
      3194,
      3195,
      3197,
      3199,
      3200,
      3206,
      3211,
      3212,
      3218,
      3220,
      3224,
      3226,
      3227,
      3229,
      3231,
      3232,
      3238,
      3242,
      3245,
      3251,
      3252,
      3258,
      3260,
      3265
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Sleep",
   "task_description": "Relax for the night or during the day, lying on the bed.",
   "program": [
    "[Walk] <bedroom> (1)",
    "[Walk] <bed> (1)",
    "[Lie] <bed> (1)",
    "[Sleep]"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upworknturk_second",
   "file_id": "split1_3",
   "goal_condition": [
    [
     [
      198,
      260,
      "ON",
      "character",
      "bed"
     ],
     [
      198,
      199,
      "INSIDE",
      "character",
      "bedroom"
     ]
    ],
    [
     [
      198,
      "character",
      "LYING"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1105,
   "completion_tokens": 39,
   "total_tokens": 1144
  }
 },
 "12": {
  "plan": [
   [
    " # 0: find newspaper\n find('newspaper')\n # 1: find desk\n find('desk')\n # 2: sit on desk chair\n sit('desk_chair')\n # 3: open newspaper\n open('newspaper')\n # 4: read newspaper\n read('newspaper')\n # 5: put newspaper back\n putobjback('newspaper')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " newspaper",
      "\n",
      " find",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " desk",
      "\n",
      " find",
      "('",
      "des",
      "k",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " sit",
      " on",
      " desk",
      " chair",
      "\n",
      " sit",
      "('",
      "des",
      "k",
      "_",
      "chair",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " open",
      " newspaper",
      "\n",
      " open",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " read",
      " newspaper",
      "\n",
      " read",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " put",
      " newspaper",
      " back",
      "\n",
      " put",
      "obj",
      "back",
      "('",
      "new",
      "sp",
      "aper",
      "')"
     ],
     "token_logprobs": [
      -0.01719902,
      -0.009346716,
      -0.001983299,
      -0.7313285,
      -0.37893862,
      -0.03601574,
      -0.031105394,
      -0.0023320834,
      -0.0035074076,
      -0.0007809583,
      -0.0005178132,
      -0.0026867897,
      -0.008352273,
      -0.005308966,
      -0.0028619182,
      -0.00052675663,
      -1.88928,
      -1.4165533,
      -0.08530929,
      -0.6601361,
      -0.0008951977,
      -0.0017605574,
      -0.00016840879,
      -0.0012949277,
      -0.0075994646,
      -0.046275448,
      -0.0051571345,
      -0.00064371066,
      -0.375647,
      -0.4702202,
      -0.7222344,
      -1.1860907,
      -0.021497887,
      -0.6541347,
      -0.0022645157,
      -0.042808603,
      -7.24364e-05,
      -0.40095732,
      -0.0014162097,
      -0.00290149,
      -0.00601246,
      -0.031856723,
      -0.00578708,
      -0.00085003924,
      -2.079754,
      -0.46944958,
      -0.060255732,
      -0.5575936,
      -0.002783435,
      -0.001564907,
      -0.00030976496,
      -0.0003274144,
      -0.001858009,
      -0.0045836917,
      -0.0119396765,
      -0.005032704,
      -0.0011952628,
      -0.09307113,
      -0.3464527,
      -0.010859372,
      -0.24906054,
      -0.0013993168,
      -0.0016658006,
      -0.002604137,
      -0.00043140285,
      -0.0018521555,
      -0.38380176,
      -0.028734494,
      -0.004262073,
      -0.0011687065,
      -1.0966296,
      -0.34524277,
      -0.3056439,
      -0.06138666,
      -0.10634535,
      -1.462868,
      -0.011426416,
      -0.001857411,
      -0.0023525187,
      -0.0005775095,
      -0.006345978,
      -0.0046210564
     ],
     "top_logprobs": [
      {
       " #": -0.01719902
      },
      {
       " 0": -0.009346716
      },
      {
       ":": -0.001983299
      },
      {
       " find": -0.7313285
      },
      {
       " newspaper": -0.37893862
      },
      {
       "\n": -0.03601574
      },
      {
       " find": -0.031105394
      },
      {
       "('": -0.0023320834
      },
      {
       "new": -0.0035074076
      },
      {
       "sp": -0.0007809583
      },
      {
       "aper": -0.0005178132
      },
      {
       "')": -0.0026867897
      },
      {
       "\n": -0.008352273
      },
      {
       " #": -0.005308966
      },
      {
       " 1": -0.0028619182
      },
      {
       ":": -0.00052675663
      },
      {
       " grab": -0.33754504
      },
      {
       " chair": -0.82009107
      },
      {
       "\n": -0.08530929
      },
      {
       " find": -0.6601361
      },
      {
       "('": -0.0008951977
      },
      {
       "des": -0.0017605574
      },
      {
       "k": -0.00016840879
      },
      {
       "')": -0.0012949277
      },
      {
       "\n": -0.0075994646
      },
      {
       " #": -0.046275448
      },
      {
       " 2": -0.0051571345
      },
      {
       ":": -0.00064371066
      },
      {
       " sit": -0.375647
      },
      {
       " on": -0.4702202
      },
      {
       " desk": -0.7222344
      },
      {
       "\n": -0.43188876
      },
      {
       "\n": -0.021497887
      },
      {
       " sit": -0.6541347
      },
      {
       "('": -0.0022645157
      },
      {
       "des": -0.042808603
      },
      {
       "k": -7.24364e-05
      },
      {
       "_": -0.40095732
      },
      {
       "chair": -0.0014162097
      },
      {
       "')": -0.00290149
      },
      {
       "\n": -0.00601246
      },
      {
       " #": -0.031856723
      },
      {
       " 3": -0.00578708
      },
      {
       ":": -0.00085003924
      },
      {
       " grab": -0.83485425
      },
      {
       " newspaper": -0.46944958
      },
      {
       "\n": -0.060255732
      },
      {
       " open": -0.5575936
      },
      {
       "('": -0.002783435
      },
      {
       "new": -0.001564907
      },
      {
       "sp": -0.00030976496
      },
      {
       "aper": -0.0003274144
      },
      {
       "')": -0.001858009
      },
      {
       "\n": -0.0045836917
      },
      {
       " #": -0.0119396765
      },
      {
       " 4": -0.005032704
      },
      {
       ":": -0.0011952628
      },
      {
       " read": -0.09307113
      },
      {
       " newspaper": -0.3464527
      },
      {
       "\n": -0.010859372
      },
      {
       " read": -0.24906054
      },
      {
       "('": -0.0013993168
      },
      {
       "new": -0.0016658006
      },
      {
       "sp": -0.002604137
      },
      {
       "aper": -0.00043140285
      },
      {
       "')": -0.0018521555
      },
      {
       "\n": -0.38380176
      },
      {
       " #": -0.028734494
      },
      {
       " 5": -0.004262073
      },
      {
       ":": -0.0011687065
      },
      {
       " close": -0.864017
      },
      {
       " newspaper": -0.34524277
      },
      {
       " back": -0.3056439
      },
      {
       "\n": -0.06138666
      },
      {
       " put": -0.10634535
      },
      {
       "back": -0.31986552
      },
      {
       "back": -0.011426416
      },
      {
       "('": -0.001857411
      },
      {
       "new": -0.0023525187
      },
      {
       "sp": -0.0005775095
      },
      {
       "aper": -0.006345978
      },
      {
       "')": -0.0046210564
      }
     ],
     "text_offset": [
      3160,
      3162,
      3164,
      3165,
      3170,
      3180,
      3181,
      3186,
      3188,
      3191,
      3193,
      3197,
      3199,
      3200,
      3202,
      3204,
      3205,
      3210,
      3215,
      3216,
      3221,
      3223,
      3226,
      3227,
      3229,
      3230,
      3232,
      3234,
      3235,
      3239,
      3242,
      3247,
      3253,
      3254,
      3258,
      3260,
      3263,
      3264,
      3265,
      3270,
      3272,
      3273,
      3275,
      3277,
      3278,
      3283,
      3293,
      3294,
      3299,
      3301,
      3304,
      3306,
      3310,
      3312,
      3313,
      3315,
      3317,
      3318,
      3323,
      3333,
      3334,
      3339,
      3341,
      3344,
      3346,
      3350,
      3352,
      3353,
      3355,
      3357,
      3358,
      3362,
      3372,
      3377,
      3378,
      3382,
      3385,
      3389,
      3391,
      3394,
      3396,
      3400
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Read news",
   "task_description": "Read news articles in a newspaper",
   "program": [
    "[Walk] <home_office> (1)",
    "[Walk] <chair> (1)",
    "[Find] <chair> (1)",
    "[Sit] <chair> (1)",
    "[Find] <newspaper> (1)",
    "[Grab] <newspaper> (1)",
    "[Read] <newspaper> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_july",
   "file_id": "split15_4",
   "goal_condition": [
    [
     [
      198,
      1,
      "INSIDE",
      "character",
      "home_office"
     ],
     [
      198,
      17,
      "ON",
      "character",
      "chair"
     ],
     [
      198,
      1000,
      "HOLDS_RH",
      "character",
      "newspaper"
     ]
    ],
    [
     [
      198,
      "character",
      "SITTING"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1107,
   "completion_tokens": 82,
   "total_tokens": 1189
  }
 },
 "13": {
  "plan": [
   [
    " # 0: find shoes\n find('shoes')\n # 1: grab shoes\n assert('close' to 'shoes')\n else: find('shoes')\n grab('shoes')\n assert('shoes' in 'hands')\n else: grab('shoes')\n turnto('shoes')\n assert('shoes' in 'hands')\n else: grab('shoes')\n pointat('shoes')\n # 2: put on shoes\n assert('shoes' in 'hands')\n else: grab('shoes')\n puton('shoes')\n turnto('shoes')\n lookat('shoes')\n # 3: done\ndef wash_your_face():\n # 0: find sink\n find('sink')\n # 1: fill sink with water\n pull('faucet')\n pour('water')\n # 2: wash face with water\n assert('close' to 'sink')\n else: find('sink')\n wash('face')\n turnto('sink')\n lookat('sink')\n # 3: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " shoes",
      "\n",
      " find",
      "('",
      "sh",
      "oes",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " grab",
      " shoes",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "sh",
      "oes",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "sh",
      "oes",
      "')",
      "\n",
      " grab",
      "('",
      "sh",
      "oes",
      "')",
      "\n",
      " assert",
      "('",
      "sh",
      "oes",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "sh",
      "oes",
      "')",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "sh",
      "oes",
      "')",
      "\n",
      " assert",
      "('",
      "sh",
      "oes",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "sh",
      "oes",
      "')",
      "\n",
      " point",
      "at",
      "('",
      "sh",
      "oes",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " put",
      " on",
      " shoes",
      "\n",
      " assert",
      "('",
      "sh",
      "oes",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "sh",
      "oes",
      "')",
      "\n",
      " put",
      "on",
      "('",
      "sh",
      "oes",
      "')",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "sh",
      "oes",
      "')",
      "\n",
      " look",
      "at",
      "('",
      "sh",
      "oes",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " done",
      "\n",
      "def",
      " wash",
      "_",
      "your",
      "_",
      "face",
      "():",
      "\n",
      " #",
      " 0",
      ":",
      " find",
      " sink",
      "\n",
      " find",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " fill",
      " sink",
      " with",
      " water",
      "\n",
      " pull",
      "('",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " pour",
      "('",
      "water",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " wash",
      " face",
      " with",
      " water",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "s",
      "ink",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " wash",
      "('",
      "face",
      "')",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " look",
      "at",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.013429321,
      -0.008185741,
      -0.0018761032,
      -0.34088403,
      -0.2820261,
      -0.040343635,
      -0.035675086,
      -0.0020520429,
      -0.0014739883,
      -0.0046053077,
      -0.0032810948,
      -0.007824593,
      -0.0070262486,
      -0.0022198905,
      -0.0006146632,
      -0.2658906,
      -0.120425195,
      -0.022143569,
      -0.49270648,
      -0.0015333852,
      -0.0054104202,
      -0.0024689678,
      -0.0006133528,
      -0.005377461,
      -0.00050516764,
      -0.0022936692,
      -0.0050076037,
      -0.0067225685,
      -0.0013284085,
      -0.0014171643,
      -0.0032790618,
      -0.0011689449,
      -0.0002103787,
      -0.0019680695,
      -0.001977805,
      -0.0066107824,
      -0.005097824,
      -0.0009031922,
      -0.00011678579,
      -0.00017866449,
      -0.0028692707,
      -0.0063218046,
      -0.67977166,
      -0.0011609484,
      -0.004702318,
      -0.0028189986,
      -0.0013136069,
      -0.013412829,
      -0.0030794044,
      -0.006421021,
      -0.016279923,
      -0.0031459536,
      -0.01039527,
      -0.0017796035,
      -0.0026790807,
      -0.0010701293,
      -0.00015803763,
      -0.0005874705,
      -0.002920859,
      -0.0043350453,
      -0.60691667,
      -4.2511267e-05,
      -0.00015374424,
      -0.00042746708,
      -0.00017186676,
      -0.00035299265,
      -0.0014498152,
      -0.0030742034,
      -0.32568824,
      -0.00036086416,
      -0.002214695,
      -0.0004841794,
      -0.0006882656,
      -0.001166678,
      -0.0009108892,
      -0.0009972168,
      -0.0011922807,
      -0.0012774406,
      -0.0026527846,
      -0.0005352843,
      -0.00073866546,
      -0.0005167393,
      -9.0675334e-05,
      -1.2588937e-05,
      -0.00059367216,
      -0.002570372,
      -0.077574216,
      -0.0005841889,
      -0.00033295903,
      -0.000120481265,
      -0.0005584239,
      -0.0024171055,
      -0.0050939294,
      -0.0034835425,
      -0.0068799164,
      -0.00074964116,
      -0.07537174,
      -0.31164655,
      -0.08907091,
      -0.014440318,
      -0.25282654,
      -0.0006102534,
      -0.10669291,
      -0.0003342722,
      -0.00085779064,
      -0.0017056847,
      -0.0012169267,
      -0.0023724134,
      -0.0024506229,
      -0.0016508142,
      -0.0011485986,
      -0.00090742746,
      -0.00252663,
      -0.000526996,
      -0.00011392572,
      -5.0140625e-05,
      -0.0006302908,
      -0.003864205,
      -0.04509926,
      -0.012919644,
      -0.0011250263,
      -0.00021061805,
      -0.0006325567,
      -0.0026014468,
      -0.026773725,
      -1.3554573,
      -5.693833e-05,
      -0.00048024458,
      -0.00031894777,
      -0.0016791754,
      -0.00068277825,
      -0.00085433444,
      -0.0034799534,
      -0.043625224,
      -0.00030213463,
      -0.00029664824,
      -0.00019964804,
      -0.00017592176,
      -0.00100915,
      -0.08070019,
      -0.010777308,
      -0.012532381,
      -0.0010149986,
      -1.5225481,
      -0.690171,
      -1.973236,
      -1.5174596,
      -0.0003998604,
      -1.1411686,
      -0.0030027598,
      -1.0863006,
      -0.041162897,
      -0.010904806,
      -0.008735814,
      -0.0037714646,
      -0.0015226415,
      -0.274525,
      -0.42259303,
      -0.028114462,
      -0.10612263,
      -0.0012286215,
      -0.00050039747,
      -0.00012620141,
      -0.0012603713,
      -0.005605686,
      -0.008145538,
      -0.00275845,
      -0.0005629566,
      -2.6037166,
      -0.36322147,
      -0.11635358,
      -0.05196285,
      -0.017357966,
      -3.2813118,
      -0.0053968164,
      -1.5210637,
      -0.0018313756,
      -0.0013737123,
      -0.02303483,
      -0.0076436102,
      -1.158766,
      -0.0043797046,
      -0.08335246,
      -0.125764,
      -0.011987994,
      -0.06632753,
      -0.0056506414,
      -0.00059247814,
      -0.89406765,
      -0.35767198,
      -1.5757115,
      -0.22355218,
      -0.027475758,
      -0.58334184,
      -0.0012231303,
      -0.057259306,
      -0.0027049566,
      -0.00071689725,
      -0.0024463793,
      -0.287455,
      -0.00029438327,
      -0.006119803,
      -0.0029172723,
      -0.0014923154,
      -0.0013565801,
      -0.0045404583,
      -0.0012903903,
      -0.0007380695,
      -0.00010891614,
      -0.002222637,
      -0.0055670263,
      -0.16759913,
      -0.001135588,
      -0.032752488,
      -0.008110505,
      -0.0076154415,
      -0.249467,
      -1.44972155e-05,
      -0.00021514892,
      -0.0001625685,
      -0.21939452,
      -3.023464e-05,
      -0.00062277593,
      -0.0023736092,
      -0.03258646,
      -0.00023094735,
      -0.00017770988,
      -0.08860495,
      -0.00020739941,
      -0.00080690725,
      -0.0051051923,
      -0.0022231156,
      -0.0056872675,
      -0.0010564062,
      -4.3506083
     ],
     "top_logprobs": [
      {
       " #": -0.013429321
      },
      {
       " 0": -0.008185741
      },
      {
       ":": -0.0018761032
      },
      {
       " find": -0.34088403
      },
      {
       " shoes": -0.2820261
      },
      {
       "\n": -0.040343635
      },
      {
       " find": -0.035675086
      },
      {
       "('": -0.0020520429
      },
      {
       "sh": -0.0014739883
      },
      {
       "oes": -0.0046053077
      },
      {
       "')": -0.0032810948
      },
      {
       "\n": -0.007824593
      },
      {
       " #": -0.0070262486
      },
      {
       " 1": -0.0022198905
      },
      {
       ":": -0.0006146632
      },
      {
       " grab": -0.2658906
      },
      {
       " shoes": -0.120425195
      },
      {
       "\n": -0.022143569
      },
      {
       " assert": -0.49270648
      },
      {
       "('": -0.0015333852
      },
      {
       "close": -0.0054104202
      },
      {
       "'": -0.0024689678
      },
      {
       " to": -0.0006133528
      },
      {
       " '": -0.005377461
      },
      {
       "sh": -0.00050516764
      },
      {
       "oes": -0.0022936692
      },
      {
       "')": -0.0050076037
      },
      {
       "\n": -0.0067225685
      },
      {
       " else": -0.0013284085
      },
      {
       ":": -0.0014171643
      },
      {
       " find": -0.0032790618
      },
      {
       "('": -0.0011689449
      },
      {
       "sh": -0.0002103787
      },
      {
       "oes": -0.0019680695
      },
      {
       "')": -0.001977805
      },
      {
       "\n": -0.0066107824
      },
      {
       " grab": -0.005097824
      },
      {
       "('": -0.0009031922
      },
      {
       "sh": -0.00011678579
      },
      {
       "oes": -0.00017866449
      },
      {
       "')": -0.0028692707
      },
      {
       "\n": -0.0063218046
      },
      {
       " assert": -0.67977166
      },
      {
       "('": -0.0011609484
      },
      {
       "sh": -0.004702318
      },
      {
       "oes": -0.0028189986
      },
      {
       "'": -0.0013136069
      },
      {
       " in": -0.013412829
      },
      {
       " '": -0.0030794044
      },
      {
       "hands": -0.006421021
      },
      {
       "')": -0.016279923
      },
      {
       "\n": -0.0031459536
      },
      {
       " else": -0.01039527
      },
      {
       ":": -0.0017796035
      },
      {
       " grab": -0.0026790807
      },
      {
       "('": -0.0010701293
      },
      {
       "sh": -0.00015803763
      },
      {
       "oes": -0.0005874705
      },
      {
       "')": -0.002920859
      },
      {
       "\n": -0.0043350453
      },
      {
       " tur": -0.60691667
      },
      {
       "nt": -4.2511267e-05
      },
      {
       "o": -0.00015374424
      },
      {
       "('": -0.00042746708
      },
      {
       "sh": -0.00017186676
      },
      {
       "oes": -0.00035299265
      },
      {
       "')": -0.0014498152
      },
      {
       "\n": -0.0030742034
      },
      {
       " assert": -0.32568824
      },
      {
       "('": -0.00036086416
      },
      {
       "sh": -0.002214695
      },
      {
       "oes": -0.0004841794
      },
      {
       "'": -0.0006882656
      },
      {
       " in": -0.001166678
      },
      {
       " '": -0.0009108892
      },
      {
       "hands": -0.0009972168
      },
      {
       "')": -0.0011922807
      },
      {
       "\n": -0.0012774406
      },
      {
       " else": -0.0026527846
      },
      {
       ":": -0.0005352843
      },
      {
       " grab": -0.00073866546
      },
      {
       "('": -0.0005167393
      },
      {
       "sh": -9.0675334e-05
      },
      {
       "oes": -1.2588937e-05
      },
      {
       "')": -0.00059367216
      },
      {
       "\n": -0.002570372
      },
      {
       " point": -0.077574216
      },
      {
       "at": -0.0005841889
      },
      {
       "('": -0.00033295903
      },
      {
       "sh": -0.000120481265
      },
      {
       "oes": -0.0005584239
      },
      {
       "')": -0.0024171055
      },
      {
       "\n": -0.0050939294
      },
      {
       " #": -0.0034835425
      },
      {
       " 2": -0.0068799164
      },
      {
       ":": -0.00074964116
      },
      {
       " put": -0.07537174
      },
      {
       " on": -0.31164655
      },
      {
       " shoes": -0.08907091
      },
      {
       "\n": -0.014440318
      },
      {
       " assert": -0.25282654
      },
      {
       "('": -0.0006102534
      },
      {
       "sh": -0.10669291
      },
      {
       "oes": -0.0003342722
      },
      {
       "'": -0.00085779064
      },
      {
       " in": -0.0017056847
      },
      {
       " '": -0.0012169267
      },
      {
       "hands": -0.0023724134
      },
      {
       "')": -0.0024506229
      },
      {
       "\n": -0.0016508142
      },
      {
       " else": -0.0011485986
      },
      {
       ":": -0.00090742746
      },
      {
       " grab": -0.00252663
      },
      {
       "('": -0.000526996
      },
      {
       "sh": -0.00011392572
      },
      {
       "oes": -5.0140625e-05
      },
      {
       "')": -0.0006302908
      },
      {
       "\n": -0.003864205
      },
      {
       " put": -0.04509926
      },
      {
       "on": -0.012919644
      },
      {
       "('": -0.0011250263
      },
      {
       "sh": -0.00021061805
      },
      {
       "oes": -0.0006325567
      },
      {
       "')": -0.0026014468
      },
      {
       "\n": -0.026773725
      },
      {
       " #": -0.704998
      },
      {
       "nt": -5.693833e-05
      },
      {
       "o": -0.00048024458
      },
      {
       "('": -0.00031894777
      },
      {
       "sh": -0.0016791754
      },
      {
       "oes": -0.00068277825
      },
      {
       "')": -0.00085433444
      },
      {
       "\n": -0.0034799534
      },
      {
       " look": -0.043625224
      },
      {
       "at": -0.00030213463
      },
      {
       "('": -0.00029664824
      },
      {
       "sh": -0.00019964804
      },
      {
       "oes": -0.00017592176
      },
      {
       "')": -0.00100915
      },
      {
       "\n": -0.08070019
      },
      {
       " #": -0.010777308
      },
      {
       " 3": -0.012532381
      },
      {
       ":": -0.0010149986
      },
      {
       " Done": -0.5413574
      },
      {
       "\n": -0.690171
      },
      {
       "<|endoftext|>": -1.3237505
      },
      {
       " wash": -1.5174596
      },
      {
       "_": -0.0003998604
      },
      {
       "d": -1.012556
      },
      {
       "_": -0.0030027598
      },
      {
       "hands": -0.5884254
      },
      {
       "():": -0.041162897
      },
      {
       "\n": -0.010904806
      },
      {
       " #": -0.008735814
      },
      {
       " 0": -0.0037714646
      },
      {
       ":": -0.0015226415
      },
      {
       " find": -0.274525
      },
      {
       " sink": -0.42259303
      },
      {
       "\n": -0.028114462
      },
      {
       " find": -0.10612263
      },
      {
       "('": -0.0012286215
      },
      {
       "s": -0.00050039747
      },
      {
       "ink": -0.00012620141
      },
      {
       "')": -0.0012603713
      },
      {
       "\n": -0.005605686
      },
      {
       " #": -0.008145538
      },
      {
       " 1": -0.00275845
      },
      {
       ":": -0.0005629566
      },
      {
       " turn": -0.97218966
      },
      {
       " sink": -0.36322147
      },
      {
       " with": -0.11635358
      },
      {
       " water": -0.05196285
      },
      {
       "\n": -0.017357966
      },
      {
       " assert": -0.7953184
      },
      {
       "('": -0.0053968164
      },
      {
       "s": -0.5575152
      },
      {
       "auc": -0.0018313756
      },
      {
       "et": -0.0013737123
      },
      {
       "')": -0.02303483
      },
      {
       "\n": -0.0076436102
      },
      {
       " #": -0.96233577
      },
      {
       "('": -0.0043797046
      },
      {
       "water": -0.08335246
      },
      {
       "')": -0.125764
      },
      {
       "\n": -0.011987994
      },
      {
       " #": -0.06632753
      },
      {
       " 2": -0.0056506414
      },
      {
       ":": -0.00059247814
      },
      {
       " wash": -0.89406765
      },
      {
       " face": -0.35767198
      },
      {
       "\n": -0.25454447
      },
      {
       " water": -0.22355218
      },
      {
       "\n": -0.027475758
      },
      {
       " assert": -0.58334184
      },
      {
       "('": -0.0012231303
      },
      {
       "close": -0.057259306
      },
      {
       "'": -0.0027049566
      },
      {
       " to": -0.00071689725
      },
      {
       " '": -0.0024463793
      },
      {
       "s": -0.287455
      },
      {
       "ink": -0.00029438327
      },
      {
       "')": -0.006119803
      },
      {
       "\n": -0.0029172723
      },
      {
       " else": -0.0014923154
      },
      {
       ":": -0.0013565801
      },
      {
       " find": -0.0045404583
      },
      {
       "('": -0.0012903903
      },
      {
       "s": -0.0007380695
      },
      {
       "ink": -0.00010891614
      },
      {
       "')": -0.002222637
      },
      {
       "\n": -0.0055670263
      },
      {
       " wash": -0.16759913
      },
      {
       "('": -0.001135588
      },
      {
       "face": -0.032752488
      },
      {
       "')": -0.008110505
      },
      {
       "\n": -0.0076154415
      },
      {
       " tur": -0.249467
      },
      {
       "nt": -1.44972155e-05
      },
      {
       "o": -0.00021514892
      },
      {
       "('": -0.0001625685
      },
      {
       "s": -0.21939452
      },
      {
       "ink": -3.023464e-05
      },
      {
       "')": -0.00062277593
      },
      {
       "\n": -0.0023736092
      },
      {
       " look": -0.03258646
      },
      {
       "at": -0.00023094735
      },
      {
       "('": -0.00017770988
      },
      {
       "s": -0.08860495
      },
      {
       "ink": -0.00020739941
      },
      {
       "')": -0.00080690725
      },
      {
       "\n": -0.0051051923
      },
      {
       " #": -0.0022231156
      },
      {
       " 3": -0.0056872675
      },
      {
       ":": -0.0010564062
      },
      {
       " dry": -1.663669
      }
     ],
     "text_offset": [
      3168,
      3170,
      3172,
      3173,
      3178,
      3184,
      3185,
      3190,
      3192,
      3194,
      3197,
      3199,
      3200,
      3202,
      3204,
      3205,
      3210,
      3216,
      3217,
      3224,
      3226,
      3231,
      3232,
      3235,
      3237,
      3239,
      3242,
      3244,
      3245,
      3250,
      3251,
      3256,
      3258,
      3260,
      3263,
      3265,
      3266,
      3271,
      3273,
      3275,
      3278,
      3280,
      3281,
      3288,
      3290,
      3292,
      3295,
      3296,
      3299,
      3301,
      3306,
      3308,
      3309,
      3314,
      3315,
      3320,
      3322,
      3324,
      3327,
      3329,
      3330,
      3334,
      3336,
      3337,
      3339,
      3341,
      3344,
      3346,
      3347,
      3354,
      3356,
      3358,
      3361,
      3362,
      3365,
      3367,
      3372,
      3374,
      3375,
      3380,
      3381,
      3386,
      3388,
      3390,
      3393,
      3395,
      3396,
      3402,
      3404,
      3406,
      3408,
      3411,
      3413,
      3414,
      3416,
      3418,
      3419,
      3423,
      3426,
      3432,
      3433,
      3440,
      3442,
      3444,
      3447,
      3448,
      3451,
      3453,
      3458,
      3460,
      3461,
      3466,
      3467,
      3472,
      3474,
      3476,
      3479,
      3481,
      3482,
      3486,
      3488,
      3490,
      3492,
      3495,
      3497,
      3498,
      3502,
      3504,
      3505,
      3507,
      3509,
      3512,
      3514,
      3515,
      3520,
      3522,
      3524,
      3526,
      3529,
      3531,
      3532,
      3534,
      3536,
      3537,
      3542,
      3543,
      3546,
      3551,
      3552,
      3556,
      3557,
      3561,
      3564,
      3565,
      3567,
      3569,
      3570,
      3575,
      3580,
      3581,
      3586,
      3588,
      3589,
      3592,
      3594,
      3595,
      3597,
      3599,
      3600,
      3605,
      3610,
      3615,
      3621,
      3622,
      3627,
      3629,
      3630,
      3633,
      3635,
      3637,
      3638,
      3643,
      3645,
      3650,
      3652,
      3653,
      3655,
      3657,
      3658,
      3663,
      3668,
      3673,
      3679,
      3680,
      3687,
      3689,
      3694,
      3695,
      3698,
      3700,
      3701,
      3704,
      3706,
      3707,
      3712,
      3713,
      3718,
      3720,
      3721,
      3724,
      3726,
      3727,
      3732,
      3734,
      3738,
      3740,
      3741,
      3745,
      3747,
      3748,
      3750,
      3751,
      3754,
      3756,
      3757,
      3762,
      3764,
      3766,
      3767,
      3770,
      3772,
      3773,
      3775,
      3777,
      3778
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Put on your shoes",
   "task_description": "Sit on a chair with your shoes in front of you.  Put them on one at a time.",
   "program": [
    "[Walk] <home_office> (1)",
    "[Walk] <shoes> (1)",
    "[Find] <shoes> (1)",
    "[Grab] <shoes> (1)",
    "[Find] <chair> (1)",
    "[Sit] <chair> (1)",
    "[Find] <feet_both> (1)",
    "[PutBack] <shoes> (1) <feet_both> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_july",
   "file_id": "split8_1",
   "goal_condition": [
    [
     [
      198,
      1,
      "INSIDE",
      "character",
      "home_office"
     ],
     [
      198,
      17,
      "ON",
      "character",
      "chair"
     ],
     [
      1000,
      1001,
      "ON",
      "shoes",
      "feet_both"
     ]
    ],
    [
     [
      198,
      "character",
      "SITTING"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1112,
   "completion_tokens": 235,
   "total_tokens": 1347
  }
 },
 "14": {
  "plan": [
   [
    " # 0: find faucet\n find('faucet')\n # 1: turn on faucet\n turnto('faucet')\n lookat('faucet')\n assert('close' to 'faucet')\n else: find('faucet')\n switchon('faucet')\n # 2: put hands under running water\n turnto('faucet')\n pointat('faucet')\n putin('hands')\n # 3: add soap\n grab('soap')\n wash('hands')\n # 4: rinse hands\n pour('water')\n # 5: turn off faucet\n switchoff('faucet')\n # 6: dry hands\n wipe('hands')\n # 7: Done\ndone()",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " f",
      "auc",
      "et",
      "\n",
      " find",
      "('",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " turn",
      " on",
      " f",
      "auc",
      "et",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " look",
      "at",
      "('",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " switch",
      "on",
      "('",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " put",
      " hands",
      " under",
      " running",
      " water",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " point",
      "at",
      "('",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " put",
      "in",
      "('",
      "hands",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " add",
      " soap",
      "\n",
      " grab",
      "('",
      "so",
      "ap",
      "')",
      "\n",
      " wash",
      "('",
      "hands",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " rinse",
      " hands",
      "\n",
      " pour",
      "('",
      "water",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " turn",
      " off",
      " f",
      "auc",
      "et",
      "\n",
      " switch",
      "off",
      "('",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " #",
      " 6",
      ":",
      " dry",
      " hands",
      "\n",
      " wipe",
      "('",
      "hands",
      "')",
      "\n",
      " #",
      " 7",
      ":",
      " Done",
      "\n",
      "done",
      "()"
     ],
     "token_logprobs": [
      -0.02070352,
      -0.0113253165,
      -0.0023400302,
      -0.62766874,
      -2.8102975,
      -0.0010409523,
      -0.0013852906,
      -0.042806428,
      -0.06393106,
      -0.0022801077,
      -0.00082826347,
      -0.00031358056,
      -0.00022170728,
      -0.0019852112,
      -0.009880395,
      -0.009923258,
      -0.0035867256,
      -0.0010659533,
      -0.39760125,
      -0.17690368,
      -0.6840519,
      -0.0009721014,
      -0.0004958666,
      -0.027835444,
      -1.0247551,
      -7.3745825e-05,
      -0.00046169595,
      -0.0008825494,
      -0.00052818906,
      -0.00093433383,
      -0.00039115347,
      -0.0018131621,
      -0.006736668,
      -1.1249982,
      -0.0007815553,
      -0.0007267381,
      -0.00031894777,
      -0.00057560124,
      -0.00019440286,
      -0.0023360278,
      -0.0051518017,
      -0.63166225,
      -0.0010882105,
      -0.026312405,
      -0.0030706166,
      -0.00040987958,
      -0.0023687086,
      -0.0008947209,
      -0.00031978224,
      -0.00052449165,
      -0.005180741,
      -0.0038603754,
      -0.0022179184,
      -0.0014413383,
      -0.0056623295,
      -0.0018420633,
      -0.00035049114,
      -0.0003506094,
      -0.00010510146,
      -0.0023378786,
      -0.008044167,
      -0.11494231,
      -0.0022437265,
      -0.00088720414,
      -0.0005081507,
      -0.00053671666,
      -0.00023810269,
      -0.0018036076,
      -0.0052482076,
      -0.02230391,
      -0.008172821,
      -0.0008965109,
      -1.7390184,
      -0.28423193,
      -0.3846262,
      -1.6759915,
      -0.018381566,
      -0.021193312,
      -1.2935717,
      -6.4566746e-05,
      -0.0014493376,
      -0.00048823532,
      -0.24271517,
      -0.00033224377,
      -7.97072e-05,
      -0.0016534413,
      -0.0044447207,
      -2.6066034,
      -0.0015088517,
      -0.0005339749,
      -0.036255024,
      -0.00081848085,
      -0.00023678952,
      -0.0013028058,
      -0.0049716593,
      -2.2285602,
      -0.53313553,
      -0.0058362423,
      -0.08494883,
      -2.2542536,
      -0.08132055,
      -0.09252497,
      -0.005587704,
      -0.0012682484,
      -1.9174693,
      -0.09894743,
      -0.13903607,
      -0.73617613,
      -0.0019149183,
      -0.0079071205,
      -0.00021813008,
      -0.0039532427,
      -0.0051413765,
      -1.856605,
      -0.002554597,
      -0.667005,
      -0.012303054,
      -0.007532023,
      -0.15696573,
      -0.006729889,
      -0.0020570601,
      -0.5500966,
      -0.66803896,
      -0.06680782,
      -1.5168266,
      -0.011139662,
      -0.47154397,
      -0.0619949,
      -0.017526705,
      -0.6027764,
      -0.0049408097,
      -0.0012113774,
      -0.31249222,
      -0.026368154,
      -0.12179747,
      -0.0004875182,
      -0.0012018295,
      -0.014530786,
      -0.18732624,
      -0.0029693402,
      -0.0010499014,
      -0.0011670357,
      -0.00063392805,
      -0.00015243483,
      -0.002669578,
      -0.2790176,
      -0.024813188,
      -0.0037959334,
      -0.0024902422,
      -0.9938655,
      -0.031050857,
      -0.07945437,
      -2.544124,
      -0.0013772923,
      -0.010283556,
      -0.0026921064,
      -0.1485128,
      -0.030943943,
      -0.011213558,
      -0.0021045445,
      -0.48935834,
      -1.1938987,
      -3.48916,
      -0.16923152
     ],
     "top_logprobs": [
      {
       " #": -0.02070352
      },
      {
       " 0": -0.0113253165
      },
      {
       ":": -0.0023400302
      },
      {
       " find": -0.62766874
      },
      {
       " sink": -0.46409672
      },
      {
       "auc": -0.0010409523
      },
      {
       "et": -0.0013852906
      },
      {
       "\n": -0.042806428
      },
      {
       " find": -0.06393106
      },
      {
       "('": -0.0022801077
      },
      {
       "f": -0.00082826347
      },
      {
       "auc": -0.00031358056
      },
      {
       "et": -0.00022170728
      },
      {
       "')": -0.0019852112
      },
      {
       "\n": -0.009880395
      },
      {
       " #": -0.009923258
      },
      {
       " 1": -0.0035867256
      },
      {
       ":": -0.0010659533
      },
      {
       " turn": -0.39760125
      },
      {
       " on": -0.17690368
      },
      {
       " f": -0.6840519
      },
      {
       "auc": -0.0009721014
      },
      {
       "et": -0.0004958666
      },
      {
       "\n": -0.027835444
      },
      {
       " tur": -1.0247551
      },
      {
       "nt": -7.3745825e-05
      },
      {
       "o": -0.00046169595
      },
      {
       "('": -0.0008825494
      },
      {
       "f": -0.00052818906
      },
      {
       "auc": -0.00093433383
      },
      {
       "et": -0.00039115347
      },
      {
       "')": -0.0018131621
      },
      {
       "\n": -0.006736668
      },
      {
       " look": -1.1249982
      },
      {
       "at": -0.0007815553
      },
      {
       "('": -0.0007267381
      },
      {
       "f": -0.00031894777
      },
      {
       "auc": -0.00057560124
      },
      {
       "et": -0.00019440286
      },
      {
       "')": -0.0023360278
      },
      {
       "\n": -0.0051518017
      },
      {
       " assert": -0.63166225
      },
      {
       "('": -0.0010882105
      },
      {
       "close": -0.026312405
      },
      {
       "'": -0.0030706166
      },
      {
       " to": -0.00040987958
      },
      {
       " '": -0.0023687086
      },
      {
       "f": -0.0008947209
      },
      {
       "auc": -0.00031978224
      },
      {
       "et": -0.00052449165
      },
      {
       "')": -0.005180741
      },
      {
       "\n": -0.0038603754
      },
      {
       " else": -0.0022179184
      },
      {
       ":": -0.0014413383
      },
      {
       " find": -0.0056623295
      },
      {
       "('": -0.0018420633
      },
      {
       "f": -0.00035049114
      },
      {
       "auc": -0.0003506094
      },
      {
       "et": -0.00010510146
      },
      {
       "')": -0.0023378786
      },
      {
       "\n": -0.008044167
      },
      {
       " switch": -0.11494231
      },
      {
       "on": -0.0022437265
      },
      {
       "('": -0.00088720414
      },
      {
       "f": -0.0005081507
      },
      {
       "auc": -0.00053671666
      },
      {
       "et": -0.00023810269
      },
      {
       "')": -0.0018036076
      },
      {
       "\n": -0.0052482076
      },
      {
       " #": -0.02230391
      },
      {
       " 2": -0.008172821
      },
      {
       ":": -0.0008965109
      },
      {
       " grab": -1.5294772
      },
      {
       " hands": -0.28423193
      },
      {
       " under": -0.3846262
      },
      {
       " water": -1.1413398
      },
      {
       " water": -0.018381566
      },
      {
       "\n": -0.021193312
      },
      {
       " assert": -1.1852458
      },
      {
       "nt": -6.4566746e-05
      },
      {
       "o": -0.0014493376
      },
      {
       "('": -0.00048823532
      },
      {
       "f": -0.24271517
      },
      {
       "auc": -0.00033224377
      },
      {
       "et": -7.97072e-05
      },
      {
       "')": -0.0016534413
      },
      {
       "\n": -0.0044447207
      },
      {
       " look": -0.42072475
      },
      {
       "at": -0.0015088517
      },
      {
       "('": -0.0005339749
      },
      {
       "f": -0.036255024
      },
      {
       "auc": -0.00081848085
      },
      {
       "et": -0.00023678952
      },
      {
       "')": -0.0013028058
      },
      {
       "\n": -0.0049716593
      },
      {
       " #": -0.8042601
      },
      {
       "in": -0.53313553
      },
      {
       "('": -0.0058362423
      },
      {
       "hands": -0.08494883
      },
      {
       "',": -0.42927605
      },
      {
       "\n": -0.08132055
      },
      {
       " #": -0.09252497
      },
      {
       " 3": -0.005587704
      },
      {
       ":": -0.0012682484
      },
      {
       " add": -1.9174693
      },
      {
       " soap": -0.09894743
      },
      {
       "\n": -0.13903607
      },
      {
       " grab": -0.73617613
      },
      {
       "('": -0.0019149183
      },
      {
       "so": -0.0079071205
      },
      {
       "ap": -0.00021813008
      },
      {
       "')": -0.0039532427
      },
      {
       "\n": -0.0051413765
      },
      {
       " put": -1.1685357
      },
      {
       "('": -0.002554597
      },
      {
       "hands": -0.667005
      },
      {
       "')": -0.012303054
      },
      {
       "\n": -0.007532023
      },
      {
       " #": -0.15696573
      },
      {
       " 4": -0.006729889
      },
      {
       ":": -0.0020570601
      },
      {
       " rinse": -0.5500966
      },
      {
       " hands": -0.66803896
      },
      {
       "\n": -0.06680782
      },
      {
       " pour": -1.5168266
      },
      {
       "('": -0.011139662
      },
      {
       "water": -0.47154397
      },
      {
       "')": -0.0619949
      },
      {
       "\n": -0.017526705
      },
      {
       " #": -0.6027764
      },
      {
       " 5": -0.0049408097
      },
      {
       ":": -0.0012113774
      },
      {
       " turn": -0.31249222
      },
      {
       " off": -0.026368154
      },
      {
       " f": -0.12179747
      },
      {
       "auc": -0.0004875182
      },
      {
       "et": -0.0012018295
      },
      {
       "\n": -0.014530786
      },
      {
       " switch": -0.18732624
      },
      {
       "off": -0.0029693402
      },
      {
       "('": -0.0010499014
      },
      {
       "f": -0.0011670357
      },
      {
       "auc": -0.00063392805
      },
      {
       "et": -0.00015243483
      },
      {
       "')": -0.002669578
      },
      {
       "\n": -0.2790176
      },
      {
       " #": -0.024813188
      },
      {
       " 6": -0.0037959334
      },
      {
       ":": -0.0024902422
      },
      {
       " dry": -0.9938655
      },
      {
       " hands": -0.031050857
      },
      {
       "\n": -0.07945437
      },
      {
       " grab": -0.13219684
      },
      {
       "('": -0.0013772923
      },
      {
       "hands": -0.010283556
      },
      {
       "')": -0.0026921064
      },
      {
       "\n": -0.1485128
      },
      {
       " #": -0.030943943
      },
      {
       " 7": -0.011213558
      },
      {
       ":": -0.0021045445
      },
      {
       " Done": -0.48935834
      },
      {
       "<|endoftext|>": -0.4363122
      },
      {
       "def": -1.5050265
      },
      {
       "()": -0.16923152
      }
     ],
     "text_offset": [
      3163,
      3165,
      3167,
      3168,
      3173,
      3175,
      3178,
      3180,
      3181,
      3186,
      3188,
      3189,
      3192,
      3194,
      3196,
      3197,
      3199,
      3201,
      3202,
      3207,
      3210,
      3212,
      3215,
      3217,
      3218,
      3222,
      3224,
      3225,
      3227,
      3228,
      3231,
      3233,
      3235,
      3236,
      3241,
      3243,
      3245,
      3246,
      3249,
      3251,
      3253,
      3254,
      3261,
      3263,
      3268,
      3269,
      3272,
      3274,
      3275,
      3278,
      3280,
      3282,
      3283,
      3288,
      3289,
      3294,
      3296,
      3297,
      3300,
      3302,
      3304,
      3305,
      3312,
      3314,
      3316,
      3317,
      3320,
      3322,
      3324,
      3325,
      3327,
      3329,
      3330,
      3334,
      3340,
      3346,
      3354,
      3360,
      3361,
      3365,
      3367,
      3368,
      3370,
      3371,
      3374,
      3376,
      3378,
      3379,
      3385,
      3387,
      3389,
      3390,
      3393,
      3395,
      3397,
      3398,
      3402,
      3404,
      3406,
      3411,
      3413,
      3414,
      3416,
      3418,
      3419,
      3423,
      3428,
      3429,
      3434,
      3436,
      3438,
      3440,
      3442,
      3443,
      3448,
      3450,
      3455,
      3457,
      3458,
      3460,
      3462,
      3463,
      3469,
      3475,
      3476,
      3481,
      3483,
      3488,
      3490,
      3491,
      3493,
      3495,
      3496,
      3501,
      3505,
      3507,
      3510,
      3512,
      3513,
      3520,
      3523,
      3525,
      3526,
      3529,
      3531,
      3533,
      3534,
      3536,
      3538,
      3539,
      3543,
      3549,
      3550,
      3555,
      3557,
      3562,
      3564,
      3565,
      3567,
      3569,
      3570,
      3575,
      3576,
      3580
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Hand washing",
   "task_description": "Turn on the faucet. Soap up your hands. Then rinse under the running water of the faucet. Turn off faucet and dry hands.",
   "program": [
    "[Walk] <bathroom> (1)",
    "[Walk] <sink> (1)",
    "[Find] <faucet> (1)",
    "[SwitchOn] <faucet> (1)",
    "[Find] <soap> (1)",
    "[Grab] <soap> (1)",
    "[Find] <hands_both> (1)",
    "[Scrub] <hands_both> (1)",
    "[PutObjBack] <soap> (1)",
    "[Wash] <hands_both> (1)",
    "[SwitchOff] <faucet> (1)",
    "[Find] <towel> (1)",
    "[Grab] <towel> (1)",
    "[Wipe] <hands_both> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_july",
   "file_id": "split4_7",
   "goal_condition": [
    [
     [
      198,
      262,
      "INSIDE",
      "character",
      "bathroom"
     ],
     [
      198,
      1002,
      "HOLDS_RH",
      "character",
      "towel"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1107,
   "completion_tokens": 164,
   "total_tokens": 1271
  }
 },
 "15": {
  "plan": [
   [
    " # 0: find drink\n find('drink')\n # 1: grab drink\n assert('close' to 'drink')\n else: find('drink')\n grab('drink')\n # 2: turnto drink\n turnto('drink')\n # 3: drink\n drink('drink')\n # 4: put the drink back\n assert('close' to 'drink')\n else: find('drink')\n putobjback('drink')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " drink",
      "\n",
      " find",
      "('",
      "dr",
      "ink",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " grab",
      " drink",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "dr",
      "ink",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "dr",
      "ink",
      "')",
      "\n",
      " grab",
      "('",
      "dr",
      "ink",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " tur",
      "nt",
      "o",
      " drink",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "dr",
      "ink",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " drink",
      "\n",
      " drink",
      "('",
      "dr",
      "ink",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " put",
      " the",
      " drink",
      " back",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "dr",
      "ink",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "dr",
      "ink",
      "')",
      "\n",
      " put",
      "obj",
      "back",
      "('",
      "dr",
      "ink",
      "')"
     ],
     "token_logprobs": [
      -0.08266033,
      -0.032402173,
      -0.0042028143,
      -0.1821783,
      -1.5058757,
      -0.06430774,
      -0.018629175,
      -0.005143054,
      -0.007947917,
      -0.0007152264,
      -0.0028477514,
      -0.013178045,
      -0.004584649,
      -0.0037718231,
      -0.0010403544,
      -0.047456887,
      -0.07903235,
      -0.016836712,
      -0.511529,
      -0.001754228,
      -0.0038980145,
      -0.0022992252,
      -0.00072190684,
      -0.004399162,
      -0.0009253256,
      -0.00019153998,
      -0.0042761397,
      -0.0069412556,
      -0.0015253869,
      -0.0013737123,
      -0.0037060117,
      -0.0018225383,
      -0.00035704856,
      -0.0002816242,
      -0.0018558585,
      -0.0060023847,
      -0.0025309327,
      -0.0007290039,
      -0.00019690624,
      -0.00019285125,
      -0.002083578,
      -0.0045487825,
      -1.2903659,
      -0.01050754,
      -0.0008205074,
      -2.6253703,
      -0.000549242,
      -0.0025850132,
      -0.061713304,
      -0.03493067,
      -0.07521609,
      -2.3675353e-05,
      -0.00034035373,
      -0.0008926924,
      -0.00026373632,
      -0.00017472965,
      -0.0012533896,
      -0.006131075,
      -0.34669244,
      -0.007189947,
      -0.0011951445,
      -0.19204514,
      -0.7214774,
      -0.38765788,
      -0.08777272,
      -0.00067496306,
      -0.0002229003,
      -0.0020186543,
      -0.27081546,
      -0.038741715,
      -0.012715884,
      -0.0015747572,
      -0.35445562,
      -2.3753164,
      -0.082482636,
      -0.18515456,
      -0.038571216,
      -0.65298533,
      -0.0014107758,
      -0.6291621,
      -0.0023237192,
      -0.000411847,
      -0.0027417168,
      -0.00209242,
      -0.0005315287,
      -0.0029499694,
      -0.004425264,
      -0.0013780096,
      -0.0009493682,
      -0.019208906,
      -0.000992502,
      -0.00025097816,
      -0.00027399295,
      -0.0013894703,
      -0.005862802,
      -0.08611785,
      -0.6295952,
      -0.0038819774,
      -0.0014765556,
      -0.00033355693,
      -0.00059963536,
      -0.0019583337
     ],
     "top_logprobs": [
      {
       " #": -0.08266033
      },
      {
       " 0": -0.032402173
      },
      {
       ":": -0.0042028143
      },
      {
       " find": -0.1821783
      },
      {
       " cup": -0.71254176
      },
      {
       "\n": -0.06430774
      },
      {
       " find": -0.018629175
      },
      {
       "('": -0.005143054
      },
      {
       "dr": -0.007947917
      },
      {
       "ink": -0.0007152264
      },
      {
       "')": -0.0028477514
      },
      {
       "\n": -0.013178045
      },
      {
       " #": -0.004584649
      },
      {
       " 1": -0.0037718231
      },
      {
       ":": -0.0010403544
      },
      {
       " grab": -0.047456887
      },
      {
       " drink": -0.07903235
      },
      {
       "\n": -0.016836712
      },
      {
       " assert": -0.511529
      },
      {
       "('": -0.001754228
      },
      {
       "close": -0.0038980145
      },
      {
       "'": -0.0022992252
      },
      {
       " to": -0.00072190684
      },
      {
       " '": -0.004399162
      },
      {
       "dr": -0.0009253256
      },
      {
       "ink": -0.00019153998
      },
      {
       "')": -0.0042761397
      },
      {
       "\n": -0.0069412556
      },
      {
       " else": -0.0015253869
      },
      {
       ":": -0.0013737123
      },
      {
       " find": -0.0037060117
      },
      {
       "('": -0.0018225383
      },
      {
       "dr": -0.00035704856
      },
      {
       "ink": -0.0002816242
      },
      {
       "')": -0.0018558585
      },
      {
       "\n": -0.0060023847
      },
      {
       " grab": -0.0025309327
      },
      {
       "('": -0.0007290039
      },
      {
       "dr": -0.00019690624
      },
      {
       "ink": -0.00019285125
      },
      {
       "')": -0.002083578
      },
      {
       "\n": -0.0045487825
      },
      {
       " assert": -0.3999279
      },
      {
       " 2": -0.01050754
      },
      {
       ":": -0.0008205074
      },
      {
       " drink": -0.41472837
      },
      {
       "nt": -0.000549242
      },
      {
       "o": -0.0025850132
      },
      {
       " drink": -0.061713304
      },
      {
       "\n": -0.03493067
      },
      {
       " tur": -0.07521609
      },
      {
       "nt": -2.3675353e-05
      },
      {
       "o": -0.00034035373
      },
      {
       "('": -0.0008926924
      },
      {
       "dr": -0.00026373632
      },
      {
       "ink": -0.00017472965
      },
      {
       "')": -0.0012533896
      },
      {
       "\n": -0.006131075
      },
      {
       " #": -0.34669244
      },
      {
       " 3": -0.007189947
      },
      {
       ":": -0.0011951445
      },
      {
       " drink": -0.19204514
      },
      {
       "\n": -0.7214774
      },
      {
       " drink": -0.38765788
      },
      {
       "('": -0.08777272
      },
      {
       "dr": -0.00067496306
      },
      {
       "ink": -0.0002229003
      },
      {
       "')": -0.0020186543
      },
      {
       "\n": -0.27081546
      },
      {
       " #": -0.038741715
      },
      {
       " 4": -0.012715884
      },
      {
       ":": -0.0015747572
      },
      {
       " put": -0.35445562
      },
      {
       " drink": -0.8819404
      },
      {
       " drink": -0.082482636
      },
      {
       " back": -0.18515456
      },
      {
       "\n": -0.038571216
      },
      {
       " assert": -0.65298533
      },
      {
       "('": -0.0014107758
      },
      {
       "close": -0.6291621
      },
      {
       "'": -0.0023237192
      },
      {
       " to": -0.000411847
      },
      {
       " '": -0.0027417168
      },
      {
       "dr": -0.00209242
      },
      {
       "ink": -0.0005315287
      },
      {
       "')": -0.0029499694
      },
      {
       "\n": -0.004425264
      },
      {
       " else": -0.0013780096
      },
      {
       ":": -0.0009493682
      },
      {
       " find": -0.019208906
      },
      {
       "('": -0.000992502
      },
      {
       "dr": -0.00025097816
      },
      {
       "ink": -0.00027399295
      },
      {
       "')": -0.0013894703
      },
      {
       "\n": -0.005862802
      },
      {
       " put": -0.08611785
      },
      {
       "obj": -0.6295952
      },
      {
       "back": -0.0038819774
      },
      {
       "('": -0.0014765556
      },
      {
       "dr": -0.00033355693
      },
      {
       "ink": -0.00059963536
      },
      {
       "')": -0.0019583337
      }
     ],
     "text_offset": [
      3156,
      3158,
      3160,
      3161,
      3166,
      3172,
      3173,
      3178,
      3180,
      3182,
      3185,
      3187,
      3188,
      3190,
      3192,
      3193,
      3198,
      3204,
      3205,
      3212,
      3214,
      3219,
      3220,
      3223,
      3225,
      3227,
      3230,
      3232,
      3233,
      3238,
      3239,
      3244,
      3246,
      3248,
      3251,
      3253,
      3254,
      3259,
      3261,
      3263,
      3266,
      3268,
      3269,
      3271,
      3273,
      3274,
      3278,
      3280,
      3281,
      3287,
      3288,
      3292,
      3294,
      3295,
      3297,
      3299,
      3302,
      3304,
      3305,
      3307,
      3309,
      3310,
      3316,
      3317,
      3323,
      3325,
      3327,
      3330,
      3332,
      3333,
      3335,
      3337,
      3338,
      3342,
      3346,
      3352,
      3357,
      3358,
      3365,
      3367,
      3372,
      3373,
      3376,
      3378,
      3380,
      3383,
      3385,
      3386,
      3391,
      3392,
      3397,
      3399,
      3401,
      3404,
      3406,
      3407,
      3411,
      3414,
      3418,
      3420,
      3422,
      3425
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Drink",
   "task_description": "I bring the cup filled with water to my lips. I tilt the cup upwards slowly, so that the water falls into my mouth.",
   "program": [
    "[Find] <water_glass> (1)",
    "[Grab] <water_glass> (1)",
    "[Drink] <water_glass> (1)"
   ],
   "batch": "results_intentions_march-13-18",
   "file_id": "file146_1",
   "goal_condition": [
    [
     [
      198,
      1000,
      "HOLDS_RH",
      "character",
      "water_glass"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1105,
   "completion_tokens": 102,
   "total_tokens": 1207
  }
 },
 "16": {
  "plan": [
   [
    " # 0: walk to toilet\n walk('toilet')\n # 1: find toilet\n find('toilet')\n # 2: sit on toilet\n sit('toilet')\n # 3: flush the toilet\n flush('toilet')\n # 4: stand up\n standup()",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " toilet",
      "\n",
      " walk",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " toilet",
      "\n",
      " find",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " sit",
      " on",
      " toilet",
      "\n",
      " sit",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " flush",
      " the",
      " toilet",
      "\n",
      " flush",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " stand",
      " up",
      "\n",
      " stand",
      "up",
      "()"
     ],
     "token_logprobs": [
      -0.0141471345,
      -0.007390603,
      -0.002402944,
      -0.11295124,
      -0.28701314,
      -1.4580023,
      -0.050491937,
      -0.0057631005,
      -0.0039614416,
      -0.033399623,
      -0.00028281534,
      -0.0025397185,
      -0.008375115,
      -0.0044914805,
      -0.0030236843,
      -0.00066005444,
      -0.39316598,
      -0.10169418,
      -0.12316166,
      -0.08662471,
      -0.00077988545,
      -0.00039997965,
      -0.00014086877,
      -0.001598337,
      -0.0054258225,
      -0.010558319,
      -0.0035415033,
      -0.00055973616,
      -0.6889452,
      -0.07048406,
      -0.35282907,
      -0.026780888,
      -1.0720316,
      -0.0013193373,
      -0.00037016338,
      -0.00020060172,
      -0.00072315807,
      -0.017007178,
      -0.024840502,
      -0.0067101475,
      -0.0011365436,
      -1.3107494,
      -0.805388,
      -0.004201856,
      -0.028031461,
      -0.36730456,
      -0.00783781,
      -0.0006317222,
      -8.7696986e-05,
      -0.0019686655,
      -0.045714878,
      -0.011897634,
      -0.006475073,
      -0.0013719804,
      -1.0362421,
      -0.09457683,
      -0.43295282,
      -0.0318334,
      -0.004781969,
      -0.09683855
     ],
     "top_logprobs": [
      {
       " #": -0.0141471345
      },
      {
       " 0": -0.007390603
      },
      {
       ":": -0.002402944
      },
      {
       " walk": -0.11295124
      },
      {
       " to": -0.28701314
      },
      {
       " bathroom": -0.48780462
      },
      {
       "\n": -0.050491937
      },
      {
       " walk": -0.0057631005
      },
      {
       "('": -0.0039614416
      },
      {
       "to": -0.033399623
      },
      {
       "ilet": -0.00028281534
      },
      {
       "')": -0.0025397185
      },
      {
       "\n": -0.008375115
      },
      {
       " #": -0.0044914805
      },
      {
       " 1": -0.0030236843
      },
      {
       ":": -0.00066005444
      },
      {
       " find": -0.39316598
      },
      {
       " toilet": -0.10169418
      },
      {
       "\n": -0.12316166
      },
      {
       " find": -0.08662471
      },
      {
       "('": -0.00077988545
      },
      {
       "to": -0.00039997965
      },
      {
       "ilet": -0.00014086877
      },
      {
       "')": -0.001598337
      },
      {
       "\n": -0.0054258225
      },
      {
       " #": -0.010558319
      },
      {
       " 2": -0.0035415033
      },
      {
       ":": -0.00055973616
      },
      {
       " sit": -0.6889452
      },
      {
       " on": -0.07048406
      },
      {
       " toilet": -0.35282907
      },
      {
       "\n": -0.026780888
      },
      {
       " sit": -1.0720316
      },
      {
       "('": -0.0013193373
      },
      {
       "to": -0.00037016338
      },
      {
       "ilet": -0.00020060172
      },
      {
       "')": -0.00072315807
      },
      {
       "\n": -0.017007178
      },
      {
       " #": -0.024840502
      },
      {
       " 3": -0.0067101475
      },
      {
       ":": -0.0011365436
      },
      {
       " do": -1.2548604
      },
      {
       " the": -0.805388
      },
      {
       " toilet": -0.004201856
      },
      {
       "\n": -0.028031461
      },
      {
       " flush": -0.36730456
      },
      {
       "('": -0.00783781
      },
      {
       "to": -0.0006317222
      },
      {
       "ilet": -8.7696986e-05
      },
      {
       "')": -0.0019686655
      },
      {
       "\n": -0.045714878
      },
      {
       " #": -0.011897634
      },
      {
       " 4": -0.006475073
      },
      {
       ":": -0.0013719804
      },
      {
       " stand": -1.0362421
      },
      {
       " up": -0.09457683
      },
      {
       "\n": -0.43295282
      },
      {
       " stand": -0.0318334
      },
      {
       "up": -0.004781969
      },
      {
       "()": -0.09683855
      }
     ],
     "text_offset": [
      3163,
      3165,
      3167,
      3168,
      3173,
      3176,
      3183,
      3184,
      3189,
      3191,
      3193,
      3197,
      3199,
      3200,
      3202,
      3204,
      3205,
      3210,
      3217,
      3218,
      3223,
      3225,
      3227,
      3231,
      3233,
      3234,
      3236,
      3238,
      3239,
      3243,
      3246,
      3253,
      3254,
      3258,
      3260,
      3262,
      3266,
      3268,
      3269,
      3271,
      3273,
      3274,
      3280,
      3284,
      3291,
      3292,
      3298,
      3300,
      3302,
      3306,
      3308,
      3309,
      3311,
      3313,
      3314,
      3320,
      3323,
      3324,
      3330,
      3332
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Go to toilet",
   "task_description": "I walk into the bathroom. I walk over to the toilet. I sit on the toilet.",
   "program": [
    "[Walk] <bathroom> (1)",
    "[Walk] <toilet> (1)",
    "[Sit] <toilet> (1)"
   ],
   "batch": "results_intentions_march-13-18",
   "file_id": "file547_1",
   "goal_condition": [
    [
     [
      198,
      283,
      "ON",
      "character",
      "toilet"
     ],
     [
      198,
      262,
      "INSIDE",
      "character",
      "bathroom"
     ]
    ],
    [
     [
      198,
      "character",
      "SITTING"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1110,
   "completion_tokens": 60,
   "total_tokens": 1170
  }
 },
 "17": {
  "plan": [
   [
    " # 0: find phone\n find('phone')\n # 1: grab phone\n grab('phone')\n assert('close' to 'phone')\n else: find('phone')\n # 2: Done\n assert('phone' in 'hands')\n else: grab('phone')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " phone",
      "\n",
      " find",
      "('",
      "phone",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " grab",
      " phone",
      "\n",
      " grab",
      "('",
      "phone",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "phone",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "phone",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " Done",
      "\n",
      " assert",
      "('",
      "phone",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "phone",
      "')"
     ],
     "token_logprobs": [
      -0.016136354,
      -0.008127452,
      -0.0017696341,
      -0.6696647,
      -0.24630633,
      -0.04267405,
      -0.036290813,
      -0.0021351275,
      -0.00105026,
      -0.0027527714,
      -0.009064164,
      -0.00401584,
      -0.0024908364,
      -0.0011306357,
      -0.18422933,
      -0.115765296,
      -0.019987553,
      -0.9123151,
      -0.0011687065,
      -0.00016423648,
      -0.0011604707,
      -0.009248714,
      -0.82301456,
      -0.0018293463,
      -1.0849229,
      -0.0034206815,
      -0.0005747649,
      -0.0031445175,
      -0.0005739304,
      -0.0071474453,
      -0.0067697945,
      -0.0026564894,
      -0.0023798815,
      -0.009442984,
      -0.0019787587,
      -0.00038722056,
      -0.0030272116,
      -0.009968767,
      -0.49287382,
      -0.0075583877,
      -0.001114167,
      -1.5411775,
      -0.045670208,
      -0.446227,
      -0.0018784922,
      -0.02442075,
      -0.0020456526,
      -0.029797379,
      -0.0053999927,
      -0.02194188,
      -0.015345195,
      -0.24247687,
      -0.009112284,
      -0.0029837466,
      -0.0070994813,
      -0.0019861637,
      -0.0003931819,
      -0.0020941508
     ],
     "top_logprobs": [
      {
       " #": -0.016136354
      },
      {
       " 0": -0.008127452
      },
      {
       ":": -0.0017696341
      },
      {
       " find": -0.6696647
      },
      {
       " phone": -0.24630633
      },
      {
       "\n": -0.04267405
      },
      {
       " find": -0.036290813
      },
      {
       "('": -0.0021351275
      },
      {
       "phone": -0.00105026
      },
      {
       "')": -0.0027527714
      },
      {
       "\n": -0.009064164
      },
      {
       " #": -0.00401584
      },
      {
       " 1": -0.0024908364
      },
      {
       ":": -0.0011306357
      },
      {
       " grab": -0.18422933
      },
      {
       " phone": -0.115765296
      },
      {
       "\n": -0.019987553
      },
      {
       " assert": -0.54459167
      },
      {
       "('": -0.0011687065
      },
      {
       "phone": -0.00016423648
      },
      {
       "')": -0.0011604707
      },
      {
       "\n": -0.009248714
      },
      {
       " #": -0.6422789
      },
      {
       "('": -0.0018293463
      },
      {
       "phone": -0.4360869
      },
      {
       "'": -0.0034206815
      },
      {
       " to": -0.0005747649
      },
      {
       " '": -0.0031445175
      },
      {
       "phone": -0.0005739304
      },
      {
       "')": -0.0071474453
      },
      {
       "\n": -0.0067697945
      },
      {
       " else": -0.0026564894
      },
      {
       ":": -0.0023798815
      },
      {
       " find": -0.009442984
      },
      {
       "('": -0.0019787587
      },
      {
       "phone": -0.00038722056
      },
      {
       "')": -0.0030272116
      },
      {
       "\n": -0.009968767
      },
      {
       " #": -0.49287382
      },
      {
       " 2": -0.0075583877
      },
      {
       ":": -0.001114167
      },
      {
       " Done": -1.5411775
      },
      {
       "\n": -0.045670208
      },
      {
       " assert": -0.446227
      },
      {
       "('": -0.0018784922
      },
      {
       "phone": -0.02442075
      },
      {
       "'": -0.0020456526
      },
      {
       " in": -0.029797379
      },
      {
       " '": -0.0053999927
      },
      {
       "hands": -0.02194188
      },
      {
       "')": -0.015345195
      },
      {
       "\n": -0.24247687
      },
      {
       " else": -0.009112284
      },
      {
       ":": -0.0029837466
      },
      {
       " grab": -0.0070994813
      },
      {
       "('": -0.0019861637
      },
      {
       "phone": -0.0003931819
      },
      {
       "')": -0.0020941508
      }
     ],
     "text_offset": [
      3164,
      3166,
      3168,
      3169,
      3174,
      3180,
      3181,
      3186,
      3188,
      3193,
      3195,
      3196,
      3198,
      3200,
      3201,
      3206,
      3212,
      3213,
      3218,
      3220,
      3225,
      3227,
      3228,
      3235,
      3237,
      3242,
      3243,
      3246,
      3248,
      3253,
      3255,
      3256,
      3261,
      3262,
      3267,
      3269,
      3274,
      3276,
      3277,
      3279,
      3281,
      3282,
      3287,
      3288,
      3295,
      3297,
      3302,
      3303,
      3306,
      3308,
      3313,
      3315,
      3316,
      3321,
      3322,
      3327,
      3329,
      3334
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Pick up phone",
   "task_description": "I go to my home office. I walk towards my desk. I see the phone. I pick it up.",
   "program": [
    "[Walk] <home_office> (1)",
    "[Walk] <desk> (1)",
    "[Find] <phone> (1)",
    "[TurnTo] <phone> (1)",
    "[LookAt] <phone> (1)",
    "[Grab] <phone> (1)"
   ],
   "batch": "results_intentions_march-13-18",
   "file_id": "file870_1",
   "goal_condition": [
    [
     [
      198,
      1,
      "INSIDE",
      "character",
      "home_office"
     ],
     [
      198,
      1000,
      "HOLDS_RH",
      "character",
      "phone"
     ],
     [
      198,
      1000,
      "FACING",
      "character",
      "phone"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1109,
   "completion_tokens": 58,
   "total_tokens": 1167
  }
 }
}