{
 "0": {
  "plan": [
   [
    " # 0: walk to bathroom\n walk('bathroom')\n # 1: find toilet\n find('toilet')\n # 2: grab mop bucket\n assert('close' to 'mop_bucket')\n else: find('mop_bucket')\n grab('mop_bucket')\n # 3: pour water on mop bucket\n pour('water', 'mop_bucket')\n # 4: mop around the toilet\n assert('mop_bucket' in 'hands')\n else: grab('mop_bucket')\n mop('toilet')\n # 5: put mop back\n putobjback('mop_bucket')\n # 6: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " bathroom",
      "\n",
      " walk",
      "('",
      "bath",
      "room",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " toilet",
      "\n",
      " find",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " grab",
      " m",
      "op",
      " bucket",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "mop",
      "_",
      "buck",
      "et",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "mop",
      "_",
      "buck",
      "et",
      "')",
      "\n",
      " grab",
      "('",
      "mop",
      "_",
      "buck",
      "et",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " pour",
      " water",
      " on",
      " m",
      "op",
      " bucket",
      "\n",
      " pour",
      "('",
      "water",
      "',",
      " '",
      "mop",
      "_",
      "buck",
      "et",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " m",
      "op",
      " around",
      " the",
      " toilet",
      "\n",
      " assert",
      "('",
      "mop",
      "_",
      "buck",
      "et",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "mop",
      "_",
      "buck",
      "et",
      "')",
      "\n",
      " m",
      "op",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " put",
      " m",
      "op",
      " back",
      "\n",
      " put",
      "obj",
      "back",
      "('",
      "mop",
      "_",
      "buck",
      "et",
      "')",
      "\n",
      " #",
      " 6",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.018987881,
      -0.0076688966,
      -0.002004977,
      -0.26556772,
      -0.25253868,
      -0.2601728,
      -0.022867966,
      -0.004962495,
      -0.0044958526,
      -0.0021055008,
      -0.00014623316,
      -0.001981508,
      -0.0071398797,
      -0.0027439864,
      -0.0029907431,
      -0.00084622175,
      -0.096005216,
      -0.14802212,
      -0.025740042,
      -0.26371098,
      -0.0010595095,
      -0.0006642277,
      -0.00035215908,
      -0.0025720445,
      -0.0058948756,
      -0.014507867,
      -0.005207643,
      -0.0013328867,
      -0.7420463,
      -0.94284403,
      -0.0002429912,
      -0.58790976,
      -0.12605138,
      -0.9504051,
      -0.0017778117,
      -0.005537297,
      -0.0036210613,
      -0.00046611042,
      -0.003272065,
      -0.020019358,
      -0.01250945,
      -0.00062802393,
      -0.0009890421,
      -0.010005371,
      -0.0075025363,
      -0.001597739,
      -0.0017787672,
      -0.0076445113,
      -0.0017404355,
      -0.00083786866,
      -0.0010769317,
      -0.0002884219,
      -8.781245e-05,
      -0.0025092415,
      -0.0060254727,
      -0.00966576,
      -0.0010238267,
      -0.00078978814,
      -0.001093819,
      -0.0006654207,
      -0.00044953197,
      -0.0025575254,
      -0.0050122156,
      -0.4601068,
      -0.009436725,
      -0.0010851074,
      -0.97378796,
      -1.6927456,
      -2.7725768,
      -1.5864675,
      -8.864972e-05,
      -0.15912566,
      -0.025344547,
      -0.76010555,
      -0.006692985,
      -0.2467689,
      -0.9001892,
      -0.008692706,
      -0.0060484395,
      -0.003022847,
      -0.00056069077,
      -0.00028877953,
      -0.0029070505,
      -0.0060786633,
      -0.03401209,
      -0.0052509643,
      -0.0008960331,
      -1.0308809,
      -0.00018533925,
      -2.951025,
      -0.5374752,
      -0.028989036,
      -0.042781852,
      -1.7092359,
      -0.002039084,
      -0.73108476,
      -0.022862598,
      -0.0014632464,
      -0.00063368963,
      -0.005805547,
      -0.042647548,
      -0.008791494,
      -0.01109759,
      -0.02186152,
      -0.005180022,
      -0.006596563,
      -0.0029894284,
      -0.016779553,
      -0.0017297462,
      -0.00042556066,
      -0.00061251555,
      -0.0006840886,
      -0.00024859305,
      -0.004262671,
      -0.006442616,
      -0.22000572,
      -0.00050171156,
      -0.035804376,
      -0.0651071,
      -0.00013097163,
      -0.01518893,
      -0.016367774,
      -0.06573078,
      -0.007079972,
      -0.0013703099,
      -1.0201054,
      -0.37777936,
      -8.352281e-05,
      -1.2666045,
      -0.10459072,
      -0.53635806,
      -0.73043966,
      -0.0056975777,
      -0.0014625302,
      -0.00067066966,
      -0.014520686,
      -0.00045967122,
      -5.6102934e-05,
      -0.008982065,
      -0.5602996,
      -0.01971961,
      -0.0047837053,
      -0.0032311624,
      -0.3236534
     ],
     "top_logprobs": [
      {
       " #": -0.018987881
      },
      {
       " 0": -0.0076688966
      },
      {
       ":": -0.002004977
      },
      {
       " walk": -0.26556772
      },
      {
       " to": -0.25253868
      },
      {
       " bathroom": -0.2601728
      },
      {
       "\n": -0.022867966
      },
      {
       " walk": -0.004962495
      },
      {
       "('": -0.0044958526
      },
      {
       "bath": -0.0021055008
      },
      {
       "room": -0.00014623316
      },
      {
       "')": -0.001981508
      },
      {
       "\n": -0.0071398797
      },
      {
       " #": -0.0027439864
      },
      {
       " 1": -0.0029907431
      },
      {
       ":": -0.00084622175
      },
      {
       " find": -0.096005216
      },
      {
       " toilet": -0.14802212
      },
      {
       "\n": -0.025740042
      },
      {
       " find": -0.26371098
      },
      {
       "('": -0.0010595095
      },
      {
       "to": -0.0006642277
      },
      {
       "ilet": -0.00035215908
      },
      {
       "')": -0.0025720445
      },
      {
       "\n": -0.0058948756
      },
      {
       " #": -0.014507867
      },
      {
       " 2": -0.005207643
      },
      {
       ":": -0.0013328867
      },
      {
       " grab": -0.7420463
      },
      {
       " m": -0.94284403
      },
      {
       "op": -0.0002429912
      },
      {
       " bucket": -0.58790976
      },
      {
       "\n": -0.12605138
      },
      {
       " assert": -0.9504051
      },
      {
       "('": -0.0017778117
      },
      {
       "close": -0.005537297
      },
      {
       "'": -0.0036210613
      },
      {
       " to": -0.00046611042
      },
      {
       " '": -0.003272065
      },
      {
       "mop": -0.020019358
      },
      {
       "_": -0.01250945
      },
      {
       "buck": -0.00062802393
      },
      {
       "et": -0.0009890421
      },
      {
       "')": -0.010005371
      },
      {
       "\n": -0.0075025363
      },
      {
       " else": -0.001597739
      },
      {
       ":": -0.0017787672
      },
      {
       " find": -0.0076445113
      },
      {
       "('": -0.0017404355
      },
      {
       "mop": -0.00083786866
      },
      {
       "_": -0.0010769317
      },
      {
       "buck": -0.0002884219
      },
      {
       "et": -8.781245e-05
      },
      {
       "')": -0.0025092415
      },
      {
       "\n": -0.0060254727
      },
      {
       " grab": -0.00966576
      },
      {
       "('": -0.0010238267
      },
      {
       "mop": -0.00078978814
      },
      {
       "_": -0.001093819
      },
      {
       "buck": -0.0006654207
      },
      {
       "et": -0.00044953197
      },
      {
       "')": -0.0025575254
      },
      {
       "\n": -0.0050122156
      },
      {
       " #": -0.4601068
      },
      {
       " 3": -0.009436725
      },
      {
       ":": -0.0010851074
      },
      {
       " fill": -0.9712111
      },
      {
       " deter": -0.38078535
      },
      {
       " in": -0.67007315
      },
      {
       " toilet": -1.0807892
      },
      {
       "op": -8.864972e-05
      },
      {
       " bucket": -0.15912566
      },
      {
       "\n": -0.025344547
      },
      {
       " pour": -0.76010555
      },
      {
       "('": -0.006692985
      },
      {
       "water": -0.2467689
      },
      {
       "')": -0.84239554
      },
      {
       " '": -0.008692706
      },
      {
       "mop": -0.0060484395
      },
      {
       "_": -0.003022847
      },
      {
       "buck": -0.00056069077
      },
      {
       "et": -0.00028877953
      },
      {
       "')": -0.0029070505
      },
      {
       "\n": -0.0060786633
      },
      {
       " #": -0.03401209
      },
      {
       " 4": -0.0052509643
      },
      {
       ":": -0.0008960331
      },
      {
       " m": -1.0308809
      },
      {
       "op": -0.00018533925
      },
      {
       " the": -0.30832222
      },
      {
       " the": -0.5374752
      },
      {
       " toilet": -0.028989036
      },
      {
       "\n": -0.042781852
      },
      {
       " m": -0.88256526
      },
      {
       "('": -0.002039084
      },
      {
       "close": -0.67049783
      },
      {
       "_": -0.022862598
      },
      {
       "buck": -0.0014632464
      },
      {
       "et": -0.00063368963
      },
      {
       "'": -0.005805547
      },
      {
       " in": -0.042647548
      },
      {
       " '": -0.008791494
      },
      {
       "hands": -0.01109759
      },
      {
       "')": -0.02186152
      },
      {
       "\n": -0.005180022
      },
      {
       " else": -0.006596563
      },
      {
       ":": -0.0029894284
      },
      {
       " grab": -0.016779553
      },
      {
       "('": -0.0017297462
      },
      {
       "mop": -0.00042556066
      },
      {
       "_": -0.00061251555
      },
      {
       "buck": -0.0006840886
      },
      {
       "et": -0.00024859305
      },
      {
       "')": -0.004262671
      },
      {
       "\n": -0.006442616
      },
      {
       " m": -0.22000572
      },
      {
       "op": -0.00050171156
      },
      {
       "('": -0.035804376
      },
      {
       "to": -0.0651071
      },
      {
       "ilet": -0.00013097163
      },
      {
       "')": -0.01518893
      },
      {
       "\n": -0.016367774
      },
      {
       " #": -0.06573078
      },
      {
       " 5": -0.007079972
      },
      {
       ":": -0.0013703099
      },
      {
       " put": -1.0201054
      },
      {
       " m": -0.37777936
      },
      {
       "op": -8.352281e-05
      },
      {
       " bucket": -0.3791486
      },
      {
       "\n": -0.10459072
      },
      {
       " put": -0.53635806
      },
      {
       "back": -0.7113566
      },
      {
       "back": -0.0056975777
      },
      {
       "('": -0.0014625302
      },
      {
       "mop": -0.00067066966
      },
      {
       "_": -0.014520686
      },
      {
       "buck": -0.00045967122
      },
      {
       "et": -5.6102934e-05
      },
      {
       "')": -0.008982065
      },
      {
       "\n": -0.5602996
      },
      {
       " #": -0.01971961
      },
      {
       " 6": -0.0047837053
      },
      {
       ":": -0.0032311624
      },
      {
       " Done": -0.3236534
      }
     ],
     "text_offset": [
      3345,
      3347,
      3349,
      3350,
      3355,
      3358,
      3367,
      3368,
      3373,
      3375,
      3379,
      3383,
      3385,
      3386,
      3388,
      3390,
      3391,
      3396,
      3403,
      3404,
      3409,
      3411,
      3413,
      3417,
      3419,
      3420,
      3422,
      3424,
      3425,
      3430,
      3432,
      3434,
      3441,
      3442,
      3449,
      3451,
      3456,
      3457,
      3460,
      3462,
      3465,
      3466,
      3470,
      3472,
      3474,
      3475,
      3480,
      3481,
      3486,
      3488,
      3491,
      3492,
      3496,
      3498,
      3500,
      3501,
      3506,
      3508,
      3511,
      3512,
      3516,
      3518,
      3520,
      3521,
      3523,
      3525,
      3526,
      3531,
      3537,
      3540,
      3542,
      3544,
      3551,
      3552,
      3557,
      3559,
      3564,
      3566,
      3568,
      3571,
      3572,
      3576,
      3578,
      3580,
      3581,
      3583,
      3585,
      3586,
      3588,
      3590,
      3597,
      3601,
      3608,
      3609,
      3616,
      3618,
      3621,
      3622,
      3626,
      3628,
      3629,
      3632,
      3634,
      3639,
      3641,
      3642,
      3647,
      3648,
      3653,
      3655,
      3658,
      3659,
      3663,
      3665,
      3667,
      3668,
      3670,
      3672,
      3674,
      3676,
      3680,
      3682,
      3683,
      3685,
      3687,
      3688,
      3692,
      3694,
      3696,
      3701,
      3702,
      3706,
      3709,
      3713,
      3715,
      3718,
      3719,
      3723,
      3725,
      3727,
      3728,
      3730,
      3732,
      3733
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Clean toilet",
   "task_description": "Use the toilet bowl cleaner and squeeze it around the inside of toilet bowl. Let it sit in there while you clean the rest of the toilet. Spray the all purpose cleaner on top of toilet, sides, bottom, and on and under the seat and lid. Wipe down toilet with paper towels on all the areas you sprayed the cleaner. Now using the toilet brush, scrub the inside bowl around completely in all areas.",
   "program": [
    "[Find] <brush> (1)",
    "[TurnTo] <brush> (1)",
    "[PointAt] <brush> (1)",
    "[Wash] <brush> (1)",
    "[TurnTo] <brush> (1)",
    "[LookAt] <brush> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_turk_robot",
   "file_id": "split67_2",
   "goal_condition": [
    [
     [
      240,
      1000,
      "FACING",
      "character",
      "brush"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1172,
   "completion_tokens": 144,
   "total_tokens": 1316
  }
 },
 "1": {
  "plan": [
   [
    " # 0: find monitor\n find('monitor')\n # 1: grab sponge\n assert('close' to 'sponge')\n else: find('sponge')\n grab('sponge')\n assert('sponge' in 'hands')\n else: grab('sponge')\n turnto('sponge')\n assert('sponge' in 'hands')\n else: grab('sponge')\n pointat('sponge')\n # 2: wet sponge\n assert('sponge' in 'hands')\n else: grab('sponge')\n wet('sponge')\n turnto('sponge')\n lookat('sponge')\n # 3: wipe monitor\n assert('close' to 'monitor')\n else: find('monitor')\n wipe('monitor')\n # 4: put sponge back\n assert('sponge' in 'hands')\n else: grab('sponge')\n putobjback('sponge')\n # 5: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " monitor",
      "\n",
      " find",
      "('",
      "monitor",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " grab",
      " sponge",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "sp",
      "onge",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "sp",
      "onge",
      "')",
      "\n",
      " grab",
      "('",
      "sp",
      "onge",
      "')",
      "\n",
      " assert",
      "('",
      "sp",
      "onge",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "sp",
      "onge",
      "')",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "sp",
      "onge",
      "')",
      "\n",
      " assert",
      "('",
      "sp",
      "onge",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "sp",
      "onge",
      "')",
      "\n",
      " point",
      "at",
      "('",
      "sp",
      "onge",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " wet",
      " sponge",
      "\n",
      " assert",
      "('",
      "sp",
      "onge",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "sp",
      "onge",
      "')",
      "\n",
      " wet",
      "('",
      "sp",
      "onge",
      "')",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "sp",
      "onge",
      "')",
      "\n",
      " look",
      "at",
      "('",
      "sp",
      "onge",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " wipe",
      " monitor",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "monitor",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "monitor",
      "')",
      "\n",
      " wipe",
      "('",
      "monitor",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " put",
      " sponge",
      " back",
      "\n",
      " assert",
      "('",
      "sp",
      "onge",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "sp",
      "onge",
      "')",
      "\n",
      " put",
      "obj",
      "back",
      "('",
      "sp",
      "onge",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.026660105,
      -0.009197402,
      -0.0024979466,
      -0.33664566,
      -0.3429122,
      -0.025953751,
      -0.0319833,
      -0.0020556257,
      -0.012336363,
      -0.0031928916,
      -0.0073771533,
      -0.0028886378,
      -0.0030392285,
      -0.0009144692,
      -0.33825418,
      -2.0993187,
      -0.041946094,
      -0.985812,
      -0.001497985,
      -0.009319644,
      -0.0029069313,
      -0.0006243275,
      -0.0039520487,
      -0.013353328,
      -0.0017054464,
      -0.009044917,
      -0.005853149,
      -0.0012662219,
      -0.0016210843,
      -0.007217986,
      -0.001393407,
      -0.00059641484,
      -0.0008979423,
      -0.0020500727,
      -0.005847634,
      -0.006868453,
      -0.0008832665,
      -0.00019428364,
      -0.0002476394,
      -0.00032431216,
      -0.004893134,
      -0.71420914,
      -0.0014953004,
      -0.0052134553,
      -0.0010623733,
      -0.0014522031,
      -0.012665659,
      -0.002672267,
      -0.00730294,
      -0.0135361925,
      -0.003191217,
      -0.0133443875,
      -0.002567861,
      -0.003459856,
      -0.0012081532,
      -0.00036491916,
      -0.00030487834,
      -0.0007228014,
      -0.005009702,
      -0.4827824,
      -6.13453e-05,
      -0.00098069,
      -0.00043032994,
      -0.0022470118,
      -0.000723756,
      -0.0006091787,
      -0.0030035945,
      -0.60014886,
      -0.0004851331,
      -0.00199805,
      -0.00056844496,
      -0.0008544527,
      -0.0013377809,
      -0.0009496076,
      -0.0016045453,
      -0.0013474489,
      -0.0016847276,
      -0.0039024418,
      -0.00076115556,
      -0.0010859419,
      -0.00066947757,
      -0.00019940869,
      -0.00027888143,
      -0.0007373542,
      -0.0031952825,
      -0.07043008,
      -0.00092389324,
      -0.00039055935,
      -0.0005652216,
      -0.0003692097,
      -0.0009667905,
      -0.005928215,
      -0.0037589602,
      -0.0061798943,
      -0.00069434993,
      -3.253681,
      -0.79818684,
      -0.18158875,
      -0.31834686,
      -0.00071785087,
      -0.054816183,
      -0.00024883242,
      -0.00089663005,
      -0.0018799246,
      -0.0010820633,
      -0.002333517,
      -0.0022713847,
      -0.0019094244,
      -0.00076556916,
      -0.0008078619,
      -0.0021968326,
      -0.00046575186,
      -0.00017508729,
      -0.00030273164,
      -0.0003334368,
      -0.003856725,
      -0.6387769,
      -0.0042985873,
      -0.00056128675,
      -0.00021026042,
      -0.0015810836,
      -0.0038664192,
      -0.22879049,
      -7.159913e-05,
      -0.00034106892,
      -0.00022927843,
      -0.0030756977,
      -0.00018581701,
      -0.00041256036,
      -0.0020660786,
      -0.029885622,
      -0.00038936536,
      -0.00019368572,
      -0.00038423753,
      -0.00022880347,
      -0.0009221041,
      -0.005071403,
      -0.003071335,
      -0.007150027,
      -0.0012317246,
      -0.45536742,
      -0.3634064,
      -0.2959937,
      -0.093428776,
      -0.00071021594,
      -0.61521816,
      -0.0032275738,
      -0.0004933604,
      -0.0017987726,
      -0.0064041032,
      -0.0070647243,
      -0.004227234,
      -0.001392812,
      -0.0012345903,
      -0.0032121453,
      -0.0012123903,
      -0.0022917574,
      -0.0020125632,
      -0.0074075367,
      -0.32825965,
      -0.0014206251,
      -0.14633618,
      -0.029297281,
      -0.009584875,
      -0.60203654,
      -0.0075155688,
      -0.001473153,
      -0.3305631,
      -0.17814882,
      -0.034070242,
      -0.019432591,
      -0.04850718,
      -0.00052640087,
      -0.006341779,
      -0.0003525167,
      -0.00083267794,
      -0.0012708758,
      -0.0011153591,
      -0.0017597202,
      -0.0015546982,
      -0.0008201507,
      -0.00049562723,
      -0.0007404546,
      -0.002913148,
      -0.00051995704,
      -0.00023488217,
      -0.00023047146,
      -0.00084359536,
      -0.0028723795,
      -0.00774506,
      -0.17454247,
      -0.001424805,
      -0.00069434993,
      -0.0018692943,
      -0.00040630237,
      -0.0023561027,
      -0.031095494,
      -0.004594829,
      -0.00866613,
      -0.0018228969,
      -0.12159101
     ],
     "top_logprobs": [
      {
       " #": -0.026660105
      },
      {
       " 0": -0.009197402
      },
      {
       ":": -0.0024979466
      },
      {
       " find": -0.33664566
      },
      {
       " monitor": -0.3429122
      },
      {
       "\n": -0.025953751
      },
      {
       " find": -0.0319833
      },
      {
       "('": -0.0020556257
      },
      {
       "monitor": -0.012336363
      },
      {
       "')": -0.0031928916
      },
      {
       "\n": -0.0073771533
      },
      {
       " #": -0.0028886378
      },
      {
       " 1": -0.0030392285
      },
      {
       ":": -0.0009144692
      },
      {
       " grab": -0.33825418
      },
      {
       " monitor": -1.1489794
      },
      {
       "\n": -0.041946094
      },
      {
       " find": -0.65888196
      },
      {
       "('": -0.001497985
      },
      {
       "close": -0.009319644
      },
      {
       "'": -0.0029069313
      },
      {
       " to": -0.0006243275
      },
      {
       " '": -0.0039520487
      },
      {
       "sp": -0.013353328
      },
      {
       "onge": -0.0017054464
      },
      {
       "')": -0.009044917
      },
      {
       "\n": -0.005853149
      },
      {
       " else": -0.0012662219
      },
      {
       ":": -0.0016210843
      },
      {
       " find": -0.007217986
      },
      {
       "('": -0.001393407
      },
      {
       "sp": -0.00059641484
      },
      {
       "onge": -0.0008979423
      },
      {
       "')": -0.0020500727
      },
      {
       "\n": -0.005847634
      },
      {
       " grab": -0.006868453
      },
      {
       "('": -0.0008832665
      },
      {
       "sp": -0.00019428364
      },
      {
       "onge": -0.0002476394
      },
      {
       "')": -0.00032431216
      },
      {
       "\n": -0.004893134
      },
      {
       " assert": -0.71420914
      },
      {
       "('": -0.0014953004
      },
      {
       "sp": -0.0052134553
      },
      {
       "onge": -0.0010623733
      },
      {
       "'": -0.0014522031
      },
      {
       " in": -0.012665659
      },
      {
       " '": -0.002672267
      },
      {
       "hands": -0.00730294
      },
      {
       "')": -0.0135361925
      },
      {
       "\n": -0.003191217
      },
      {
       " else": -0.0133443875
      },
      {
       ":": -0.002567861
      },
      {
       " grab": -0.003459856
      },
      {
       "('": -0.0012081532
      },
      {
       "sp": -0.00036491916
      },
      {
       "onge": -0.00030487834
      },
      {
       "')": -0.0007228014
      },
      {
       "\n": -0.005009702
      },
      {
       " tur": -0.4827824
      },
      {
       "nt": -6.13453e-05
      },
      {
       "o": -0.00098069
      },
      {
       "('": -0.00043032994
      },
      {
       "sp": -0.0022470118
      },
      {
       "onge": -0.000723756
      },
      {
       "')": -0.0006091787
      },
      {
       "\n": -0.0030035945
      },
      {
       " assert": -0.60014886
      },
      {
       "('": -0.0004851331
      },
      {
       "sp": -0.00199805
      },
      {
       "onge": -0.00056844496
      },
      {
       "'": -0.0008544527
      },
      {
       " in": -0.0013377809
      },
      {
       " '": -0.0009496076
      },
      {
       "hands": -0.0016045453
      },
      {
       "')": -0.0013474489
      },
      {
       "\n": -0.0016847276
      },
      {
       " else": -0.0039024418
      },
      {
       ":": -0.00076115556
      },
      {
       " grab": -0.0010859419
      },
      {
       "('": -0.00066947757
      },
      {
       "sp": -0.00019940869
      },
      {
       "onge": -0.00027888143
      },
      {
       "')": -0.0007373542
      },
      {
       "\n": -0.0031952825
      },
      {
       " point": -0.07043008
      },
      {
       "at": -0.00092389324
      },
      {
       "('": -0.00039055935
      },
      {
       "sp": -0.0005652216
      },
      {
       "onge": -0.0003692097
      },
      {
       "')": -0.0009667905
      },
      {
       "\n": -0.005928215
      },
      {
       " #": -0.0037589602
      },
      {
       " 2": -0.0061798943
      },
      {
       ":": -0.00069434993
      },
      {
       " wash": -0.36633363
      },
      {
       " the": -0.69600344
      },
      {
       "\n": -0.18158875
      },
      {
       " assert": -0.31834686
      },
      {
       "('": -0.00071785087
      },
      {
       "sp": -0.054816183
      },
      {
       "onge": -0.00024883242
      },
      {
       "'": -0.00089663005
      },
      {
       " in": -0.0018799246
      },
      {
       " '": -0.0010820633
      },
      {
       "hands": -0.002333517
      },
      {
       "')": -0.0022713847
      },
      {
       "\n": -0.0019094244
      },
      {
       " else": -0.00076556916
      },
      {
       ":": -0.0008078619
      },
      {
       " grab": -0.0021968326
      },
      {
       "('": -0.00046575186
      },
      {
       "sp": -0.00017508729
      },
      {
       "onge": -0.00030273164
      },
      {
       "')": -0.0003334368
      },
      {
       "\n": -0.003856725
      },
      {
       " wet": -0.6387769
      },
      {
       "('": -0.0042985873
      },
      {
       "sp": -0.00056128675
      },
      {
       "onge": -0.00021026042
      },
      {
       "')": -0.0015810836
      },
      {
       "\n": -0.0038664192
      },
      {
       " tur": -0.22879049
      },
      {
       "nt": -7.159913e-05
      },
      {
       "o": -0.00034106892
      },
      {
       "('": -0.00022927843
      },
      {
       "sp": -0.0030756977
      },
      {
       "onge": -0.00018581701
      },
      {
       "')": -0.00041256036
      },
      {
       "\n": -0.0020660786
      },
      {
       " look": -0.029885622
      },
      {
       "at": -0.00038936536
      },
      {
       "('": -0.00019368572
      },
      {
       "sp": -0.00038423753
      },
      {
       "onge": -0.00022880347
      },
      {
       "')": -0.0009221041
      },
      {
       "\n": -0.005071403
      },
      {
       " #": -0.003071335
      },
      {
       " 3": -0.007150027
      },
      {
       ":": -0.0012317246
      },
      {
       " wipe": -0.45536742
      },
      {
       " monitor": -0.3634064
      },
      {
       "\n": -0.2959937
      },
      {
       " assert": -0.093428776
      },
      {
       "('": -0.00071021594
      },
      {
       "close": -0.61521816
      },
      {
       "'": -0.0032275738
      },
      {
       " to": -0.0004933604
      },
      {
       " '": -0.0017987726
      },
      {
       "monitor": -0.0064041032
      },
      {
       "')": -0.0070647243
      },
      {
       "\n": -0.004227234
      },
      {
       " else": -0.001392812
      },
      {
       ":": -0.0012345903
      },
      {
       " find": -0.0032121453
      },
      {
       "('": -0.0012123903
      },
      {
       "monitor": -0.0022917574
      },
      {
       "')": -0.0020125632
      },
      {
       "\n": -0.0074075367
      },
      {
       " wipe": -0.32825965
      },
      {
       "('": -0.0014206251
      },
      {
       "monitor": -0.14633618
      },
      {
       "')": -0.029297281
      },
      {
       "\n": -0.009584875
      },
      {
       " #": -0.60203654
      },
      {
       " 4": -0.0075155688
      },
      {
       ":": -0.001473153
      },
      {
       " put": -0.3305631
      },
      {
       " sponge": -0.17814882
      },
      {
       " back": -0.034070242
      },
      {
       "\n": -0.019432591
      },
      {
       " assert": -0.04850718
      },
      {
       "('": -0.00052640087
      },
      {
       "sp": -0.006341779
      },
      {
       "onge": -0.0003525167
      },
      {
       "'": -0.00083267794
      },
      {
       " in": -0.0012708758
      },
      {
       " '": -0.0011153591
      },
      {
       "hands": -0.0017597202
      },
      {
       "')": -0.0015546982
      },
      {
       "\n": -0.0008201507
      },
      {
       " else": -0.00049562723
      },
      {
       ":": -0.0007404546
      },
      {
       " grab": -0.002913148
      },
      {
       "('": -0.00051995704
      },
      {
       "sp": -0.00023488217
      },
      {
       "onge": -0.00023047146
      },
      {
       "')": -0.00084359536
      },
      {
       "\n": -0.0028723795
      },
      {
       " put": -0.00774506
      },
      {
       "obj": -0.17454247
      },
      {
       "back": -0.001424805
      },
      {
       "('": -0.00069434993
      },
      {
       "sp": -0.0018692943
      },
      {
       "onge": -0.00040630237
      },
      {
       "')": -0.0023561027
      },
      {
       "\n": -0.031095494
      },
      {
       " #": -0.004594829
      },
      {
       " 5": -0.00866613
      },
      {
       ":": -0.0018228969
      },
      {
       " Done": -0.12159101
      }
     ],
     "text_offset": [
      3345,
      3347,
      3349,
      3350,
      3355,
      3363,
      3364,
      3369,
      3371,
      3378,
      3380,
      3381,
      3383,
      3385,
      3386,
      3391,
      3398,
      3399,
      3406,
      3408,
      3413,
      3414,
      3417,
      3419,
      3421,
      3425,
      3427,
      3428,
      3433,
      3434,
      3439,
      3441,
      3443,
      3447,
      3449,
      3450,
      3455,
      3457,
      3459,
      3463,
      3465,
      3466,
      3473,
      3475,
      3477,
      3481,
      3482,
      3485,
      3487,
      3492,
      3494,
      3495,
      3500,
      3501,
      3506,
      3508,
      3510,
      3514,
      3516,
      3517,
      3521,
      3523,
      3524,
      3526,
      3528,
      3532,
      3534,
      3535,
      3542,
      3544,
      3546,
      3550,
      3551,
      3554,
      3556,
      3561,
      3563,
      3564,
      3569,
      3570,
      3575,
      3577,
      3579,
      3583,
      3585,
      3586,
      3592,
      3594,
      3596,
      3598,
      3602,
      3604,
      3605,
      3607,
      3609,
      3610,
      3614,
      3621,
      3622,
      3629,
      3631,
      3633,
      3637,
      3638,
      3641,
      3643,
      3648,
      3650,
      3651,
      3656,
      3657,
      3662,
      3664,
      3666,
      3670,
      3672,
      3673,
      3677,
      3679,
      3681,
      3685,
      3687,
      3688,
      3692,
      3694,
      3695,
      3697,
      3699,
      3703,
      3705,
      3706,
      3711,
      3713,
      3715,
      3717,
      3721,
      3723,
      3724,
      3726,
      3728,
      3729,
      3734,
      3742,
      3743,
      3750,
      3752,
      3757,
      3758,
      3761,
      3763,
      3770,
      3772,
      3773,
      3778,
      3779,
      3784,
      3786,
      3793,
      3795,
      3796,
      3801,
      3803,
      3810,
      3812,
      3813,
      3815,
      3817,
      3818,
      3822,
      3829,
      3834,
      3835,
      3842,
      3844,
      3846,
      3850,
      3851,
      3854,
      3856,
      3861,
      3863,
      3864,
      3869,
      3870,
      3875,
      3877,
      3879,
      3883,
      3885,
      3886,
      3890,
      3893,
      3897,
      3899,
      3901,
      3905,
      3907,
      3908,
      3910,
      3912,
      3913
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Wash monitor",
   "task_description": "Clean the grime off of my monitor screen when not in use",
   "program": [
    "[Walk] <home_office> (1)",
    "[Walk] <computer> (1)",
    "[Find] <computer> (1)",
    "[TurnTo] <computer> (1)",
    "[LookAt] <computer> (1)",
    "[SwitchOff] <computer> (1)",
    "[Find] <brush> (1)",
    "[TurnTo] <brush> (1)",
    "[LookAt] <brush> (1)",
    "[Grab] <brush> (1)",
    "[Wipe] <computer> (1)",
    "[Drop] <brush> (1)",
    "[Find] <napkin> (1)",
    "[Grab] <napkin> (1)",
    "[Wash] <napkin> (1)",
    "[Wipe] <computer> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_turk_robot",
   "file_id": "split16_2",
   "goal_condition": [
    [
     [
      240,
      241,
      "INSIDE",
      "character",
      "home_office"
     ],
     [
      240,
      1001,
      "HOLDS_RH",
      "character",
      "napkin"
     ]
    ],
    [
     [
      276,
      "computer",
      "OFF"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1171,
   "completion_tokens": 201,
   "total_tokens": 1372
  }
 },
 "2": {
  "plan": [
   [
    " # 0: walk to bedroom\n walk('bedroom')\n # 1: find television\n walk('television')\n find('television')\n # 2: turn on tv\n assert('close' to 'television')\n else: find('television')\n switchon('television')\n # 3: find remote control\n find('remote_control')\n # 4: touch the remote control and set a channel\n assert('close' to 'remote_control')\n else: find('remote_control')\n touch('remote_control')\n # 5: look at the television\n turnto('television')\n lookat('television')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " bedroom",
      "\n",
      " walk",
      "('",
      "bedroom",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " television",
      "\n",
      " walk",
      "('",
      "te",
      "levision",
      "')",
      "\n",
      " find",
      "('",
      "te",
      "levision",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " turn",
      " on",
      " tv",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "te",
      "levision",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "te",
      "levision",
      "')",
      "\n",
      " switch",
      "on",
      "('",
      "te",
      "levision",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " find",
      " remote",
      " control",
      "\n",
      " find",
      "('",
      "remote",
      "_",
      "control",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " touch",
      " the",
      " remote",
      " control",
      " and",
      " set",
      " a",
      " channel",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "remote",
      "_",
      "control",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "remote",
      "_",
      "control",
      "')",
      "\n",
      " touch",
      "('",
      "remote",
      "_",
      "control",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " look",
      " at",
      " the",
      " television",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "te",
      "levision",
      "')",
      "\n",
      " look",
      "at",
      "('",
      "te",
      "levision",
      "')"
     ],
     "token_logprobs": [
      -0.014524194,
      -0.0073688654,
      -0.001553861,
      -0.3350556,
      -0.27988338,
      -1.3970604,
      -0.014184011,
      -0.0035647706,
      -0.0034681705,
      -0.004214067,
      -0.0010269899,
      -0.004907927,
      -0.0033239732,
      -0.002742553,
      -0.00041935995,
      -0.015830506,
      -1.1946226,
      -0.012595638,
      -0.94895625,
      -0.0013036402,
      -0.018895006,
      -0.000767239,
      -0.0017518991,
      -0.0042884094,
      -0.01035811,
      -0.0005653418,
      -0.0014467122,
      -0.00045179878,
      -0.0021152375,
      -0.004563751,
      -0.0023509634,
      -0.00589158,
      -0.00046467895,
      -0.6031684,
      -0.0064777713,
      -0.4124789,
      -0.61891115,
      -0.047108572,
      -0.0005024268,
      -0.0092076855,
      -0.002291638,
      -0.0003661131,
      -0.00086650223,
      -1.2202524,
      -0.0002915213,
      -0.003440894,
      -0.0045994394,
      -0.0008750327,
      -0.0010290202,
      -0.004809699,
      -0.0012732628,
      -0.002946623,
      -0.0008219398,
      -0.0029661714,
      -0.0059867366,
      -0.42486838,
      -0.0064238994,
      -0.0005295003,
      -0.0054686726,
      -0.0006908891,
      -0.0014994182,
      -0.22450998,
      -0.071546555,
      -0.005673721,
      -0.00061800476,
      -0.46342298,
      -0.41900396,
      -0.13212338,
      -0.06671912,
      -0.11388105,
      -0.0007430809,
      -0.0012162096,
      -0.0056725214,
      -0.0014857479,
      -0.0028814035,
      -0.013862619,
      -0.0943353,
      -0.0050655915,
      -0.0005948651,
      -0.39226195,
      -0.090735815,
      -0.0010161897,
      -0.026888829,
      -0.080083184,
      -0.008691021,
      -0.0142987035,
      -0.0012218172,
      -0.005908187,
      -0.048506804,
      -0.0004953888,
      -0.022853147,
      -0.0014487397,
      -0.0003104802,
      -0.0013794418,
      -0.0019378514,
      -0.0009376754,
      -0.00212784,
      -0.0031619782,
      -0.002479304,
      -0.0006613648,
      -0.0007956332,
      -0.0022191734,
      -0.00057154533,
      -0.0004347435,
      -0.00030893143,
      -0.0005124441,
      -0.0017888587,
      -0.0035251125,
      -0.012345052,
      -0.00032705773,
      -0.00036444137,
      -0.00036360786,
      -0.0004367719,
      -0.0012172853,
      -0.019774625,
      -0.013819347,
      -0.0029051977,
      -0.00052449165,
      -0.016131448,
      -0.0008532597,
      -0.011437391,
      -0.00888837,
      -0.0054671136,
      -0.013203653,
      -2.7133337e-05,
      -9.3535404e-05,
      -0.00022743117,
      -0.0015206101,
      -0.00021192935,
      -0.00096840307,
      -0.0035406651,
      -0.0019949449,
      -0.00021669957,
      -0.00038674276,
      -0.00031107623,
      -0.0003690924,
      -0.0020639873
     ],
     "top_logprobs": [
      {
       " #": -0.014524194
      },
      {
       " 0": -0.0073688654
      },
      {
       ":": -0.001553861
      },
      {
       " walk": -0.3350556
      },
      {
       " to": -0.27988338
      },
      {
       " living": -0.54622656
      },
      {
       "\n": -0.014184011
      },
      {
       " walk": -0.0035647706
      },
      {
       "('": -0.0034681705
      },
      {
       "bedroom": -0.004214067
      },
      {
       "')": -0.0010269899
      },
      {
       "\n": -0.004907927
      },
      {
       " #": -0.0033239732
      },
      {
       " 1": -0.002742553
      },
      {
       ":": -0.00041935995
      },
      {
       " find": -0.015830506
      },
      {
       " tv": -0.5744807
      },
      {
       "\n": -0.012595638
      },
      {
       " find": -0.50214934
      },
      {
       "('": -0.0013036402
      },
      {
       "te": -0.018895006
      },
      {
       "levision": -0.000767239
      },
      {
       "')": -0.0017518991
      },
      {
       "\n": -0.0042884094
      },
      {
       " find": -0.01035811
      },
      {
       "('": -0.0005653418
      },
      {
       "te": -0.0014467122
      },
      {
       "levision": -0.00045179878
      },
      {
       "')": -0.0021152375
      },
      {
       "\n": -0.004563751
      },
      {
       " #": -0.0023509634
      },
      {
       " 2": -0.00589158
      },
      {
       ":": -0.00046467895
      },
      {
       " turn": -0.6031684
      },
      {
       " on": -0.0064777713
      },
      {
       " tv": -0.4124789
      },
      {
       "\n": -0.61891115
      },
      {
       " assert": -0.047108572
      },
      {
       "('": -0.0005024268
      },
      {
       "close": -0.0092076855
      },
      {
       "'": -0.002291638
      },
      {
       " to": -0.0003661131
      },
      {
       " '": -0.00086650223
      },
      {
       "tv": -0.35127965
      },
      {
       "levision": -0.0002915213
      },
      {
       "')": -0.003440894
      },
      {
       "\n": -0.0045994394
      },
      {
       " else": -0.0008750327
      },
      {
       ":": -0.0010290202
      },
      {
       " find": -0.004809699
      },
      {
       "('": -0.0012732628
      },
      {
       "te": -0.002946623
      },
      {
       "levision": -0.0008219398
      },
      {
       "')": -0.0029661714
      },
      {
       "\n": -0.0059867366
      },
      {
       " switch": -0.42486838
      },
      {
       "on": -0.0064238994
      },
      {
       "('": -0.0005295003
      },
      {
       "te": -0.0054686726
      },
      {
       "levision": -0.0006908891
      },
      {
       "')": -0.0014994182
      },
      {
       "\n": -0.22450998
      },
      {
       " #": -0.071546555
      },
      {
       " 3": -0.005673721
      },
      {
       ":": -0.00061800476
      },
      {
       " find": -0.46342298
      },
      {
       " remote": -0.41900396
      },
      {
       " control": -0.13212338
      },
      {
       "\n": -0.06671912
      },
      {
       " find": -0.11388105
      },
      {
       "('": -0.0007430809
      },
      {
       "remote": -0.0012162096
      },
      {
       "_": -0.0056725214
      },
      {
       "control": -0.0014857479
      },
      {
       "')": -0.0028814035
      },
      {
       "\n": -0.013862619
      },
      {
       " #": -0.0943353
      },
      {
       " 4": -0.0050655915
      },
      {
       ":": -0.0005948651
      },
      {
       " touch": -0.39226195
      },
      {
       " the": -0.090735815
      },
      {
       " remote": -0.0010161897
      },
      {
       " control": -0.026888829
      },
      {
       " and": -0.080083184
      },
      {
       " set": -0.008691021
      },
      {
       " a": -0.0142987035
      },
      {
       " channel": -0.0012218172
      },
      {
       "\n": -0.005908187
      },
      {
       " assert": -0.048506804
      },
      {
       "('": -0.0004953888
      },
      {
       "close": -0.022853147
      },
      {
       "'": -0.0014487397
      },
      {
       " to": -0.0003104802
      },
      {
       " '": -0.0013794418
      },
      {
       "remote": -0.0019378514
      },
      {
       "_": -0.0009376754
      },
      {
       "control": -0.00212784
      },
      {
       "')": -0.0031619782
      },
      {
       "\n": -0.002479304
      },
      {
       " else": -0.0006613648
      },
      {
       ":": -0.0007956332
      },
      {
       " find": -0.0022191734
      },
      {
       "('": -0.00057154533
      },
      {
       "remote": -0.0004347435
      },
      {
       "_": -0.00030893143
      },
      {
       "control": -0.0005124441
      },
      {
       "')": -0.0017888587
      },
      {
       "\n": -0.0035251125
      },
      {
       " touch": -0.012345052
      },
      {
       "('": -0.00032705773
      },
      {
       "remote": -0.00036444137
      },
      {
       "_": -0.00036360786
      },
      {
       "control": -0.0004367719
      },
      {
       "')": -0.0012172853
      },
      {
       "\n": -0.019774625
      },
      {
       " #": -0.013819347
      },
      {
       " 5": -0.0029051977
      },
      {
       ":": -0.00052449165
      },
      {
       " look": -0.016131448
      },
      {
       " at": -0.0008532597
      },
      {
       " the": -0.011437391
      },
      {
       " television": -0.00888837
      },
      {
       "\n": -0.0054671136
      },
      {
       " tur": -0.013203653
      },
      {
       "nt": -2.7133337e-05
      },
      {
       "o": -9.3535404e-05
      },
      {
       "('": -0.00022743117
      },
      {
       "te": -0.0015206101
      },
      {
       "levision": -0.00021192935
      },
      {
       "')": -0.00096840307
      },
      {
       "\n": -0.0035406651
      },
      {
       " look": -0.0019949449
      },
      {
       "at": -0.00021669957
      },
      {
       "('": -0.00038674276
      },
      {
       "te": -0.00031107623
      },
      {
       "levision": -0.0003690924
      },
      {
       "')": -0.0020639873
      }
     ],
     "text_offset": [
      3343,
      3345,
      3347,
      3348,
      3353,
      3356,
      3364,
      3365,
      3370,
      3372,
      3379,
      3381,
      3382,
      3384,
      3386,
      3387,
      3392,
      3403,
      3404,
      3409,
      3411,
      3413,
      3421,
      3423,
      3424,
      3429,
      3431,
      3433,
      3441,
      3443,
      3444,
      3446,
      3448,
      3449,
      3454,
      3457,
      3460,
      3461,
      3468,
      3470,
      3475,
      3476,
      3479,
      3481,
      3483,
      3491,
      3493,
      3494,
      3499,
      3500,
      3505,
      3507,
      3509,
      3517,
      3519,
      3520,
      3527,
      3529,
      3531,
      3533,
      3541,
      3543,
      3544,
      3546,
      3548,
      3549,
      3554,
      3561,
      3569,
      3570,
      3575,
      3577,
      3583,
      3584,
      3591,
      3593,
      3594,
      3596,
      3598,
      3599,
      3605,
      3609,
      3616,
      3624,
      3628,
      3632,
      3634,
      3642,
      3643,
      3650,
      3652,
      3657,
      3658,
      3661,
      3663,
      3669,
      3670,
      3677,
      3679,
      3680,
      3685,
      3686,
      3691,
      3693,
      3699,
      3700,
      3707,
      3709,
      3710,
      3716,
      3718,
      3724,
      3725,
      3732,
      3734,
      3735,
      3737,
      3739,
      3740,
      3745,
      3748,
      3752,
      3763,
      3764,
      3768,
      3770,
      3771,
      3773,
      3775,
      3783,
      3785,
      3786,
      3791,
      3793,
      3795,
      3797,
      3805
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Turn on TV",
   "task_description": "Sit in a chair.  Grab the remote control.  Point the remote at the television.  Press the power button.",
   "program": [
    "[Walk] <home_office> (1)",
    "[Walk] <chair> (1)",
    "[Find] <chair> (1)",
    "[Sit] <chair> (1)",
    "[Find] <remote_control> (1)",
    "[Grab] <remote_control> (1)",
    "[Find] <television> (1)",
    "[TurnTo] <television> (1)",
    "[PointAt] <television> (1)",
    "[SwitchOn] <television> (1)",
    "[PutObjBack] <remote_control> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_kellensecond",
   "file_id": "split5_9",
   "goal_condition": [
    [
     [
      240,
      241,
      "INSIDE",
      "character",
      "home_office"
     ],
     [
      240,
      281,
      "FACING",
      "character",
      "television"
     ],
     [
      240,
      271,
      "ON",
      "character",
      "chair"
     ]
    ],
    [
     [
      240,
      "character",
      "SITTING"
     ],
     [
      281,
      "television",
      "ON"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1173,
   "completion_tokens": 137,
   "total_tokens": 1310
  }
 },
 "3": {
  "plan": [
   [
    " # 0: find the computer\n find('computer')\n # 1: switch on the computer\n switchon('computer')\n # 2: find mouse\n find('mouse')\n # 3: grab mouse\n grab('mouse')\n # 4: use mouse to operate the computer\n pointat('mouse')\n # 5: done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " the",
      " computer",
      "\n",
      " find",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " switch",
      " on",
      " the",
      " computer",
      "\n",
      " switch",
      "on",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " find",
      " mouse",
      "\n",
      " find",
      "('",
      "mouse",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " grab",
      " mouse",
      "\n",
      " grab",
      "('",
      "mouse",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " use",
      " mouse",
      " to",
      " operate",
      " the",
      " computer",
      "\n",
      " point",
      "at",
      "('",
      "mouse",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " done"
     ],
     "token_logprobs": [
      -0.015596651,
      -0.008099868,
      -0.0018225383,
      -1.5313025,
      -1.4919531,
      -0.2136745,
      -0.03484432,
      -0.042364385,
      -0.0028805672,
      -0.003239475,
      -0.0022688156,
      -0.008705449,
      -0.0062975115,
      -0.0033289366,
      -0.0006870716,
      -2.2058873,
      -0.14119163,
      -0.18283296,
      -0.04699511,
      -0.017883806,
      -1.0154783,
      -0.004378627,
      -0.0012529118,
      -0.0011494323,
      -0.0015440708,
      -0.01801045,
      -0.05439977,
      -0.004116145,
      -0.0007048478,
      -0.8043646,
      -1.9304061,
      -0.17927158,
      -0.049125228,
      -0.0011805231,
      -0.0005716645,
      -0.0025636212,
      -0.005184158,
      -0.0130743515,
      -0.0060618706,
      -0.00088457874,
      -0.54774344,
      -0.39514348,
      -0.055493258,
      -0.17936598,
      -0.0013931696,
      -0.00020942597,
      -0.00087944814,
      -0.008454098,
      -0.1364056,
      -0.0063528153,
      -0.0015360115,
      -2.3570318,
      -0.15832697,
      -0.24681056,
      -2.5537984,
      -0.6710139,
      -0.013357313,
      -0.018461708,
      -1.4167353,
      -0.0080490345,
      -0.0014504122,
      -0.33246782,
      -0.035007022,
      -0.10249107,
      -1.162563,
      -0.0049592005,
      -0.0017935181,
      -2.4226213
     ],
     "top_logprobs": [
      {
       " #": -0.015596651
      },
      {
       " 0": -0.008099868
      },
      {
       ":": -0.0018225383
      },
      {
       " walk": -0.322876
      },
      {
       " computer": -0.48331752
      },
      {
       " computer": -0.2136745
      },
      {
       "\n": -0.03484432
      },
      {
       " find": -0.042364385
      },
      {
       "('": -0.0028805672
      },
      {
       "computer": -0.003239475
      },
      {
       "')": -0.0022688156
      },
      {
       "\n": -0.008705449
      },
      {
       " #": -0.0062975115
      },
      {
       " 1": -0.0033289366
      },
      {
       ":": -0.0006870716
      },
      {
       " find": -1.2621063
      },
      {
       " on": -0.14119163
      },
      {
       " the": -0.18283296
      },
      {
       " computer": -0.04699511
      },
      {
       "\n": -0.017883806
      },
      {
       " assert": -0.56874675
      },
      {
       "on": -0.004378627
      },
      {
       "('": -0.0012529118
      },
      {
       "computer": -0.0011494323
      },
      {
       "')": -0.0015440708
      },
      {
       "\n": -0.01801045
      },
      {
       " #": -0.05439977
      },
      {
       " 2": -0.004116145
      },
      {
       ":": -0.0007048478
      },
      {
       " find": -0.8043646
      },
      {
       " the": -0.34488726
      },
      {
       "\n": -0.17927158
      },
      {
       " find": -0.049125228
      },
      {
       "('": -0.0011805231
      },
      {
       "mouse": -0.0005716645
      },
      {
       "')": -0.0025636212
      },
      {
       "\n": -0.005184158
      },
      {
       " #": -0.0130743515
      },
      {
       " 3": -0.0060618706
      },
      {
       ":": -0.00088457874
      },
      {
       " grab": -0.54774344
      },
      {
       " mouse": -0.39514348
      },
      {
       "\n": -0.055493258
      },
      {
       " grab": -0.17936598
      },
      {
       "('": -0.0013931696
      },
      {
       "mouse": -0.00020942597
      },
      {
       "')": -0.00087944814
      },
      {
       "\n": -0.008454098
      },
      {
       " #": -0.1364056
      },
      {
       " 4": -0.0063528153
      },
      {
       ":": -0.0015360115
      },
      {
       " move": -0.94432443
      },
      {
       " mouse": -0.15832697
      },
      {
       " to": -0.24681056
      },
      {
       " turn": -1.5785176
      },
      {
       " the": -0.6710139
      },
      {
       " computer": -0.013357313
      },
      {
       "\n": -0.018461708
      },
      {
       " assert": -1.2430339
      },
      {
       "at": -0.0080490345
      },
      {
       "('": -0.0014504122
      },
      {
       "mouse": -0.33246782
      },
      {
       "')": -0.035007022
      },
      {
       "\n": -0.10249107
      },
      {
       " #": -1.162563
      },
      {
       " 5": -0.0049592005
      },
      {
       ":": -0.0017935181
      },
      {
       " Done": -0.4809509
      }
     ],
     "text_offset": [
      3349,
      3351,
      3353,
      3354,
      3359,
      3363,
      3372,
      3373,
      3378,
      3380,
      3388,
      3390,
      3391,
      3393,
      3395,
      3396,
      3403,
      3406,
      3410,
      3419,
      3420,
      3427,
      3429,
      3431,
      3439,
      3441,
      3442,
      3444,
      3446,
      3447,
      3452,
      3458,
      3459,
      3464,
      3466,
      3471,
      3473,
      3474,
      3476,
      3478,
      3479,
      3484,
      3490,
      3491,
      3496,
      3498,
      3503,
      3505,
      3506,
      3508,
      3510,
      3511,
      3515,
      3521,
      3524,
      3532,
      3536,
      3545,
      3546,
      3552,
      3554,
      3556,
      3561,
      3563,
      3564,
      3566,
      3568,
      3569
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Turn on computer",
   "task_description": "Push power button.",
   "program": [
    "[Walk] <home_office> (1)",
    "[Walk] <computer> (1)",
    "[SwitchOn] <computer> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_turk_third",
   "file_id": "split56_4",
   "goal_condition": [
    [
     [
      240,
      241,
      "INSIDE",
      "character",
      "home_office"
     ]
    ],
    [
     [
      276,
      "computer",
      "ON"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1173,
   "completion_tokens": 68,
   "total_tokens": 1241
  }
 },
 "4": {
  "plan": [
   [
    " # 0: find electric shaver\n find('electric_shaver')\n # 1: grab electric shaver\n grab('electric_shaver')\n assert('electric_shaver' in 'hands')\n else: grab('electric_shaver')\n # 2: find shaving cream\n find('shaving_cream')\n # 3: grab shaving cream\n grab('shaving_cream')\n assert('shaving_cream' in 'hands')\n else: grab('shaving_cream')\n # 4: spread shaving cream on face\n assert('close' to 'face')\n else: turnto('face')\n pointat('shaving_cream')\n spread('shaving_cream', 'face')\n # 5: switch on electric shaver\n assert('electric_shaver' in 'hands')\n else: grab('electric_shaver')\n switchon('electric_shaver')\n # 6: shave with electric shaver\n turnto('electric_shaver')\n assert('electric_shaver' in 'hands')\n else: grab('electric_shaver')\n shave('electric_shaver', 'face')\n # 7: switch off electric shaver\n switchoff('electric_shaver')\n # 8: put back electric shaver\n putobjback('electric_shaver')\n # 9: wash face\n assert('close' to 'face')\n else: turnto('face')\n pointat('face')\n wash('face')\n # 10: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " electric",
      " sh",
      "aver",
      "\n",
      " find",
      "('",
      "electric",
      "_",
      "sh",
      "aver",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " grab",
      " electric",
      " sh",
      "aver",
      "\n",
      " grab",
      "('",
      "electric",
      "_",
      "sh",
      "aver",
      "')",
      "\n",
      " assert",
      "('",
      "electric",
      "_",
      "sh",
      "aver",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "electric",
      "_",
      "sh",
      "aver",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " find",
      " shaving",
      " cream",
      "\n",
      " find",
      "('",
      "sh",
      "aving",
      "_",
      "cream",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " grab",
      " shaving",
      " cream",
      "\n",
      " grab",
      "('",
      "sh",
      "aving",
      "_",
      "cream",
      "')",
      "\n",
      " assert",
      "('",
      "sh",
      "aving",
      "_",
      "cream",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "sh",
      "aving",
      "_",
      "cream",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " spread",
      " shaving",
      " cream",
      " on",
      " face",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "face",
      "')",
      "\n",
      " else",
      ":",
      " tur",
      "nt",
      "o",
      "('",
      "face",
      "')",
      "\n",
      " point",
      "at",
      "('",
      "sh",
      "aving",
      "_",
      "cream",
      "')",
      "\n",
      " spread",
      "('",
      "sh",
      "aving",
      "_",
      "cream",
      "',",
      " '",
      "face",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " switch",
      " on",
      " electric",
      " sh",
      "aver",
      "\n",
      " assert",
      "('",
      "electric",
      "_",
      "sh",
      "aver",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "electric",
      "_",
      "sh",
      "aver",
      "')",
      "\n",
      " switch",
      "on",
      "('",
      "electric",
      "_",
      "sh",
      "aver",
      "')",
      "\n",
      " #",
      " 6",
      ":",
      " shave",
      " with",
      " electric",
      " sh",
      "aver",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "electric",
      "_",
      "sh",
      "aver",
      "')",
      "\n",
      " assert",
      "('",
      "electric",
      "_",
      "sh",
      "aver",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "electric",
      "_",
      "sh",
      "aver",
      "')",
      "\n",
      " shave",
      "('",
      "electric",
      "_",
      "sh",
      "aver",
      "',",
      " '",
      "face",
      "')",
      "\n",
      " #",
      " 7",
      ":",
      " switch",
      " off",
      " electric",
      " sh",
      "aver",
      "\n",
      " switch",
      "off",
      "('",
      "electric",
      "_",
      "sh",
      "aver",
      "')",
      "\n",
      " #",
      " 8",
      ":",
      " put",
      " back",
      " electric",
      " sh",
      "aver",
      "\n",
      " put",
      "obj",
      "back",
      "('",
      "electric",
      "_",
      "sh",
      "aver",
      "')",
      "\n",
      " #",
      " 9",
      ":",
      " wash",
      " face",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "face",
      "')",
      "\n",
      " else",
      ":",
      " tur",
      "nt",
      "o",
      "('",
      "face",
      "')",
      "\n",
      " point",
      "at",
      "('",
      "face",
      "')",
      "\n",
      " wash",
      "('",
      "face",
      "')",
      "\n",
      " #",
      " 10",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.025353165,
      -0.012602702,
      -0.0024463793,
      -0.4679298,
      -0.3051662,
      -0.1730889,
      -0.0021676817,
      -0.030729964,
      -0.024781657,
      -0.0032001268,
      -0.015561538,
      -0.006149548,
      -0.0018712055,
      -0.00082217914,
      -0.0039032802,
      -0.0091585405,
      -0.0074176234,
      -0.004351806,
      -0.0011006205,
      -0.30970386,
      -0.12077191,
      -0.0060662497,
      -0.003284504,
      -0.0147426,
      -1.0776803,
      -0.0015771451,
      -0.0016315324,
      -0.0015872938,
      -0.001553384,
      -0.0006323192,
      -0.0021121297,
      -0.0050948868,
      -1.0450815,
      -0.0018464833,
      -0.21023473,
      -0.0035983901,
      -0.001152894,
      -0.0011366637,
      -0.0028482291,
      -0.020135388,
      -0.0060479,
      -0.008899494,
      -0.03154592,
      -0.0051743304,
      -0.02623879,
      -0.0035447932,
      -0.011185046,
      -0.0018311372,
      -0.0011154774,
      -0.0013947221,
      -0.00037386353,
      -0.0023026916,
      -0.0031739976,
      -0.006564942,
      -1.0961791,
      -0.008463534,
      -0.0010077166,
      -2.1801782,
      -0.26306456,
      -0.01075634,
      -0.021243965,
      -0.026108833,
      -0.00095807976,
      -0.0005998747,
      -0.00038244936,
      -0.004739928,
      -0.00036873287,
      -0.0021999357,
      -0.005043067,
      -0.04951278,
      -0.0066896253,
      -0.0009295016,
      -0.9712306,
      -0.038351506,
      -0.0024921524,
      -0.014975148,
      -0.036282405,
      -0.0011195361,
      -0.00065337407,
      -3.023464e-05,
      -0.0017829479,
      -0.0002968876,
      -0.001203857,
      -0.0031021272,
      -0.120202,
      -0.0008772995,
      -0.0074955695,
      -0.0006750832,
      -0.002782,
      -0.00041578274,
      -0.002130469,
      -0.002928691,
      -0.0022660692,
      -0.0010497823,
      -0.0041407454,
      -0.0028348994,
      -0.003113607,
      -0.0022047763,
      -0.007520912,
      -0.0023093822,
      -0.002087401,
      -0.00015302899,
      -0.0013866047,
      -0.0005222258,
      -0.0021147588,
      -0.006286595,
      -0.045753133,
      -0.009442262,
      -0.00095020543,
      -3.4958622,
      -0.38595936,
      -0.002542587,
      -1.0053538,
      -0.075582765,
      -0.012480598,
      -2.033702,
      -0.002087999,
      -1.2167009,
      -0.005831625,
      -0.0011808807,
      -0.013530574,
      -0.24049847,
      -0.005925456,
      -0.003979753,
      -0.041601487,
      -0.002773095,
      -0.99747807,
      -0.00021479129,
      -0.0012786355,
      -0.0013743065,
      -0.005459742,
      -0.0028042353,
      -0.0074567776,
      -1.9578832,
      -0.0020814266,
      -0.00074618217,
      -0.47479078,
      -0.0007494018,
      -0.0032947296,
      -0.00044488095,
      -0.0036507938,
      -0.007673522,
      -2.0412495,
      -0.018287104,
      -0.0039822077,
      -0.00036277244,
      -0.0025775433,
      -0.00040868655,
      -2.9597976,
      -0.030556774,
      -0.0048801964,
      -0.0031886452,
      -0.0070314696,
      -0.13377023,
      -0.005249287,
      -0.0008804027,
      -1.5142828,
      -0.028938357,
      -0.20359977,
      -0.007874018,
      -0.0005385048,
      -0.0282231,
      -1.1561105,
      -0.001152894,
      -0.70853347,
      -0.0021494036,
      -0.0012745768,
      -0.0016639505,
      -0.003166404,
      -0.014259827,
      -0.0037048152,
      -0.004560159,
      -0.0074112,
      -0.0033709197,
      -0.008129793,
      -0.002401629,
      -0.0094747525,
      -0.001002707,
      -0.0015163721,
      -0.0005897354,
      -0.00029724615,
      -0.0034799534,
      -0.004232382,
      -0.005621811,
      -0.15102056,
      -0.0012720687,
      -0.0006050035,
      -0.0025828616,
      -0.0008353625,
      -0.0012085127,
      -0.00076902803,
      -0.0016902215,
      -0.005733726,
      -0.07209623,
      -0.0044589695,
      -0.0014099415,
      -0.37966594,
      -1.2540976,
      -0.03672251,
      -0.006230934,
      -0.00039115347,
      -0.0067859376,
      -2.153409,
      -7.20769e-05,
      -0.002301017,
      -0.00051292183,
      -0.13893265,
      -0.0013022078,
      -0.0003324822,
      -0.00059832406,
      -0.0026019858,
      -0.004283262,
      -2.704243,
      -0.0010731133,
      -0.38563806,
      -0.00090635545,
      -0.0012525523,
      -0.00047988512,
      -0.0043281596,
      -0.0929303,
      -0.0018794468,
      -0.0038544515,
      -0.004222264,
      -0.0028881594,
      -0.0038952022,
      -0.0013159948,
      -0.0032694337,
      -0.0010178615,
      -0.00065599853,
      -0.00041035545,
      -1.7953334e-05,
      -0.00049288356,
      -0.0021464147,
      -0.005185356,
      -0.13374904,
      -0.05724694,
      -0.04928051,
      -0.00069601886,
      -0.00031143386,
      -0.00070974004,
      -1.3306226,
      -0.0039088456,
      -0.010553921,
      -0.002555196,
      -0.010345223,
      -0.035294037,
      -0.010430983,
      -0.0018636212,
      -0.18010107,
      -0.029359456,
      -0.020704556,
      -0.0025838183,
      -0.00060154457,
      -0.020262139,
      -0.1703485,
      -0.0032275738,
      -0.0008917378,
      -0.00076211017,
      -0.0021711465,
      -0.0004914521,
      -0.00091721094,
      -0.0028280246,
      -0.031933885,
      -0.022229984,
      -0.0018770588,
      -0.002347559,
      -0.5710083,
      -0.9549357,
      -0.14119706,
      -0.0045169885,
      -0.0007974823,
      -0.18618375,
      -0.6381415,
      -0.73827195,
      -0.0032160932,
      -0.0010672655,
      -0.0011058722,
      -0.000919001,
      -0.00046992695,
      -0.0006735307,
      -0.007905197,
      -0.23149411,
      -0.08870433,
      -0.010324202,
      -0.00379103,
      -2.9288623,
      -0.29707786,
      -0.1416866,
      -0.90141106,
      -0.000903609,
      -0.013693773,
      -0.0028756647,
      -0.0006202707,
      -0.0015392948,
      -0.082987845,
      -0.0025027283,
      -0.0030413796,
      -0.001445397,
      -0.0019649626,
      -0.017423168,
      -6.563869e-05,
      -0.00062074844,
      -0.000522344,
      -0.00038042187,
      -0.0015139843,
      -0.004760829,
      -1.3988727,
      -0.0011750339,
      -0.00070460845,
      -0.09177309,
      -0.0017877847,
      -0.005895236,
      -0.09854243,
      -0.0012151367,
      -0.0020211032,
      -0.002853968,
      -0.13733649,
      -0.053802297,
      -0.011134839,
      -0.005590401,
      -0.44385794
     ],
     "top_logprobs": [
      {
       " #": -0.025353165
      },
      {
       " 0": -0.012602702
      },
      {
       ":": -0.0024463793
      },
      {
       " find": -0.4679298
      },
      {
       " electric": -0.3051662
      },
      {
       " sh": -0.1730889
      },
      {
       "aver": -0.0021676817
      },
      {
       "\n": -0.030729964
      },
      {
       " find": -0.024781657
      },
      {
       "('": -0.0032001268
      },
      {
       "electric": -0.015561538
      },
      {
       "_": -0.006149548
      },
      {
       "sh": -0.0018712055
      },
      {
       "aver": -0.00082217914
      },
      {
       "')": -0.0039032802
      },
      {
       "\n": -0.0091585405
      },
      {
       " #": -0.0074176234
      },
      {
       " 1": -0.004351806
      },
      {
       ":": -0.0011006205
      },
      {
       " grab": -0.30970386
      },
      {
       " electric": -0.12077191
      },
      {
       " sh": -0.0060662497
      },
      {
       "aver": -0.003284504
      },
      {
       "\n": -0.0147426
      },
      {
       " assert": -0.4318617
      },
      {
       "('": -0.0015771451
      },
      {
       "electric": -0.0016315324
      },
      {
       "_": -0.0015872938
      },
      {
       "sh": -0.001553384
      },
      {
       "aver": -0.0006323192
      },
      {
       "')": -0.0021121297
      },
      {
       "\n": -0.0050948868
      },
      {
       " #": -0.53705347
      },
      {
       "('": -0.0018464833
      },
      {
       "electric": -0.21023473
      },
      {
       "_": -0.0035983901
      },
      {
       "sh": -0.001152894
      },
      {
       "aver": -0.0011366637
      },
      {
       "'": -0.0028482291
      },
      {
       " in": -0.020135388
      },
      {
       " '": -0.0060479
      },
      {
       "hands": -0.008899494
      },
      {
       "')": -0.03154592
      },
      {
       "\n": -0.0051743304
      },
      {
       " else": -0.02623879
      },
      {
       ":": -0.0035447932
      },
      {
       " grab": -0.011185046
      },
      {
       "('": -0.0018311372
      },
      {
       "electric": -0.0011154774
      },
      {
       "_": -0.0013947221
      },
      {
       "sh": -0.00037386353
      },
      {
       "aver": -0.0023026916
      },
      {
       "')": -0.0031739976
      },
      {
       "\n": -0.006564942
      },
      {
       " tur": -0.48758134
      },
      {
       " 2": -0.008463534
      },
      {
       ":": -0.0010077166
      },
      {
       " turn": -0.7768303
      },
      {
       " shaving": -0.26306456
      },
      {
       " cream": -0.01075634
      },
      {
       "\n": -0.021243965
      },
      {
       " find": -0.026108833
      },
      {
       "('": -0.00095807976
      },
      {
       "sh": -0.0005998747
      },
      {
       "aving": -0.00038244936
      },
      {
       "_": -0.004739928
      },
      {
       "cream": -0.00036873287
      },
      {
       "')": -0.0021999357
      },
      {
       "\n": -0.005043067
      },
      {
       " #": -0.04951278
      },
      {
       " 3": -0.0066896253
      },
      {
       ":": -0.0009295016
      },
      {
       " grab": -0.9712306
      },
      {
       " shaving": -0.038351506
      },
      {
       " cream": -0.0024921524
      },
      {
       "\n": -0.014975148
      },
      {
       " grab": -0.036282405
      },
      {
       "('": -0.0011195361
      },
      {
       "sh": -0.00065337407
      },
      {
       "aving": -3.023464e-05
      },
      {
       "_": -0.0017829479
      },
      {
       "cream": -0.0002968876
      },
      {
       "')": -0.001203857
      },
      {
       "\n": -0.0031021272
      },
      {
       " assert": -0.120202
      },
      {
       "('": -0.0008772995
      },
      {
       "sh": -0.0074955695
      },
      {
       "aving": -0.0006750832
      },
      {
       "_": -0.002782
      },
      {
       "cream": -0.00041578274
      },
      {
       "'": -0.002130469
      },
      {
       " in": -0.002928691
      },
      {
       " '": -0.0022660692
      },
      {
       "hands": -0.0010497823
      },
      {
       "')": -0.0041407454
      },
      {
       "\n": -0.0028348994
      },
      {
       " else": -0.003113607
      },
      {
       ":": -0.0022047763
      },
      {
       " grab": -0.007520912
      },
      {
       "('": -0.0023093822
      },
      {
       "sh": -0.002087401
      },
      {
       "aving": -0.00015302899
      },
      {
       "_": -0.0013866047
      },
      {
       "cream": -0.0005222258
      },
      {
       "')": -0.0021147588
      },
      {
       "\n": -0.006286595
      },
      {
       " #": -0.045753133
      },
      {
       " 4": -0.009442262
      },
      {
       ":": -0.00095020543
      },
      {
       " apply": -0.86947185
      },
      {
       " shaving": -0.38595936
      },
      {
       " cream": -0.002542587
      },
      {
       "\n": -0.5548676
      },
      {
       " face": -0.075582765
      },
      {
       "\n": -0.012480598
      },
      {
       " tur": -1.0149527
      },
      {
       "('": -0.002087999
      },
      {
       "sh": -0.40561622
      },
      {
       "'": -0.005831625
      },
      {
       " to": -0.0011808807
      },
      {
       " '": -0.013530574
      },
      {
       "face": -0.24049847
      },
      {
       "')": -0.005925456
      },
      {
       "\n": -0.003979753
      },
      {
       " else": -0.041601487
      },
      {
       ":": -0.002773095
      },
      {
       " tur": -0.99747807
      },
      {
       "nt": -0.00021479129
      },
      {
       "o": -0.0012786355
      },
      {
       "('": -0.0013743065
      },
      {
       "face": -0.005459742
      },
      {
       "')": -0.0028042353
      },
      {
       "\n": -0.0074567776
      },
      {
       " spread": -1.2580453
      },
      {
       "at": -0.0020814266
      },
      {
       "('": -0.00074618217
      },
      {
       "sh": -0.47479078
      },
      {
       "aving": -0.0007494018
      },
      {
       "_": -0.0032947296
      },
      {
       "cream": -0.00044488095
      },
      {
       "')": -0.0036507938
      },
      {
       "\n": -0.007673522
      },
      {
       " #": -0.9590486
      },
      {
       "('": -0.018287104
      },
      {
       "sh": -0.0039822077
      },
      {
       "aving": -0.00036277244
      },
      {
       "_": -0.0025775433
      },
      {
       "cream": -0.00040868655
      },
      {
       "')": -0.07480125
      },
      {
       " '": -0.030556774
      },
      {
       "face": -0.0048801964
      },
      {
       "')": -0.0031886452
      },
      {
       "\n": -0.0070314696
      },
      {
       " #": -0.13377023
      },
      {
       " 5": -0.005249287
      },
      {
       ":": -0.0008804027
      },
      {
       " turn": -1.0122992
      },
      {
       " on": -0.028938357
      },
      {
       " electric": -0.20359977
      },
      {
       " sh": -0.007874018
      },
      {
       "aver": -0.0005385048
      },
      {
       "\n": -0.0282231
      },
      {
       " switch": -0.5294759
      },
      {
       "('": -0.001152894
      },
      {
       "electric": -0.70853347
      },
      {
       "_": -0.0021494036
      },
      {
       "sh": -0.0012745768
      },
      {
       "aver": -0.0016639505
      },
      {
       "'": -0.003166404
      },
      {
       " in": -0.014259827
      },
      {
       " '": -0.0037048152
      },
      {
       "hands": -0.004560159
      },
      {
       "')": -0.0074112
      },
      {
       "\n": -0.0033709197
      },
      {
       " else": -0.008129793
      },
      {
       ":": -0.002401629
      },
      {
       " grab": -0.0094747525
      },
      {
       "('": -0.001002707
      },
      {
       "electric": -0.0015163721
      },
      {
       "_": -0.0005897354
      },
      {
       "sh": -0.00029724615
      },
      {
       "aver": -0.0034799534
      },
      {
       "')": -0.004232382
      },
      {
       "\n": -0.005621811
      },
      {
       " switch": -0.15102056
      },
      {
       "on": -0.0012720687
      },
      {
       "('": -0.0006050035
      },
      {
       "electric": -0.0025828616
      },
      {
       "_": -0.0008353625
      },
      {
       "sh": -0.0012085127
      },
      {
       "aver": -0.00076902803
      },
      {
       "')": -0.0016902215
      },
      {
       "\n": -0.005733726
      },
      {
       " #": -0.07209623
      },
      {
       " 6": -0.0044589695
      },
      {
       ":": -0.0014099415
      },
      {
       " shave": -0.37966594
      },
      {
       "\n": -1.075749
      },
      {
       " electric": -0.03672251
      },
      {
       " sh": -0.006230934
      },
      {
       "aver": -0.00039115347
      },
      {
       "\n": -0.0067859376
      },
      {
       " assert": -0.44736296
      },
      {
       "nt": -7.20769e-05
      },
      {
       "o": -0.002301017
      },
      {
       "('": -0.00051292183
      },
      {
       "electric": -0.13893265
      },
      {
       "_": -0.0013022078
      },
      {
       "sh": -0.0003324822
      },
      {
       "aver": -0.00059832406
      },
      {
       "')": -0.0026019858
      },
      {
       "\n": -0.004283262
      },
      {
       " point": -0.97900134
      },
      {
       "('": -0.0010731133
      },
      {
       "electric": -0.38563806
      },
      {
       "_": -0.00090635545
      },
      {
       "sh": -0.0012525523
      },
      {
       "aver": -0.00047988512
      },
      {
       "'": -0.0043281596
      },
      {
       " in": -0.0929303
      },
      {
       " '": -0.0018794468
      },
      {
       "hands": -0.0038544515
      },
      {
       "')": -0.004222264
      },
      {
       "\n": -0.0028881594
      },
      {
       " else": -0.0038952022
      },
      {
       ":": -0.0013159948
      },
      {
       " grab": -0.0032694337
      },
      {
       "('": -0.0010178615
      },
      {
       "electric": -0.00065599853
      },
      {
       "_": -0.00041035545
      },
      {
       "sh": -1.7953334e-05
      },
      {
       "aver": -0.00049288356
      },
      {
       "')": -0.0021464147
      },
      {
       "\n": -0.005185356
      },
      {
       " shave": -0.13374904
      },
      {
       "('": -0.05724694
      },
      {
       "electric": -0.04928051
      },
      {
       "_": -0.00069601886
      },
      {
       "sh": -0.00031143386
      },
      {
       "aver": -0.00070974004
      },
      {
       "')": -0.31761926
      },
      {
       " '": -0.0039088456
      },
      {
       "face": -0.010553921
      },
      {
       "')": -0.002555196
      },
      {
       "\n": -0.010345223
      },
      {
       " #": -0.035294037
      },
      {
       " 7": -0.010430983
      },
      {
       ":": -0.0018636212
      },
      {
       " switch": -0.18010107
      },
      {
       " off": -0.029359456
      },
      {
       " electric": -0.020704556
      },
      {
       " sh": -0.0025838183
      },
      {
       "aver": -0.00060154457
      },
      {
       "\n": -0.020262139
      },
      {
       " switch": -0.1703485
      },
      {
       "off": -0.0032275738
      },
      {
       "('": -0.0008917378
      },
      {
       "electric": -0.00076211017
      },
      {
       "_": -0.0021711465
      },
      {
       "sh": -0.0004914521
      },
      {
       "aver": -0.00091721094
      },
      {
       "')": -0.0028280246
      },
      {
       "\n": -0.031933885
      },
      {
       " #": -0.022229984
      },
      {
       " 8": -0.0018770588
      },
      {
       ":": -0.002347559
      },
      {
       " put": -0.5710083
      },
      {
       " electric": -0.8499532
      },
      {
       " electric": -0.14119706
      },
      {
       " sh": -0.0045169885
      },
      {
       "aver": -0.0007974823
      },
      {
       "\n": -0.18618375
      },
      {
       " put": -0.6381415
      },
      {
       "back": -0.67310935
      },
      {
       "back": -0.0032160932
      },
      {
       "('": -0.0010672655
      },
      {
       "electric": -0.0011058722
      },
      {
       "_": -0.000919001
      },
      {
       "sh": -0.00046992695
      },
      {
       "aver": -0.0006735307
      },
      {
       "')": -0.007905197
      },
      {
       "\n": -0.23149411
      },
      {
       " #": -0.08870433
      },
      {
       " 9": -0.010324202
      },
      {
       ":": -0.00379103
      },
      {
       " Done": -0.9621418
      },
      {
       " face": -0.29707786
      },
      {
       "\n": -0.1416866
      },
      {
       " assert": -0.90141106
      },
      {
       "('": -0.000903609
      },
      {
       "close": -0.013693773
      },
      {
       "'": -0.0028756647
      },
      {
       " to": -0.0006202707
      },
      {
       " '": -0.0015392948
      },
      {
       "face": -0.082987845
      },
      {
       "')": -0.0025027283
      },
      {
       "\n": -0.0030413796
      },
      {
       " else": -0.001445397
      },
      {
       ":": -0.0019649626
      },
      {
       " tur": -0.017423168
      },
      {
       "nt": -6.563869e-05
      },
      {
       "o": -0.00062074844
      },
      {
       "('": -0.000522344
      },
      {
       "face": -0.00038042187
      },
      {
       "')": -0.0015139843
      },
      {
       "\n": -0.004760829
      },
      {
       " wash": -0.530289
      },
      {
       "at": -0.0011750339
      },
      {
       "('": -0.00070460845
      },
      {
       "face": -0.09177309
      },
      {
       "')": -0.0017877847
      },
      {
       "\n": -0.005895236
      },
      {
       " wash": -0.09854243
      },
      {
       "('": -0.0012151367
      },
      {
       "face": -0.0020211032
      },
      {
       "')": -0.002853968
      },
      {
       "\n": -0.13733649
      },
      {
       " #": -0.053802297
      },
      {
       " 10": -0.011134839
      },
      {
       ":": -0.005590401
      },
      {
       " Done": -0.44385794
      }
     ],
     "text_offset": [
      3338,
      3340,
      3342,
      3343,
      3348,
      3357,
      3360,
      3364,
      3365,
      3370,
      3372,
      3380,
      3381,
      3383,
      3387,
      3389,
      3390,
      3392,
      3394,
      3395,
      3400,
      3409,
      3412,
      3416,
      3417,
      3422,
      3424,
      3432,
      3433,
      3435,
      3439,
      3441,
      3442,
      3449,
      3451,
      3459,
      3460,
      3462,
      3466,
      3467,
      3470,
      3472,
      3477,
      3479,
      3480,
      3485,
      3486,
      3491,
      3493,
      3501,
      3502,
      3504,
      3508,
      3510,
      3511,
      3513,
      3515,
      3516,
      3521,
      3529,
      3535,
      3536,
      3541,
      3543,
      3545,
      3550,
      3551,
      3556,
      3558,
      3559,
      3561,
      3563,
      3564,
      3569,
      3577,
      3583,
      3584,
      3589,
      3591,
      3593,
      3598,
      3599,
      3604,
      3606,
      3607,
      3614,
      3616,
      3618,
      3623,
      3624,
      3629,
      3630,
      3633,
      3635,
      3640,
      3642,
      3643,
      3648,
      3649,
      3654,
      3656,
      3658,
      3663,
      3664,
      3669,
      3671,
      3672,
      3674,
      3676,
      3677,
      3684,
      3692,
      3698,
      3701,
      3706,
      3707,
      3714,
      3716,
      3721,
      3722,
      3725,
      3727,
      3731,
      3733,
      3734,
      3739,
      3740,
      3744,
      3746,
      3747,
      3749,
      3753,
      3755,
      3756,
      3762,
      3764,
      3766,
      3768,
      3773,
      3774,
      3779,
      3781,
      3782,
      3789,
      3791,
      3793,
      3798,
      3799,
      3804,
      3806,
      3808,
      3812,
      3814,
      3815,
      3817,
      3819,
      3820,
      3827,
      3830,
      3839,
      3842,
      3846,
      3847,
      3854,
      3856,
      3864,
      3865,
      3867,
      3871,
      3872,
      3875,
      3877,
      3882,
      3884,
      3885,
      3890,
      3891,
      3896,
      3898,
      3906,
      3907,
      3909,
      3913,
      3915,
      3916,
      3923,
      3925,
      3927,
      3935,
      3936,
      3938,
      3942,
      3944,
      3945,
      3947,
      3949,
      3950,
      3956,
      3961,
      3970,
      3973,
      3977,
      3978,
      3982,
      3984,
      3985,
      3987,
      3995,
      3996,
      3998,
      4002,
      4004,
      4005,
      4012,
      4014,
      4022,
      4023,
      4025,
      4029,
      4030,
      4033,
      4035,
      4040,
      4042,
      4043,
      4048,
      4049,
      4054,
      4056,
      4064,
      4065,
      4067,
      4071,
      4073,
      4074,
      4080,
      4082,
      4090,
      4091,
      4093,
      4097,
      4099,
      4101,
      4105,
      4107,
      4108,
      4110,
      4112,
      4113,
      4120,
      4124,
      4133,
      4136,
      4140,
      4141,
      4148,
      4151,
      4153,
      4161,
      4162,
      4164,
      4168,
      4170,
      4171,
      4173,
      4175,
      4176,
      4180,
      4185,
      4194,
      4197,
      4201,
      4202,
      4206,
      4209,
      4213,
      4215,
      4223,
      4224,
      4226,
      4230,
      4232,
      4233,
      4235,
      4237,
      4238,
      4243,
      4248,
      4249,
      4256,
      4258,
      4263,
      4264,
      4267,
      4269,
      4273,
      4275,
      4276,
      4281,
      4282,
      4286,
      4288,
      4289,
      4291,
      4295,
      4297,
      4298,
      4304,
      4306,
      4308,
      4312,
      4314,
      4315,
      4320,
      4322,
      4326,
      4328,
      4329,
      4331,
      4334,
      4335
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Shave",
   "task_description": "I go into the bathroom, cut the tub water on, then wet my legs. I then open the shaving cream and apply it to my legs. I grab the razor off of the shelf and start shaving my legs until they are hairless and smooth.",
   "program": [
    "[Find] <razor> (1)",
    "[TurnTo] <razor> (1)",
    "[PointAt] <razor> (1)",
    "[Wash] <razor> (1)",
    "[TurnTo] <razor> (1)",
    "[LookAt] <razor> (1)",
    "[Grab] <razor> (1)",
    "[Walk] <bathroom> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_turk_third",
   "file_id": "split39_1",
   "goal_condition": [
    [
     [
      240,
      1000,
      "HOLDS_RH",
      "character",
      "razor"
     ],
     [
      240,
      1,
      "INSIDE",
      "character",
      "bathroom"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1169,
   "completion_tokens": 321,
   "total_tokens": 1490
  }
 },
 "5": {
  "plan": [
   [
    " # 0: find hanger\n find('hanger')\n # 1: grab hanger\n assert('close' to 'hanger')\n else: find('hanger')\n grab('hanger')\n # 2: find jacket\n find('jacket')\n # 3: grab jacket\n assert('close' to 'jacket')\n else: find('jacket')\n grab('jacket')\n # 4: hang up jacket\n assert('hanger' in 'hands')\n else: grab('hanger')\n assert('jacket' in 'hands')\n else: grab('jacket')\n puton('jacket', 'hanger')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " h",
      "anger",
      "\n",
      " find",
      "('",
      "h",
      "anger",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " grab",
      " h",
      "anger",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "h",
      "anger",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "h",
      "anger",
      "')",
      "\n",
      " grab",
      "('",
      "h",
      "anger",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " find",
      " jacket",
      "\n",
      " find",
      "('",
      "j",
      "acket",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " grab",
      " jacket",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "j",
      "acket",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "j",
      "acket",
      "')",
      "\n",
      " grab",
      "('",
      "j",
      "acket",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " hang",
      " up",
      " jacket",
      "\n",
      " assert",
      "('",
      "h",
      "anger",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "h",
      "anger",
      "')",
      "\n",
      " assert",
      "('",
      "j",
      "acket",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "j",
      "acket",
      "')",
      "\n",
      " put",
      "on",
      "('",
      "j",
      "acket",
      "',",
      " '",
      "h",
      "anger",
      "')"
     ],
     "token_logprobs": [
      -0.015799984,
      -0.007666433,
      -0.0019291934,
      -0.78317004,
      -0.4245183,
      -0.0030908268,
      -0.030860769,
      -0.048318174,
      -0.00196771,
      -0.00039735518,
      -0.00015278964,
      -0.00181376,
      -0.0075875157,
      -0.005537537,
      -0.0025507729,
      -0.0005379106,
      -0.27551553,
      -0.20888072,
      -0.0010408321,
      -0.021007884,
      -0.42873344,
      -0.0017695139,
      -0.005769874,
      -0.0023489322,
      -0.00059319526,
      -0.0027011926,
      -0.00077785796,
      -0.00029867573,
      -0.004646805,
      -0.0058415784,
      -0.0010928644,
      -0.0013932897,
      -0.0029639006,
      -0.0017564958,
      -0.00059200136,
      -0.0003642048,
      -0.0024301903,
      -0.0063143047,
      -0.004119258,
      -0.00096523983,
      -0.0003033258,
      -8.065993e-05,
      -0.0016369043,
      -0.004981365,
      -0.85886174,
      -0.008611058,
      -0.00057571946,
      -0.82825804,
      -0.07524758,
      -0.030279167,
      -0.07498536,
      -0.00078668504,
      -0.0031394358,
      -9.5562886e-05,
      -0.0020349612,
      -0.0032791807,
      -0.023545042,
      -0.0058274884,
      -0.0007991522,
      -0.990995,
      -0.05141313,
      -0.024082376,
      -0.14613038,
      -0.00098069,
      -0.0028672384,
      -0.0015945159,
      -0.0010477529,
      -0.0013050736,
      -0.0017742289,
      -5.197998e-06,
      -0.0041560074,
      -0.002878416,
      -0.00058251905,
      -0.0011761058,
      -0.0028138575,
      -0.0010981162,
      -0.0011321864,
      -4.1320116e-05,
      -0.0022568104,
      -0.0047712494,
      -0.004442564,
      -0.0011920412,
      -0.0006807489,
      -3.6670972e-05,
      -0.0015777412,
      -0.0038341691,
      -0.0196635,
      -0.008870808,
      -0.0007270957,
      -0.37635213,
      -0.4954462,
      -0.2322096,
      -0.36981887,
      -0.43504757,
      -0.0024012714,
      -0.6844033,
      -0.0007421263,
      -0.0033130287,
      -0.095309846,
      -0.0067062466,
      -0.011636431,
      -0.13617752,
      -0.010510372,
      -0.047955014,
      -0.0038852084,
      -0.065090366,
      -0.0017554219,
      -0.0017446134,
      -0.00036563535,
      -0.0045362073,
      -0.0059947716,
      -0.9392763,
      -0.0012439599,
      -0.0063353,
      -0.00023190197,
      -0.0010809904,
      -0.002013042,
      -0.0015743976,
      -0.0015423981,
      -0.0043574935,
      -0.004561237,
      -0.0009296208,
      -0.0018475571,
      -0.010012355,
      -0.0023989407,
      -0.0023646462,
      -0.00015255497,
      -0.0027395645,
      -0.00528308,
      -1.0508144,
      -0.04123507,
      -0.0021849454,
      -0.42996788,
      -2.7371756e-05,
      -0.730727,
      -0.011436004,
      -0.0008595825,
      -0.00027673383,
      -0.0024941827
     ],
     "top_logprobs": [
      {
       " #": -0.015799984
      },
      {
       " 0": -0.007666433
      },
      {
       ":": -0.0019291934
      },
      {
       " find": -0.78317004
      },
      {
       " h": -0.4245183
      },
      {
       "anger": -0.0030908268
      },
      {
       "\n": -0.030860769
      },
      {
       " find": -0.048318174
      },
      {
       "('": -0.00196771
      },
      {
       "h": -0.00039735518
      },
      {
       "anger": -0.00015278964
      },
      {
       "')": -0.00181376
      },
      {
       "\n": -0.0075875157
      },
      {
       " #": -0.005537537
      },
      {
       " 1": -0.0025507729
      },
      {
       ":": -0.0005379106
      },
      {
       " grab": -0.27551553
      },
      {
       " h": -0.20888072
      },
      {
       "anger": -0.0010408321
      },
      {
       "\n": -0.021007884
      },
      {
       " assert": -0.42873344
      },
      {
       "('": -0.0017695139
      },
      {
       "close": -0.005769874
      },
      {
       "'": -0.0023489322
      },
      {
       " to": -0.00059319526
      },
      {
       " '": -0.0027011926
      },
      {
       "h": -0.00077785796
      },
      {
       "anger": -0.00029867573
      },
      {
       "')": -0.004646805
      },
      {
       "\n": -0.0058415784
      },
      {
       " else": -0.0010928644
      },
      {
       ":": -0.0013932897
      },
      {
       " find": -0.0029639006
      },
      {
       "('": -0.0017564958
      },
      {
       "h": -0.00059200136
      },
      {
       "anger": -0.0003642048
      },
      {
       "')": -0.0024301903
      },
      {
       "\n": -0.0063143047
      },
      {
       " grab": -0.004119258
      },
      {
       "('": -0.00096523983
      },
      {
       "h": -0.0003033258
      },
      {
       "anger": -8.065993e-05
      },
      {
       "')": -0.0016369043
      },
      {
       "\n": -0.004981365
      },
      {
       " assert": -0.61324954
      },
      {
       " 2": -0.008611058
      },
      {
       ":": -0.00057571946
      },
      {
       " find": -0.82825804
      },
      {
       " jacket": -0.07524758
      },
      {
       "\n": -0.030279167
      },
      {
       " find": -0.07498536
      },
      {
       "('": -0.00078668504
      },
      {
       "j": -0.0031394358
      },
      {
       "acket": -9.5562886e-05
      },
      {
       "')": -0.0020349612
      },
      {
       "\n": -0.0032791807
      },
      {
       " #": -0.023545042
      },
      {
       " 3": -0.0058274884
      },
      {
       ":": -0.0007991522
      },
      {
       " hang": -0.9759678
      },
      {
       " jacket": -0.05141313
      },
      {
       "\n": -0.024082376
      },
      {
       " assert": -0.14613038
      },
      {
       "('": -0.00098069
      },
      {
       "close": -0.0028672384
      },
      {
       "'": -0.0015945159
      },
      {
       " to": -0.0010477529
      },
      {
       " '": -0.0013050736
      },
      {
       "j": -0.0017742289
      },
      {
       "acket": -5.197998e-06
      },
      {
       "')": -0.0041560074
      },
      {
       "\n": -0.002878416
      },
      {
       " else": -0.00058251905
      },
      {
       ":": -0.0011761058
      },
      {
       " find": -0.0028138575
      },
      {
       "('": -0.0010981162
      },
      {
       "j": -0.0011321864
      },
      {
       "acket": -4.1320116e-05
      },
      {
       "')": -0.0022568104
      },
      {
       "\n": -0.0047712494
      },
      {
       " grab": -0.004442564
      },
      {
       "('": -0.0011920412
      },
      {
       "j": -0.0006807489
      },
      {
       "acket": -3.6670972e-05
      },
      {
       "')": -0.0015777412
      },
      {
       "\n": -0.0038341691
      },
      {
       " #": -0.0196635
      },
      {
       " 4": -0.008870808
      },
      {
       ":": -0.0007270957
      },
      {
       " hang": -0.37635213
      },
      {
       " up": -0.4954462
      },
      {
       " jacket": -0.2322096
      },
      {
       "\n": -0.36981887
      },
      {
       " assert": -0.43504757
      },
      {
       "('": -0.0024012714
      },
      {
       "h": -0.6844033
      },
      {
       "anger": -0.0007421263
      },
      {
       "'": -0.0033130287
      },
      {
       " in": -0.095309846
      },
      {
       " '": -0.0067062466
      },
      {
       "hands": -0.011636431
      },
      {
       "')": -0.13617752
      },
      {
       "\n": -0.010510372
      },
      {
       " else": -0.047955014
      },
      {
       ":": -0.0038852084
      },
      {
       " grab": -0.065090366
      },
      {
       "('": -0.0017554219
      },
      {
       "h": -0.0017446134
      },
      {
       "anger": -0.00036563535
      },
      {
       "')": -0.0045362073
      },
      {
       "\n": -0.0059947716
      },
      {
       " assert": -0.9392763
      },
      {
       "('": -0.0012439599
      },
      {
       "j": -0.0063353
      },
      {
       "acket": -0.00023190197
      },
      {
       "'": -0.0010809904
      },
      {
       " in": -0.002013042
      },
      {
       " '": -0.0015743976
      },
      {
       "hands": -0.0015423981
      },
      {
       "')": -0.0043574935
      },
      {
       "\n": -0.004561237
      },
      {
       " else": -0.0009296208
      },
      {
       ":": -0.0018475571
      },
      {
       " grab": -0.010012355
      },
      {
       "('": -0.0023989407
      },
      {
       "j": -0.0023646462
      },
      {
       "acket": -0.00015255497
      },
      {
       "')": -0.0027395645
      },
      {
       "\n": -0.00528308
      },
      {
       " hang": -0.6713875
      },
      {
       "on": -0.04123507
      },
      {
       "('": -0.0021849454
      },
      {
       "j": -0.42996788
      },
      {
       "acket": -2.7371756e-05
      },
      {
       "',": -0.730727
      },
      {
       " '": -0.011436004
      },
      {
       "h": -0.0008595825
      },
      {
       "anger": -0.00027673383
      },
      {
       "')": -0.0024941827
      }
     ],
     "text_offset": [
      3347,
      3349,
      3351,
      3352,
      3357,
      3359,
      3364,
      3365,
      3370,
      3372,
      3373,
      3378,
      3380,
      3381,
      3383,
      3385,
      3386,
      3391,
      3393,
      3398,
      3399,
      3406,
      3408,
      3413,
      3414,
      3417,
      3419,
      3420,
      3425,
      3427,
      3428,
      3433,
      3434,
      3439,
      3441,
      3442,
      3447,
      3449,
      3450,
      3455,
      3457,
      3458,
      3463,
      3465,
      3466,
      3468,
      3470,
      3471,
      3476,
      3483,
      3484,
      3489,
      3491,
      3492,
      3497,
      3499,
      3500,
      3502,
      3504,
      3505,
      3510,
      3517,
      3518,
      3525,
      3527,
      3532,
      3533,
      3536,
      3538,
      3539,
      3544,
      3546,
      3547,
      3552,
      3553,
      3558,
      3560,
      3561,
      3566,
      3568,
      3569,
      3574,
      3576,
      3577,
      3582,
      3584,
      3585,
      3587,
      3589,
      3590,
      3595,
      3598,
      3605,
      3606,
      3613,
      3615,
      3616,
      3621,
      3622,
      3625,
      3627,
      3632,
      3634,
      3635,
      3640,
      3641,
      3646,
      3648,
      3649,
      3654,
      3656,
      3657,
      3664,
      3666,
      3667,
      3672,
      3673,
      3676,
      3678,
      3683,
      3685,
      3686,
      3691,
      3692,
      3697,
      3699,
      3700,
      3705,
      3707,
      3708,
      3712,
      3714,
      3716,
      3717,
      3722,
      3724,
      3726,
      3727,
      3732
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Hang up jacket",
   "task_description": "Upon entering, remove coat and utilize coatrack/hook to store coat by neatly hanging coat on hook.",
   "program": [
    "[Walk] <bedroom> (1)",
    "[Walk] <clothes_jacket> (1)",
    "[Find] <clothes_jacket> (1)",
    "[Find] <clothes_jacket> (1)",
    "[PutOff] <clothes_jacket> (1)",
    "[Grab] <clothes_jacket> (1)",
    "[Find] <hanger> (1)",
    "[PutBack] <clothes_jacket> (1) <hanger> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_turk_third",
   "file_id": "split65_2",
   "goal_condition": [
    [
     [
      240,
      162,
      "INSIDE",
      "character",
      "bedroom"
     ],
     [
      1000,
      1001,
      "ON",
      "clothes_jacket",
      "hanger"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1174,
   "completion_tokens": 139,
   "total_tokens": 1313
  }
 },
 "6": {
  "plan": [
   [
    " # 0: find the newspaper\n find('newspaper')\n # 1: grab newspaper\n grab('newspaper')\n # 2: find a chair to sit on\n find('chair')\n # 3: sit on chair\n sit('chair')\n # 4: read the newspaper\n read('newspaper')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " the",
      " newspaper",
      "\n",
      " find",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " grab",
      " newspaper",
      "\n",
      " grab",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " find",
      " a",
      " chair",
      " to",
      " sit",
      " on",
      "\n",
      " find",
      "('",
      "chair",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " sit",
      " on",
      " chair",
      "\n",
      " sit",
      "('",
      "chair",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " read",
      " the",
      " newspaper",
      "\n",
      " read",
      "('",
      "new",
      "sp",
      "aper",
      "')"
     ],
     "token_logprobs": [
      -0.01758033,
      -0.008371208,
      -0.0018675635,
      -0.5560805,
      -1.5691426,
      -0.041616153,
      -0.028668372,
      -0.032280955,
      -0.0026355723,
      -0.0020070693,
      -0.00050421304,
      -0.0005466157,
      -0.002707946,
      -0.008456803,
      -0.004974356,
      -0.002221444,
      -0.0004225786,
      -0.235751,
      -1.994508,
      -0.019288989,
      -0.80891645,
      -0.0012425266,
      -0.00077332335,
      -0.00021562482,
      -0.0004642021,
      -0.001533265,
      -0.005203868,
      -0.6090468,
      -0.007942812,
      -0.0005772701,
      -0.8749188,
      -1.1989425,
      -0.67155707,
      -2.6321204,
      -0.016863324,
      -0.4241543,
      -0.042185556,
      -0.11587787,
      -0.0013000594,
      -0.001124908,
      -0.0017634239,
      -0.0050164703,
      -0.25560787,
      -0.0074182246,
      -0.0004814367,
      -0.033215247,
      -0.10403353,
      -0.8634704,
      -0.058539376,
      -0.61733955,
      -0.0013519244,
      -0.0006040489,
      -0.00081645243,
      -0.0047297464,
      -0.010058594,
      -0.0063768676,
      -0.00067245873,
      -0.58406836,
      -0.5144903,
      -0.018618425,
      -0.010868831,
      -0.8076829,
      -0.0020856091,
      -0.00084288017,
      -0.00033749174,
      -0.00026027925,
      -0.0018582473
     ],
     "top_logprobs": [
      {
       " #": -0.01758033
      },
      {
       " 0": -0.008371208
      },
      {
       ":": -0.0018675635
      },
      {
       " find": -0.5560805
      },
      {
       " newspaper": -0.3382083
      },
      {
       " newspaper": -0.041616153
      },
      {
       "\n": -0.028668372
      },
      {
       " find": -0.032280955
      },
      {
       "('": -0.0026355723
      },
      {
       "new": -0.0020070693
      },
      {
       "sp": -0.00050421304
      },
      {
       "aper": -0.0005466157
      },
      {
       "')": -0.002707946
      },
      {
       "\n": -0.008456803
      },
      {
       " #": -0.004974356
      },
      {
       " 1": -0.002221444
      },
      {
       ":": -0.0004225786
      },
      {
       " grab": -0.235751
      },
      {
       " the": -0.17091604
      },
      {
       "\n": -0.019288989
      },
      {
       " assert": -0.60804117
      },
      {
       "('": -0.0012425266
      },
      {
       "new": -0.00077332335
      },
      {
       "sp": -0.00021562482
      },
      {
       "aper": -0.0004642021
      },
      {
       "')": -0.001533265
      },
      {
       "\n": -0.005203868
      },
      {
       " #": -0.6090468
      },
      {
       " 2": -0.007942812
      },
      {
       ":": -0.0005772701
      },
      {
       " find": -0.8749188
      },
      {
       " a": -1.1989425
      },
      {
       " chair": -0.67155707
      },
      {
       "\n": -0.35987395
      },
      {
       " sit": -0.016863324
      },
      {
       " on": -0.4241543
      },
      {
       "\n": -0.042185556
      },
      {
       " find": -0.11587787
      },
      {
       "('": -0.0013000594
      },
      {
       "chair": -0.001124908
      },
      {
       "')": -0.0017634239
      },
      {
       "\n": -0.0050164703
      },
      {
       " #": -0.25560787
      },
      {
       " 3": -0.0074182246
      },
      {
       ":": -0.0004814367
      },
      {
       " sit": -0.033215247
      },
      {
       " on": -0.10403353
      },
      {
       " the": -0.5740932
      },
      {
       "\n": -0.058539376
      },
      {
       " sit": -0.61733955
      },
      {
       "('": -0.0013519244
      },
      {
       "chair": -0.0006040489
      },
      {
       "')": -0.00081645243
      },
      {
       "\n": -0.0047297464
      },
      {
       " #": -0.010058594
      },
      {
       " 4": -0.0063768676
      },
      {
       ":": -0.00067245873
      },
      {
       " read": -0.58406836
      },
      {
       " the": -0.5144903
      },
      {
       " newspaper": -0.018618425
      },
      {
       "\n": -0.010868831
      },
      {
       " read": -0.8076829
      },
      {
       "('": -0.0020856091
      },
      {
       "new": -0.00084288017
      },
      {
       "sp": -0.00033749174
      },
      {
       "aper": -0.00026027925
      },
      {
       "')": -0.0018582473
      }
     ],
     "text_offset": [
      3347,
      3349,
      3351,
      3352,
      3357,
      3361,
      3371,
      3372,
      3377,
      3379,
      3382,
      3384,
      3388,
      3390,
      3391,
      3393,
      3395,
      3396,
      3401,
      3411,
      3412,
      3417,
      3419,
      3422,
      3424,
      3428,
      3430,
      3431,
      3433,
      3435,
      3436,
      3441,
      3443,
      3449,
      3452,
      3456,
      3459,
      3460,
      3465,
      3467,
      3472,
      3474,
      3475,
      3477,
      3479,
      3480,
      3484,
      3487,
      3493,
      3494,
      3498,
      3500,
      3505,
      3507,
      3508,
      3510,
      3512,
      3513,
      3518,
      3522,
      3532,
      3533,
      3538,
      3540,
      3543,
      3545,
      3549
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Read newspaper",
   "task_description": "I go outside to get the newspaper.I come back inside and sit down at the dining room table and read it.",
   "program": [
    "[Find] <chair> (1)",
    "[TurnTo] <chair> (1)",
    "[PointAt] <chair> (1)",
    "[Wash] <chair> (1)",
    "[Sit] <chair> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_turk_third",
   "file_id": "split3_3",
   "goal_condition": [
    [
     [
      240,
      194,
      "FACING",
      "character",
      "chair"
     ],
     [
      240,
      194,
      "ON",
      "character",
      "chair"
     ],
     [
      240,
      209,
      "FACING",
      "character",
      "computer"
     ]
    ],
    [
     [
      240,
      "character",
      "SITTING"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1173,
   "completion_tokens": 67,
   "total_tokens": 1240
  }
 },
 "7": {
  "plan": [
   [
    " # 0: walk to a chair\n walk('chair')\n # 1: find the chair\n find('chair')\n # 2: sit on the chair\n turnto('chair')\n lookat('chair')\n assert('close' to 'chair')\n else: find('chair')\n sit('chair')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " a",
      " chair",
      "\n",
      " walk",
      "('",
      "chair",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " the",
      " chair",
      "\n",
      " find",
      "('",
      "chair",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " sit",
      " on",
      " the",
      " chair",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "chair",
      "')",
      "\n",
      " look",
      "at",
      "('",
      "chair",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "chair",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "chair",
      "')",
      "\n",
      " sit",
      "('",
      "chair",
      "')"
     ],
     "token_logprobs": [
      -0.17559677,
      -0.04149642,
      -0.004342648,
      -2.0436292,
      -0.28705993,
      -2.7353253,
      -0.38148662,
      -0.09893684,
      -0.069064125,
      -0.009348401,
      -0.0048205997,
      -0.0018411076,
      -0.012386152,
      -0.01788435,
      -0.004076703,
      -0.00092293863,
      -0.17018567,
      -1.0594317,
      -0.004344803,
      -0.026259348,
      -0.06657354,
      -0.0014887346,
      -0.0007205946,
      -0.0020196107,
      -0.0059330715,
      -0.005009702,
      -0.004899659,
      -0.00081466336,
      -0.05553648,
      -0.22948171,
      -0.081941195,
      -0.0015530264,
      -0.011162747,
      -1.0662923,
      -4.7399757e-05,
      -0.000116070536,
      -0.00077726186,
      -0.00059319526,
      -0.0014177603,
      -0.005456205,
      -0.25798157,
      -0.00073794933,
      -0.0005391018,
      -0.0005701139,
      -0.0014638434,
      -0.003981249,
      -0.06054648,
      -0.0015345801,
      -0.0035248732,
      -0.0028888774,
      -0.0006543287,
      -0.0019349849,
      -0.00094686385,
      -0.003990643,
      -0.0038733608,
      -0.0011931151,
      -0.0014769132,
      -0.006071587,
      -0.0017668859,
      -0.00063464424,
      -0.0019884352,
      -0.0069612423,
      -0.4207109,
      -0.003460095,
      -0.0008880386,
      -0.0024552841
     ],
     "top_logprobs": [
      {
       " #": -0.17559677
      },
      {
       " 0": -0.04149642
      },
      {
       ":": -0.004342648
      },
      {
       " find": -0.43500555
      },
      {
       " to": -0.28705993
      },
      {
       " chair": -1.2855363
      },
      {
       " chair": -0.38148662
      },
      {
       "\n": -0.09893684
      },
      {
       " walk": -0.069064125
      },
      {
       "('": -0.009348401
      },
      {
       "chair": -0.0048205997
      },
      {
       "')": -0.0018411076
      },
      {
       "\n": -0.012386152
      },
      {
       " #": -0.01788435
      },
      {
       " 1": -0.004076703
      },
      {
       ":": -0.00092293863
      },
      {
       " find": -0.17018567
      },
      {
       " chair": -0.923288
      },
      {
       " chair": -0.004344803
      },
      {
       "\n": -0.026259348
      },
      {
       " find": -0.06657354
      },
      {
       "('": -0.0014887346
      },
      {
       "chair": -0.0007205946
      },
      {
       "')": -0.0020196107
      },
      {
       "\n": -0.0059330715
      },
      {
       " #": -0.005009702
      },
      {
       " 2": -0.004899659
      },
      {
       ":": -0.00081466336
      },
      {
       " sit": -0.05553648
      },
      {
       " on": -0.22948171
      },
      {
       " the": -0.081941195
      },
      {
       " chair": -0.0015530264
      },
      {
       "\n": -0.011162747
      },
      {
       " assert": -0.64127684
      },
      {
       "nt": -4.7399757e-05
      },
      {
       "o": -0.000116070536
      },
      {
       "('": -0.00077726186
      },
      {
       "chair": -0.00059319526
      },
      {
       "')": -0.0014177603
      },
      {
       "\n": -0.005456205
      },
      {
       " look": -0.25798157
      },
      {
       "at": -0.00073794933
      },
      {
       "('": -0.0005391018
      },
      {
       "chair": -0.0005701139
      },
      {
       "')": -0.0014638434
      },
      {
       "\n": -0.003981249
      },
      {
       " assert": -0.06054648
      },
      {
       "('": -0.0015345801
      },
      {
       "close": -0.0035248732
      },
      {
       "'": -0.0028888774
      },
      {
       " to": -0.0006543287
      },
      {
       " '": -0.0019349849
      },
      {
       "chair": -0.00094686385
      },
      {
       "')": -0.003990643
      },
      {
       "\n": -0.0038733608
      },
      {
       " else": -0.0011931151
      },
      {
       ":": -0.0014769132
      },
      {
       " find": -0.006071587
      },
      {
       "('": -0.0017668859
      },
      {
       "chair": -0.00063464424
      },
      {
       "')": -0.0019884352
      },
      {
       "\n": -0.0069612423
      },
      {
       " sit": -0.4207109
      },
      {
       "('": -0.003460095
      },
      {
       "chair": -0.0008880386
      },
      {
       "')": -0.0024552841
      }
     ],
     "text_offset": [
      3336,
      3338,
      3340,
      3341,
      3346,
      3349,
      3351,
      3357,
      3358,
      3363,
      3365,
      3370,
      3372,
      3373,
      3375,
      3377,
      3378,
      3383,
      3387,
      3393,
      3394,
      3399,
      3401,
      3406,
      3408,
      3409,
      3411,
      3413,
      3414,
      3418,
      3421,
      3425,
      3431,
      3432,
      3436,
      3438,
      3439,
      3441,
      3446,
      3448,
      3449,
      3454,
      3456,
      3458,
      3463,
      3465,
      3466,
      3473,
      3475,
      3480,
      3481,
      3484,
      3486,
      3491,
      3493,
      3494,
      3499,
      3500,
      3505,
      3507,
      3512,
      3514,
      3515,
      3519,
      3521,
      3526
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Sit",
   "task_description": "We sit at the dining room table",
   "program": [
    "[Walk] <dining_room> (1)",
    "[Walk] <chair> (1)",
    "[Find] <chair> (1)",
    "[Pull] <chair> (1)",
    "[Sit] <chair> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_turk_third",
   "file_id": "split41_2",
   "goal_condition": [
    [
     [
      240,
      41,
      "INSIDE",
      "character",
      "dining_room"
     ],
     [
      240,
      1000,
      "ON",
      "character",
      "chair"
     ]
    ],
    [
     [
      240,
      "character",
      "SITTING"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1169,
   "completion_tokens": 66,
   "total_tokens": 1235
  }
 },
 "8": {
  "plan": [
   [
    " # 0: close eyes\n closeeyes()\n # 1: relax body\n relaxbody()\n # 2: drift off to sleep\n driftofftosleep()",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " close",
      " eyes",
      "\n",
      " close",
      "eyes",
      "()",
      "\n",
      " #",
      " 1",
      ":",
      " relax",
      " body",
      "\n",
      " relax",
      "body",
      "()",
      "\n",
      " #",
      " 2",
      ":",
      " drift",
      " off",
      " to",
      " sleep",
      "\n",
      " drift",
      "off",
      "t",
      "os",
      "leep",
      "()"
     ],
     "token_logprobs": [
      -0.25707194,
      -0.057736263,
      -0.0026986825,
      -3.9759266,
      -0.2436443,
      -0.053951506,
      -0.17661326,
      -2.5495214,
      -0.023481213,
      -0.016032174,
      -0.006241851,
      -0.002956248,
      -0.00048167605,
      -0.80647844,
      -0.8781583,
      -0.047829334,
      -0.027763437,
      -0.33910087,
      -0.0022727,
      -0.011283603,
      -0.0027198386,
      -0.0042903856,
      -0.0004281842,
      -1.7415456,
      -0.29043132,
      -0.254421,
      -0.009444846,
      -0.008368023,
      -0.40000775,
      -0.16836287,
      -0.39815807,
      -1.6521892e-05,
      -0.00027530332,
      -0.005021559
     ],
     "top_logprobs": [
      {
       " #": -0.25707194
      },
      {
       " 0": -0.057736263
      },
      {
       ":": -0.0026986825
      },
      {
       " find": -1.0493273
      },
      {
       " eyes": -0.2436443
      },
      {
       "\n": -0.053951506
      },
      {
       " close": -0.17661326
      },
      {
       "('": -0.27612868
      },
      {
       "()": -0.023481213
      },
      {
       "\n": -0.016032174
      },
      {
       " #": -0.006241851
      },
      {
       " 1": -0.002956248
      },
      {
       ":": -0.00048167605
      },
      {
       " relax": -0.80647844
      },
      {
       " body": -0.8781583
      },
      {
       "\n": -0.047829334
      },
      {
       " relax": -0.027763437
      },
      {
       "body": -0.33910087
      },
      {
       "()": -0.0022727
      },
      {
       "\n": -0.011283603
      },
      {
       " #": -0.0027198386
      },
      {
       " 2": -0.0042903856
      },
      {
       ":": -0.0004281842
      },
      {
       " drift": -1.7415456
      },
      {
       " off": -0.29043132
      },
      {
       " to": -0.254421
      },
      {
       " sleep": -0.009444846
      },
      {
       "\n": -0.008368023
      },
      {
       " drift": -0.40000775
      },
      {
       "off": -0.16836287
      },
      {
       "t": -0.39815807
      },
      {
       "os": -1.6521892e-05
      },
      {
       "leep": -0.00027530332
      },
      {
       "()": -0.005021559
      }
     ],
     "text_offset": [
      3338,
      3340,
      3342,
      3343,
      3349,
      3354,
      3355,
      3361,
      3365,
      3367,
      3368,
      3370,
      3372,
      3373,
      3379,
      3384,
      3385,
      3391,
      3395,
      3397,
      3398,
      3400,
      3402,
      3403,
      3409,
      3413,
      3416,
      3422,
      3423,
      3429,
      3432,
      3433,
      3435,
      3439
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Sleep",
   "task_description": "Lie down in a bed at night and fall asleep",
   "program": [
    "[Walk] <bedroom> (1)",
    "[Walk] <bed> (1)",
    "[Find] <bed> (1)",
    "[Lie] <bed> (1)",
    "[Sleep]"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_july",
   "file_id": "split22_2",
   "goal_condition": [
    [
     [
      240,
      162,
      "INSIDE",
      "character",
      "bedroom"
     ],
     [
      240,
      197,
      "ON",
      "character",
      "bed"
     ]
    ],
    [
     [
      240,
      "character",
      "LYING"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1169,
   "completion_tokens": 34,
   "total_tokens": 1203
  }
 },
 "9": {
  "plan": [
   [
    " # 0: walk to bedroom\n walk('bedroom')\n # 1: find alarm clock\n find('alarm_clock')\n # 2: grab alarm clock\n assert('close' to 'alarm_clock')\n else: find('alarm_clock')\n grab('alarm_clock')\n # 3: find nightstand\n walk('nightstand')\n find('nightstand')\n # 4: put alarm clock on nightstand\n assert('close' to 'nightstand')\n else: find('nightstand')\n puton('nightstand')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " bedroom",
      "\n",
      " walk",
      "('",
      "bedroom",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " alarm",
      " clock",
      "\n",
      " find",
      "('",
      "al",
      "arm",
      "_",
      "clock",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " grab",
      " alarm",
      " clock",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "al",
      "arm",
      "_",
      "clock",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "al",
      "arm",
      "_",
      "clock",
      "')",
      "\n",
      " grab",
      "('",
      "al",
      "arm",
      "_",
      "clock",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " find",
      " night",
      "stand",
      "\n",
      " walk",
      "('",
      "night",
      "stand",
      "')",
      "\n",
      " find",
      "('",
      "night",
      "stand",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " put",
      " alarm",
      " clock",
      " on",
      " night",
      "stand",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "night",
      "stand",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "night",
      "stand",
      "')",
      "\n",
      " put",
      "on",
      "('",
      "night",
      "stand",
      "')"
     ],
     "token_logprobs": [
      -0.01898205,
      -0.0090441955,
      -0.0020858485,
      -0.6969472,
      -0.30358064,
      -0.0842947,
      -0.021816807,
      -0.00525498,
      -0.005140177,
      -0.0014856285,
      -0.0014741066,
      -0.0088032205,
      -0.0031278958,
      -0.0029165552,
      -0.00054399215,
      -0.04388732,
      -0.3100691,
      -0.07238844,
      -0.018422607,
      -0.3528263,
      -0.0010060486,
      -0.003370441,
      -0.0001792624,
      -0.02292761,
      -0.00043641243,
      -0.00283209,
      -0.005425162,
      -0.012583267,
      -0.0033825224,
      -0.0007491634,
      -0.555519,
      -0.336456,
      -0.008130154,
      -0.024937233,
      -1.1208926,
      -0.0016881911,
      -0.0052292743,
      -0.002681233,
      -0.0005018289,
      -0.0021691143,
      -0.0022851867,
      -0.00014718683,
      -0.0055816504,
      -0.00059975556,
      -0.007894027,
      -0.006426839,
      -0.0015392948,
      -0.0012756498,
      -0.003531512,
      -0.0010469183,
      -0.00042436953,
      -4.9308033e-05,
      -0.0020368125,
      -0.0010340326,
      -0.0034591376,
      -0.0056749196,
      -0.005076496,
      -0.0008992545,
      -0.00035311276,
      -5.675771e-06,
      -0.0023020937,
      -0.00038662262,
      -0.0018091024,
      -0.0045342916,
      -0.43050364,
      -0.0072385767,
      -0.0007924126,
      -1.5200547,
      -0.3375163,
      -0.23261696,
      -0.023622546,
      -1.9874153,
      -0.0023181662,
      -0.0024962157,
      -0.0033910754,
      -0.0014717197,
      -0.0062072426,
      -0.08993031,
      -0.00076425495,
      -0.0004899005,
      -0.00041578274,
      -0.0014874195,
      -0.0043117586,
      -0.009100313,
      -0.008940871,
      -0.00079384126,
      -0.08484527,
      -0.124585345,
      -0.005614498,
      -0.16773263,
      -0.043181576,
      -0.03303657,
      -0.009040104,
      -0.33361003,
      -0.0012281437,
      -0.35150942,
      -0.0024061692,
      -0.00078835577,
      -0.002001154,
      -0.035662547,
      -0.0004608624,
      -0.006579763,
      -0.0046197395,
      -0.0023168502,
      -0.0013694725,
      -0.052787863,
      -0.0009716236,
      -0.0014147162,
      -0.00046968853,
      -0.0024518187,
      -0.005494983,
      -0.19314416,
      -0.120142445,
      -0.001398243,
      -1.5966176,
      -0.0007827492,
      -0.7991856
     ],
     "top_logprobs": [
      {
       " #": -0.01898205
      },
      {
       " 0": -0.0090441955
      },
      {
       ":": -0.0020858485
      },
      {
       " walk": -0.6969472
      },
      {
       " to": -0.30358064
      },
      {
       " bedroom": -0.0842947
      },
      {
       "\n": -0.021816807
      },
      {
       " walk": -0.00525498
      },
      {
       "('": -0.005140177
      },
      {
       "bedroom": -0.0014856285
      },
      {
       "')": -0.0014741066
      },
      {
       "\n": -0.0088032205
      },
      {
       " #": -0.0031278958
      },
      {
       " 1": -0.0029165552
      },
      {
       ":": -0.00054399215
      },
      {
       " find": -0.04388732
      },
      {
       " alarm": -0.3100691
      },
      {
       " clock": -0.07238844
      },
      {
       "\n": -0.018422607
      },
      {
       " find": -0.3528263
      },
      {
       "('": -0.0010060486
      },
      {
       "al": -0.003370441
      },
      {
       "arm": -0.0001792624
      },
      {
       "_": -0.02292761
      },
      {
       "clock": -0.00043641243
      },
      {
       "')": -0.00283209
      },
      {
       "\n": -0.005425162
      },
      {
       " #": -0.012583267
      },
      {
       " 2": -0.0033825224
      },
      {
       ":": -0.0007491634
      },
      {
       " grab": -0.555519
      },
      {
       " alarm": -0.336456
      },
      {
       " clock": -0.008130154
      },
      {
       "\n": -0.024937233
      },
      {
       " grab": -0.41116914
      },
      {
       "('": -0.0016881911
      },
      {
       "close": -0.0052292743
      },
      {
       "'": -0.002681233
      },
      {
       " to": -0.0005018289
      },
      {
       " '": -0.0021691143
      },
      {
       "al": -0.0022851867
      },
      {
       "arm": -0.00014718683
      },
      {
       "_": -0.0055816504
      },
      {
       "clock": -0.00059975556
      },
      {
       "')": -0.007894027
      },
      {
       "\n": -0.006426839
      },
      {
       " else": -0.0015392948
      },
      {
       ":": -0.0012756498
      },
      {
       " find": -0.003531512
      },
      {
       "('": -0.0010469183
      },
      {
       "al": -0.00042436953
      },
      {
       "arm": -4.9308033e-05
      },
      {
       "_": -0.0020368125
      },
      {
       "clock": -0.0010340326
      },
      {
       "')": -0.0034591376
      },
      {
       "\n": -0.0056749196
      },
      {
       " grab": -0.005076496
      },
      {
       "('": -0.0008992545
      },
      {
       "al": -0.00035311276
      },
      {
       "arm": -5.675771e-06
      },
      {
       "_": -0.0023020937
      },
      {
       "clock": -0.00038662262
      },
      {
       "')": -0.0018091024
      },
      {
       "\n": -0.0045342916
      },
      {
       " #": -0.43050364
      },
      {
       " 3": -0.0072385767
      },
      {
       ":": -0.0007924126
      },
      {
       " put": -0.79299414
      },
      {
       " night": -0.3375163
      },
      {
       "stand": -0.23261696
      },
      {
       "\n": -0.023622546
      },
      {
       " find": -0.17195883
      },
      {
       "('": -0.0023181662
      },
      {
       "night": -0.0024962157
      },
      {
       "stand": -0.0033910754
      },
      {
       "')": -0.0014717197
      },
      {
       "\n": -0.0062072426
      },
      {
       " find": -0.08993031
      },
      {
       "('": -0.00076425495
      },
      {
       "night": -0.0004899005
      },
      {
       "stand": -0.00041578274
      },
      {
       "')": -0.0014874195
      },
      {
       "\n": -0.0043117586
      },
      {
       " #": -0.009100313
      },
      {
       " 4": -0.008940871
      },
      {
       ":": -0.00079384126
      },
      {
       " put": -0.08484527
      },
      {
       " alarm": -0.124585345
      },
      {
       " clock": -0.005614498
      },
      {
       " on": -0.16773263
      },
      {
       " night": -0.043181576
      },
      {
       "stand": -0.03303657
      },
      {
       "\n": -0.009040104
      },
      {
       " assert": -0.33361003
      },
      {
       "('": -0.0012281437
      },
      {
       "close": -0.35150942
      },
      {
       "'": -0.0024061692
      },
      {
       " to": -0.00078835577
      },
      {
       " '": -0.002001154
      },
      {
       "night": -0.035662547
      },
      {
       "stand": -0.0004608624
      },
      {
       "')": -0.006579763
      },
      {
       "\n": -0.0046197395
      },
      {
       " else": -0.0023168502
      },
      {
       ":": -0.0013694725
      },
      {
       " find": -0.052787863
      },
      {
       "('": -0.0009716236
      },
      {
       "night": -0.0014147162
      },
      {
       "stand": -0.00046968853
      },
      {
       "')": -0.0024518187
      },
      {
       "\n": -0.005494983
      },
      {
       " put": -0.19314416
      },
      {
       "on": -0.120142445
      },
      {
       "('": -0.001398243
      },
      {
       "al": -0.22743313
      },
      {
       "stand": -0.0007827492
      },
      {
       "')": -0.7991856
      }
     ],
     "text_offset": [
      3359,
      3361,
      3363,
      3364,
      3369,
      3372,
      3380,
      3381,
      3386,
      3388,
      3395,
      3397,
      3398,
      3400,
      3402,
      3403,
      3408,
      3414,
      3420,
      3421,
      3426,
      3428,
      3430,
      3433,
      3434,
      3439,
      3441,
      3442,
      3444,
      3446,
      3447,
      3452,
      3458,
      3464,
      3465,
      3472,
      3474,
      3479,
      3480,
      3483,
      3485,
      3487,
      3490,
      3491,
      3496,
      3498,
      3499,
      3504,
      3505,
      3510,
      3512,
      3514,
      3517,
      3518,
      3523,
      3525,
      3526,
      3531,
      3533,
      3535,
      3538,
      3539,
      3544,
      3546,
      3547,
      3549,
      3551,
      3552,
      3557,
      3563,
      3568,
      3569,
      3574,
      3576,
      3581,
      3586,
      3588,
      3589,
      3594,
      3596,
      3601,
      3606,
      3608,
      3609,
      3611,
      3613,
      3614,
      3618,
      3624,
      3630,
      3633,
      3639,
      3644,
      3645,
      3652,
      3654,
      3659,
      3660,
      3663,
      3665,
      3670,
      3675,
      3677,
      3678,
      3683,
      3684,
      3689,
      3691,
      3696,
      3701,
      3703,
      3704,
      3708,
      3710,
      3712,
      3717,
      3722
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Put alarm clock in bedroom",
   "task_description": "Take alarm clock. Sit it on stand, next to bed. Plug in alarm clock. Set time, according to watch. Set alarm, depending on what time you have to get up.",
   "program": [
    "[Walk] <bedroom> (1)",
    "[Walk] <alarm_clock> (1)",
    "[Find] <alarm_clock> (1)",
    "[Grab] <alarm_clock> (1)",
    "[Find] <dresser> (1)",
    "[Open] <dresser> (1)",
    "[PutBack] <alarm_clock> (1) <dresser> (1)",
    "[SwitchOn] <alarm_clock> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_kellensecond",
   "file_id": "split11_6",
   "goal_condition": [
    [
     [
      240,
      162,
      "INSIDE",
      "character",
      "bedroom"
     ],
     [
      1000,
      1001,
      "ON",
      "alarm_clock",
      "dresser"
     ]
    ],
    [
     [
      1001,
      "dresser",
      "OPEN"
     ],
     [
      1000,
      "alarm_clock",
      "ON"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1178,
   "completion_tokens": 117,
   "total_tokens": 1295
  }
 },
 "10": {
  "plan": [
   [
    " # 0: find chair\n find('chair')\n # 1: sit in chair\n assert('close' to 'chair')\n else: find('chair')\n sit('chair')\n turnto('chair')\n lookat('chair')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " chair",
      "\n",
      " find",
      "('",
      "chair",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " sit",
      " in",
      " chair",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "chair",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "chair",
      "')",
      "\n",
      " sit",
      "('",
      "chair",
      "')",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "chair",
      "')",
      "\n",
      " look",
      "at",
      "('",
      "chair",
      "')"
     ],
     "token_logprobs": [
      -0.022850279,
      -0.008551962,
      -0.0017378073,
      -0.6448423,
      -0.15822607,
      -0.025902433,
      -0.044016927,
      -0.0019754744,
      -0.0011533718,
      -0.0015924263,
      -0.0076930434,
      -0.0036783114,
      -0.0026699372,
      -0.0006760368,
      -2.3877633,
      -0.643638,
      -0.20525077,
      -0.011614298,
      -0.19524251,
      -0.0015475345,
      -0.007505899,
      -0.002846436,
      -0.0011301578,
      -0.0023448106,
      -0.00069673505,
      -0.0044403505,
      -0.0041908408,
      -0.0012314853,
      -0.0014136416,
      -0.0031540252,
      -0.0012637138,
      -0.00063870015,
      -0.0017785287,
      -0.004506211,
      -0.1983811,
      -0.0019260873,
      -0.0005360014,
      -0.0019512892,
      -0.16749088,
      -1.5330192,
      -9.38949e-05,
      -0.00011320953,
      -0.0005850234,
      -0.00055186276,
      -0.0010807512,
      -0.079479344,
      -0.26207748,
      -0.000903072,
      -0.00054029573,
      -0.00039139285,
      -0.0022526286
     ],
     "top_logprobs": [
      {
       " #": -0.022850279
      },
      {
       " 0": -0.008551962
      },
      {
       ":": -0.0017378073
      },
      {
       " find": -0.6448423
      },
      {
       " chair": -0.15822607
      },
      {
       "\n": -0.025902433
      },
      {
       " find": -0.044016927
      },
      {
       "('": -0.0019754744
      },
      {
       "chair": -0.0011533718
      },
      {
       "')": -0.0015924263
      },
      {
       "\n": -0.0076930434
      },
      {
       " #": -0.0036783114
      },
      {
       " 1": -0.0026699372
      },
      {
       ":": -0.0006760368
      },
      {
       " walk": -0.7781366
      },
      {
       " in": -0.643638
      },
      {
       " chair": -0.20525077
      },
      {
       "\n": -0.011614298
      },
      {
       " assert": -0.19524251
      },
      {
       "('": -0.0015475345
      },
      {
       "close": -0.007505899
      },
      {
       "'": -0.002846436
      },
      {
       " to": -0.0011301578
      },
      {
       " '": -0.0023448106
      },
      {
       "chair": -0.00069673505
      },
      {
       "')": -0.0044403505
      },
      {
       "\n": -0.0041908408
      },
      {
       " else": -0.0012314853
      },
      {
       ":": -0.0014136416
      },
      {
       " find": -0.0031540252
      },
      {
       "('": -0.0012637138
      },
      {
       "chair": -0.00063870015
      },
      {
       "')": -0.0017785287
      },
      {
       "\n": -0.004506211
      },
      {
       " sit": -0.1983811
      },
      {
       "('": -0.0019260873
      },
      {
       "chair": -0.0005360014
      },
      {
       "')": -0.0019512892
      },
      {
       "\n": -0.16749088
      },
      {
       " #": -0.9674256
      },
      {
       "nt": -9.38949e-05
      },
      {
       "o": -0.00011320953
      },
      {
       "('": -0.0005850234
      },
      {
       "chair": -0.00055186276
      },
      {
       "')": -0.0010807512
      },
      {
       "\n": -0.079479344
      },
      {
       " look": -0.26207748
      },
      {
       "at": -0.000903072
      },
      {
       "('": -0.00054029573
      },
      {
       "chair": -0.00039139285
      },
      {
       "')": -0.0022526286
      }
     ],
     "text_offset": [
      3345,
      3347,
      3349,
      3350,
      3355,
      3361,
      3362,
      3367,
      3369,
      3374,
      3376,
      3377,
      3379,
      3381,
      3382,
      3386,
      3389,
      3395,
      3396,
      3403,
      3405,
      3410,
      3411,
      3414,
      3416,
      3421,
      3423,
      3424,
      3429,
      3430,
      3435,
      3437,
      3442,
      3444,
      3445,
      3449,
      3451,
      3456,
      3458,
      3459,
      3463,
      3465,
      3466,
      3468,
      3473,
      3475,
      3476,
      3481,
      3483,
      3485,
      3490
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Sit in chair",
   "task_description": "I sit in a chair to rest and eat.",
   "program": [
    "[Walk] <dining_room> (1)",
    "[Walk] <chair> (1)",
    "[Find] <chair> (1)",
    "[Pull] <chair> (1)",
    "[Sit] <chair> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_kellensecond",
   "file_id": "split8_7",
   "goal_condition": [
    [
     [
      240,
      41,
      "INSIDE",
      "character",
      "dining_room"
     ],
     [
      240,
      1000,
      "ON",
      "character",
      "chair"
     ]
    ],
    [
     [
      240,
      "character",
      "SITTING"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1173,
   "completion_tokens": 51,
   "total_tokens": 1224
  }
 },
 "11": {
  "plan": [
   [
    " # 0: walk to bathroom\n walk('bathroom')\n # 1: find window\n walk('window')\n find('window')\n # 2: open window\n assert('close' to 'window')\n else: find('window')\n open('window')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " bathroom",
      "\n",
      " walk",
      "('",
      "bath",
      "room",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " window",
      "\n",
      " walk",
      "('",
      "window",
      "')",
      "\n",
      " find",
      "('",
      "window",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " open",
      " window",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "window",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "window",
      "')",
      "\n",
      " open",
      "('",
      "window",
      "')"
     ],
     "token_logprobs": [
      -0.01963183,
      -0.009794321,
      -0.00253177,
      -0.11549993,
      -0.21116707,
      -0.177357,
      -0.025882551,
      -0.005289253,
      -0.0045725545,
      -0.0024135208,
      -0.00022230239,
      -0.002336327,
      -0.0078044687,
      -0.0028785341,
      -0.0028901924,
      -0.00050111365,
      -0.030252136,
      -0.08448906,
      -0.018901443,
      -1.8873895,
      -0.0018852401,
      -0.0032089183,
      -0.0016223975,
      -0.005116336,
      -0.017017365,
      -0.0009620174,
      -0.0005652216,
      -0.0013937666,
      -0.0041341023,
      -0.0041069877,
      -0.006351856,
      -0.0007110504,
      -0.022551822,
      -0.47915432,
      -0.011809753,
      -0.25990385,
      -0.0016477118,
      -0.012201867,
      -0.0030588368,
      -0.00067377003,
      -0.002845002,
      -0.0010377318,
      -0.0040877764,
      -0.0044779503,
      -0.0015290863,
      -0.001576429,
      -0.0046465667,
      -0.0015235961,
      -0.00070401334,
      -0.0025468287,
      -0.00680448,
      -0.12044717,
      -0.0015770249,
      -0.0008127541,
      -0.0030035945
     ],
     "top_logprobs": [
      {
       " #": -0.01963183
      },
      {
       " 0": -0.009794321
      },
      {
       ":": -0.00253177
      },
      {
       " walk": -0.11549993
      },
      {
       " to": -0.21116707
      },
      {
       " bathroom": -0.177357
      },
      {
       "\n": -0.025882551
      },
      {
       " walk": -0.005289253
      },
      {
       "('": -0.0045725545
      },
      {
       "bath": -0.0024135208
      },
      {
       "room": -0.00022230239
      },
      {
       "')": -0.002336327
      },
      {
       "\n": -0.0078044687
      },
      {
       " #": -0.0028785341
      },
      {
       " 1": -0.0028901924
      },
      {
       ":": -0.00050111365
      },
      {
       " find": -0.030252136
      },
      {
       " window": -0.08448906
      },
      {
       "\n": -0.018901443
      },
      {
       " find": -0.19503734
      },
      {
       "('": -0.0018852401
      },
      {
       "window": -0.0032089183
      },
      {
       "')": -0.0016223975
      },
      {
       "\n": -0.005116336
      },
      {
       " find": -0.017017365
      },
      {
       "('": -0.0009620174
      },
      {
       "window": -0.0005652216
      },
      {
       "')": -0.0013937666
      },
      {
       "\n": -0.0041341023
      },
      {
       " #": -0.0041069877
      },
      {
       " 2": -0.006351856
      },
      {
       ":": -0.0007110504
      },
      {
       " open": -0.022551822
      },
      {
       " window": -0.47915432
      },
      {
       "\n": -0.011809753
      },
      {
       " assert": -0.25990385
      },
      {
       "('": -0.0016477118
      },
      {
       "close": -0.012201867
      },
      {
       "'": -0.0030588368
      },
      {
       " to": -0.00067377003
      },
      {
       " '": -0.002845002
      },
      {
       "window": -0.0010377318
      },
      {
       "')": -0.0040877764
      },
      {
       "\n": -0.0044779503
      },
      {
       " else": -0.0015290863
      },
      {
       ":": -0.001576429
      },
      {
       " find": -0.0046465667
      },
      {
       "('": -0.0015235961
      },
      {
       "window": -0.00070401334
      },
      {
       "')": -0.0025468287
      },
      {
       "\n": -0.00680448
      },
      {
       " open": -0.12044717
      },
      {
       "('": -0.0015770249
      },
      {
       "window": -0.0008127541
      },
      {
       "')": -0.0030035945
      }
     ],
     "text_offset": [
      3353,
      3355,
      3357,
      3358,
      3363,
      3366,
      3375,
      3376,
      3381,
      3383,
      3387,
      3391,
      3393,
      3394,
      3396,
      3398,
      3399,
      3404,
      3411,
      3412,
      3417,
      3419,
      3425,
      3427,
      3428,
      3433,
      3435,
      3441,
      3443,
      3444,
      3446,
      3448,
      3449,
      3454,
      3461,
      3462,
      3469,
      3471,
      3476,
      3477,
      3480,
      3482,
      3488,
      3490,
      3491,
      3496,
      3497,
      3502,
      3504,
      3510,
      3512,
      3513,
      3518,
      3520,
      3526
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Open bathroom window",
   "task_description": "Make sure bathroom window is unlocked. Lift up bathroom window so it is open.",
   "program": [
    "[Walk] <bathroom> (1)",
    "[Walk] <window> (1)",
    "[Find] <window> (1)",
    "[Open] <window> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_kellensecond",
   "file_id": "split7_3",
   "goal_condition": [
    [
     [
      240,
      1,
      "INSIDE",
      "character",
      "bathroom"
     ]
    ],
    [
     [
      1000,
      "window",
      "OPEN"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1174,
   "completion_tokens": 55,
   "total_tokens": 1229
  }
 },
 "12": {
  "plan": [
   [
    " # 0: walk to the home office\n walk('home_office')\n # 1: find computer\n find('computer')\n # 2: switch on the computer\n switchon('computer')\n # 3: find keyboard and mouse\n find('keyboard')\n find('mouse')\n # 4: use keyboard and mouse\n grab('keyboard')\n grab('mouse')\n turnto('keyboard')\n pointat('keyboard')\n turnto('mouse')\n pointat('mouse')\n # 5: switch off the computer\n switchoff('computer')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " the",
      " home",
      " office",
      "\n",
      " walk",
      "('",
      "home",
      "_",
      "office",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " computer",
      "\n",
      " find",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " switch",
      " on",
      " the",
      " computer",
      "\n",
      " switch",
      "on",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " find",
      " keyboard",
      " and",
      " mouse",
      "\n",
      " find",
      "('",
      "key",
      "board",
      "')",
      "\n",
      " find",
      "('",
      "mouse",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " use",
      " keyboard",
      " and",
      " mouse",
      "\n",
      " grab",
      "('",
      "key",
      "board",
      "')",
      "\n",
      " grab",
      "('",
      "mouse",
      "')",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "key",
      "board",
      "')",
      "\n",
      " point",
      "at",
      "('",
      "key",
      "board",
      "')",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "mouse",
      "')",
      "\n",
      " point",
      "at",
      "('",
      "mouse",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " switch",
      " off",
      " the",
      " computer",
      "\n",
      " switch",
      "off",
      "('",
      "computer",
      "')"
     ],
     "token_logprobs": [
      -0.017765183,
      -0.0069322526,
      -0.0016996549,
      -0.3261038,
      -0.25657508,
      -2.7154288,
      -0.45377842,
      -0.04111917,
      -0.024752699,
      -0.006823085,
      -0.0052555776,
      -0.011418759,
      -0.042032562,
      -0.0007647328,
      -0.002536968,
      -0.010042939,
      -0.0024216457,
      -0.002755162,
      -0.0005343297,
      -0.061464615,
      -0.76363105,
      -0.04365797,
      -0.20038481,
      -0.0011982486,
      -0.0015366677,
      -0.0015377434,
      -0.0059798416,
      -0.0119361775,
      -0.0051691183,
      -0.0007105736,
      -2.543296,
      -0.065548874,
      -0.37930685,
      -0.019915558,
      -0.017548481,
      -0.83560973,
      -0.0044964496,
      -0.0012131074,
      -0.0012184783,
      -0.0016721308,
      -0.004365456,
      -0.019184237,
      -0.0034682907,
      -0.0005685613,
      -1.2127151,
      -1.895292,
      -1.8123461,
      -0.056177095,
      -0.032635044,
      -0.034306407,
      -0.0022373954,
      -0.014584492,
      -0.0006994787,
      -0.046654265,
      -0.013968811,
      -0.06653449,
      -0.0010622531,
      -0.0004232957,
      -0.006539985,
      -0.0050918916,
      -0.011723391,
      -0.006196928,
      -0.00066005444,
      -1.9154301,
      -1.6262391,
      -0.067447424,
      -0.0024377783,
      -0.2510997,
      -1.5660995,
      -0.0011761058,
      -0.06830529,
      -0.0005362389,
      -0.0025113919,
      -0.005568465,
      -0.16190034,
      -0.0007048478,
      -0.00035836172,
      -0.003602398,
      -0.0046726735,
      -1.2120816,
      -4.1320116e-05,
      -0.00028866032,
      -0.0008967502,
      -0.1415818,
      -0.0007936066,
      -0.003104039,
      -0.0035324695,
      -0.5710193,
      -0.0019753543,
      -0.0007554889,
      -0.06206384,
      -0.00045787936,
      -0.0019426292,
      -0.005843437,
      -1.5908889,
      -8.638288e-05,
      -0.0006370312,
      -0.0005746466,
      -0.007442786,
      -0.0051809805,
      -0.0030476593,
      -0.029544538,
      -0.0006670915,
      -0.000590093,
      -0.0010000797,
      -0.0026757345,
      -0.24282496,
      -0.22049588,
      -0.009162931,
      -0.0017655726,
      -3.854742,
      -0.047883976,
      -0.22599632,
      -0.0038668984,
      -0.040017072,
      -0.017890112,
      -0.003611549,
      -0.0012345903,
      -0.0012767253,
      -0.004406702
     ],
     "top_logprobs": [
      {
       " #": -0.017765183
      },
      {
       " 0": -0.0069322526
      },
      {
       ":": -0.0016996549
      },
      {
       " walk": -0.3261038
      },
      {
       " to": -0.25657508
      },
      {
       " home": -0.48492497
      },
      {
       " home": -0.45377842
      },
      {
       " office": -0.04111917
      },
      {
       "\n": -0.024752699
      },
      {
       " walk": -0.006823085
      },
      {
       "('": -0.0052555776
      },
      {
       "home": -0.011418759
      },
      {
       "_": -0.042032562
      },
      {
       "office": -0.0007647328
      },
      {
       "')": -0.002536968
      },
      {
       "\n": -0.010042939
      },
      {
       " #": -0.0024216457
      },
      {
       " 1": -0.002755162
      },
      {
       ":": -0.0005343297
      },
      {
       " find": -0.061464615
      },
      {
       " computer": -0.76363105
      },
      {
       "\n": -0.04365797
      },
      {
       " find": -0.20038481
      },
      {
       "('": -0.0011982486
      },
      {
       "computer": -0.0015366677
      },
      {
       "')": -0.0015377434
      },
      {
       "\n": -0.0059798416
      },
      {
       " #": -0.0119361775
      },
      {
       " 2": -0.0051691183
      },
      {
       ":": -0.0007105736
      },
      {
       " turn": -0.6186947
      },
      {
       " on": -0.065548874
      },
      {
       " the": -0.37930685
      },
      {
       " computer": -0.019915558
      },
      {
       "\n": -0.017548481
      },
      {
       " assert": -0.67973834
      },
      {
       "on": -0.0044964496
      },
      {
       "('": -0.0012131074
      },
      {
       "computer": -0.0012184783
      },
      {
       "')": -0.0016721308
      },
      {
       "\n": -0.004365456
      },
      {
       " #": -0.019184237
      },
      {
       " 3": -0.0034682907
      },
      {
       ":": -0.0005685613
      },
      {
       " sit": -1.1274203
      },
      {
       " mouse": -0.8213089
      },
      {
       "\n": -0.20264404
      },
      {
       " mouse": -0.056177095
      },
      {
       "\n": -0.032635044
      },
      {
       " find": -0.034306407
      },
      {
       "('": -0.0022373954
      },
      {
       "key": -0.014584492
      },
      {
       "board": -0.0006994787
      },
      {
       "')": -0.046654265
      },
      {
       "\n": -0.013968811
      },
      {
       " find": -0.06653449
      },
      {
       "('": -0.0010622531
      },
      {
       "mouse": -0.0004232957
      },
      {
       "')": -0.006539985
      },
      {
       "\n": -0.0050918916
      },
      {
       " #": -0.011723391
      },
      {
       " 4": -0.006196928
      },
      {
       ":": -0.00066005444
      },
      {
       " grab": -1.0821656
      },
      {
       " the": -0.41046077
      },
      {
       " and": -0.067447424
      },
      {
       " mouse": -0.0024377783
      },
      {
       "\n": -0.2510997
      },
      {
       " assert": -1.2531035
      },
      {
       "('": -0.0011761058
      },
      {
       "key": -0.06830529
      },
      {
       "board": -0.0005362389
      },
      {
       "')": -0.0025113919
      },
      {
       "\n": -0.005568465
      },
      {
       " grab": -0.16190034
      },
      {
       "('": -0.0007048478
      },
      {
       "mouse": -0.00035836172
      },
      {
       "')": -0.003602398
      },
      {
       "\n": -0.0046726735
      },
      {
       " #": -1.1124216
      },
      {
       "nt": -4.1320116e-05
      },
      {
       "o": -0.00028866032
      },
      {
       "('": -0.0008967502
      },
      {
       "key": -0.1415818
      },
      {
       "board": -0.0007936066
      },
      {
       "')": -0.003104039
      },
      {
       "\n": -0.0035324695
      },
      {
       " point": -0.5710193
      },
      {
       "at": -0.0019753543
      },
      {
       "('": -0.0007554889
      },
      {
       "key": -0.06206384
      },
      {
       "board": -0.00045787936
      },
      {
       "')": -0.0019426292
      },
      {
       "\n": -0.005843437
      },
      {
       " tur": -1.5908889
      },
      {
       "nt": -8.638288e-05
      },
      {
       "o": -0.0006370312
      },
      {
       "('": -0.0005746466
      },
      {
       "mouse": -0.007442786
      },
      {
       "')": -0.0051809805
      },
      {
       "\n": -0.0030476593
      },
      {
       " point": -0.029544538
      },
      {
       "at": -0.0006670915
      },
      {
       "('": -0.000590093
      },
      {
       "mouse": -0.0010000797
      },
      {
       "')": -0.0026757345
      },
      {
       "\n": -0.24282496
      },
      {
       " #": -0.22049588
      },
      {
       " 5": -0.009162931
      },
      {
       ":": -0.0017655726
      },
      {
       " Done": -0.7025636
      },
      {
       " off": -0.047883976
      },
      {
       " the": -0.22599632
      },
      {
       " computer": -0.0038668984
      },
      {
       "\n": -0.040017072
      },
      {
       " switch": -0.017890112
      },
      {
       "off": -0.003611549
      },
      {
       "('": -0.0012345903
      },
      {
       "computer": -0.0012767253
      },
      {
       "')": -0.004406702
      }
     ],
     "text_offset": [
      3345,
      3347,
      3349,
      3350,
      3355,
      3358,
      3362,
      3367,
      3374,
      3375,
      3380,
      3382,
      3386,
      3387,
      3393,
      3395,
      3396,
      3398,
      3400,
      3401,
      3406,
      3415,
      3416,
      3421,
      3423,
      3431,
      3433,
      3434,
      3436,
      3438,
      3439,
      3446,
      3449,
      3453,
      3462,
      3463,
      3470,
      3472,
      3474,
      3482,
      3484,
      3485,
      3487,
      3489,
      3490,
      3495,
      3504,
      3508,
      3514,
      3515,
      3520,
      3522,
      3525,
      3530,
      3532,
      3533,
      3538,
      3540,
      3545,
      3547,
      3548,
      3550,
      3552,
      3553,
      3557,
      3566,
      3570,
      3576,
      3577,
      3582,
      3584,
      3587,
      3592,
      3594,
      3595,
      3600,
      3602,
      3607,
      3609,
      3610,
      3614,
      3616,
      3617,
      3619,
      3622,
      3627,
      3629,
      3630,
      3636,
      3638,
      3640,
      3643,
      3648,
      3650,
      3651,
      3655,
      3657,
      3658,
      3660,
      3665,
      3667,
      3668,
      3674,
      3676,
      3678,
      3683,
      3685,
      3686,
      3688,
      3690,
      3691,
      3698,
      3702,
      3706,
      3715,
      3716,
      3723,
      3726,
      3728,
      3736
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Use computer",
   "task_description": "Browse the internet",
   "program": [
    "[Walk] <home_office> (1)",
    "[Walk] <chair> (1)",
    "[Find] <chair> (1)",
    "[Sit] <chair> (1)",
    "[Find] <computer> (1)",
    "[SwitchOn] <computer> (1)",
    "[TurnTo] <computer> (1)",
    "[LookAt] <computer> (1)",
    "[Find] <keyboard> (1)",
    "[Type] <keyboard> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upworknturk_second",
   "file_id": "split146_1",
   "goal_condition": [
    [
     [
      240,
      241,
      "INSIDE",
      "character",
      "home_office"
     ],
     [
      240,
      271,
      "ON",
      "character",
      "chair"
     ]
    ],
    [
     [
      240,
      "character",
      "SITTING"
     ],
     [
      276,
      "computer",
      "ON"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1171,
   "completion_tokens": 120,
   "total_tokens": 1291
  }
 },
 "13": {
  "plan": [
   [
    " # 0: walk to bathroom\n walk('bathroom')\n # 1: find sink\n walk('sink')\n find('sink')\n # 2: turn on the faucet\n assert('close' to 'faucet')\n else: find('faucet')\n switchon('faucet')\n # 3: wash face\n grab('soap')\n pour('soap', 'hands')\n wash('hands')\n # 4: turn off the faucet\n switchoff('faucet')\n # 5: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " bathroom",
      "\n",
      " walk",
      "('",
      "bath",
      "room",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " sink",
      "\n",
      " walk",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " find",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " turn",
      " on",
      " the",
      " f",
      "auc",
      "et",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " switch",
      "on",
      "('",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " wash",
      " face",
      "\n",
      " grab",
      "('",
      "so",
      "ap",
      "')",
      "\n",
      " pour",
      "('",
      "so",
      "ap",
      "',",
      " '",
      "hands",
      "')",
      "\n",
      " wash",
      "('",
      "hands",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " turn",
      " off",
      " the",
      " f",
      "auc",
      "et",
      "\n",
      " switch",
      "off",
      "('",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.017167976,
      -0.0064241397,
      -0.0016977447,
      -0.63631636,
      -0.34176973,
      -0.14820693,
      -0.019205503,
      -0.005236464,
      -0.004378507,
      -0.002446858,
      -0.0001792624,
      -0.002780208,
      -0.0067102676,
      -0.00221768,
      -0.0028986207,
      -0.0007326985,
      -0.07958099,
      -0.17083712,
      -0.02603242,
      -1.1408759,
      -0.001765214,
      -0.0019353443,
      -0.00010092916,
      -0.0015489677,
      -0.005549525,
      -0.016744578,
      -0.0008706172,
      -0.00032288165,
      -4.1080762e-05,
      -0.0006631548,
      -0.0052216635,
      -0.0053062113,
      -0.0067309695,
      -0.0006802711,
      -0.5187788,
      -0.07984526,
      -0.9332695,
      -0.4931827,
      -0.0020234939,
      -0.0018593222,
      -0.036601506,
      -0.49220654,
      -0.0014720791,
      -0.005792716,
      -0.0028243188,
      -0.00037374342,
      -0.001274099,
      -0.07100762,
      -0.00049872854,
      -0.0004522747,
      -0.00570729,
      -0.006507166,
      -0.001528966,
      -0.0012091087,
      -0.0061118864,
      -0.0015178656,
      -0.0013675623,
      -0.0015626373,
      -0.00028579836,
      -0.0031695126,
      -0.0061090076,
      -0.65047824,
      -0.0025517275,
      -0.0010641633,
      -0.00078799913,
      -0.00022766957,
      -0.00021264647,
      -0.0018853584,
      -0.0055567166,
      -0.037080962,
      -0.0067269495,
      -0.00045919348,
      -1.2393351,
      -0.21660186,
      -0.27954268,
      -2.4327269,
      -0.0017778117,
      -1.3083426,
      -0.0027875004,
      -0.012712866,
      -0.0066157603,
      -1.8238866,
      -0.004860011,
      -0.54285204,
      -0.00022075453,
      -3.625672,
      -0.009484262,
      -1.0837882,
      -0.004448015,
      -0.0064512556,
      -0.66842115,
      -0.0031873293,
      -0.6103688,
      -0.028345542,
      -0.018535418,
      -1.2986773,
      -0.009547206,
      -0.0019607234,
      -0.32006064,
      -0.024391558,
      -0.61535686,
      -0.008118678,
      -0.0006901748,
      -0.0012402597,
      -0.022387477,
      -0.15029722,
      -0.0033432303,
      -0.0009393453,
      -0.000503143,
      -0.00028854018,
      -0.00024894974,
      -0.0024926302,
      -0.107764736,
      -0.029502852,
      -0.0050182645,
      -0.0019256097,
      -1.0686449
     ],
     "top_logprobs": [
      {
       " #": -0.017167976
      },
      {
       " 0": -0.0064241397
      },
      {
       ":": -0.0016977447
      },
      {
       " walk": -0.63631636
      },
      {
       " to": -0.34176973
      },
      {
       " bathroom": -0.14820693
      },
      {
       "\n": -0.019205503
      },
      {
       " walk": -0.005236464
      },
      {
       "('": -0.004378507
      },
      {
       "bath": -0.002446858
      },
      {
       "room": -0.0001792624
      },
      {
       "')": -0.002780208
      },
      {
       "\n": -0.0067102676
      },
      {
       " #": -0.00221768
      },
      {
       " 1": -0.0028986207
      },
      {
       ":": -0.0007326985
      },
      {
       " find": -0.07958099
      },
      {
       " sink": -0.17083712
      },
      {
       "\n": -0.02603242
      },
      {
       " find": -0.4079982
      },
      {
       "('": -0.001765214
      },
      {
       "s": -0.0019353443
      },
      {
       "ink": -0.00010092916
      },
      {
       "')": -0.0015489677
      },
      {
       "\n": -0.005549525
      },
      {
       " find": -0.016744578
      },
      {
       "('": -0.0008706172
      },
      {
       "s": -0.00032288165
      },
      {
       "ink": -4.1080762e-05
      },
      {
       "')": -0.0006631548
      },
      {
       "\n": -0.0052216635
      },
      {
       " #": -0.0053062113
      },
      {
       " 2": -0.0067309695
      },
      {
       ":": -0.0006802711
      },
      {
       " turn": -0.5187788
      },
      {
       " on": -0.07984526
      },
      {
       " the": -0.9332695
      },
      {
       " f": -0.4931827
      },
      {
       "auc": -0.0020234939
      },
      {
       "et": -0.0018593222
      },
      {
       "\n": -0.036601506
      },
      {
       " assert": -0.49220654
      },
      {
       "('": -0.0014720791
      },
      {
       "close": -0.005792716
      },
      {
       "'": -0.0028243188
      },
      {
       " to": -0.00037374342
      },
      {
       " '": -0.001274099
      },
      {
       "f": -0.07100762
      },
      {
       "auc": -0.00049872854
      },
      {
       "et": -0.0004522747
      },
      {
       "')": -0.00570729
      },
      {
       "\n": -0.006507166
      },
      {
       " else": -0.001528966
      },
      {
       ":": -0.0012091087
      },
      {
       " find": -0.0061118864
      },
      {
       "('": -0.0015178656
      },
      {
       "f": -0.0013675623
      },
      {
       "auc": -0.0015626373
      },
      {
       "et": -0.00028579836
      },
      {
       "')": -0.0031695126
      },
      {
       "\n": -0.0061090076
      },
      {
       " switch": -0.65047824
      },
      {
       "on": -0.0025517275
      },
      {
       "('": -0.0010641633
      },
      {
       "f": -0.00078799913
      },
      {
       "auc": -0.00022766957
      },
      {
       "et": -0.00021264647
      },
      {
       "')": -0.0018853584
      },
      {
       "\n": -0.0055567166
      },
      {
       " #": -0.037080962
      },
      {
       " 3": -0.0067269495
      },
      {
       ":": -0.00045919348
      },
      {
       " wash": -1.2393351
      },
      {
       " face": -0.21660186
      },
      {
       "\n": -0.27954268
      },
      {
       " assert": -0.94293875
      },
      {
       "('": -0.0017778117
      },
      {
       "so": -1.3083426
      },
      {
       "ap": -0.0027875004
      },
      {
       "')": -0.012712866
      },
      {
       "\n": -0.0066157603
      },
      {
       " wash": -0.9302051
      },
      {
       "('": -0.004860011
      },
      {
       "so": -0.54285204
      },
      {
       "ap": -0.00022075453
      },
      {
       "')": -0.06770692
      },
      {
       " '": -0.009484262
      },
      {
       "hands": -1.0837882
      },
      {
       "')": -0.004448015
      },
      {
       "\n": -0.0064512556
      },
      {
       " wash": -0.66842115
      },
      {
       "('": -0.0031873293
      },
      {
       "hands": -0.6103688
      },
      {
       "')": -0.028345542
      },
      {
       "\n": -0.018535418
      },
      {
       " wipe": -1.2208651
      },
      {
       " 4": -0.009547206
      },
      {
       ":": -0.0019607234
      },
      {
       " turn": -0.32006064
      },
      {
       " off": -0.024391558
      },
      {
       " the": -0.61535686
      },
      {
       " f": -0.008118678
      },
      {
       "auc": -0.0006901748
      },
      {
       "et": -0.0012402597
      },
      {
       "\n": -0.022387477
      },
      {
       " switch": -0.15029722
      },
      {
       "off": -0.0033432303
      },
      {
       "('": -0.0009393453
      },
      {
       "f": -0.000503143
      },
      {
       "auc": -0.00028854018
      },
      {
       "et": -0.00024894974
      },
      {
       "')": -0.0024926302
      },
      {
       "\n": -0.107764736
      },
      {
       " #": -0.029502852
      },
      {
       " 5": -0.0050182645
      },
      {
       ":": -0.0019256097
      },
      {
       " Done": -1.0686449
      }
     ],
     "text_offset": [
      3342,
      3344,
      3346,
      3347,
      3352,
      3355,
      3364,
      3365,
      3370,
      3372,
      3376,
      3380,
      3382,
      3383,
      3385,
      3387,
      3388,
      3393,
      3398,
      3399,
      3404,
      3406,
      3407,
      3410,
      3412,
      3413,
      3418,
      3420,
      3421,
      3424,
      3426,
      3427,
      3429,
      3431,
      3432,
      3437,
      3440,
      3444,
      3446,
      3449,
      3451,
      3452,
      3459,
      3461,
      3466,
      3467,
      3470,
      3472,
      3473,
      3476,
      3478,
      3480,
      3481,
      3486,
      3487,
      3492,
      3494,
      3495,
      3498,
      3500,
      3502,
      3503,
      3510,
      3512,
      3514,
      3515,
      3518,
      3520,
      3522,
      3523,
      3525,
      3527,
      3528,
      3533,
      3538,
      3539,
      3544,
      3546,
      3548,
      3550,
      3552,
      3553,
      3558,
      3560,
      3562,
      3564,
      3566,
      3568,
      3573,
      3575,
      3576,
      3581,
      3583,
      3588,
      3590,
      3591,
      3593,
      3595,
      3596,
      3601,
      3605,
      3609,
      3611,
      3614,
      3616,
      3617,
      3624,
      3627,
      3629,
      3630,
      3633,
      3635,
      3637,
      3638,
      3640,
      3642,
      3643
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Wash face",
   "task_description": "Turn on water faucet. Get rag wet. Get face soap out. Squirt face soap in hands and put it on face. Rub soap into face. Wash soap off of face. Dry face off on the hand towel. Hang out rag and hand towel.",
   "program": [
    "[Walk] <bathroom> (1)",
    "[Walk] <sink> (1)",
    "[Find] <rag> (1)",
    "[Grab] <rag> (1)",
    "[Find] <faucet> (1)",
    "[SwitchOn] <faucet> (1)",
    "[Wash] <rag> (1)",
    "[Find] <face_soap> (1)",
    "[Grab] <face_soap> (1)",
    "[Pour] <face_soap> (1) <rag> (1)",
    "[PutObjBack] <face_soap> (1)",
    "[Find] <face> (1)",
    "[Scrub] <face> (1)",
    "[PutBack] <rag> (1) <sink> (1)",
    "[Rinse] <face> (1)",
    "[Rinse] <rag> (1)",
    "[SwitchOff] <faucet> (1)",
    "[Grab] <rag> (1)",
    "[PutObjBack] <rag> (1)",
    "[Find] <towel> (1)",
    "[Grab] <towel> (1)",
    "[Wipe] <face> (1)",
    "[PutObjBack] <towel> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upworknturk_second",
   "file_id": "split145_3",
   "goal_condition": [
    [
     [
      240,
      1,
      "INSIDE",
      "character",
      "bathroom"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1171,
   "completion_tokens": 117,
   "total_tokens": 1288
  }
 },
 "14": {
  "plan": [
   [
    " # 0: find computer\n find('computer')\n # 1: find desk\n find('desk')\n # 2: sit on chair\n assert('close' to 'chair')\n else: find('chair')\n sit('chair')\n # 3: turn on the computer\n switchon('computer')\n # 4: point at the computer\n pointat('computer')\n # 5: open the computer\n open('computer')\n # 6: open homework\n find('homework')\n open('homework')\n # 7: read the homework\n read('homework')\n # 8: write homework\n write('homework')\n # 9: save and close the file\n save('homework')\n close('homework')\n # 10: turn off the computer\n switchoff('computer')\n # 11: stand up\n standup()",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " computer",
      "\n",
      " find",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " desk",
      "\n",
      " find",
      "('",
      "des",
      "k",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " sit",
      " on",
      " chair",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "chair",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "chair",
      "')",
      "\n",
      " sit",
      "('",
      "chair",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " turn",
      " on",
      " the",
      " computer",
      "\n",
      " switch",
      "on",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " point",
      " at",
      " the",
      " computer",
      "\n",
      " point",
      "at",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " open",
      " the",
      " computer",
      "\n",
      " open",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 6",
      ":",
      " open",
      " homework",
      "\n",
      " find",
      "('",
      "hom",
      "ework",
      "')",
      "\n",
      " open",
      "('",
      "hom",
      "ework",
      "')",
      "\n",
      " #",
      " 7",
      ":",
      " read",
      " the",
      " homework",
      "\n",
      " read",
      "('",
      "hom",
      "ework",
      "')",
      "\n",
      " #",
      " 8",
      ":",
      " write",
      " homework",
      "\n",
      " write",
      "('",
      "hom",
      "ework",
      "')",
      "\n",
      " #",
      " 9",
      ":",
      " save",
      " and",
      " close",
      " the",
      " file",
      "\n",
      " save",
      "('",
      "hom",
      "ework",
      "')",
      "\n",
      " close",
      "('",
      "hom",
      "ework",
      "')",
      "\n",
      " #",
      " 10",
      ":",
      " turn",
      " off",
      " the",
      " computer",
      "\n",
      " switch",
      "off",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 11",
      ":",
      " stand",
      " up",
      "\n",
      " stand",
      "up",
      "()"
     ],
     "token_logprobs": [
      -0.017471388,
      -0.007754791,
      -0.0021207326,
      -1.5360459,
      -0.52981347,
      -0.06882536,
      -0.084457606,
      -0.0024197337,
      -0.0034286326,
      -0.0025316498,
      -0.0082477,
      -0.007732626,
      -0.0040540807,
      -0.0008772995,
      -2.2714033,
      -2.1001744,
      -0.0753139,
      -0.55603266,
      -0.0010256786,
      -0.0012657441,
      -0.0002423942,
      -0.0015283701,
      -0.0054272613,
      -0.04270042,
      -0.0052262777,
      -0.00077904906,
      -0.5200823,
      -0.6649503,
      -1.0114949,
      -0.13004334,
      -1.0804616,
      -0.0016631151,
      -0.031525128,
      -0.004040257,
      -0.0004489359,
      -0.0033112336,
      -0.34362602,
      -0.008991508,
      -0.005251325,
      -0.001887031,
      -0.0021327396,
      -0.0069282316,
      -0.001673443,
      -0.002049595,
      -0.0025698931,
      -0.00618805,
      -0.06055826,
      -0.0014710035,
      -0.0017986526,
      -0.0010023476,
      -0.006448554,
      -0.054744408,
      -0.008556772,
      -0.0010690555,
      -0.83166194,
      -0.16462491,
      -1.1727387,
      -0.036930785,
      -0.022079464,
      -2.3545187,
      -0.0066230814,
      -0.0012317246,
      -0.0020214617,
      -0.001740674,
      -0.0048491093,
      -0.03064189,
      -0.006413583,
      -0.0008294575,
      -3.565081,
      -0.62158215,
      -0.3653478,
      -0.42520362,
      -0.32308182,
      -0.71421725,
      -0.0025011757,
      -0.00092818943,
      -0.001114167,
      -0.0020684693,
      -0.0058267685,
      -0.010512661,
      -0.0048654615,
      -0.0008258774,
      -1.3121704,
      -0.7491072,
      -1.0743058,
      -0.11461325,
      -0.07897242,
      -0.0019860447,
      -0.0031056546,
      -0.0021727008,
      -0.010893838,
      -0.007016284,
      -0.004570878,
      -0.0011526573,
      -3.3060296,
      -5.4073,
      -0.13260625,
      -1.191182,
      -0.0015107628,
      -0.0034385032,
      -0.00020322429,
      -0.0032376815,
      -0.0055159596,
      -0.3979769,
      -0.0011025306,
      -0.0010570033,
      -7.899194e-05,
      -0.002297912,
      -0.00931435,
      -0.007249084,
      -0.011234111,
      -0.0013334837,
      -0.2591576,
      -0.6014261,
      -0.061235193,
      -0.013592081,
      -0.126813,
      -0.0025526842,
      -0.00096189824,
      -0.00018689176,
      -0.0021549584,
      -0.023338558,
      -0.021153072,
      -0.0021431907,
      -0.0021530474,
      -2.9847884,
      -2.9592347,
      -0.0515173,
      -0.14519887,
      -0.0040230798,
      -0.001688669,
      -0.0006023809,
      -0.0029369972,
      -0.013914959,
      -0.006610423,
      -0.0047253743,
      -0.0012838254,
      -1.1042045,
      -2.6151965,
      -0.04815617,
      -0.92454934,
      -2.2535946,
      -0.014646849,
      -0.02042802,
      -0.042657442,
      -0.012481564,
      -0.00040522762,
      -0.0045985407,
      -0.011520476,
      -0.021711303,
      -0.0010907168,
      -0.0037391556,
      -0.00042043283,
      -0.0025010554,
      -0.042114623,
      -0.02097027,
      -0.0072109015,
      -0.002547664,
      -0.9342603,
      -0.047512077,
      -0.18902843,
      -0.004658541,
      -0.013788768,
      -0.019123055,
      -0.0033292964,
      -0.0011691842,
      -0.001564309,
      -0.0036429572,
      -0.41279182,
      -0.0561097,
      -0.002846436,
      -0.0023360879,
      -0.5250005,
      -0.16341409,
      -0.36200988,
      -0.013498011,
      -0.005466754,
      -0.05852857
     ],
     "top_logprobs": [
      {
       " #": -0.017471388
      },
      {
       " 0": -0.007754791
      },
      {
       ":": -0.0021207326
      },
      {
       " walk": -0.37481403
      },
      {
       " computer": -0.52981347
      },
      {
       "\n": -0.06882536
      },
      {
       " find": -0.084457606
      },
      {
       "('": -0.0024197337
      },
      {
       "computer": -0.0034286326
      },
      {
       "')": -0.0025316498
      },
      {
       "\n": -0.0082477
      },
      {
       " #": -0.007732626
      },
      {
       " 1": -0.0040540807
      },
      {
       ":": -0.0008772995
      },
      {
       " turn": -1.1058264
      },
      {
       " chair": -0.589891
      },
      {
       "\n": -0.0753139
      },
      {
       " find": -0.55603266
      },
      {
       "('": -0.0010256786
      },
      {
       "des": -0.0012657441
      },
      {
       "k": -0.0002423942
      },
      {
       "')": -0.0015283701
      },
      {
       "\n": -0.0054272613
      },
      {
       " #": -0.04270042
      },
      {
       " 2": -0.0052262777
      },
      {
       ":": -0.00077904906
      },
      {
       " sit": -0.5200823
      },
      {
       " on": -0.6649503
      },
      {
       " chair": -1.0114949
      },
      {
       "\n": -0.13004334
      },
      {
       " assert": -1.0804616
      },
      {
       "('": -0.0016631151
      },
      {
       "close": -0.031525128
      },
      {
       "'": -0.004040257
      },
      {
       " to": -0.0004489359
      },
      {
       " '": -0.0033112336
      },
      {
       "chair": -0.34362602
      },
      {
       "')": -0.008991508
      },
      {
       "\n": -0.005251325
      },
      {
       " else": -0.001887031
      },
      {
       ":": -0.0021327396
      },
      {
       " find": -0.0069282316
      },
      {
       "('": -0.001673443
      },
      {
       "chair": -0.002049595
      },
      {
       "')": -0.0025698931
      },
      {
       "\n": -0.00618805
      },
      {
       " sit": -0.06055826
      },
      {
       "('": -0.0014710035
      },
      {
       "chair": -0.0017986526
      },
      {
       "')": -0.0010023476
      },
      {
       "\n": -0.006448554
      },
      {
       " #": -0.054744408
      },
      {
       " 3": -0.008556772
      },
      {
       ":": -0.0010690555
      },
      {
       " turn": -0.83166194
      },
      {
       " on": -0.16462491
      },
      {
       " computer": -0.43341118
      },
      {
       " computer": -0.036930785
      },
      {
       "\n": -0.022079464
      },
      {
       " assert": -0.5181739
      },
      {
       "on": -0.0066230814
      },
      {
       "('": -0.0012317246
      },
      {
       "computer": -0.0020214617
      },
      {
       "')": -0.001740674
      },
      {
       "\n": -0.0048491093
      },
      {
       " #": -0.03064189
      },
      {
       " 4": -0.006413583
      },
      {
       ":": -0.0008294575
      },
      {
       " open": -1.3467638
      },
      {
       " at": -0.62158215
      },
      {
       " the": -0.3653478
      },
      {
       " computer": -0.42520362
      },
      {
       "\n": -0.32308182
      },
      {
       " point": -0.71421725
      },
      {
       "at": -0.0025011757
      },
      {
       "('": -0.00092818943
      },
      {
       "computer": -0.001114167
      },
      {
       "')": -0.0020684693
      },
      {
       "\n": -0.0058267685
      },
      {
       " #": -0.010512661
      },
      {
       " 5": -0.0048654615
      },
      {
       ":": -0.0008258774
      },
      {
       " open": -1.3121704
      },
      {
       " the": -0.7491072
      },
      {
       " computer": -1.0743058
      },
      {
       "\n": -0.11461325
      },
      {
       " open": -0.07897242
      },
      {
       "('": -0.0019860447
      },
      {
       "computer": -0.0031056546
      },
      {
       "')": -0.0021727008
      },
      {
       "\n": -0.010893838
      },
      {
       " #": -0.007016284
      },
      {
       " 6": -0.004570878
      },
      {
       ":": -0.0011526573
      },
      {
       " use": -1.6830341
      },
      {
       " the": -0.6339486
      },
      {
       "\n": -0.13260625
      },
      {
       " open": -0.4962643
      },
      {
       "('": -0.0015107628
      },
      {
       "hom": -0.0034385032
      },
      {
       "ework": -0.00020322429
      },
      {
       "')": -0.0032376815
      },
      {
       "\n": -0.0055159596
      },
      {
       " open": -0.3979769
      },
      {
       "('": -0.0011025306
      },
      {
       "hom": -0.0010570033
      },
      {
       "ework": -7.899194e-05
      },
      {
       "')": -0.002297912
      },
      {
       "\n": -0.00931435
      },
      {
       " #": -0.007249084
      },
      {
       " 7": -0.011234111
      },
      {
       ":": -0.0013334837
      },
      {
       " read": -0.2591576
      },
      {
       " the": -0.6014261
      },
      {
       " homework": -0.061235193
      },
      {
       "\n": -0.013592081
      },
      {
       " read": -0.126813
      },
      {
       "('": -0.0025526842
      },
      {
       "hom": -0.00096189824
      },
      {
       "ework": -0.00018689176
      },
      {
       "')": -0.0021549584
      },
      {
       "\n": -0.023338558
      },
      {
       " #": -0.021153072
      },
      {
       " 8": -0.0021431907
      },
      {
       ":": -0.0021530474
      },
      {
       " close": -0.9663915
      },
      {
       " the": -0.38381156
      },
      {
       "\n": -0.0515173
      },
      {
       " write": -0.14519887
      },
      {
       "('": -0.0040230798
      },
      {
       "hom": -0.001688669
      },
      {
       "ework": -0.0006023809
      },
      {
       "')": -0.0029369972
      },
      {
       "\n": -0.013914959
      },
      {
       " #": -0.006610423
      },
      {
       " 9": -0.0047253743
      },
      {
       ":": -0.0012838254
      },
      {
       " close": -0.75882465
      },
      {
       " homework": -0.81917787
      },
      {
       " close": -0.04815617
      },
      {
       " the": -0.92454934
      },
      {
       " homework": -0.39987022
      },
      {
       "\n": -0.014646849
      },
      {
       " save": -0.02042802
      },
      {
       "('": -0.042657442
      },
      {
       "hom": -0.012481564
      },
      {
       "ework": -0.00040522762
      },
      {
       "')": -0.0045985407
      },
      {
       "\n": -0.011520476
      },
      {
       " close": -0.021711303
      },
      {
       "('": -0.0010907168
      },
      {
       "hom": -0.0037391556
      },
      {
       "ework": -0.00042043283
      },
      {
       "')": -0.0025010554
      },
      {
       "\n": -0.042114623
      },
      {
       " #": -0.02097027
      },
      {
       " 10": -0.0072109015
      },
      {
       ":": -0.002547664
      },
      {
       " turn": -0.9342603
      },
      {
       " off": -0.047512077
      },
      {
       " the": -0.18902843
      },
      {
       " computer": -0.004658541
      },
      {
       "\n": -0.013788768
      },
      {
       " switch": -0.019123055
      },
      {
       "off": -0.0033292964
      },
      {
       "('": -0.0011691842
      },
      {
       "computer": -0.001564309
      },
      {
       "')": -0.0036429572
      },
      {
       "\n": -0.41279182
      },
      {
       " #": -0.0561097
      },
      {
       " 11": -0.002846436
      },
      {
       ":": -0.0023360879
      },
      {
       " stand": -0.5250005
      },
      {
       " up": -0.16341409
      },
      {
       "\n": -0.36200988
      },
      {
       " stand": -0.013498011
      },
      {
       "up": -0.005466754
      },
      {
       "()": -0.05852857
      }
     ],
     "text_offset": [
      3346,
      3348,
      3350,
      3351,
      3356,
      3365,
      3366,
      3371,
      3373,
      3381,
      3383,
      3384,
      3386,
      3388,
      3389,
      3394,
      3399,
      3400,
      3405,
      3407,
      3410,
      3411,
      3413,
      3414,
      3416,
      3418,
      3419,
      3423,
      3426,
      3432,
      3433,
      3440,
      3442,
      3447,
      3448,
      3451,
      3453,
      3458,
      3460,
      3461,
      3466,
      3467,
      3472,
      3474,
      3479,
      3481,
      3482,
      3486,
      3488,
      3493,
      3495,
      3496,
      3498,
      3500,
      3501,
      3506,
      3509,
      3513,
      3522,
      3523,
      3530,
      3532,
      3534,
      3542,
      3544,
      3545,
      3547,
      3549,
      3550,
      3556,
      3559,
      3563,
      3572,
      3573,
      3579,
      3581,
      3583,
      3591,
      3593,
      3594,
      3596,
      3598,
      3599,
      3604,
      3608,
      3617,
      3618,
      3623,
      3625,
      3633,
      3635,
      3636,
      3638,
      3640,
      3641,
      3646,
      3655,
      3656,
      3661,
      3663,
      3666,
      3671,
      3673,
      3674,
      3679,
      3681,
      3684,
      3689,
      3691,
      3692,
      3694,
      3696,
      3697,
      3702,
      3706,
      3715,
      3716,
      3721,
      3723,
      3726,
      3731,
      3733,
      3734,
      3736,
      3738,
      3739,
      3745,
      3754,
      3755,
      3761,
      3763,
      3766,
      3771,
      3773,
      3774,
      3776,
      3778,
      3779,
      3784,
      3788,
      3794,
      3798,
      3803,
      3804,
      3809,
      3811,
      3814,
      3819,
      3821,
      3822,
      3828,
      3830,
      3833,
      3838,
      3840,
      3841,
      3843,
      3846,
      3847,
      3852,
      3856,
      3860,
      3869,
      3870,
      3877,
      3880,
      3882,
      3890,
      3892,
      3893,
      3895,
      3898,
      3899,
      3905,
      3908,
      3909,
      3915,
      3917
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Computer work",
   "task_description": "Find the computer, Turn on the computer, find keyboard, find mouse, go online",
   "program": [
    "[Walk] <home_office> (1)",
    "[Walk] <chair> (1)",
    "[Find] <chair> (1)",
    "[Sit] <chair> (1)",
    "[Find] <computer> (1)",
    "[SwitchOn] <computer> (1)",
    "[Find] <mouse> (1)",
    "[Grab] <mouse> (1)",
    "[TurnTo] <computer> (1)",
    "[PointAt] <computer> (1)",
    "[TurnTo] <computer> (1)",
    "[LookAt] <computer> (1)",
    "[PutObjBack] <mouse> (1)",
    "[Find] <keyboard> (1)",
    "[Type] <keyboard> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upworknturk_second",
   "file_id": "split84_1",
   "goal_condition": [
    [
     [
      240,
      241,
      "INSIDE",
      "character",
      "home_office"
     ],
     [
      240,
      271,
      "ON",
      "character",
      "chair"
     ]
    ],
    [
     [
      240,
      "character",
      "SITTING"
     ],
     [
      276,
      "computer",
      "ON"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1171,
   "completion_tokens": 178,
   "total_tokens": 1349
  }
 },
 "15": {
  "plan": [
   [
    " # 0: walk in to bedroom\n walk('bedroom')\n # 1: find bed\n find('bed')\n # 2: lay down on bed\n turnto('bed')\n lookat('bed')\n assert('close' to 'bed')\n else: find('bed')\n else: turnto('bed')\n sit('bed')\n sleep()\n # 3: Wake up\n wakeup()\n # 4: Sit up on bed\n assert('close' to 'bed')\n else: find('bed')\n else: turnto('bed')\n sit('bed')\n # 5: Stand up\n standup()\n # 6: Done\ndone()",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " in",
      " to",
      " bedroom",
      "\n",
      " walk",
      "('",
      "bedroom",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " bed",
      "\n",
      " find",
      "('",
      "bed",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " lay",
      " down",
      " on",
      " bed",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "bed",
      "')",
      "\n",
      " look",
      "at",
      "('",
      "bed",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "bed",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "bed",
      "')",
      "\n",
      " else",
      ":",
      " tur",
      "nt",
      "o",
      "('",
      "bed",
      "')",
      "\n",
      " sit",
      "('",
      "bed",
      "')",
      "\n",
      " sleep",
      "()",
      "\n",
      " #",
      " 3",
      ":",
      " Wake",
      " up",
      "\n",
      " wake",
      "up",
      "()",
      "\n",
      " #",
      " 4",
      ":",
      " Sit",
      " up",
      " on",
      " bed",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "bed",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "bed",
      "')",
      "\n",
      " else",
      ":",
      " tur",
      "nt",
      "o",
      "('",
      "bed",
      "')",
      "\n",
      " sit",
      "('",
      "bed",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " Stand",
      " up",
      "\n",
      " stand",
      "up",
      "()",
      "\n",
      " #",
      " 6",
      ":",
      " Done",
      "\n",
      "done",
      "()"
     ],
     "token_logprobs": [
      -0.018050991,
      -0.00949738,
      -0.0021565119,
      -0.49495482,
      -1.0357636,
      -0.02399812,
      -1.253363,
      -0.020398336,
      -0.005158093,
      -0.0061058304,
      -0.004103815,
      -0.0010929845,
      -0.0062080827,
      -0.005186792,
      -0.0035615417,
      -0.0005633143,
      -0.08935366,
      -0.0714205,
      -0.014537741,
      -0.7466902,
      -0.00089639076,
      -0.00040653892,
      -0.0015862199,
      -0.004050011,
      -0.019045047,
      -0.005372247,
      -0.0008046404,
      -0.24937835,
      -0.034031883,
      -0.042318493,
      -0.022895226,
      -0.008623563,
      -0.28325167,
      -3.8577375e-05,
      -0.00028066957,
      -0.00044857734,
      -0.00014360964,
      -0.0012237272,
      -0.002944051,
      -0.090495534,
      -0.00037457785,
      -0.0004351002,
      -0.00019404522,
      -0.0002620674,
      -0.002522327,
      -0.026716731,
      -0.000562599,
      -0.001173242,
      -0.0017513012,
      -0.00050087424,
      -0.001093223,
      -0.00013860193,
      -0.0025538797,
      -0.002558363,
      -0.0006674501,
      -0.00090540084,
      -0.0036804655,
      -0.0011465683,
      -0.00019714465,
      -0.00051280175,
      -0.0030960278,
      -0.4822326,
      -0.0014769132,
      -0.0072585708,
      -7.219704e-05,
      -0.00040272233,
      -0.0006215829,
      -0.0002735161,
      -0.00047726158,
      -0.0014711235,
      -0.3011062,
      -0.0005086275,
      -8.221057e-05,
      -0.00063333387,
      -0.0029813556,
      -0.95446706,
      -0.044158954,
      -0.042677656,
      -0.0843923,
      -0.01483987,
      -0.00189384,
      -2.5369554,
      -0.12596321,
      -0.84849644,
      -0.0835629,
      -0.002143429,
      -0.010207197,
      -0.16680402,
      -0.26878518,
      -0.00793584,
      -0.002667785,
      -2.3942626,
      -0.38396707,
      -2.09763,
      -0.30401498,
      -0.023560422,
      -2.5235102,
      -0.0024576748,
      -0.16062708,
      -0.0034735533,
      -0.0010944168,
      -0.003970119,
      -0.00037994413,
      -0.0037172586,
      -0.0034054893,
      -0.0018556202,
      -0.0015107628,
      -0.006129995,
      -0.0015492062,
      -0.00016125533,
      -0.0022591401,
      -0.0047683143,
      -0.48283994,
      -0.0018343596,
      -0.013667428,
      -5.9679198e-05,
      -0.0007597232,
      -0.0006911284,
      -0.00015887116,
      -0.0017110558,
      -0.0038861658,
      -0.0407014,
      -0.012736773,
      -0.00019487782,
      -0.0013250668,
      -0.12044119,
      -0.6300626,
      -0.010465679,
      -0.0040870584,
      -0.4422281,
      -0.09771518,
      -0.12453707,
      -0.049035706,
      -0.0017232986,
      -0.006109368,
      -1.297801,
      -0.23024096,
      -0.007935477,
      -0.0038347673,
      -0.16976374,
      -1.1994932,
      -3.3805273,
      -0.21704823
     ],
     "top_logprobs": [
      {
       " #": -0.018050991
      },
      {
       " 0": -0.00949738
      },
      {
       ":": -0.0021565119
      },
      {
       " walk": -0.49495482
      },
      {
       " to": -0.54507643
      },
      {
       " to": -0.02399812
      },
      {
       " bed": -0.362963
      },
      {
       "\n": -0.020398336
      },
      {
       " walk": -0.005158093
      },
      {
       "('": -0.0061058304
      },
      {
       "bedroom": -0.004103815
      },
      {
       "')": -0.0010929845
      },
      {
       "\n": -0.0062080827
      },
      {
       " #": -0.005186792
      },
      {
       " 1": -0.0035615417
      },
      {
       ":": -0.0005633143
      },
      {
       " find": -0.08935366
      },
      {
       " bed": -0.0714205
      },
      {
       "\n": -0.014537741
      },
      {
       " walk": -0.65581447
      },
      {
       "('": -0.00089639076
      },
      {
       "bed": -0.00040653892
      },
      {
       "')": -0.0015862199
      },
      {
       "\n": -0.004050011
      },
      {
       " #": -0.019045047
      },
      {
       " 2": -0.005372247
      },
      {
       ":": -0.0008046404
      },
      {
       " lay": -0.24937835
      },
      {
       " down": -0.034031883
      },
      {
       " on": -0.042318493
      },
      {
       " bed": -0.022895226
      },
      {
       "\n": -0.008623563
      },
      {
       " tur": -0.28325167
      },
      {
       "nt": -3.8577375e-05
      },
      {
       "o": -0.00028066957
      },
      {
       "('": -0.00044857734
      },
      {
       "bed": -0.00014360964
      },
      {
       "')": -0.0012237272
      },
      {
       "\n": -0.002944051
      },
      {
       " look": -0.090495534
      },
      {
       "at": -0.00037457785
      },
      {
       "('": -0.0004351002
      },
      {
       "bed": -0.00019404522
      },
      {
       "')": -0.0002620674
      },
      {
       "\n": -0.002522327
      },
      {
       " assert": -0.026716731
      },
      {
       "('": -0.000562599
      },
      {
       "close": -0.001173242
      },
      {
       "'": -0.0017513012
      },
      {
       " to": -0.00050087424
      },
      {
       " '": -0.001093223
      },
      {
       "bed": -0.00013860193
      },
      {
       "')": -0.0025538797
      },
      {
       "\n": -0.002558363
      },
      {
       " else": -0.0006674501
      },
      {
       ":": -0.00090540084
      },
      {
       " find": -0.0036804655
      },
      {
       "('": -0.0011465683
      },
      {
       "bed": -0.00019714465
      },
      {
       "')": -0.00051280175
      },
      {
       "\n": -0.0030960278
      },
      {
       " else": -0.4822326
      },
      {
       ":": -0.0014769132
      },
      {
       " tur": -0.0072585708
      },
      {
       "nt": -7.219704e-05
      },
      {
       "o": -0.00040272233
      },
      {
       "('": -0.0006215829
      },
      {
       "bed": -0.0002735161
      },
      {
       "')": -0.00047726158
      },
      {
       "\n": -0.0014711235
      },
      {
       " sit": -0.3011062
      },
      {
       "('": -0.0005086275
      },
      {
       "bed": -8.221057e-05
      },
      {
       "')": -0.00063333387
      },
      {
       "\n": -0.0029813556
      },
      {
       " lie": -0.89034486
      },
      {
       "()": -0.044158954
      },
      {
       "\n": -0.042677656
      },
      {
       " #": -0.0843923
      },
      {
       " 3": -0.01483987
      },
      {
       ":": -0.00189384
      },
      {
       " wake": -1.0617654
      },
      {
       " up": -0.12596321
      },
      {
       " after": -0.82264805
      },
      {
       " wake": -0.0835629
      },
      {
       "up": -0.002143429
      },
      {
       "()": -0.010207197
      },
      {
       "\n": -0.16680402
      },
      {
       " #": -0.26878518
      },
      {
       " 4": -0.00793584
      },
      {
       ":": -0.002667785
      },
      {
       " Stand": -0.5310215
      },
      {
       " up": -0.38396707
      },
      {
       "\n": -0.2903657
      },
      {
       " bed": -0.30401498
      },
      {
       "\n": -0.023560422
      },
      {
       " sit": -0.31728786
      },
      {
       "('": -0.0024576748
      },
      {
       "close": -0.16062708
      },
      {
       "'": -0.0034735533
      },
      {
       " to": -0.0010944168
      },
      {
       " '": -0.003970119
      },
      {
       "bed": -0.00037994413
      },
      {
       "')": -0.0037172586
      },
      {
       "\n": -0.0034054893
      },
      {
       " else": -0.0018556202
      },
      {
       ":": -0.0015107628
      },
      {
       " find": -0.006129995
      },
      {
       "('": -0.0015492062
      },
      {
       "bed": -0.00016125533
      },
      {
       "')": -0.0022591401
      },
      {
       "\n": -0.0047683143
      },
      {
       " else": -0.48283994
      },
      {
       ":": -0.0018343596
      },
      {
       " tur": -0.013667428
      },
      {
       "nt": -5.9679198e-05
      },
      {
       "o": -0.0007597232
      },
      {
       "('": -0.0006911284
      },
      {
       "bed": -0.00015887116
      },
      {
       "')": -0.0017110558
      },
      {
       "\n": -0.0038861658
      },
      {
       " sit": -0.0407014
      },
      {
       "('": -0.012736773
      },
      {
       "bed": -0.00019487782
      },
      {
       "')": -0.0013250668
      },
      {
       "\n": -0.12044119
      },
      {
       " #": -0.6300626
      },
      {
       " 5": -0.010465679
      },
      {
       ":": -0.0040870584
      },
      {
       " Stand": -0.4422281
      },
      {
       " up": -0.09771518
      },
      {
       "\n": -0.12453707
      },
      {
       " stand": -0.049035706
      },
      {
       "up": -0.0017232986
      },
      {
       "()": -0.006109368
      },
      {
       "<|endoftext|>": -0.3363467
      },
      {
       " #": -0.23024096
      },
      {
       " 6": -0.007935477
      },
      {
       ":": -0.0038347673
      },
      {
       " Done": -0.16976374
      },
      {
       "<|endoftext|>": -0.41742775
      },
      {
       "<|endoftext|>": -0.78482157
      },
      {
       "()": -0.21704823
      }
     ],
     "text_offset": [
      3341,
      3343,
      3345,
      3346,
      3351,
      3354,
      3357,
      3365,
      3366,
      3371,
      3373,
      3380,
      3382,
      3383,
      3385,
      3387,
      3388,
      3393,
      3397,
      3398,
      3403,
      3405,
      3408,
      3410,
      3411,
      3413,
      3415,
      3416,
      3420,
      3425,
      3428,
      3432,
      3433,
      3437,
      3439,
      3440,
      3442,
      3445,
      3447,
      3448,
      3453,
      3455,
      3457,
      3460,
      3462,
      3463,
      3470,
      3472,
      3477,
      3478,
      3481,
      3483,
      3486,
      3488,
      3489,
      3494,
      3495,
      3500,
      3502,
      3505,
      3507,
      3508,
      3513,
      3514,
      3518,
      3520,
      3521,
      3523,
      3526,
      3528,
      3529,
      3533,
      3535,
      3538,
      3540,
      3541,
      3547,
      3549,
      3550,
      3552,
      3554,
      3555,
      3560,
      3563,
      3564,
      3569,
      3571,
      3573,
      3574,
      3576,
      3578,
      3579,
      3583,
      3586,
      3589,
      3593,
      3594,
      3601,
      3603,
      3608,
      3609,
      3612,
      3614,
      3617,
      3619,
      3620,
      3625,
      3626,
      3631,
      3633,
      3636,
      3638,
      3639,
      3644,
      3645,
      3649,
      3651,
      3652,
      3654,
      3657,
      3659,
      3660,
      3664,
      3666,
      3669,
      3671,
      3672,
      3674,
      3676,
      3677,
      3683,
      3686,
      3687,
      3693,
      3695,
      3697,
      3698,
      3700,
      3702,
      3703,
      3708,
      3709,
      3713
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Take nap",
   "task_description": "Sleep for a short amount of time during the day",
   "program": [
    "[Walk] <bedroom> (1)",
    "[Walk] <bed> (1)",
    "[Find] <bed> (1)",
    "[Lie] <bed> (1)",
    "[Sleep]"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_july",
   "file_id": "split6_5",
   "goal_condition": [
    [
     [
      240,
      197,
      "ON",
      "character",
      "bed"
     ],
     [
      240,
      162,
      "INSIDE",
      "character",
      "bedroom"
     ]
    ],
    [
     [
      240,
      "character",
      "LYING"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1172,
   "completion_tokens": 143,
   "total_tokens": 1315
  }
 },
 "16": {
  "plan": [
   [
    " # 0: walk to home office\n walk('home_office')\n # 1: find computer\n walk('computer')\n find('computer')\n # 2: sit on chair and turn to computer\n find('chair')\n assert('close' to 'chair')\n else: find('chair')\n sit('chair')\n turnto('computer')\n # 3: open computer and start working\n open('computer')\n assert('computer' is 'open')\n else: open('computer')\n pointat('computer')\n lookat('computer')\n # 4: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " home",
      " office",
      "\n",
      " walk",
      "('",
      "home",
      "_",
      "office",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " computer",
      "\n",
      " walk",
      "('",
      "computer",
      "')",
      "\n",
      " find",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " sit",
      " on",
      " chair",
      " and",
      " turn",
      " to",
      " computer",
      "\n",
      " find",
      "('",
      "chair",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "chair",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "chair",
      "')",
      "\n",
      " sit",
      "('",
      "chair",
      "')",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " open",
      " computer",
      " and",
      " start",
      " working",
      "\n",
      " open",
      "('",
      "computer",
      "')",
      "\n",
      " assert",
      "('",
      "computer",
      "'",
      " is",
      " '",
      "open",
      "')",
      "\n",
      " else",
      ":",
      " open",
      "('",
      "computer",
      "')",
      "\n",
      " point",
      "at",
      "('",
      "computer",
      "')",
      "\n",
      " look",
      "at",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.017003179,
      -0.007489445,
      -0.0017936364,
      -0.22206451,
      -0.24733733,
      -0.42481807,
      -0.0444063,
      -0.022562306,
      -0.0059119645,
      -0.0051144185,
      -0.0101581225,
      -0.046357293,
      -0.00087276584,
      -0.002788694,
      -0.008186763,
      -0.0031867311,
      -0.0034075824,
      -0.0007695058,
      -0.053409185,
      -0.36701164,
      -0.046907533,
      -1.0860213,
      -0.0019397625,
      -0.0033870682,
      -0.0020715753,
      -0.0042131087,
      -0.015517524,
      -0.0010430999,
      -0.00061895844,
      -0.0010405928,
      -0.004422868,
      -0.0052687586,
      -0.0051885894,
      -0.00073079305,
      -1.8627099,
      -0.7274077,
      -0.24861304,
      -3.2586992,
      -0.4326983,
      -0.5996951,
      -0.15777212,
      -0.022334572,
      -0.6223735,
      -0.0018498267,
      -0.0036472045,
      -0.00262816,
      -0.0053534308,
      -0.5144357,
      -0.0012296953,
      -0.0064162207,
      -0.0038005412,
      -0.0008663821,
      -0.002573599,
      -0.022244796,
      -0.00575291,
      -0.0036100538,
      -0.0021215677,
      -0.0018362708,
      -0.009234396,
      -0.0016548748,
      -0.001479899,
      -0.0033511838,
      -0.005482877,
      -0.031397376,
      -0.0013066843,
      -0.0015945159,
      -0.0031422467,
      -0.005530404,
      -0.064755686,
      -5.669991e-05,
      -0.00013490739,
      -0.00062552054,
      -0.009012561,
      -0.0017535109,
      -0.005663529,
      -0.31430683,
      -0.0076024085,
      -0.00093564694,
      -1.2388617,
      -0.8803736,
      -1.1331929,
      -1.4893693,
      -0.43412682,
      -0.02936756,
      -1.2090025,
      -0.003967009,
      -0.003857324,
      -0.0022863816,
      -0.033410344,
      -1.4608945,
      -0.0024947815,
      -0.348269,
      -0.030194268,
      -0.1407122,
      -0.016719608,
      -1.2450175,
      -0.016512588,
      -0.0063626533,
      -0.017058834,
      -0.007557126,
      -0.016305856,
      -0.0031238298,
      -0.0010273485,
      -0.0048134127,
      -0.015162181,
      -2.3957665,
      -0.005689126,
      -0.0011470452,
      -0.028414836,
      -0.0060857986,
      -0.064674094,
      -1.4388366,
      -0.0010658331,
      -0.00077642646,
      -0.0012150166,
      -0.0016619202,
      -0.09993913,
      -3.0102696,
      -0.010016028,
      -0.0016451447,
      -0.7815074
     ],
     "top_logprobs": [
      {
       " #": -0.017003179
      },
      {
       " 0": -0.007489445
      },
      {
       ":": -0.0017936364
      },
      {
       " walk": -0.22206451
      },
      {
       " to": -0.24733733
      },
      {
       " home": -0.42481807
      },
      {
       " office": -0.0444063
      },
      {
       "\n": -0.022562306
      },
      {
       " walk": -0.0059119645
      },
      {
       "('": -0.0051144185
      },
      {
       "home": -0.0101581225
      },
      {
       "_": -0.046357293
      },
      {
       "office": -0.00087276584
      },
      {
       "')": -0.002788694
      },
      {
       "\n": -0.008186763
      },
      {
       " #": -0.0031867311
      },
      {
       " 1": -0.0034075824
      },
      {
       ":": -0.0007695058
      },
      {
       " find": -0.053409185
      },
      {
       " computer": -0.36701164
      },
      {
       "\n": -0.046907533
      },
      {
       " find": -0.44067454
      },
      {
       "('": -0.0019397625
      },
      {
       "computer": -0.0033870682
      },
      {
       "')": -0.0020715753
      },
      {
       "\n": -0.0042131087
      },
      {
       " find": -0.015517524
      },
      {
       "('": -0.0010430999
      },
      {
       "computer": -0.00061895844
      },
      {
       "')": -0.0010405928
      },
      {
       "\n": -0.004422868
      },
      {
       " #": -0.0052687586
      },
      {
       " 2": -0.0051885894
      },
      {
       ":": -0.00073079305
      },
      {
       " turn": -0.69595623
      },
      {
       " on": -0.7274077
      },
      {
       " chair": -0.24861304
      },
      {
       "\n": -0.10901635
      },
      {
       " turn": -0.4326983
      },
      {
       " to": -0.5996951
      },
      {
       " computer": -0.15777212
      },
      {
       "\n": -0.022334572
      },
      {
       " find": -0.6223735
      },
      {
       "('": -0.0018498267
      },
      {
       "chair": -0.0036472045
      },
      {
       "')": -0.00262816
      },
      {
       "\n": -0.0053534308
      },
      {
       " assert": -0.5144357
      },
      {
       "('": -0.0012296953
      },
      {
       "close": -0.0064162207
      },
      {
       "'": -0.0038005412
      },
      {
       " to": -0.0008663821
      },
      {
       " '": -0.002573599
      },
      {
       "chair": -0.022244796
      },
      {
       "')": -0.00575291
      },
      {
       "\n": -0.0036100538
      },
      {
       " else": -0.0021215677
      },
      {
       ":": -0.0018362708
      },
      {
       " find": -0.009234396
      },
      {
       "('": -0.0016548748
      },
      {
       "chair": -0.001479899
      },
      {
       "')": -0.0033511838
      },
      {
       "\n": -0.005482877
      },
      {
       " sit": -0.031397376
      },
      {
       "('": -0.0013066843
      },
      {
       "chair": -0.0015945159
      },
      {
       "')": -0.0031422467
      },
      {
       "\n": -0.005530404
      },
      {
       " tur": -0.064755686
      },
      {
       "nt": -5.669991e-05
      },
      {
       "o": -0.00013490739
      },
      {
       "('": -0.00062552054
      },
      {
       "computer": -0.009012561
      },
      {
       "')": -0.0017535109
      },
      {
       "\n": -0.005663529
      },
      {
       " #": -0.31430683
      },
      {
       " 3": -0.0076024085
      },
      {
       ":": -0.00093564694
      },
      {
       " turn": -0.9951663
      },
      {
       " computer": -0.8803736
      },
      {
       "\n": -0.50238806
      },
      {
       " turn": -1.1243591
      },
      {
       " working": -0.43412682
      },
      {
       "\n": -0.02936756
      },
      {
       " assert": -0.5354052
      },
      {
       "('": -0.003967009
      },
      {
       "computer": -0.003857324
      },
      {
       "')": -0.0022863816
      },
      {
       "\n": -0.033410344
      },
      {
       " assert": -1.4608945
      },
      {
       "('": -0.0024947815
      },
      {
       "computer": -0.348269
      },
      {
       "'": -0.030194268
      },
      {
       " is": -0.1407122
      },
      {
       " '": -0.016719608
      },
      {
       "switch": -1.1186423
      },
      {
       "')": -0.016512588
      },
      {
       "\n": -0.0063626533
      },
      {
       " else": -0.017058834
      },
      {
       ":": -0.007557126
      },
      {
       " open": -0.016305856
      },
      {
       "('": -0.0031238298
      },
      {
       "computer": -0.0010273485
      },
      {
       "')": -0.0048134127
      },
      {
       "\n": -0.015162181
      },
      {
       " look": -1.5563089
      },
      {
       "at": -0.005689126
      },
      {
       "('": -0.0011470452
      },
      {
       "computer": -0.028414836
      },
      {
       "')": -0.0060857986
      },
      {
       "\n": -0.064674094
      },
      {
       " watch": -0.9341673
      },
      {
       "at": -0.0010658331
      },
      {
       "('": -0.00077642646
      },
      {
       "computer": -0.0012150166
      },
      {
       "')": -0.0016619202
      },
      {
       "\n": -0.09993913
      },
      {
       " read": -1.9039464
      },
      {
       " 4": -0.010016028
      },
      {
       ":": -0.0016451447
      },
      {
       " Done": -0.7815074
      }
     ],
     "text_offset": [
      3352,
      3354,
      3356,
      3357,
      3362,
      3365,
      3370,
      3377,
      3378,
      3383,
      3385,
      3389,
      3390,
      3396,
      3398,
      3399,
      3401,
      3403,
      3404,
      3409,
      3418,
      3419,
      3424,
      3426,
      3434,
      3436,
      3437,
      3442,
      3444,
      3452,
      3454,
      3455,
      3457,
      3459,
      3460,
      3464,
      3467,
      3473,
      3477,
      3482,
      3485,
      3494,
      3495,
      3500,
      3502,
      3507,
      3509,
      3510,
      3517,
      3519,
      3524,
      3525,
      3528,
      3530,
      3535,
      3537,
      3538,
      3543,
      3544,
      3549,
      3551,
      3556,
      3558,
      3559,
      3563,
      3565,
      3570,
      3572,
      3573,
      3577,
      3579,
      3580,
      3582,
      3590,
      3592,
      3593,
      3595,
      3597,
      3598,
      3603,
      3612,
      3616,
      3622,
      3630,
      3631,
      3636,
      3638,
      3646,
      3648,
      3649,
      3656,
      3658,
      3666,
      3667,
      3670,
      3672,
      3676,
      3678,
      3679,
      3684,
      3685,
      3690,
      3692,
      3700,
      3702,
      3703,
      3709,
      3711,
      3713,
      3721,
      3723,
      3724,
      3729,
      3731,
      3733,
      3741,
      3743,
      3744,
      3746,
      3748,
      3749
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Do work on computer",
   "task_description": "Open home office, sit in my chair at the desk and do work on the computer. Stand up from chair and desk, leave home office.",
   "program": [
    "[Walk] <home_office> (1)",
    "[Walk] <chair> (1)",
    "[Find] <chair> (1)",
    "[Sit] <chair> (1)",
    "[Find] <computer> (1)",
    "[SwitchOn] <computer> (1)",
    "[TurnTo] <computer> (1)",
    "[LookAt] <computer> (1)",
    "[Find] <keyboard> (1)",
    "[Type] <keyboard> (1)",
    "[SwitchOff] <computer> (1)",
    "[StandUp]"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upworknturk_second",
   "file_id": "split119_3",
   "goal_condition": [
    [
     [
      240,
      241,
      "INSIDE",
      "character",
      "home_office"
     ],
     [
      240,
      271,
      "ON",
      "character",
      "chair"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1175,
   "completion_tokens": 121,
   "total_tokens": 1296
  }
 },
 "17": {
  "plan": [
   [
    " # 0: find newspaper\n find('newspaper')\n # 1: grab newspaper\n grab('newspaper')\n assert('newspaper' in 'hands')\n else: grab('newspaper')\n # 2: turn to newspaper\n turnto('newspaper')\n assert('newspaper' in 'hands')\n else: grab('newspaper')\n # 3: open newspaper\n open('newspaper')\n # 4: read newspaper\n read('newspaper')\n # 5: put newspaper back\n putback('newspaper')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " newspaper",
      "\n",
      " find",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " grab",
      " newspaper",
      "\n",
      " grab",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " assert",
      "('",
      "new",
      "sp",
      "aper",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " turn",
      " to",
      " newspaper",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " assert",
      "('",
      "new",
      "sp",
      "aper",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " open",
      " newspaper",
      "\n",
      " open",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " read",
      " newspaper",
      "\n",
      " read",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " put",
      " newspaper",
      " back",
      "\n",
      " put",
      "back",
      "('",
      "new",
      "sp",
      "aper",
      "')"
     ],
     "token_logprobs": [
      -0.018002259,
      -0.009172857,
      -0.0020139983,
      -0.71720684,
      -0.31556657,
      -0.030793583,
      -0.038432892,
      -0.002360046,
      -0.0022872179,
      -0.00075023813,
      -0.0004311635,
      -0.0025915282,
      -0.0077233147,
      -0.005668865,
      -0.0027388472,
      -0.00048274704,
      -0.16249922,
      -0.15984572,
      -0.016107524,
      -0.79266,
      -0.0013797994,
      -0.0009170917,
      -0.00028484376,
      -0.00051160867,
      -0.0017301039,
      -0.004515193,
      -0.95440465,
      -0.0021326195,
      -0.19410272,
      -0.0016945206,
      -0.0016063362,
      -0.0032879713,
      -0.016764097,
      -0.0055405926,
      -0.009135082,
      -0.028950136,
      -0.0046965075,
      -0.019377775,
      -0.004656325,
      -0.011631847,
      -0.0016283673,
      -0.0010888067,
      -0.00095103995,
      -0.0010287808,
      -0.0041478667,
      -0.005324486,
      -0.6861164,
      -0.008124385,
      -0.0009092193,
      -3.261188,
      -0.07829969,
      -0.21238965,
      -0.036076356,
      -0.05630557,
      -7.005035e-05,
      -0.0003525167,
      -0.0006787223,
      -0.0010935796,
      -0.0005422031,
      -0.0005960573,
      -0.0014802567,
      -0.005259233,
      -1.1693376,
      -0.0010978768,
      -0.05022992,
      -0.00068993546,
      -0.0013485218,
      -0.0020559852,
      -0.0029876328,
      -0.0020336455,
      -0.0016419195,
      -0.0027860652,
      -0.0022593795,
      -0.0042111333,
      -0.0019362998,
      -0.0025840565,
      -0.0011160753,
      -0.0005661762,
      -0.0022080024,
      -0.0049217027,
      -0.0030558507,
      -0.0041405046,
      -0.42806727,
      -0.0066509238,
      -0.0011576689,
      -2.9065316,
      -0.2839888,
      -0.056089777,
      -0.044240505,
      -0.0019411958,
      -0.0006363141,
      -0.00022903908,
      -0.0001889155,
      -0.0017925624,
      -0.0048994203,
      -0.1482928,
      -0.0051544397,
      -0.0013133684,
      -0.08323598,
      -0.16781567,
      -0.00793584,
      -0.44128487,
      -0.0016498585,
      -0.001096206,
      -0.00047940828,
      -0.0003294419,
      -0.0015996492,
      -0.28769478,
      -0.058946136,
      -0.004374675,
      -0.0012762477,
      -1.1357211,
      -0.3140218,
      -0.14613764,
      -0.027600437,
      -0.24450569,
      -0.51590484,
      -0.0018761032,
      -0.0008688892,
      -0.0005299781,
      -0.00037457785,
      -0.0025751526
     ],
     "top_logprobs": [
      {
       " #": -0.018002259
      },
      {
       " 0": -0.009172857
      },
      {
       ":": -0.0020139983
      },
      {
       " find": -0.71720684
      },
      {
       " newspaper": -0.31556657
      },
      {
       "\n": -0.030793583
      },
      {
       " find": -0.038432892
      },
      {
       "('": -0.002360046
      },
      {
       "new": -0.0022872179
      },
      {
       "sp": -0.00075023813
      },
      {
       "aper": -0.0004311635
      },
      {
       "')": -0.0025915282
      },
      {
       "\n": -0.0077233147
      },
      {
       " #": -0.005668865
      },
      {
       " 1": -0.0027388472
      },
      {
       ":": -0.00048274704
      },
      {
       " grab": -0.16249922
      },
      {
       " newspaper": -0.15984572
      },
      {
       "\n": -0.016107524
      },
      {
       " assert": -0.6237881
      },
      {
       "('": -0.0013797994
      },
      {
       "new": -0.0009170917
      },
      {
       "sp": -0.00028484376
      },
      {
       "aper": -0.00051160867
      },
      {
       "')": -0.0017301039
      },
      {
       "\n": -0.004515193
      },
      {
       " #": -0.5551012
      },
      {
       "('": -0.0021326195
      },
      {
       "new": -0.19410272
      },
      {
       "sp": -0.0016945206
      },
      {
       "aper": -0.0016063362
      },
      {
       "'": -0.0032879713
      },
      {
       " in": -0.016764097
      },
      {
       " '": -0.0055405926
      },
      {
       "hands": -0.009135082
      },
      {
       "')": -0.028950136
      },
      {
       "\n": -0.0046965075
      },
      {
       " else": -0.019377775
      },
      {
       ":": -0.004656325
      },
      {
       " grab": -0.011631847
      },
      {
       "('": -0.0016283673
      },
      {
       "new": -0.0010888067
      },
      {
       "sp": -0.00095103995
      },
      {
       "aper": -0.0010287808
      },
      {
       "')": -0.0041478667
      },
      {
       "\n": -0.005324486
      },
      {
       " #": -0.6861164
      },
      {
       " 2": -0.008124385
      },
      {
       ":": -0.0009092193
      },
      {
       " find": -1.2749705
      },
      {
       " to": -0.07829969
      },
      {
       " newspaper": -0.21238965
      },
      {
       "\n": -0.036076356
      },
      {
       " tur": -0.05630557
      },
      {
       "nt": -7.005035e-05
      },
      {
       "o": -0.0003525167
      },
      {
       "('": -0.0006787223
      },
      {
       "new": -0.0010935796
      },
      {
       "sp": -0.0005422031
      },
      {
       "aper": -0.0005960573
      },
      {
       "')": -0.0014802567
      },
      {
       "\n": -0.005259233
      },
      {
       " #": -0.9072613
      },
      {
       "('": -0.0010978768
      },
      {
       "new": -0.05022992
      },
      {
       "sp": -0.00068993546
      },
      {
       "aper": -0.0013485218
      },
      {
       "'": -0.0020559852
      },
      {
       " in": -0.0029876328
      },
      {
       " '": -0.0020336455
      },
      {
       "hands": -0.0016419195
      },
      {
       "')": -0.0027860652
      },
      {
       "\n": -0.0022593795
      },
      {
       " else": -0.0042111333
      },
      {
       ":": -0.0019362998
      },
      {
       " grab": -0.0025840565
      },
      {
       "('": -0.0011160753
      },
      {
       "new": -0.0005661762
      },
      {
       "sp": -0.0022080024
      },
      {
       "aper": -0.0049217027
      },
      {
       "')": -0.0030558507
      },
      {
       "\n": -0.0041405046
      },
      {
       " #": -0.42806727
      },
      {
       " 3": -0.0066509238
      },
      {
       ":": -0.0011576689
      },
      {
       " read": -0.28294885
      },
      {
       " newspaper": -0.2839888
      },
      {
       "\n": -0.056089777
      },
      {
       " open": -0.044240505
      },
      {
       "('": -0.0019411958
      },
      {
       "new": -0.0006363141
      },
      {
       "sp": -0.00022903908
      },
      {
       "aper": -0.0001889155
      },
      {
       "')": -0.0017925624
      },
      {
       "\n": -0.0048994203
      },
      {
       " #": -0.1482928
      },
      {
       " 4": -0.0051544397
      },
      {
       ":": -0.0013133684
      },
      {
       " read": -0.08323598
      },
      {
       " newspaper": -0.16781567
      },
      {
       "\n": -0.00793584
      },
      {
       " read": -0.44128487
      },
      {
       "('": -0.0016498585
      },
      {
       "new": -0.001096206
      },
      {
       "sp": -0.00047940828
      },
      {
       "aper": -0.0003294419
      },
      {
       "')": -0.0015996492
      },
      {
       "\n": -0.28769478
      },
      {
       " #": -0.058946136
      },
      {
       " 5": -0.004374675
      },
      {
       ":": -0.0012762477
      },
      {
       " close": -0.6995287
      },
      {
       " newspaper": -0.3140218
      },
      {
       " back": -0.14613764
      },
      {
       "\n": -0.027600437
      },
      {
       " put": -0.24450569
      },
      {
       "back": -0.51590484
      },
      {
       "('": -0.0018761032
      },
      {
       "new": -0.0008688892
      },
      {
       "sp": -0.0005299781
      },
      {
       "aper": -0.00037457785
      },
      {
       "')": -0.0025751526
      }
     ],
     "text_offset": [
      3342,
      3344,
      3346,
      3347,
      3352,
      3362,
      3363,
      3368,
      3370,
      3373,
      3375,
      3379,
      3381,
      3382,
      3384,
      3386,
      3387,
      3392,
      3402,
      3403,
      3408,
      3410,
      3413,
      3415,
      3419,
      3421,
      3422,
      3429,
      3431,
      3434,
      3436,
      3440,
      3441,
      3444,
      3446,
      3451,
      3453,
      3454,
      3459,
      3460,
      3465,
      3467,
      3470,
      3472,
      3476,
      3478,
      3479,
      3481,
      3483,
      3484,
      3489,
      3492,
      3502,
      3503,
      3507,
      3509,
      3510,
      3512,
      3515,
      3517,
      3521,
      3523,
      3524,
      3531,
      3533,
      3536,
      3538,
      3542,
      3543,
      3546,
      3548,
      3553,
      3555,
      3556,
      3561,
      3562,
      3567,
      3569,
      3572,
      3574,
      3578,
      3580,
      3581,
      3583,
      3585,
      3586,
      3591,
      3601,
      3602,
      3607,
      3609,
      3612,
      3614,
      3618,
      3620,
      3621,
      3623,
      3625,
      3626,
      3631,
      3641,
      3642,
      3647,
      3649,
      3652,
      3654,
      3658,
      3660,
      3661,
      3663,
      3665,
      3666,
      3670,
      3680,
      3685,
      3686,
      3690,
      3694,
      3696,
      3699,
      3701,
      3705
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Read news",
   "task_description": "Read news articles in a newspaper",
   "program": [
    "[Walk] <home_office> (1)",
    "[Walk] <chair> (1)",
    "[Find] <chair> (1)",
    "[Sit] <chair> (1)",
    "[Find] <newspaper> (1)",
    "[Grab] <newspaper> (1)",
    "[Read] <newspaper> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_july",
   "file_id": "split15_4",
   "goal_condition": [
    [
     [
      240,
      241,
      "INSIDE",
      "character",
      "home_office"
     ],
     [
      240,
      1000,
      "HOLDS_RH",
      "character",
      "newspaper"
     ],
     [
      240,
      271,
      "ON",
      "character",
      "chair"
     ]
    ],
    [
     [
      240,
      "character",
      "SITTING"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1171,
   "completion_tokens": 122,
   "total_tokens": 1293
  }
 },
 "18": {
  "plan": [
   [
    " # 0: walk to the bathroom\n walk('bathroom')\n # 1: find sink\n find('sink')\n # 2: turn on sink and grab soap\n turnto('sink')\n lookat('sink')\n assert('close' to 'sink')\n else: find('sink')\n switchon('sink')\n grab('soap')\n # 3: wash hands\n lookat('hands')\n assert('soap' in 'hands')\n else: grab('soap')\n wash('hands')\n # 4: turn off the sink\n switchoff('sink')\n # 5: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " the",
      " bathroom",
      "\n",
      " walk",
      "('",
      "bath",
      "room",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " sink",
      "\n",
      " find",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " turn",
      " on",
      " sink",
      " and",
      " grab",
      " soap",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " look",
      "at",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "s",
      "ink",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " switch",
      "on",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " grab",
      "('",
      "so",
      "ap",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " wash",
      " hands",
      "\n",
      " look",
      "at",
      "('",
      "hands",
      "')",
      "\n",
      " assert",
      "('",
      "so",
      "ap",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "so",
      "ap",
      "')",
      "\n",
      " wash",
      "('",
      "hands",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " turn",
      " off",
      " the",
      " sink",
      "\n",
      " switch",
      "off",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.022852723,
      -0.010886487,
      -0.0022823783,
      -0.9648093,
      -0.20404768,
      -1.7440448,
      -0.7295349,
      -0.025234267,
      -0.0074532344,
      -0.005227116,
      -0.0028467947,
      -0.00017460952,
      -0.002253942,
      -0.008284422,
      -0.00461926,
      -0.004121352,
      -0.00087085663,
      -0.124028385,
      -0.6360966,
      -0.03408998,
      -0.3078192,
      -0.0012393042,
      -0.00077606883,
      -0.00023321231,
      -0.0016877134,
      -0.006099772,
      -0.029941078,
      -0.00576202,
      -0.0011616655,
      -0.30327576,
      -0.16515636,
      -3.0130067,
      -3.951711,
      -3.0924344,
      -0.34862033,
      -0.026369741,
      -1.4311868,
      -0.00013061494,
      -0.00062969286,
      -0.0011016934,
      -0.0058542285,
      -0.00020716005,
      -0.0018120882,
      -0.0057325275,
      -0.835095,
      -0.00095915364,
      -0.00068790605,
      -0.0015866978,
      -0.0005352843,
      -0.0022145747,
      -0.0045342916,
      -0.40141708,
      -0.0012082733,
      -0.01315461,
      -0.0032955676,
      -0.00072447216,
      -0.0024044968,
      -0.015917223,
      -7.6252014e-05,
      -0.008053664,
      -0.004105133,
      -0.002036454,
      -0.0015975006,
      -0.009522893,
      -0.0014869418,
      -0.0005065991,
      -0.00012787033,
      -0.0024373606,
      -0.008396755,
      -0.40333867,
      -0.0012222949,
      -0.00079420075,
      -0.009283066,
      -0.00025646458,
      -0.0035939033,
      -0.0049909493,
      -0.66386586,
      -0.0015869362,
      -0.0008997314,
      -0.0001351458,
      -0.0014345942,
      -0.0052027893,
      -0.13382836,
      -0.0107339285,
      -0.0010471578,
      -0.6095828,
      -0.17737281,
      -0.21928838,
      -4.235831,
      -0.0016360688,
      -0.0006373879,
      -0.8289905,
      -0.002272223,
      -0.005921079,
      -1.2828132,
      -0.0014456364,
      -0.29153186,
      -0.00012500932,
      -0.0025603932,
      -0.017395813,
      -0.0052021896,
      -0.009738824,
      -0.011325195,
      -0.0042186156,
      -0.0025532828,
      -0.0031613815,
      -0.0075610303,
      -0.0018099379,
      -0.00048107814,
      -4.2033495e-05,
      -0.0043001436,
      -0.0053096265,
      -0.06521225,
      -0.0016481897,
      -0.061935227,
      -0.00916624,
      -0.008978398,
      -0.28604797,
      -0.007532864,
      -0.0016681894,
      -0.41306475,
      -0.019101791,
      -1.9428705,
      -0.037636407,
      -0.19555818,
      -0.4656175,
      -0.0035440752,
      -0.000802015,
      -0.00086698,
      -6.396884e-05,
      -0.0027042413,
      -0.15608287,
      -0.022774423,
      -0.0045881793,
      -0.0021814818,
      -0.55653113
     ],
     "top_logprobs": [
      {
       " #": -0.022852723
      },
      {
       " 0": -0.010886487
      },
      {
       ":": -0.0022823783
      },
      {
       " find": -0.8255595
      },
      {
       " to": -0.20404768
      },
      {
       " bathroom": -0.56852204
      },
      {
       " bathroom": -0.7295349
      },
      {
       "\n": -0.025234267
      },
      {
       " walk": -0.0074532344
      },
      {
       "('": -0.005227116
      },
      {
       "bath": -0.0028467947
      },
      {
       "room": -0.00017460952
      },
      {
       "')": -0.002253942
      },
      {
       "\n": -0.008284422
      },
      {
       " #": -0.00461926
      },
      {
       " 1": -0.004121352
      },
      {
       ":": -0.00087085663
      },
      {
       " find": -0.124028385
      },
      {
       " sink": -0.6360966
      },
      {
       "\n": -0.03408998
      },
      {
       " find": -0.3078192
      },
      {
       "('": -0.0012393042
      },
      {
       "s": -0.00077606883
      },
      {
       "ink": -0.00023321231
      },
      {
       "')": -0.0016877134
      },
      {
       "\n": -0.006099772
      },
      {
       " #": -0.029941078
      },
      {
       " 2": -0.00576202
      },
      {
       ":": -0.0011616655
      },
      {
       " turn": -0.30327576
      },
      {
       " on": -0.16515636
      },
      {
       " the": -0.56056285
      },
      {
       "\n": -0.15232207
      },
      {
       " wash": -1.9676783
      },
      {
       " soap": -0.34862033
      },
      {
       "\n": -0.026369741
      },
      {
       " switch": -1.3473121
      },
      {
       "nt": -0.00013061494
      },
      {
       "o": -0.00062969286
      },
      {
       "('": -0.0011016934
      },
      {
       "s": -0.0058542285
      },
      {
       "ink": -0.00020716005
      },
      {
       "')": -0.0018120882
      },
      {
       "\n": -0.0057325275
      },
      {
       " look": -0.835095
      },
      {
       "at": -0.00095915364
      },
      {
       "('": -0.00068790605
      },
      {
       "s": -0.0015866978
      },
      {
       "ink": -0.0005352843
      },
      {
       "')": -0.0022145747
      },
      {
       "\n": -0.0045342916
      },
      {
       " assert": -0.40141708
      },
      {
       "('": -0.0012082733
      },
      {
       "close": -0.01315461
      },
      {
       "'": -0.0032955676
      },
      {
       " to": -0.00072447216
      },
      {
       " '": -0.0024044968
      },
      {
       "s": -0.015917223
      },
      {
       "ink": -7.6252014e-05
      },
      {
       "')": -0.008053664
      },
      {
       "\n": -0.004105133
      },
      {
       " else": -0.002036454
      },
      {
       ":": -0.0015975006
      },
      {
       " find": -0.009522893
      },
      {
       "('": -0.0014869418
      },
      {
       "s": -0.0005065991
      },
      {
       "ink": -0.00012787033
      },
      {
       "')": -0.0024373606
      },
      {
       "\n": -0.008396755
      },
      {
       " switch": -0.40333867
      },
      {
       "on": -0.0012222949
      },
      {
       "('": -0.00079420075
      },
      {
       "s": -0.009283066
      },
      {
       "ink": -0.00025646458
      },
      {
       "')": -0.0035939033
      },
      {
       "\n": -0.0049909493
      },
      {
       " grab": -0.66386586
      },
      {
       "('": -0.0015869362
      },
      {
       "so": -0.0008997314
      },
      {
       "ap": -0.0001351458
      },
      {
       "')": -0.0014345942
      },
      {
       "\n": -0.0052027893
      },
      {
       " #": -0.13382836
      },
      {
       " 3": -0.0107339285
      },
      {
       ":": -0.0010471578
      },
      {
       " wash": -0.6095828
      },
      {
       " hands": -0.17737281
      },
      {
       "\n": -0.21928838
      },
      {
       " assert": -0.7514873
      },
      {
       "at": -0.0016360688
      },
      {
       "('": -0.0006373879
      },
      {
       "hands": -0.8289905
      },
      {
       "')": -0.002272223
      },
      {
       "\n": -0.005921079
      },
      {
       " wash": -0.60237694
      },
      {
       "('": -0.0014456364
      },
      {
       "so": -0.29153186
      },
      {
       "ap": -0.00012500932
      },
      {
       "'": -0.0025603932
      },
      {
       " in": -0.017395813
      },
      {
       " '": -0.0052021896
      },
      {
       "hands": -0.009738824
      },
      {
       "')": -0.011325195
      },
      {
       "\n": -0.0042186156
      },
      {
       " else": -0.0025532828
      },
      {
       ":": -0.0031613815
      },
      {
       " grab": -0.0075610303
      },
      {
       "('": -0.0018099379
      },
      {
       "so": -0.00048107814
      },
      {
       "ap": -4.2033495e-05
      },
      {
       "')": -0.0043001436
      },
      {
       "\n": -0.0053096265
      },
      {
       " wash": -0.06521225
      },
      {
       "('": -0.0016481897
      },
      {
       "hands": -0.061935227
      },
      {
       "')": -0.00916624
      },
      {
       "\n": -0.008978398
      },
      {
       " #": -0.28604797
      },
      {
       " 4": -0.007532864
      },
      {
       ":": -0.0016681894
      },
      {
       " turn": -0.41306475
      },
      {
       " off": -0.019101791
      },
      {
       " sink": -0.19085637
      },
      {
       " sink": -0.037636407
      },
      {
       "\n": -0.19555818
      },
      {
       " switch": -0.4656175
      },
      {
       "off": -0.0035440752
      },
      {
       "('": -0.000802015
      },
      {
       "s": -0.00086698
      },
      {
       "ink": -6.396884e-05
      },
      {
       "')": -0.0027042413
      },
      {
       "\n": -0.15608287
      },
      {
       " #": -0.022774423
      },
      {
       " 5": -0.0045881793
      },
      {
       ":": -0.0021814818
      },
      {
       " Done": -0.55653113
      }
     ],
     "text_offset": [
      3345,
      3347,
      3349,
      3350,
      3355,
      3358,
      3362,
      3371,
      3372,
      3377,
      3379,
      3383,
      3387,
      3389,
      3390,
      3392,
      3394,
      3395,
      3400,
      3405,
      3406,
      3411,
      3413,
      3414,
      3417,
      3419,
      3420,
      3422,
      3424,
      3425,
      3430,
      3433,
      3438,
      3442,
      3447,
      3452,
      3453,
      3457,
      3459,
      3460,
      3462,
      3463,
      3466,
      3468,
      3469,
      3474,
      3476,
      3478,
      3479,
      3482,
      3484,
      3485,
      3492,
      3494,
      3499,
      3500,
      3503,
      3505,
      3506,
      3509,
      3511,
      3512,
      3517,
      3518,
      3523,
      3525,
      3526,
      3529,
      3531,
      3532,
      3539,
      3541,
      3543,
      3544,
      3547,
      3549,
      3550,
      3555,
      3557,
      3559,
      3561,
      3563,
      3564,
      3566,
      3568,
      3569,
      3574,
      3580,
      3581,
      3586,
      3588,
      3590,
      3595,
      3597,
      3598,
      3605,
      3607,
      3609,
      3611,
      3612,
      3615,
      3617,
      3622,
      3624,
      3625,
      3630,
      3631,
      3636,
      3638,
      3640,
      3642,
      3644,
      3645,
      3650,
      3652,
      3657,
      3659,
      3660,
      3662,
      3664,
      3665,
      3670,
      3674,
      3678,
      3683,
      3684,
      3691,
      3694,
      3696,
      3697,
      3700,
      3702,
      3703,
      3705,
      3707,
      3708
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Hand washing",
   "task_description": "Turn on the faucet. Soap up your hands. Then rinse under the running water of the faucet. Turn off faucet and dry hands.",
   "program": [
    "[Walk] <bathroom> (1)",
    "[Walk] <sink> (1)",
    "[Find] <faucet> (1)",
    "[SwitchOn] <faucet> (1)",
    "[Find] <soap> (1)",
    "[Grab] <soap> (1)",
    "[Find] <hands_both> (1)",
    "[Scrub] <hands_both> (1)",
    "[PutObjBack] <soap> (1)",
    "[Wash] <hands_both> (1)",
    "[SwitchOff] <faucet> (1)",
    "[Find] <towel> (1)",
    "[Grab] <towel> (1)",
    "[Wipe] <hands_both> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_july",
   "file_id": "split4_7",
   "goal_condition": [
    [
     [
      240,
      1,
      "INSIDE",
      "character",
      "bathroom"
     ],
     [
      240,
      1002,
      "HOLDS_RH",
      "character",
      "towel"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1171,
   "completion_tokens": 136,
   "total_tokens": 1307
  }
 },
 "19": {
  "plan": [
   [
    " # 0: walk to bathroom\n walk('bathroom')\n # 1: find mop\n find('mop')\n # 2: grab mop\n grab('mop')\n # 3: mop the bathroom floor\n assert('mop' in 'hands')\n else: grab('mop')\n mop('bathroom_floor')\n # 4: put mop back\n assert('mop' in 'hands')\n else: grab('mop')\n putback('mop')\n # 5: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " bathroom",
      "\n",
      " walk",
      "('",
      "bath",
      "room",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " m",
      "op",
      "\n",
      " find",
      "('",
      "mop",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " grab",
      " m",
      "op",
      "\n",
      " grab",
      "('",
      "mop",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " m",
      "op",
      " the",
      " bathroom",
      " floor",
      "\n",
      " assert",
      "('",
      "mop",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "mop",
      "')",
      "\n",
      " m",
      "op",
      "('",
      "bath",
      "room",
      "_",
      "floor",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " put",
      " m",
      "op",
      " back",
      "\n",
      " assert",
      "('",
      "mop",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "mop",
      "')",
      "\n",
      " put",
      "back",
      "('",
      "mop",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.017148511,
      -0.007014722,
      -0.0023831094,
      -0.119415656,
      -0.39628577,
      -0.15380897,
      -0.022737471,
      -0.004707769,
      -0.0046453695,
      -0.0018399127,
      -0.00014933258,
      -0.0020269565,
      -0.007625473,
      -0.0027148197,
      -0.0028392037,
      -0.0006832541,
      -0.13101996,
      -0.74042475,
      -0.00015791749,
      -1.26584,
      -0.136007,
      -0.0010636855,
      -0.001245273,
      -0.07623829,
      -0.006079143,
      -0.025097473,
      -0.004712796,
      -0.0009837922,
      -0.09404327,
      -0.13202687,
      -0.00011428335,
      -0.03735812,
      -0.6290529,
      -0.0010985939,
      -0.0003686146,
      -0.0019803122,
      -0.00459375,
      -0.32999173,
      -0.006864732,
      -0.00065814523,
      -1.9345757,
      -0.00032026,
      -0.36053634,
      -1.7767372,
      -1.033347,
      -0.017327886,
      -0.82099885,
      -0.0019926762,
      -0.93583804,
      -0.0048668995,
      -0.020398943,
      -0.005356248,
      -0.013064388,
      -0.020134354,
      -0.004508067,
      -0.0037213278,
      -0.0032050305,
      -0.01915234,
      -0.0019574964,
      -0.0007599616,
      -0.003940795,
      -0.0045405785,
      -0.22387119,
      -0.00036026907,
      -0.02305319,
      -0.508544,
      -0.0011770613,
      -0.5010028,
      -0.0025859685,
      -0.0025597962,
      -0.006978889,
      -0.19447732,
      -0.0082585765,
      -0.0014495769,
      -1.0737876,
      -0.2640215,
      -2.4866502e-05,
      -0.10629808,
      -0.034556262,
      -0.58228594,
      -0.0012066026,
      -0.008991629,
      -0.0013869624,
      -0.0031518145,
      -0.0025352957,
      -0.0016037088,
      -0.0028389646,
      -0.0022361993,
      -0.002339312,
      -0.0014801384,
      -0.003940079,
      -0.001050857,
      -0.00041518486,
      -0.0015633535,
      -0.004615007,
      -0.009917238,
      -1.2846912,
      -0.004193056,
      -0.0014788234,
      -0.010608077,
      -0.3349516,
      -0.019006109,
      -0.0057324073,
      -0.001869653,
      -0.6110036
     ],
     "top_logprobs": [
      {
       " #": -0.017148511
      },
      {
       " 0": -0.007014722
      },
      {
       ":": -0.0023831094
      },
      {
       " walk": -0.119415656
      },
      {
       " to": -0.39628577
      },
      {
       " bathroom": -0.15380897
      },
      {
       "\n": -0.022737471
      },
      {
       " walk": -0.004707769
      },
      {
       "('": -0.0046453695
      },
      {
       "bath": -0.0018399127
      },
      {
       "room": -0.00014933258
      },
      {
       "')": -0.0020269565
      },
      {
       "\n": -0.007625473
      },
      {
       " #": -0.0027148197
      },
      {
       " 1": -0.0028392037
      },
      {
       ":": -0.0006832541
      },
      {
       " find": -0.13101996
      },
      {
       " m": -0.74042475
      },
      {
       "op": -0.00015791749
      },
      {
       " bucket": -0.6555867
      },
      {
       " find": -0.136007
      },
      {
       "('": -0.0010636855
      },
      {
       "mop": -0.001245273
      },
      {
       "')": -0.07623829
      },
      {
       "\n": -0.006079143
      },
      {
       " #": -0.025097473
      },
      {
       " 2": -0.004712796
      },
      {
       ":": -0.0009837922
      },
      {
       " grab": -0.09404327
      },
      {
       " m": -0.13202687
      },
      {
       "op": -0.00011428335
      },
      {
       "\n": -0.03735812
      },
      {
       " grab": -0.6290529
      },
      {
       "('": -0.0010985939
      },
      {
       "mop": -0.0003686146
      },
      {
       "')": -0.0019803122
      },
      {
       "\n": -0.00459375
      },
      {
       " #": -0.32999173
      },
      {
       " 3": -0.006864732
      },
      {
       ":": -0.00065814523
      },
      {
       " find": -1.4185271
      },
      {
       "op": -0.00032026
      },
      {
       " the": -0.36053634
      },
      {
       " floor": -0.21616738
      },
      {
       "\n": -0.4730442
      },
      {
       "\n": -0.017327886
      },
      {
       " assert": -0.82099885
      },
      {
       "('": -0.0019926762
      },
      {
       "close": -0.510507
      },
      {
       "'": -0.0048668995
      },
      {
       " in": -0.020398943
      },
      {
       " '": -0.005356248
      },
      {
       "hands": -0.013064388
      },
      {
       "')": -0.020134354
      },
      {
       "\n": -0.004508067
      },
      {
       " else": -0.0037213278
      },
      {
       ":": -0.0032050305
      },
      {
       " grab": -0.01915234
      },
      {
       "('": -0.0019574964
      },
      {
       "mop": -0.0007599616
      },
      {
       "')": -0.003940795
      },
      {
       "\n": -0.0045405785
      },
      {
       " m": -0.22387119
      },
      {
       "op": -0.00036026907
      },
      {
       "('": -0.02305319
      },
      {
       "bath": -0.508544
      },
      {
       "room": -0.0011770613
      },
      {
       "_": -0.5010028
      },
      {
       "floor": -0.0025859685
      },
      {
       "')": -0.0025597962
      },
      {
       "\n": -0.006978889
      },
      {
       " #": -0.19447732
      },
      {
       " 4": -0.0082585765
      },
      {
       ":": -0.0014495769
      },
      {
       " find": -0.9921263
      },
      {
       " m": -0.2640215
      },
      {
       "op": -2.4866502e-05
      },
      {
       " back": -0.10629808
      },
      {
       "\n": -0.034556262
      },
      {
       " assert": -0.58228594
      },
      {
       "('": -0.0012066026
      },
      {
       "mop": -0.008991629
      },
      {
       "'": -0.0013869624
      },
      {
       " in": -0.0031518145
      },
      {
       " '": -0.0025352957
      },
      {
       "hands": -0.0016037088
      },
      {
       "')": -0.0028389646
      },
      {
       "\n": -0.0022361993
      },
      {
       " else": -0.002339312
      },
      {
       ":": -0.0014801384
      },
      {
       " grab": -0.003940079
      },
      {
       "('": -0.001050857
      },
      {
       "mop": -0.00041518486
      },
      {
       "')": -0.0015633535
      },
      {
       "\n": -0.004615007
      },
      {
       " put": -0.009917238
      },
      {
       "obj": -0.34519234
      },
      {
       "('": -0.004193056
      },
      {
       "mop": -0.0014788234
      },
      {
       "')": -0.010608077
      },
      {
       "\n": -0.3349516
      },
      {
       " #": -0.019006109
      },
      {
       " 5": -0.0057324073
      },
      {
       ":": -0.001869653
      },
      {
       " Done": -0.6110036
      }
     ],
     "text_offset": [
      3347,
      3349,
      3351,
      3352,
      3357,
      3360,
      3369,
      3370,
      3375,
      3377,
      3381,
      3385,
      3387,
      3388,
      3390,
      3392,
      3393,
      3398,
      3400,
      3402,
      3403,
      3408,
      3410,
      3413,
      3415,
      3416,
      3418,
      3420,
      3421,
      3426,
      3428,
      3430,
      3431,
      3436,
      3438,
      3441,
      3443,
      3444,
      3446,
      3448,
      3449,
      3451,
      3453,
      3457,
      3466,
      3472,
      3473,
      3480,
      3482,
      3485,
      3486,
      3489,
      3491,
      3496,
      3498,
      3499,
      3504,
      3505,
      3510,
      3512,
      3515,
      3517,
      3518,
      3520,
      3522,
      3524,
      3528,
      3532,
      3533,
      3538,
      3540,
      3541,
      3543,
      3545,
      3546,
      3550,
      3552,
      3554,
      3559,
      3560,
      3567,
      3569,
      3572,
      3573,
      3576,
      3578,
      3583,
      3585,
      3586,
      3591,
      3592,
      3597,
      3599,
      3602,
      3604,
      3605,
      3609,
      3613,
      3615,
      3618,
      3620,
      3621,
      3623,
      3625,
      3626
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Clean bathroom",
   "task_description": "I'm going to clean the bathroom, take the brush, wash and rinse the toilet and shower",
   "program": [
    "[Walk] <bathroom> (1)",
    "[Walk] <brush> (1)",
    "[Find] <brush> (1)",
    "[Grab] <brush> (1)",
    "[Find] <detergent> (1)",
    "[Grab] <detergent> (1)",
    "[Find] <toilet> (1)",
    "[PutBack] <detergent> (1) <toilet> (1)",
    "[Find] <toilet> (1)",
    "[Scrub] <toilet> (1)",
    "[Rinse] <toilet> (1)",
    "[Find] <shower> (1)",
    "[Scrub] <shower> (1)",
    "[Rinse] <shower> (1)"
   ],
   "batch": "results_intentions_march-13-18",
   "file_id": "file367_1",
   "goal_condition": [
    [
     [
      240,
      1000,
      "HOLDS_RH",
      "character",
      "brush"
     ],
     [
      1001,
      15,
      "ON",
      "detergent",
      "toilet"
     ],
     [
      240,
      1,
      "INSIDE",
      "character",
      "bathroom"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1172,
   "completion_tokens": 105,
   "total_tokens": 1277
  }
 },
 "20": {
  "plan": [
   [
    " # 0: find phone\n find('phone')\n # 1: grab phone\n assert('close' to 'phone')\n else: find('phone')\n grab('phone')\n assert('phone' in 'hands')\n else: grab('phone')\n # 2: Done\ndef wash_dishes():\n # 0: find dishwasher\n find('dishwasher')\n # 1: open dishwasher\n assert('close' to 'dishwasher')\n else: find('dishwasher')\n open('dishwasher')\n # 2: put dishes in dishwasher\n find('dishes')\n assert('close' to 'dishes')\n else: find('dishes')\n putin('dishes', 'dishwasher')\n # 3: close dishwasher\n close('dishwasher')\n # 4: turn on dishwasher\n switchon('dishwasher')\n # 5: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " phone",
      "\n",
      " find",
      "('",
      "phone",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " grab",
      " phone",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "phone",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "phone",
      "')",
      "\n",
      " grab",
      "('",
      "phone",
      "')",
      "\n",
      " assert",
      "('",
      "phone",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "phone",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " Done",
      "\n",
      "def",
      " wash",
      "_",
      "d",
      "ishes",
      "():",
      "\n",
      " #",
      " 0",
      ":",
      " find",
      " dish",
      "washer",
      "\n",
      " find",
      "('",
      "d",
      "ish",
      "washer",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " open",
      " dish",
      "washer",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "d",
      "ish",
      "washer",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "d",
      "ish",
      "washer",
      "')",
      "\n",
      " open",
      "('",
      "d",
      "ish",
      "washer",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " put",
      " dishes",
      " in",
      " dish",
      "washer",
      "\n",
      " find",
      "('",
      "d",
      "ishes",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "d",
      "ishes",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "d",
      "ishes",
      "')",
      "\n",
      " put",
      "in",
      "('",
      "d",
      "ishes",
      "',",
      " '",
      "d",
      "ish",
      "washer",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " close",
      " dish",
      "washer",
      "\n",
      " close",
      "('",
      "d",
      "ish",
      "washer",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " turn",
      " on",
      " dish",
      "washer",
      "\n",
      " switch",
      "on",
      "('",
      "d",
      "ish",
      "washer",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.018998513,
      -0.0088806115,
      -0.0018749083,
      -0.7456643,
      -0.19451691,
      -0.037054867,
      -0.041671827,
      -0.0022683397,
      -0.00099489,
      -0.002836573,
      -0.0093083335,
      -0.0045075887,
      -0.0026707135,
      -0.0010627309,
      -0.18033597,
      -0.108832985,
      -0.017287133,
      -0.48224282,
      -0.0017256874,
      -0.0047551394,
      -0.0026631227,
      -0.0011561172,
      -0.0023521595,
      -0.00050779217,
      -0.0051707975,
      -0.0057701147,
      -0.0016235905,
      -0.001444204,
      -0.003213341,
      -0.0015681294,
      -0.00036897225,
      -0.002876383,
      -0.0067993193,
      -0.0065137674,
      -0.0008736013,
      -0.000151361,
      -0.002203999,
      -0.009863481,
      -0.6115018,
      -0.0013282921,
      -0.006025234,
      -0.0019608408,
      -0.024107656,
      -0.0038449394,
      -0.00948667,
      -0.01659949,
      -0.0033359935,
      -0.009411335,
      -0.0028769807,
      -0.002562187,
      -0.0014481444,
      -0.00031787396,
      -0.0029755589,
      -0.109809704,
      -1.5312295,
      -0.011798354,
      -0.0015191787,
      -1.0026246,
      -0.33133695,
      -1.3274648,
      -2.6280236,
      -0.00027673383,
      -0.5322988,
      -0.0078685535,
      -0.040985152,
      -0.0176635,
      -0.004455858,
      -0.0053841136,
      -0.0015637131,
      -0.43225455,
      -1.8510427,
      -0.47864127,
      -0.030580742,
      -0.039632156,
      -0.0015561897,
      -0.00047600848,
      -6.09933e-05,
      -0.0011935929,
      -0.0013497758,
      -0.00940917,
      -0.005428339,
      -0.0031714847,
      -0.00030451978,
      -0.54329515,
      -0.133443,
      -0.024246696,
      -0.027817365,
      -0.5746103,
      -0.0015551159,
      -0.015602825,
      -0.002522208,
      -0.0004442849,
      -0.0039063315,
      -0.0005400564,
      -0.0001173809,
      -0.00052568375,
      -0.0052239415,
      -0.0048205396,
      -0.0012308902,
      -0.0014428918,
      -0.002861679,
      -0.0016134427,
      -0.00022194568,
      -0.00023333247,
      -0.00030809414,
      -0.002414834,
      -0.006912808,
      -0.020557305,
      -0.0012865708,
      -0.00019499795,
      -0.00010307304,
      -0.0005860381,
      -0.0014535155,
      -0.0075661954,
      -0.11402968,
      -0.0059221596,
      -0.0007605586,
      -1.0163993,
      -0.20715514,
      -0.17465967,
      -0.2265192,
      -0.015696244,
      -0.014225365,
      -0.8879141,
      -0.003488386,
      -0.020901307,
      -0.05907171,
      -0.0017061626,
      -0.004221547,
      -0.58235943,
      -0.0011556394,
      -0.1022638,
      -0.0018365101,
      -0.00033087333,
      -0.0041970075,
      -0.0003754123,
      -0.07423995,
      -0.0039162007,
      -0.0019027357,
      -0.0012817987,
      -0.0008700231,
      -0.0040266127,
      -0.0010346277,
      -0.00035132372,
      -0.0011457329,
      -0.00098248,
      -0.0047559775,
      -0.9463112,
      -0.050797924,
      -0.0027128467,
      -0.00034846272,
      -0.103510566,
      -0.23674592,
      -0.008351372,
      -0.0003707613,
      -0.00021383668,
      -0.001012133,
      -0.0018928845,
      -0.009330652,
      -0.03362564,
      -0.0073347627,
      -0.0010947746,
      -0.17083931,
      -0.069691494,
      -0.005059423,
      -0.027812278,
      -0.12134798,
      -0.0008042809,
      -7.946878e-05,
      -0.0014765556,
      -0.0012107797,
      -0.0010636855,
      -0.0054169507,
      -0.0058710766,
      -0.003986517,
      -0.0014236111,
      -0.9322205,
      -0.039791733,
      -0.042724185,
      -0.009774517,
      -0.010056486,
      -0.18192609,
      -0.0007576347,
      -0.0004934796,
      -0.0001191709,
      -0.00020406157,
      -0.00044977036,
      -0.0011997992,
      -0.004669381,
      -0.0043919175,
      -0.0028432675,
      -0.0016206064,
      -0.92131126
     ],
     "top_logprobs": [
      {
       " #": -0.018998513
      },
      {
       " 0": -0.0088806115
      },
      {
       ":": -0.0018749083
      },
      {
       " find": -0.7456643
      },
      {
       " phone": -0.19451691
      },
      {
       "\n": -0.037054867
      },
      {
       " find": -0.041671827
      },
      {
       "('": -0.0022683397
      },
      {
       "phone": -0.00099489
      },
      {
       "')": -0.002836573
      },
      {
       "\n": -0.0093083335
      },
      {
       " #": -0.0045075887
      },
      {
       " 1": -0.0026707135
      },
      {
       ":": -0.0010627309
      },
      {
       " grab": -0.18033597
      },
      {
       " phone": -0.108832985
      },
      {
       "\n": -0.017287133
      },
      {
       " assert": -0.48224282
      },
      {
       "('": -0.0017256874
      },
      {
       "close": -0.0047551394
      },
      {
       "'": -0.0026631227
      },
      {
       " to": -0.0011561172
      },
      {
       " '": -0.0023521595
      },
      {
       "phone": -0.00050779217
      },
      {
       "')": -0.0051707975
      },
      {
       "\n": -0.0057701147
      },
      {
       " else": -0.0016235905
      },
      {
       ":": -0.001444204
      },
      {
       " find": -0.003213341
      },
      {
       "('": -0.0015681294
      },
      {
       "phone": -0.00036897225
      },
      {
       "')": -0.002876383
      },
      {
       "\n": -0.0067993193
      },
      {
       " grab": -0.0065137674
      },
      {
       "('": -0.0008736013
      },
      {
       "phone": -0.000151361
      },
      {
       "')": -0.002203999
      },
      {
       "\n": -0.009863481
      },
      {
       " assert": -0.6115018
      },
      {
       "('": -0.0013282921
      },
      {
       "phone": -0.006025234
      },
      {
       "'": -0.0019608408
      },
      {
       " in": -0.024107656
      },
      {
       " '": -0.0038449394
      },
      {
       "hands": -0.00948667
      },
      {
       "')": -0.01659949
      },
      {
       "\n": -0.0033359935
      },
      {
       " else": -0.009411335
      },
      {
       ":": -0.0028769807
      },
      {
       " grab": -0.002562187
      },
      {
       "('": -0.0014481444
      },
      {
       "phone": -0.00031787396
      },
      {
       "')": -0.0029755589
      },
      {
       "\n": -0.109809704
      },
      {
       " tur": -0.326614
      },
      {
       " 2": -0.011798354
      },
      {
       ":": -0.0015191787
      },
      {
       " Done": -1.0026246
      },
      {
       "\n": -0.33133695
      },
      {
       "<|endoftext|>": -0.7561719
      },
      {
       " make": -1.4399114
      },
      {
       "_": -0.00027673383
      },
      {
       "d": -0.5322988
      },
      {
       "ishes": -0.0078685535
      },
      {
       "():": -0.040985152
      },
      {
       "\n": -0.0176635
      },
      {
       " #": -0.004455858
      },
      {
       " 0": -0.0053841136
      },
      {
       ":": -0.0015637131
      },
      {
       " find": -0.43225455
      },
      {
       " sink": -0.5056964
      },
      {
       "washer": -0.47864127
      },
      {
       "\n": -0.030580742
      },
      {
       " find": -0.039632156
      },
      {
       "('": -0.0015561897
      },
      {
       "d": -0.00047600848
      },
      {
       "ish": -6.09933e-05
      },
      {
       "washer": -0.0011935929
      },
      {
       "')": -0.0013497758
      },
      {
       "\n": -0.00940917
      },
      {
       " #": -0.005428339
      },
      {
       " 1": -0.0031714847
      },
      {
       ":": -0.00030451978
      },
      {
       " open": -0.54329515
      },
      {
       " dish": -0.133443
      },
      {
       "washer": -0.024246696
      },
      {
       "\n": -0.027817365
      },
      {
       " assert": -0.5746103
      },
      {
       "('": -0.0015551159
      },
      {
       "close": -0.015602825
      },
      {
       "'": -0.002522208
      },
      {
       " to": -0.0004442849
      },
      {
       " '": -0.0039063315
      },
      {
       "d": -0.0005400564
      },
      {
       "ish": -0.0001173809
      },
      {
       "washer": -0.00052568375
      },
      {
       "')": -0.0052239415
      },
      {
       "\n": -0.0048205396
      },
      {
       " else": -0.0012308902
      },
      {
       ":": -0.0014428918
      },
      {
       " find": -0.002861679
      },
      {
       "('": -0.0016134427
      },
      {
       "d": -0.00022194568
      },
      {
       "ish": -0.00023333247
      },
      {
       "washer": -0.00030809414
      },
      {
       "')": -0.002414834
      },
      {
       "\n": -0.006912808
      },
      {
       " open": -0.020557305
      },
      {
       "('": -0.0012865708
      },
      {
       "d": -0.00019499795
      },
      {
       "ish": -0.00010307304
      },
      {
       "washer": -0.0005860381
      },
      {
       "')": -0.0014535155
      },
      {
       "\n": -0.0075661954
      },
      {
       " #": -0.11402968
      },
      {
       " 2": -0.0059221596
      },
      {
       ":": -0.0007605586
      },
      {
       " put": -1.0163993
      },
      {
       " dishes": -0.20715514
      },
      {
       " in": -0.17465967
      },
      {
       " dish": -0.2265192
      },
      {
       "washer": -0.015696244
      },
      {
       "\n": -0.014225365
      },
      {
       " find": -0.8879141
      },
      {
       "('": -0.003488386
      },
      {
       "d": -0.020901307
      },
      {
       "ishes": -0.05907171
      },
      {
       "')": -0.0017061626
      },
      {
       "\n": -0.004221547
      },
      {
       " assert": -0.58235943
      },
      {
       "('": -0.0011556394
      },
      {
       "close": -0.1022638
      },
      {
       "'": -0.0018365101
      },
      {
       " to": -0.00033087333
      },
      {
       " '": -0.0041970075
      },
      {
       "d": -0.0003754123
      },
      {
       "ishes": -0.07423995
      },
      {
       "')": -0.0039162007
      },
      {
       "\n": -0.0019027357
      },
      {
       " else": -0.0012817987
      },
      {
       ":": -0.0008700231
      },
      {
       " find": -0.0040266127
      },
      {
       "('": -0.0010346277
      },
      {
       "d": -0.00035132372
      },
      {
       "ishes": -0.0011457329
      },
      {
       "')": -0.00098248
      },
      {
       "\n": -0.0047559775
      },
      {
       " grab": -0.6151746
      },
      {
       "in": -0.050797924
      },
      {
       "('": -0.0027128467
      },
      {
       "d": -0.00034846272
      },
      {
       "ishes": -0.103510566
      },
      {
       "',": -0.23674592
      },
      {
       " '": -0.008351372
      },
      {
       "d": -0.0003707613
      },
      {
       "ish": -0.00021383668
      },
      {
       "washer": -0.001012133
      },
      {
       "')": -0.0018928845
      },
      {
       "\n": -0.009330652
      },
      {
       " #": -0.03362564
      },
      {
       " 3": -0.0073347627
      },
      {
       ":": -0.0010947746
      },
      {
       " close": -0.17083931
      },
      {
       " dish": -0.069691494
      },
      {
       "washer": -0.005059423
      },
      {
       "\n": -0.027812278
      },
      {
       " close": -0.12134798
      },
      {
       "('": -0.0008042809
      },
      {
       "d": -7.946878e-05
      },
      {
       "ish": -0.0014765556
      },
      {
       "washer": -0.0012107797
      },
      {
       "')": -0.0010636855
      },
      {
       "\n": -0.0054169507
      },
      {
       " #": -0.0058710766
      },
      {
       " 4": -0.003986517
      },
      {
       ":": -0.0014236111
      },
      {
       " turn": -0.9322205
      },
      {
       " on": -0.039791733
      },
      {
       " dish": -0.042724185
      },
      {
       "washer": -0.009774517
      },
      {
       "\n": -0.010056486
      },
      {
       " switch": -0.18192609
      },
      {
       "on": -0.0007576347
      },
      {
       "('": -0.0004934796
      },
      {
       "d": -0.0001191709
      },
      {
       "ish": -0.00020406157
      },
      {
       "washer": -0.00044977036
      },
      {
       "')": -0.0011997992
      },
      {
       "\n": -0.004669381
      },
      {
       " #": -0.0043919175
      },
      {
       " 5": -0.0028432675
      },
      {
       ":": -0.0016206064
      },
      {
       " wait": -0.7172449
      }
     ],
     "text_offset": [
      3346,
      3348,
      3350,
      3351,
      3356,
      3362,
      3363,
      3368,
      3370,
      3375,
      3377,
      3378,
      3380,
      3382,
      3383,
      3388,
      3394,
      3395,
      3402,
      3404,
      3409,
      3410,
      3413,
      3415,
      3420,
      3422,
      3423,
      3428,
      3429,
      3434,
      3436,
      3441,
      3443,
      3444,
      3449,
      3451,
      3456,
      3458,
      3459,
      3466,
      3468,
      3473,
      3474,
      3477,
      3479,
      3484,
      3486,
      3487,
      3492,
      3493,
      3498,
      3500,
      3505,
      3507,
      3508,
      3510,
      3512,
      3513,
      3518,
      3519,
      3522,
      3527,
      3528,
      3529,
      3534,
      3537,
      3538,
      3540,
      3542,
      3543,
      3548,
      3553,
      3559,
      3560,
      3565,
      3567,
      3568,
      3571,
      3577,
      3579,
      3580,
      3582,
      3584,
      3585,
      3590,
      3595,
      3601,
      3602,
      3609,
      3611,
      3616,
      3617,
      3620,
      3622,
      3623,
      3626,
      3632,
      3634,
      3635,
      3640,
      3641,
      3646,
      3648,
      3649,
      3652,
      3658,
      3660,
      3661,
      3666,
      3668,
      3669,
      3672,
      3678,
      3680,
      3681,
      3683,
      3685,
      3686,
      3690,
      3697,
      3700,
      3705,
      3711,
      3712,
      3717,
      3719,
      3720,
      3725,
      3727,
      3728,
      3735,
      3737,
      3742,
      3743,
      3746,
      3748,
      3749,
      3754,
      3756,
      3757,
      3762,
      3763,
      3768,
      3770,
      3771,
      3776,
      3778,
      3779,
      3783,
      3785,
      3787,
      3788,
      3793,
      3795,
      3797,
      3798,
      3801,
      3807,
      3809,
      3810,
      3812,
      3814,
      3815,
      3821,
      3826,
      3832,
      3833,
      3839,
      3841,
      3842,
      3845,
      3851,
      3853,
      3854,
      3856,
      3858,
      3859,
      3864,
      3867,
      3872,
      3878,
      3879,
      3886,
      3888,
      3890,
      3891,
      3894,
      3900,
      3902,
      3903,
      3905,
      3907,
      3908
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Pick up phone",
   "task_description": "Find the phone.Grab the phone.Touch phone to answer.Say Hello.",
   "program": [
    "[Find] <phone> (1)",
    "[Grab] <phone> (1)",
    "[Touch] <phone> (1)"
   ],
   "batch": "results_intentions_march-13-18",
   "file_id": "file356_2",
   "goal_condition": [
    [
     [
      240,
      71,
      "HOLDS_RH",
      "character",
      "phone"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1173,
   "completion_tokens": 193,
   "total_tokens": 1366
  }
 },
 "21": {
  "plan": [
   [
    " # 0: walk to bathroom\n walk('bathroom')\n # 1: find toilet\n find('toilet')\n # 2: sit on toilet\n assert('close' to 'toilet')\n else: find('toilet')\n sit('toilet')\n # 3: do toilet\n do('toilet')\n # 4: get up\n standup()",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " bathroom",
      "\n",
      " walk",
      "('",
      "bath",
      "room",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " toilet",
      "\n",
      " find",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " sit",
      " on",
      " toilet",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "to",
      "ilet",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " sit",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " do",
      " toilet",
      "\n",
      " do",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " get",
      " up",
      "\n",
      " stand",
      "up",
      "()"
     ],
     "token_logprobs": [
      -0.0158081,
      -0.0080709085,
      -0.0025649352,
      -0.11681209,
      -0.2906569,
      -0.3285376,
      -0.020790847,
      -0.004702198,
      -0.0039531244,
      -0.0024387338,
      -0.000139794,
      -0.0019641262,
      -0.007118809,
      -0.0020988104,
      -0.0029936128,
      -0.00046074227,
      -0.1285324,
      -0.060019623,
      -0.020362383,
      -0.24433908,
      -0.0009114852,
      -0.00062969286,
      -0.00015958735,
      -0.0017672452,
      -0.004794186,
      -0.019209635,
      -0.0045537506,
      -0.00059557945,
      -0.44225782,
      -0.05565608,
      -0.37163654,
      -0.020356422,
      -0.9175911,
      -0.0015414446,
      -0.0028217488,
      -0.0037647635,
      -0.0009087415,
      -0.002461438,
      -0.0012665795,
      -8.078007e-05,
      -0.0043781484,
      -0.0038910129,
      -0.0017920848,
      -0.0014406221,
      -0.0058494923,
      -0.0014195521,
      -0.0007485673,
      -0.0004200752,
      -0.001321606,
      -0.00507482,
      -0.15861687,
      -0.0010485902,
      -0.00028675204,
      -2.7133337e-05,
      -0.0012705182,
      -0.074103475,
      -0.03239811,
      -0.009056525,
      -0.0016808463,
      -1.5373528,
      -2.5783794,
      -1.8600342,
      -1.1146195,
      -0.47814417,
      -0.017972765,
      -0.001461098,
      -0.01846626,
      -0.06850494,
      -0.029924067,
      -0.0049570436,
      -0.0012116159,
      -3.1256983,
      -0.22386089,
      -0.86679274,
      -0.40556222,
      -0.0035595666,
      -0.113381155
     ],
     "top_logprobs": [
      {
       " #": -0.0158081
      },
      {
       " 0": -0.0080709085
      },
      {
       ":": -0.0025649352
      },
      {
       " walk": -0.11681209
      },
      {
       " to": -0.2906569
      },
      {
       " bathroom": -0.3285376
      },
      {
       "\n": -0.020790847
      },
      {
       " walk": -0.004702198
      },
      {
       "('": -0.0039531244
      },
      {
       "bath": -0.0024387338
      },
      {
       "room": -0.000139794
      },
      {
       "')": -0.0019641262
      },
      {
       "\n": -0.007118809
      },
      {
       " #": -0.0020988104
      },
      {
       " 1": -0.0029936128
      },
      {
       ":": -0.00046074227
      },
      {
       " find": -0.1285324
      },
      {
       " toilet": -0.060019623
      },
      {
       "\n": -0.020362383
      },
      {
       " find": -0.24433908
      },
      {
       "('": -0.0009114852
      },
      {
       "to": -0.00062969286
      },
      {
       "ilet": -0.00015958735
      },
      {
       "')": -0.0017672452
      },
      {
       "\n": -0.004794186
      },
      {
       " #": -0.019209635
      },
      {
       " 2": -0.0045537506
      },
      {
       ":": -0.00059557945
      },
      {
       " sit": -0.44225782
      },
      {
       " on": -0.05565608
      },
      {
       " toilet": -0.37163654
      },
      {
       "\n": -0.020356422
      },
      {
       " assert": -0.9175911
      },
      {
       "('": -0.0015414446
      },
      {
       "close": -0.0028217488
      },
      {
       "'": -0.0037647635
      },
      {
       " to": -0.0009087415
      },
      {
       " '": -0.002461438
      },
      {
       "to": -0.0012665795
      },
      {
       "ilet": -8.078007e-05
      },
      {
       "')": -0.0043781484
      },
      {
       "\n": -0.0038910129
      },
      {
       " else": -0.0017920848
      },
      {
       ":": -0.0014406221
      },
      {
       " find": -0.0058494923
      },
      {
       "('": -0.0014195521
      },
      {
       "to": -0.0007485673
      },
      {
       "ilet": -0.0004200752
      },
      {
       "')": -0.001321606
      },
      {
       "\n": -0.00507482
      },
      {
       " sit": -0.15861687
      },
      {
       "('": -0.0010485902
      },
      {
       "to": -0.00028675204
      },
      {
       "ilet": -2.7133337e-05
      },
      {
       "')": -0.0012705182
      },
      {
       "\n": -0.074103475
      },
      {
       " #": -0.03239811
      },
      {
       " 3": -0.009056525
      },
      {
       ":": -0.0016808463
      },
      {
       " flush": -1.4211667
      },
      {
       " your": -0.86312556
      },
      {
       " business": -1.1901696
      },
      {
       " do": -1.1146195
      },
      {
       "('": -0.47814417
      },
      {
       "to": -0.017972765
      },
      {
       "ilet": -0.001461098
      },
      {
       "')": -0.01846626
      },
      {
       "\n": -0.06850494
      },
      {
       " #": -0.029924067
      },
      {
       " 4": -0.0049570436
      },
      {
       ":": -0.0012116159
      },
      {
       " stand": -0.7538056
      },
      {
       " up": -0.22386089
      },
      {
       " from": -0.77850544
      },
      {
       " stand": -0.40556222
      },
      {
       "up": -0.0035595666
      },
      {
       "()": -0.113381155
      }
     ],
     "text_offset": [
      3345,
      3347,
      3349,
      3350,
      3355,
      3358,
      3367,
      3368,
      3373,
      3375,
      3379,
      3383,
      3385,
      3386,
      3388,
      3390,
      3391,
      3396,
      3403,
      3404,
      3409,
      3411,
      3413,
      3417,
      3419,
      3420,
      3422,
      3424,
      3425,
      3429,
      3432,
      3439,
      3440,
      3447,
      3449,
      3454,
      3455,
      3458,
      3460,
      3462,
      3466,
      3468,
      3469,
      3474,
      3475,
      3480,
      3482,
      3484,
      3488,
      3490,
      3491,
      3495,
      3497,
      3499,
      3503,
      3505,
      3506,
      3508,
      3510,
      3511,
      3514,
      3521,
      3522,
      3525,
      3527,
      3529,
      3533,
      3535,
      3536,
      3538,
      3540,
      3541,
      3545,
      3548,
      3549,
      3555,
      3557
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Go to toilet",
   "task_description": "I walk to the entrance of the bathroom. I turn to the door. I open the door to the bathroom. I walk inside of the bathroom. I find the toilet inside of the bathroom and walk over to it. I turn and look at the toilet.",
   "program": [
    "[Walk] <bathroom> (1)",
    "[Walk] <toilet> (1)",
    "[Find] <toilet> (1)",
    "[TurnTo] <toilet> (1)",
    "[LookAt] <toilet> (1)",
    "[Walk] <toilet> (1)",
    "[TurnTo] <toilet> (1)"
   ],
   "batch": "results_intentions_march-13-18",
   "file_id": "file496_1",
   "goal_condition": [
    [
     [
      240,
      15,
      "FACING",
      "character",
      "toilet"
     ],
     [
      240,
      1,
      "INSIDE",
      "character",
      "bathroom"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1174,
   "completion_tokens": 77,
   "total_tokens": 1251
  }
 }
}