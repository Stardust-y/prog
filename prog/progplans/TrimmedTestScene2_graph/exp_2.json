{
 "0": {
  "plan": [
   [
    " # 0: walk into bathroom\n walk('bathroom')\n # 1: find toilet\n find('toilet')\n # 2: grab a mop\n find('mop')\n grab('mop')\n assert('mop' in 'hands')\n else: grab('mop')\n # 3: wipe the toilet\n turnto('toilet')\n lookat('toilet')\n wipe('toilet')\n # 4: put the mop back\n putback('mop')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " into",
      " bathroom",
      "\n",
      " walk",
      "('",
      "bath",
      "room",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " toilet",
      "\n",
      " find",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " grab",
      " a",
      " m",
      "op",
      "\n",
      " find",
      "('",
      "mop",
      "')",
      "\n",
      " grab",
      "('",
      "mop",
      "')",
      "\n",
      " assert",
      "('",
      "mop",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "mop",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " wipe",
      " the",
      " toilet",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " look",
      "at",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " wipe",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " put",
      " the",
      " m",
      "op",
      " back",
      "\n",
      " put",
      "back",
      "('",
      "mop",
      "')"
     ],
     "token_logprobs": [
      -0.01753453,
      -0.0072733406,
      -0.0019486619,
      -0.34345213,
      -2.947932,
      -0.31242046,
      -0.021084098,
      -0.004969265,
      -0.0056958986,
      -0.0015100456,
      -0.00017484887,
      -0.00157398,
      -0.007404595,
      -0.002232138,
      -0.003037793,
      -0.0011333813,
      -0.07817246,
      -0.10123873,
      -0.025031283,
      -0.26048902,
      -0.0010314062,
      -0.00064836355,
      -0.00026588395,
      -0.0021140417,
      -0.005011856,
      -0.013418386,
      -0.0050548096,
      -0.0014769132,
      -0.60272384,
      -2.372153,
      -0.48085853,
      -0.0001758016,
      -0.43557546,
      -0.8621508,
      -0.0014496952,
      -0.003323853,
      -0.7930483,
      -0.0055539,
      -0.21006744,
      -0.0011652457,
      -0.00041315737,
      -0.0028934204,
      -0.004885287,
      -2.3282921,
      -0.0034469354,
      -0.17518002,
      -0.0037837895,
      -0.022269964,
      -0.00550697,
      -0.012800279,
      -0.016318638,
      -0.004529799,
      -0.022448188,
      -0.004455138,
      -0.03387298,
      -0.0019911826,
      -0.0004946726,
      -0.0033949031,
      -0.0053328755,
      -0.15745749,
      -0.008781573,
      -0.0014961967,
      -1.7377894,
      -0.24140632,
      -0.03658481,
      -0.16440287,
      -0.8286369,
      -7.136165e-05,
      -0.00022158712,
      -0.00055639644,
      -0.0054200096,
      -0.00016852893,
      -0.0010429798,
      -0.004451486,
      -0.828756,
      -0.00082551886,
      -0.0005013521,
      -0.000884698,
      -3.881579e-05,
      -0.001363742,
      -0.003766319,
      -0.43011144,
      -0.0012602521,
      -0.01152946,
      -0.0006156178,
      -0.006654943,
      -0.011450353,
      -0.06764396,
      -0.008872192,
      -0.0015770249,
      -0.56806004,
      -0.9185635,
      -0.0018342396,
      -0.00012715602,
      -0.047097888,
      -0.02447554,
      -0.7890714,
      -0.9774991,
      -0.0037749952,
      -0.002752652,
      -0.014246525
     ],
     "top_logprobs": [
      {
       " #": -0.01753453
      },
      {
       " 0": -0.0072733406
      },
      {
       ":": -0.0019486619
      },
      {
       " walk": -0.34345213
      },
      {
       " to": -0.23951235
      },
      {
       " bathroom": -0.31242046
      },
      {
       "\n": -0.021084098
      },
      {
       " walk": -0.004969265
      },
      {
       "('": -0.0056958986
      },
      {
       "bath": -0.0015100456
      },
      {
       "room": -0.00017484887
      },
      {
       "')": -0.00157398
      },
      {
       "\n": -0.007404595
      },
      {
       " #": -0.002232138
      },
      {
       " 1": -0.003037793
      },
      {
       ":": -0.0011333813
      },
      {
       " find": -0.07817246
      },
      {
       " toilet": -0.10123873
      },
      {
       "\n": -0.025031283
      },
      {
       " find": -0.26048902
      },
      {
       "('": -0.0010314062
      },
      {
       "to": -0.00064836355
      },
      {
       "ilet": -0.00026588395
      },
      {
       "')": -0.0021140417
      },
      {
       "\n": -0.005011856
      },
      {
       " #": -0.013418386
      },
      {
       " 2": -0.0050548096
      },
      {
       ":": -0.0014769132
      },
      {
       " grab": -0.60272384
      },
      {
       " toilet": -0.9224221
      },
      {
       " m": -0.48085853
      },
      {
       "op": -0.0001758016
      },
      {
       "\n": -0.43557546
      },
      {
       " find": -0.8621508
      },
      {
       "('": -0.0014496952
      },
      {
       "mop": -0.003323853
      },
      {
       "_": -0.60652107
      },
      {
       "\n": -0.0055539
      },
      {
       " grab": -0.21006744
      },
      {
       "('": -0.0011652457
      },
      {
       "mop": -0.00041315737
      },
      {
       "')": -0.0028934204
      },
      {
       "\n": -0.004885287
      },
      {
       " #": -0.1321748
      },
      {
       "('": -0.0034469354
      },
      {
       "mop": -0.17518002
      },
      {
       "'": -0.0037837895
      },
      {
       " in": -0.022269964
      },
      {
       " '": -0.00550697
      },
      {
       "hands": -0.012800279
      },
      {
       "')": -0.016318638
      },
      {
       "\n": -0.004529799
      },
      {
       " else": -0.022448188
      },
      {
       ":": -0.004455138
      },
      {
       " grab": -0.03387298
      },
      {
       "('": -0.0019911826
      },
      {
       "mop": -0.0004946726
      },
      {
       "')": -0.0033949031
      },
      {
       "\n": -0.0053328755
      },
      {
       " #": -0.15745749
      },
      {
       " 3": -0.008781573
      },
      {
       ":": -0.0014961967
      },
      {
       " wipe": -1.7377894
      },
      {
       " the": -0.24140632
      },
      {
       " toilet": -0.03658481
      },
      {
       "\n": -0.16440287
      },
      {
       " tur": -0.8286369
      },
      {
       "nt": -7.136165e-05
      },
      {
       "o": -0.00022158712
      },
      {
       "('": -0.00055639644
      },
      {
       "to": -0.0054200096
      },
      {
       "ilet": -0.00016852893
      },
      {
       "')": -0.0010429798
      },
      {
       "\n": -0.004451486
      },
      {
       " look": -0.828756
      },
      {
       "at": -0.00082551886
      },
      {
       "('": -0.0005013521
      },
      {
       "to": -0.000884698
      },
      {
       "ilet": -3.881579e-05
      },
      {
       "')": -0.001363742
      },
      {
       "\n": -0.003766319
      },
      {
       " wipe": -0.43011144
      },
      {
       "('": -0.0012602521
      },
      {
       "to": -0.01152946
      },
      {
       "ilet": -0.0006156178
      },
      {
       "')": -0.006654943
      },
      {
       "\n": -0.011450353
      },
      {
       " #": -0.06764396
      },
      {
       " 4": -0.008872192
      },
      {
       ":": -0.0015770249
      },
      {
       " put": -0.56806004
      },
      {
       " m": -0.74442065
      },
      {
       " m": -0.0018342396
      },
      {
       "op": -0.00012715602
      },
      {
       " back": -0.047097888
      },
      {
       "\n": -0.02447554
      },
      {
       " assert": -0.71613723
      },
      {
       "obj": -0.49905026
      },
      {
       "('": -0.0037749952
      },
      {
       "mop": -0.002752652
      },
      {
       "')": -0.014246525
      }
     ],
     "text_offset": [
      3345,
      3347,
      3349,
      3350,
      3355,
      3360,
      3369,
      3370,
      3375,
      3377,
      3381,
      3385,
      3387,
      3388,
      3390,
      3392,
      3393,
      3398,
      3405,
      3406,
      3411,
      3413,
      3415,
      3419,
      3421,
      3422,
      3424,
      3426,
      3427,
      3432,
      3434,
      3436,
      3438,
      3439,
      3444,
      3446,
      3449,
      3451,
      3452,
      3457,
      3459,
      3462,
      3464,
      3465,
      3472,
      3474,
      3477,
      3478,
      3481,
      3483,
      3488,
      3490,
      3491,
      3496,
      3497,
      3502,
      3504,
      3507,
      3509,
      3510,
      3512,
      3514,
      3515,
      3520,
      3524,
      3531,
      3532,
      3536,
      3538,
      3539,
      3541,
      3543,
      3547,
      3549,
      3550,
      3555,
      3557,
      3559,
      3561,
      3565,
      3567,
      3568,
      3573,
      3575,
      3577,
      3581,
      3583,
      3584,
      3586,
      3588,
      3589,
      3593,
      3597,
      3599,
      3601,
      3606,
      3607,
      3611,
      3615,
      3617,
      3620
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Clean toilet",
   "task_description": "Use the toilet bowl cleaner and squeeze it around the inside of toilet bowl. Let it sit in there while you clean the rest of the toilet. Spray the all purpose cleaner on top of toilet, sides, bottom, and on and under the seat and lid. Wipe down toilet with paper towels on all the areas you sprayed the cleaner. Now using the toilet brush, scrub the inside bowl around completely in all areas.",
   "program": [
    "[Find] <brush> (1)",
    "[TurnTo] <brush> (1)",
    "[PointAt] <brush> (1)",
    "[Wash] <brush> (1)",
    "[TurnTo] <brush> (1)",
    "[LookAt] <brush> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_turk_robot",
   "file_id": "split67_2",
   "goal_condition": [
    [
     [
      240,
      1000,
      "FACING",
      "character",
      "brush"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1172,
   "completion_tokens": 101,
   "total_tokens": 1273
  }
 },
 "1": {
  "plan": [
   [
    " # 0: find monitor\n find('monitor')\n # 1: grab cloth\n find('cloth')\n grab('cloth')\n # 2: wipe the monitor\n assert('close' to 'monitor')\n else: find('monitor')\n wipe('monitor')\n # 3: put the cloth back\n putobjback('cloth')\n # 4: Done\ndef clean_room():\n # 0: walk to bedroom\n walk('bedroom')\n # 1: find bed\n find('bed')\n # 2: make bed\n pull('sheets')\n pull('pillow')\n turnto('bed')\n lookat('bed')\n # 3: find vacuum\n find('vacuum')\n # 4: vacuum the floor\n plug('vacuum')\n turnto('vacuum')\n lookat('vacuum')\n vacuum('floor')\n # 5: find mop\n find('mop')\n # 6: mop the floor\n wash('floor')\n # 7: find dustpan\n find('dustpan')\n # 8: sweep the floor\n sweep('floor')\n # 9: find trash can\n find('trash_can')\n # 10: throw away trash\n throwaway('trash')\n # 11: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " monitor",
      "\n",
      " find",
      "('",
      "monitor",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " grab",
      " cloth",
      "\n",
      " find",
      "('",
      "cloth",
      "')",
      "\n",
      " grab",
      "('",
      "cloth",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " wipe",
      " the",
      " monitor",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "monitor",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "monitor",
      "')",
      "\n",
      " wipe",
      "('",
      "monitor",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " put",
      " the",
      " cloth",
      " back",
      "\n",
      " put",
      "obj",
      "back",
      "('",
      "cloth",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " Done",
      "\n",
      "def",
      " clean",
      "_",
      "room",
      "():",
      "\n",
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " bedroom",
      "\n",
      " walk",
      "('",
      "bedroom",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " bed",
      "\n",
      " find",
      "('",
      "bed",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " make",
      " bed",
      "\n",
      " pull",
      "('",
      "sheets",
      "')",
      "\n",
      " pull",
      "('",
      "pill",
      "ow",
      "')",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "bed",
      "')",
      "\n",
      " look",
      "at",
      "('",
      "bed",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " find",
      " vacuum",
      "\n",
      " find",
      "('",
      "v",
      "ac",
      "uum",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " vacuum",
      " the",
      " floor",
      "\n",
      " plug",
      "('",
      "v",
      "ac",
      "uum",
      "')",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "v",
      "ac",
      "uum",
      "')",
      "\n",
      " look",
      "at",
      "('",
      "v",
      "ac",
      "uum",
      "')",
      "\n",
      " vacuum",
      "('",
      "floor",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " find",
      " m",
      "op",
      "\n",
      " find",
      "('",
      "mop",
      "')",
      "\n",
      " #",
      " 6",
      ":",
      " m",
      "op",
      " the",
      " floor",
      "\n",
      " wash",
      "('",
      "floor",
      "')",
      "\n",
      " #",
      " 7",
      ":",
      " find",
      " dust",
      "pan",
      "\n",
      " find",
      "('",
      "dust",
      "pan",
      "')",
      "\n",
      " #",
      " 8",
      ":",
      " sweep",
      " the",
      " floor",
      "\n",
      " sweep",
      "('",
      "floor",
      "')",
      "\n",
      " #",
      " 9",
      ":",
      " find",
      " trash",
      " can",
      "\n",
      " find",
      "('",
      "tr",
      "ash",
      "_",
      "can",
      "')",
      "\n",
      " #",
      " 10",
      ":",
      " throw",
      " away",
      " trash",
      "\n",
      " throw",
      "away",
      "('",
      "tr",
      "ash",
      "')",
      "\n",
      " #",
      " 11",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.025848664,
      -0.009016708,
      -0.0024470973,
      -0.43529263,
      -0.35551617,
      -0.024713602,
      -0.037178457,
      -0.0019322382,
      -0.053910494,
      -0.0036683232,
      -0.006935674,
      -0.0027417168,
      -0.0029018493,
      -0.00090140215,
      -0.39801368,
      -0.8836634,
      -0.072829075,
      -0.7750866,
      -0.0011495523,
      -0.016795857,
      -0.0025676226,
      -0.0062161204,
      -0.12812017,
      -0.0009894016,
      -0.0011731237,
      -0.0016265763,
      -0.0049907696,
      -0.18707088,
      -0.0076077543,
      -0.001148838,
      -0.7613512,
      -1.028441,
      -0.06191804,
      -0.10980333,
      -0.52033436,
      -0.0018304202,
      -0.28287306,
      -0.005102855,
      -0.0008044011,
      -0.0021782557,
      -0.016797798,
      -0.013117772,
      -0.0050922506,
      -0.0021200152,
      -0.0017648564,
      -0.0048432993,
      -0.0015700395,
      -0.0014925548,
      -0.0028895943,
      -0.004803769,
      -0.22120008,
      -0.0013081167,
      -0.14454725,
      -0.05677829,
      -0.013987125,
      -0.60219663,
      -0.008845131,
      -0.0015296832,
      -0.6603121,
      -1.0012372,
      -0.008590257,
      -0.06541905,
      -0.022610713,
      -1.0470989,
      -0.7160025,
      -0.006403263,
      -0.0017201925,
      -0.007053319,
      -0.0041110585,
      -0.31808057,
      -0.035994977,
      -0.0066107824,
      -0.002235962,
      -0.2638824,
      -1.1194781,
      -0.30647442,
      -2.5480983,
      -0.0008484867,
      -1.6086951,
      -0.026209606,
      -0.016461931,
      -0.0075583877,
      -0.008355941,
      -0.0030613486,
      -0.9955977,
      -0.45778626,
      -0.30137625,
      -0.02338926,
      -0.0046559665,
      -0.0031718444,
      -0.0020472042,
      -0.0014305355,
      -0.009067232,
      -0.0030526798,
      -0.003859299,
      -0.0007042508,
      -0.20940237,
      -1.4800084,
      -0.035430074,
      -0.4834632,
      -0.0007636599,
      -0.00040665813,
      -0.0016223975,
      -0.0050270124,
      -0.017211635,
      -0.002639098,
      -0.0012188359,
      -0.26579356,
      -0.47255358,
      -0.021720253,
      -0.8952863,
      -0.006996535,
      -1.6430048,
      -0.0053193946,
      -0.009274581,
      -1.2465496,
      -0.0015035991,
      -0.100440845,
      -0.15070526,
      -0.0083384495,
      -0.008613641,
      -4.601516,
      -6.921402e-05,
      -0.0012220555,
      -0.00065599853,
      -0.23827773,
      -0.0020691864,
      -0.005119331,
      -0.8379254,
      -0.00085278286,
      -0.00047147667,
      -0.0021077716,
      -0.0011677528,
      -0.0051933248,
      -0.35181442,
      -0.0072253095,
      -0.0008844586,
      -0.39665112,
      -3.1346338,
      -0.64291435,
      -0.10836471,
      -0.0008642354,
      -0.0037603963,
      -4.9782993e-05,
      -0.00078525353,
      -0.005933911,
      -0.0044477754,
      -0.120184325,
      -0.0032764315,
      -0.00087980577,
      -0.31564078,
      -0.3312707,
      -0.60842246,
      -0.012261842,
      -3.7868364,
      -0.37692633,
      -0.0026867897,
      -0.00051971956,
      -0.00041494548,
      -0.0076812105,
      -0.0065772426,
      -3.5120034,
      -9.234426e-05,
      -0.0016171437,
      -0.0006114436,
      -0.22305167,
      -6.909574e-05,
      -0.00064359145,
      -0.0022801077,
      -0.0040220045,
      -0.41313487,
      -0.0007693875,
      -0.00068313396,
      -0.0015621595,
      -9.115311e-05,
      -0.00023690966,
      -0.0021244946,
      -0.00416211,
      -1.3366407,
      -0.08777844,
      -0.07208809,
      -0.0012906296,
      -0.0091758035,
      -0.17963624,
      -0.0051615085,
      -0.0013315736,
      -0.8320166,
      -1.3275164,
      -0.00021586417,
      -0.12283629,
      -0.008743632,
      -0.00095951214,
      -0.00030046387,
      -0.011496236,
      -0.003927214,
      -0.022635652,
      -0.0030125028,
      -0.00084144867,
      -0.014661789,
      -0.00017186676,
      -0.03135217,
      -0.0036269834,
      -0.008895464,
      -4.4510736,
      -0.002284709,
      -0.31774047,
      -0.0046298592,
      -0.010240678,
      -0.16349375,
      -0.0065065664,
      -0.0010352256,
      -0.81709415,
      -0.49658293,
      -0.6537877,
      -0.049237367,
      -0.0045144726,
      -0.0013845743,
      -0.0024594676,
      -0.0024797819,
      -0.0030921411,
      -0.0031393163,
      -0.0056339167,
      -0.0012652673,
      -0.0010737103,
      -0.31610608,
      -0.09092373,
      -0.043982927,
      -0.010349618,
      -0.0543537,
      -0.0023577753,
      -0.002052759,
      -0.0039713182,
      -0.0064895307,
      -0.021012878,
      -0.0038041917,
      -0.0018306596,
      -0.95817035,
      -0.28533563,
      -1.0015848,
      -0.013915561,
      -0.004658421,
      -0.0013151594,
      -0.00065671286,
      -0.00041220273,
      -0.7412167,
      -0.0009002092,
      -0.0019302672,
      -0.0038378178,
      -0.0028988598,
      -0.008299926,
      -0.00074188696,
      -0.97305447,
      -0.5975219,
      -0.6989739,
      -0.013775653,
      -0.5374018,
      -1.0902523,
      -0.005697698,
      -0.0021930092,
      -0.00019118235,
      -0.022419903,
      -0.013752571,
      -0.006710508,
      -0.0040120105,
      -0.0024235577,
      -0.36361653
     ],
     "top_logprobs": [
      {
       " #": -0.025848664
      },
      {
       " 0": -0.009016708
      },
      {
       ":": -0.0024470973
      },
      {
       " find": -0.43529263
      },
      {
       " monitor": -0.35551617
      },
      {
       "\n": -0.024713602
      },
      {
       " find": -0.037178457
      },
      {
       "('": -0.0019322382
      },
      {
       "monitor": -0.053910494
      },
      {
       "')": -0.0036683232
      },
      {
       "\n": -0.006935674
      },
      {
       " #": -0.0027417168
      },
      {
       " 1": -0.0029018493
      },
      {
       ":": -0.00090140215
      },
      {
       " grab": -0.39801368
      },
      {
       " cloth": -0.8836634
      },
      {
       "\n": -0.072829075
      },
      {
       " find": -0.7750866
      },
      {
       "('": -0.0011495523
      },
      {
       "cloth": -0.016795857
      },
      {
       "')": -0.0025676226
      },
      {
       "\n": -0.0062161204
      },
      {
       " grab": -0.12812017
      },
      {
       "('": -0.0009894016
      },
      {
       "cloth": -0.0011731237
      },
      {
       "')": -0.0016265763
      },
      {
       "\n": -0.0049907696
      },
      {
       " #": -0.18707088
      },
      {
       " 2": -0.0076077543
      },
      {
       ":": -0.001148838
      },
      {
       " wipe": -0.7613512
      },
      {
       " monitor": -0.59294933
      },
      {
       " monitor": -0.06191804
      },
      {
       "\n": -0.10980333
      },
      {
       " assert": -0.52033436
      },
      {
       "('": -0.0018304202
      },
      {
       "close": -0.28287306
      },
      {
       "'": -0.005102855
      },
      {
       " to": -0.0008044011
      },
      {
       " '": -0.0021782557
      },
      {
       "monitor": -0.016797798
      },
      {
       "')": -0.013117772
      },
      {
       "\n": -0.0050922506
      },
      {
       " else": -0.0021200152
      },
      {
       ":": -0.0017648564
      },
      {
       " find": -0.0048432993
      },
      {
       "('": -0.0015700395
      },
      {
       "monitor": -0.0014925548
      },
      {
       "')": -0.0028895943
      },
      {
       "\n": -0.004803769
      },
      {
       " wipe": -0.22120008
      },
      {
       "('": -0.0013081167
      },
      {
       "monitor": -0.14454725
      },
      {
       "')": -0.05677829
      },
      {
       "\n": -0.013987125
      },
      {
       " #": -0.60219663
      },
      {
       " 3": -0.008845131
      },
      {
       ":": -0.0015296832
      },
      {
       " put": -0.6603121
      },
      {
       " cloth": -0.8927242
      },
      {
       " cloth": -0.008590257
      },
      {
       " back": -0.06541905
      },
      {
       "\n": -0.022610713
      },
      {
       " assert": -0.48962003
      },
      {
       "obj": -0.7160025
      },
      {
       "back": -0.006403263
      },
      {
       "('": -0.0017201925
      },
      {
       "cloth": -0.007053319
      },
      {
       "')": -0.0041110585
      },
      {
       "\n": -0.31808057
      },
      {
       " #": -0.035994977
      },
      {
       " 4": -0.0066107824
      },
      {
       ":": -0.002235962
      },
      {
       " Done": -0.2638824
      },
      {
       "<|endoftext|>": -0.43593773
      },
      {
       "def": -0.30647442
      },
      {
       " make": -1.3371876
      },
      {
       "_": -0.0008484867
      },
      {
       "room": -1.6086951
      },
      {
       "():": -0.026209606
      },
      {
       "\n": -0.016461931
      },
      {
       " #": -0.0075583877
      },
      {
       " 0": -0.008355941
      },
      {
       ":": -0.0030613486
      },
      {
       " find": -0.9755581
      },
      {
       " to": -0.45778626
      },
      {
       " bedroom": -0.30137625
      },
      {
       "\n": -0.02338926
      },
      {
       " walk": -0.0046559665
      },
      {
       "('": -0.0031718444
      },
      {
       "bedroom": -0.0020472042
      },
      {
       "')": -0.0014305355
      },
      {
       "\n": -0.009067232
      },
      {
       " #": -0.0030526798
      },
      {
       " 1": -0.003859299
      },
      {
       ":": -0.0007042508
      },
      {
       " find": -0.20940237
      },
      {
       " dust": -1.168254
      },
      {
       "\n": -0.035430074
      },
      {
       " find": -0.4834632
      },
      {
       "('": -0.0007636599
      },
      {
       "bed": -0.00040665813
      },
      {
       "')": -0.0016223975
      },
      {
       "\n": -0.0050270124
      },
      {
       " #": -0.017211635
      },
      {
       " 2": -0.002639098
      },
      {
       ":": -0.0012188359
      },
      {
       " make": -0.26579356
      },
      {
       " bed": -0.47255358
      },
      {
       "\n": -0.021720253
      },
      {
       " pull": -0.8952863
      },
      {
       "('": -0.006996535
      },
      {
       "bed": -0.3839736
      },
      {
       "')": -0.0053193946
      },
      {
       "\n": -0.009274581
      },
      {
       " push": -1.205675
      },
      {
       "('": -0.0015035991
      },
      {
       "pill": -0.100440845
      },
      {
       "ow": -0.15070526
      },
      {
       "')": -0.0083384495
      },
      {
       "\n": -0.008613641
      },
      {
       " #": -1.0530361
      },
      {
       "nt": -6.921402e-05
      },
      {
       "o": -0.0012220555
      },
      {
       "('": -0.00065599853
      },
      {
       "bed": -0.23827773
      },
      {
       "')": -0.0020691864
      },
      {
       "\n": -0.005119331
      },
      {
       " look": -0.8379254
      },
      {
       "at": -0.00085278286
      },
      {
       "('": -0.00047147667
      },
      {
       "bed": -0.0021077716
      },
      {
       "')": -0.0011677528
      },
      {
       "\n": -0.0051933248
      },
      {
       " #": -0.35181442
      },
      {
       " 3": -0.0072253095
      },
      {
       ":": -0.0008844586
      },
      {
       " find": -0.39665112
      },
      {
       " dust": -1.0970688
      },
      {
       "\n": -0.64291435
      },
      {
       " find": -0.10836471
      },
      {
       "('": -0.0008642354
      },
      {
       "v": -0.0037603963
      },
      {
       "ac": -4.9782993e-05
      },
      {
       "uum": -0.00078525353
      },
      {
       "')": -0.005933911
      },
      {
       "\n": -0.0044477754
      },
      {
       " #": -0.120184325
      },
      {
       " 4": -0.0032764315
      },
      {
       ":": -0.00087980577
      },
      {
       " vacuum": -0.31564078
      },
      {
       " the": -0.3312707
      },
      {
       " floor": -0.60842246
      },
      {
       "\n": -0.012261842
      },
      {
       " assert": -0.57934755
      },
      {
       "('": -0.37692633
      },
      {
       "v": -0.0026867897
      },
      {
       "ac": -0.00051971956
      },
      {
       "uum": -0.00041494548
      },
      {
       "')": -0.0076812105
      },
      {
       "\n": -0.0065772426
      },
      {
       " push": -1.5501944
      },
      {
       "nt": -9.234426e-05
      },
      {
       "o": -0.0016171437
      },
      {
       "('": -0.0006114436
      },
      {
       "v": -0.22305167
      },
      {
       "ac": -6.909574e-05
      },
      {
       "uum": -0.00064359145
      },
      {
       "')": -0.0022801077
      },
      {
       "\n": -0.0040220045
      },
      {
       " look": -0.41313487
      },
      {
       "at": -0.0007693875
      },
      {
       "('": -0.00068313396
      },
      {
       "v": -0.0015621595
      },
      {
       "ac": -9.115311e-05
      },
      {
       "uum": -0.00023690966
      },
      {
       "')": -0.0021244946
      },
      {
       "\n": -0.00416211
      },
      {
       " assert": -1.2305272
      },
      {
       "('": -0.08777844
      },
      {
       "floor": -0.07208809
      },
      {
       "')": -0.0012906296
      },
      {
       "\n": -0.0091758035
      },
      {
       " #": -0.17963624
      },
      {
       " 5": -0.0051615085
      },
      {
       ":": -0.0013315736
      },
      {
       " find": -0.8320166
      },
      {
       " dust": -0.89281446
      },
      {
       "op": -0.00021586417
      },
      {
       "\n": -0.12283629
      },
      {
       " find": -0.008743632
      },
      {
       "('": -0.00095951214
      },
      {
       "mop": -0.00030046387
      },
      {
       "')": -0.011496236
      },
      {
       "\n": -0.003927214
      },
      {
       " #": -0.022635652
      },
      {
       " 6": -0.0030125028
      },
      {
       ":": -0.00084144867
      },
      {
       " m": -0.014661789
      },
      {
       "op": -0.00017186676
      },
      {
       " the": -0.03135217
      },
      {
       " floor": -0.0036269834
      },
      {
       "\n": -0.008895464
      },
      {
       " m": -1.4344931
      },
      {
       "('": -0.002284709
      },
      {
       "floor": -0.31774047
      },
      {
       "')": -0.0046298592
      },
      {
       "\n": -0.010240678
      },
      {
       " #": -0.16349375
      },
      {
       " 7": -0.0065065664
      },
      {
       ":": -0.0010352256
      },
      {
       " find": -0.81709415
      },
      {
       " dust": -0.49658293
      },
      {
       "pan": -0.6537877
      },
      {
       "\n": -0.049237367
      },
      {
       " find": -0.0045144726
      },
      {
       "('": -0.0013845743
      },
      {
       "dust": -0.0024594676
      },
      {
       "pan": -0.0024797819
      },
      {
       "')": -0.0030921411
      },
      {
       "\n": -0.0031393163
      },
      {
       " #": -0.0056339167
      },
      {
       " 8": -0.0012652673
      },
      {
       ":": -0.0010737103
      },
      {
       " sweep": -0.31610608
      },
      {
       " the": -0.09092373
      },
      {
       " floor": -0.043982927
      },
      {
       "\n": -0.010349618
      },
      {
       " sweep": -0.0543537
      },
      {
       "('": -0.0023577753
      },
      {
       "floor": -0.002052759
      },
      {
       "')": -0.0039713182
      },
      {
       "\n": -0.0064895307
      },
      {
       " #": -0.021012878
      },
      {
       " 9": -0.0038041917
      },
      {
       ":": -0.0018306596
      },
      {
       " find": -0.95817035
      },
      {
       " trash": -0.28533563
      },
      {
       "can": -0.5968862
      },
      {
       "\n": -0.013915561
      },
      {
       " find": -0.004658421
      },
      {
       "('": -0.0013151594
      },
      {
       "tr": -0.00065671286
      },
      {
       "ash": -0.00041220273
      },
      {
       "can": -0.69705397
      },
      {
       "can": -0.0009002092
      },
      {
       "')": -0.0019302672
      },
      {
       "\n": -0.0038378178
      },
      {
       " #": -0.0028988598
      },
      {
       " 10": -0.008299926
      },
      {
       ":": -0.00074188696
      },
      {
       " throw": -0.97305447
      },
      {
       " away": -0.5975219
      },
      {
       " trash": -0.6989739
      },
      {
       "\n": -0.013775653
      },
      {
       " throw": -0.5374018
      },
      {
       "('": -0.49891308
      },
      {
       "('": -0.005697698
      },
      {
       "tr": -0.0021930092
      },
      {
       "ash": -0.00019118235
      },
      {
       "')": -0.022419903
      },
      {
       "\n": -0.013752571
      },
      {
       " #": -0.006710508
      },
      {
       " 11": -0.0040120105
      },
      {
       ":": -0.0024235577
      },
      {
       " Done": -0.36361653
      }
     ],
     "text_offset": [
      3345,
      3347,
      3349,
      3350,
      3355,
      3363,
      3364,
      3369,
      3371,
      3378,
      3380,
      3381,
      3383,
      3385,
      3386,
      3391,
      3397,
      3398,
      3403,
      3405,
      3410,
      3412,
      3413,
      3418,
      3420,
      3425,
      3427,
      3428,
      3430,
      3432,
      3433,
      3438,
      3442,
      3450,
      3451,
      3458,
      3460,
      3465,
      3466,
      3469,
      3471,
      3478,
      3480,
      3481,
      3486,
      3487,
      3492,
      3494,
      3501,
      3503,
      3504,
      3509,
      3511,
      3518,
      3520,
      3521,
      3523,
      3525,
      3526,
      3530,
      3534,
      3540,
      3545,
      3546,
      3550,
      3553,
      3557,
      3559,
      3564,
      3566,
      3567,
      3569,
      3571,
      3572,
      3577,
      3578,
      3581,
      3587,
      3588,
      3592,
      3595,
      3596,
      3598,
      3600,
      3601,
      3606,
      3609,
      3617,
      3618,
      3623,
      3625,
      3632,
      3634,
      3635,
      3637,
      3639,
      3640,
      3645,
      3649,
      3650,
      3655,
      3657,
      3660,
      3662,
      3663,
      3665,
      3667,
      3668,
      3673,
      3677,
      3678,
      3683,
      3685,
      3691,
      3693,
      3694,
      3699,
      3701,
      3705,
      3707,
      3709,
      3710,
      3714,
      3716,
      3717,
      3719,
      3722,
      3724,
      3725,
      3730,
      3732,
      3734,
      3737,
      3739,
      3740,
      3742,
      3744,
      3745,
      3750,
      3757,
      3758,
      3763,
      3765,
      3766,
      3768,
      3771,
      3773,
      3774,
      3776,
      3778,
      3779,
      3786,
      3790,
      3796,
      3797,
      3802,
      3804,
      3805,
      3807,
      3810,
      3812,
      3813,
      3817,
      3819,
      3820,
      3822,
      3823,
      3825,
      3828,
      3830,
      3831,
      3836,
      3838,
      3840,
      3841,
      3843,
      3846,
      3848,
      3849,
      3856,
      3858,
      3863,
      3865,
      3866,
      3868,
      3870,
      3871,
      3876,
      3878,
      3880,
      3881,
      3886,
      3888,
      3891,
      3893,
      3894,
      3896,
      3898,
      3899,
      3901,
      3903,
      3907,
      3913,
      3914,
      3919,
      3921,
      3926,
      3928,
      3929,
      3931,
      3933,
      3934,
      3939,
      3944,
      3947,
      3948,
      3953,
      3955,
      3959,
      3962,
      3964,
      3965,
      3967,
      3969,
      3970,
      3976,
      3980,
      3986,
      3987,
      3993,
      3995,
      4000,
      4002,
      4003,
      4005,
      4007,
      4008,
      4013,
      4019,
      4023,
      4024,
      4029,
      4031,
      4033,
      4036,
      4037,
      4040,
      4042,
      4043,
      4045,
      4048,
      4049,
      4055,
      4060,
      4066,
      4067,
      4073,
      4077,
      4079,
      4081,
      4084,
      4086,
      4087,
      4089,
      4092,
      4093
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Wash monitor",
   "task_description": "Clean the grime off of my monitor screen when not in use",
   "program": [
    "[Walk] <home_office> (1)",
    "[Walk] <computer> (1)",
    "[Find] <computer> (1)",
    "[TurnTo] <computer> (1)",
    "[LookAt] <computer> (1)",
    "[SwitchOff] <computer> (1)",
    "[Find] <brush> (1)",
    "[TurnTo] <brush> (1)",
    "[LookAt] <brush> (1)",
    "[Grab] <brush> (1)",
    "[Wipe] <computer> (1)",
    "[Drop] <brush> (1)",
    "[Find] <napkin> (1)",
    "[Grab] <napkin> (1)",
    "[Wash] <napkin> (1)",
    "[Wipe] <computer> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_turk_robot",
   "file_id": "split16_2",
   "goal_condition": [
    [
     [
      240,
      241,
      "INSIDE",
      "character",
      "home_office"
     ],
     [
      240,
      1001,
      "HOLDS_RH",
      "character",
      "napkin"
     ]
    ],
    [
     [
      276,
      "computer",
      "OFF"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1171,
   "completion_tokens": 266,
   "total_tokens": 1437
  }
 },
 "2": {
  "plan": [
   [
    " # 0: find the remote control\n find('remote_control')\n # 1: find television\n find('television')\n # 2: turn on tv with remote control\n assert('close' to 'tv')\n else: find('tv')\n assert('remote_control' in 'hands'):\n else: find('remote_control')\n assert('tv' is 'switchoff')\n else: switchoff('tv')\n switchon('television')\n # 3: look at the television\n turnto('television')\n lookat('television')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " the",
      " remote",
      " control",
      "\n",
      " find",
      "('",
      "remote",
      "_",
      "control",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " television",
      "\n",
      " find",
      "('",
      "te",
      "levision",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " turn",
      " on",
      " tv",
      " with",
      " remote",
      " control",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "tv",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "tv",
      "')",
      "\n",
      " assert",
      "('",
      "remote",
      "_",
      "control",
      "'",
      " in",
      " '",
      "hands",
      "'",
      "):",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "remote",
      "_",
      "control",
      "')",
      "\n",
      " assert",
      "('",
      "tv",
      "'",
      " is",
      " '",
      "switch",
      "off",
      "')",
      "\n",
      " else",
      ":",
      " switch",
      "off",
      "('",
      "tv",
      "')",
      "\n",
      " switch",
      "on",
      "('",
      "te",
      "levision",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " look",
      " at",
      " the",
      " television",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "te",
      "levision",
      "')",
      "\n",
      " look",
      "at",
      "('",
      "te",
      "levision",
      "')"
     ],
     "token_logprobs": [
      -0.015311786,
      -0.008390741,
      -0.0015365494,
      -1.2509737,
      -1.0047041,
      -0.13118237,
      -0.048220593,
      -0.0113209775,
      -0.0075759245,
      -0.0012060065,
      -0.0012822766,
      -0.0029334736,
      -0.0006317222,
      -0.002102513,
      -0.003950731,
      -0.0016598898,
      -0.0019578561,
      -0.00022361554,
      -0.027913587,
      -0.081745,
      -0.0035136882,
      -0.004861448,
      -0.00027387374,
      -0.0024151935,
      -0.00013800588,
      -0.0014993001,
      -0.0022970166,
      -0.0009929797,
      -0.002770106,
      -0.00020310696,
      -0.024753189,
      -0.0021662475,
      -0.033883337,
      -0.009191385,
      -0.0019193985,
      -0.0035051343,
      -0.0019649626,
      -0.01076116,
      -0.00033158858,
      -0.0048132944,
      -0.0011206109,
      -0.00028353152,
      -0.0005828758,
      -0.009577473,
      -0.0018790873,
      -0.0018691751,
      -0.00051626156,
      -0.00041327655,
      -0.00075924635,
      -0.00031858825,
      -0.00037254943,
      -0.0010583155,
      -0.0014970293,
      -0.024265075,
      -0.00016566887,
      -0.0003133412,
      -0.00036694473,
      -0.00026552632,
      -0.00040129185,
      -0.00086495065,
      -0.00062671263,
      -0.000861609,
      -0.12620616,
      -0.00081979216,
      -0.0012991048,
      -0.00038853093,
      -0.00019607085,
      -0.0013262617,
      -0.00045048565,
      -0.00019499795,
      -9.771052e-05,
      -0.0002131233,
      -0.0004988487,
      -0.0011519402,
      -0.2606379,
      -0.00011690406,
      -0.0005651034,
      -0.0003233585,
      -0.00028651362,
      -0.0006543287,
      -0.0017134446,
      -0.0011926383,
      -0.0012364413,
      -0.0008604169,
      -0.0011030084,
      -0.00019118235,
      -0.00017055642,
      -0.00038650344,
      -0.00019487782,
      -0.00013323847,
      -0.0009349317,
      -0.0014561428,
      -0.0005982039,
      -7.922942e-05,
      -0.00014718683,
      -0.0016143982,
      -0.0005790592,
      -0.0014378766,
      -0.14220957,
      -0.02292706,
      -0.009137064,
      -0.0006242074,
      -0.74350494,
      -0.0014397867,
      -0.027470795,
      -0.006119442,
      -0.003979153,
      -0.01193262,
      -2.7371756e-05,
      -0.0002058497,
      -0.00018772435,
      -0.0006666147,
      -0.00018188405,
      -0.0008823119,
      -0.002377134,
      -0.0013713825,
      -7.350647e-05,
      -0.0004175709,
      -0.0003016569,
      -0.00010557923,
      -0.0019535597
     ],
     "top_logprobs": [
      {
       " #": -0.015311786
      },
      {
       " 0": -0.008390741
      },
      {
       ":": -0.0015365494
      },
      {
       " walk": -0.41678515
      },
      {
       " the": -1.0047041
      },
      {
       " remote": -0.13118237
      },
      {
       " control": -0.048220593
      },
      {
       "\n": -0.0113209775
      },
      {
       " find": -0.0075759245
      },
      {
       "('": -0.0012060065
      },
      {
       "remote": -0.0012822766
      },
      {
       "_": -0.0029334736
      },
      {
       "control": -0.0006317222
      },
      {
       "')": -0.002102513
      },
      {
       "\n": -0.003950731
      },
      {
       " #": -0.0016598898
      },
      {
       " 1": -0.0019578561
      },
      {
       ":": -0.00022361554
      },
      {
       " find": -0.027913587
      },
      {
       " television": -0.081745
      },
      {
       "\n": -0.0035136882
      },
      {
       " find": -0.004861448
      },
      {
       "('": -0.00027387374
      },
      {
       "te": -0.0024151935
      },
      {
       "levision": -0.00013800588
      },
      {
       "')": -0.0014993001
      },
      {
       "\n": -0.0022970166
      },
      {
       " #": -0.0009929797
      },
      {
       " 2": -0.002770106
      },
      {
       ":": -0.00020310696
      },
      {
       " turn": -0.024753189
      },
      {
       " on": -0.0021662475
      },
      {
       " tv": -0.033883337
      },
      {
       " with": -0.009191385
      },
      {
       " remote": -0.0019193985
      },
      {
       " control": -0.0035051343
      },
      {
       "\n": -0.0019649626
      },
      {
       " assert": -0.01076116
      },
      {
       "('": -0.00033158858
      },
      {
       "close": -0.0048132944
      },
      {
       "'": -0.0011206109
      },
      {
       " to": -0.00028353152
      },
      {
       " '": -0.0005828758
      },
      {
       "tv": -0.009577473
      },
      {
       "')": -0.0018790873
      },
      {
       "\n": -0.0018691751
      },
      {
       " else": -0.00051626156
      },
      {
       ":": -0.00041327655
      },
      {
       " find": -0.00075924635
      },
      {
       "('": -0.00031858825
      },
      {
       "tv": -0.00037254943
      },
      {
       "')": -0.0010583155
      },
      {
       "\n": -0.0014970293
      },
      {
       " assert": -0.024265075
      },
      {
       "('": -0.00016566887
      },
      {
       "remote": -0.0003133412
      },
      {
       "_": -0.00036694473
      },
      {
       "control": -0.00026552632
      },
      {
       "'": -0.00040129185
      },
      {
       " in": -0.00086495065
      },
      {
       " '": -0.00062671263
      },
      {
       "hands": -0.000861609
      },
      {
       "'": -0.12620616
      },
      {
       "):": -0.00081979216
      },
      {
       "\n": -0.0012991048
      },
      {
       " else": -0.00038853093
      },
      {
       ":": -0.00019607085
      },
      {
       " find": -0.0013262617
      },
      {
       "('": -0.00045048565
      },
      {
       "remote": -0.00019499795
      },
      {
       "_": -9.771052e-05
      },
      {
       "control": -0.0002131233
      },
      {
       "')": -0.0004988487
      },
      {
       "\n": -0.0011519402
      },
      {
       " assert": -0.2606379
      },
      {
       "('": -0.00011690406
      },
      {
       "tv": -0.0005651034
      },
      {
       "'": -0.0003233585
      },
      {
       " is": -0.00028651362
      },
      {
       " '": -0.0006543287
      },
      {
       "switch": -0.0017134446
      },
      {
       "off": -0.0011926383
      },
      {
       "')": -0.0012364413
      },
      {
       "\n": -0.0008604169
      },
      {
       " else": -0.0011030084
      },
      {
       ":": -0.00019118235
      },
      {
       " switch": -0.00017055642
      },
      {
       "off": -0.00038650344
      },
      {
       "('": -0.00019487782
      },
      {
       "tv": -0.00013323847
      },
      {
       "')": -0.0009349317
      },
      {
       "\n": -0.0014561428
      },
      {
       " switch": -0.0005982039
      },
      {
       "on": -7.922942e-05
      },
      {
       "('": -0.00014718683
      },
      {
       "te": -0.0016143982
      },
      {
       "levision": -0.0005790592
      },
      {
       "')": -0.0014378766
      },
      {
       "\n": -0.14220957
      },
      {
       " #": -0.02292706
      },
      {
       " 3": -0.009137064
      },
      {
       ":": -0.0006242074
      },
      {
       " look": -0.74350494
      },
      {
       " at": -0.0014397867
      },
      {
       " the": -0.027470795
      },
      {
       " television": -0.006119442
      },
      {
       "\n": -0.003979153
      },
      {
       " tur": -0.01193262
      },
      {
       "nt": -2.7371756e-05
      },
      {
       "o": -0.0002058497
      },
      {
       "('": -0.00018772435
      },
      {
       "te": -0.0006666147
      },
      {
       "levision": -0.00018188405
      },
      {
       "')": -0.0008823119
      },
      {
       "\n": -0.002377134
      },
      {
       " look": -0.0013713825
      },
      {
       "at": -7.350647e-05
      },
      {
       "('": -0.0004175709
      },
      {
       "te": -0.0003016569
      },
      {
       "levision": -0.00010557923
      },
      {
       "')": -0.0019535597
      }
     ],
     "text_offset": [
      3343,
      3345,
      3347,
      3348,
      3353,
      3357,
      3364,
      3372,
      3373,
      3378,
      3380,
      3386,
      3387,
      3394,
      3396,
      3397,
      3399,
      3401,
      3402,
      3407,
      3418,
      3419,
      3424,
      3426,
      3428,
      3436,
      3438,
      3439,
      3441,
      3443,
      3444,
      3449,
      3452,
      3455,
      3460,
      3467,
      3475,
      3476,
      3483,
      3485,
      3490,
      3491,
      3494,
      3496,
      3498,
      3500,
      3501,
      3506,
      3507,
      3512,
      3514,
      3516,
      3518,
      3519,
      3526,
      3528,
      3534,
      3535,
      3542,
      3543,
      3546,
      3548,
      3553,
      3554,
      3556,
      3557,
      3562,
      3563,
      3568,
      3570,
      3576,
      3577,
      3584,
      3586,
      3587,
      3594,
      3596,
      3598,
      3599,
      3602,
      3604,
      3610,
      3613,
      3615,
      3616,
      3621,
      3622,
      3629,
      3632,
      3634,
      3636,
      3638,
      3639,
      3646,
      3648,
      3650,
      3652,
      3660,
      3662,
      3663,
      3665,
      3667,
      3668,
      3673,
      3676,
      3680,
      3691,
      3692,
      3696,
      3698,
      3699,
      3701,
      3703,
      3711,
      3713,
      3714,
      3719,
      3721,
      3723,
      3725,
      3733
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Turn on TV",
   "task_description": "Sit in a chair.  Grab the remote control.  Point the remote at the television.  Press the power button.",
   "program": [
    "[Walk] <home_office> (1)",
    "[Walk] <chair> (1)",
    "[Find] <chair> (1)",
    "[Sit] <chair> (1)",
    "[Find] <remote_control> (1)",
    "[Grab] <remote_control> (1)",
    "[Find] <television> (1)",
    "[TurnTo] <television> (1)",
    "[PointAt] <television> (1)",
    "[SwitchOn] <television> (1)",
    "[PutObjBack] <remote_control> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_kellensecond",
   "file_id": "split5_9",
   "goal_condition": [
    [
     [
      240,
      241,
      "INSIDE",
      "character",
      "home_office"
     ],
     [
      240,
      281,
      "FACING",
      "character",
      "television"
     ],
     [
      240,
      271,
      "ON",
      "character",
      "chair"
     ]
    ],
    [
     [
      240,
      "character",
      "SITTING"
     ],
     [
      281,
      "television",
      "ON"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1173,
   "completion_tokens": 121,
   "total_tokens": 1294
  }
 },
 "3": {
  "plan": [
   [
    " # 0: walk to desk\n walk('desk')\n # 1: find computer\n find('computer')\n # 2: turn on computer\n assert('close' to 'computer')\n else: find('computer')\n plugin('computer')\n # 3: turn on monitor\n find('monitor')\n assert('close' to 'monitor')\n else: find('monitor')\n plugin('monitor')\n # 4: Done\ndef make_coffee():\n # 0: walk to kitchen\n walk('kitchen')\n # 1: find coffe maker\n find('coffe_maker')\n # 2: plug in the coffe maker\n assert('close' to 'coffe_maker')\n else: find('coffe_maker')\n plugin('coffe_maker')\n # 3: find filter\n find('coffee_filter')\n # 4: put filter in the coffe maker\n assert('close' to 'coffe_maker')\n else: find('coffe_maker')\n assert('close' to 'coffee_filter')\n else: find('coffee_filter')\n putin('coffee_filter', 'coffe_maker')\n # 5: pour water in the coffe maker\n assert('close' to 'coffe_maker')\n else: find('coffe_maker')\n pour('coffe_maker')\n # 6: turn on the coffe maker\n switchon('coffe_maker')\n # 7: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " desk",
      "\n",
      " walk",
      "('",
      "des",
      "k",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " computer",
      "\n",
      " find",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " turn",
      " on",
      " computer",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "computer",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "computer",
      "')",
      "\n",
      " plugin",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " turn",
      " on",
      " monitor",
      "\n",
      " find",
      "('",
      "monitor",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "monitor",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "monitor",
      "')",
      "\n",
      " plugin",
      "('",
      "monitor",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " Done",
      "\n",
      "def",
      " make",
      "_",
      "co",
      "ffee",
      "():",
      "\n",
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " kitchen",
      "\n",
      " walk",
      "('",
      "kit",
      "chen",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " co",
      "ffe",
      " maker",
      "\n",
      " find",
      "('",
      "co",
      "ffe",
      "_",
      "maker",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " plug",
      " in",
      " the",
      " co",
      "ffe",
      " maker",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "co",
      "ffe",
      "_",
      "maker",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "co",
      "ffe",
      "_",
      "maker",
      "')",
      "\n",
      " plugin",
      "('",
      "co",
      "ffe",
      "_",
      "maker",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " find",
      " filter",
      "\n",
      " find",
      "('",
      "co",
      "ffee",
      "_",
      "filter",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " put",
      " filter",
      " in",
      " the",
      " co",
      "ffe",
      " maker",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "co",
      "ffe",
      "_",
      "maker",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "co",
      "ffe",
      "_",
      "maker",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "co",
      "ffee",
      "_",
      "filter",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "co",
      "ffee",
      "_",
      "filter",
      "')",
      "\n",
      " put",
      "in",
      "('",
      "co",
      "ffee",
      "_",
      "filter",
      "',",
      " '",
      "co",
      "ffe",
      "_",
      "maker",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " pour",
      " water",
      " in",
      " the",
      " co",
      "ffe",
      " maker",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "co",
      "ffe",
      "_",
      "maker",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "co",
      "ffe",
      "_",
      "maker",
      "')",
      "\n",
      " pour",
      "('",
      "co",
      "ffe",
      "_",
      "maker",
      "')",
      "\n",
      " #",
      " 6",
      ":",
      " turn",
      " on",
      " the",
      " co",
      "ffe",
      " maker",
      "\n",
      " switch",
      "on",
      "('",
      "co",
      "ffe",
      "_",
      "maker",
      "')",
      "\n",
      " #",
      " 7",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.016480353,
      -0.008833344,
      -0.0017842611,
      -0.29112443,
      -0.1295982,
      -2.0305417,
      -0.022686316,
      -0.009489257,
      -0.003965093,
      -0.011376801,
      -0.0010873751,
      -0.001295046,
      -0.0069770883,
      -0.0056499215,
      -0.003046823,
      -0.0006020214,
      -0.06430373,
      -0.36647183,
      -0.02062971,
      -0.04425944,
      -0.0009536644,
      -0.0022304035,
      -0.0015773836,
      -0.0053861467,
      -0.005607006,
      -0.004200299,
      -0.0008117995,
      -0.4574967,
      -0.0176524,
      -0.6187078,
      -0.012589605,
      -0.3420668,
      -0.0014396667,
      -0.021186799,
      -0.0035600453,
      -0.0020166228,
      -0.0030484975,
      -0.0020706188,
      -0.004754541,
      -0.004573691,
      -0.0017247318,
      -0.0013320514,
      -0.00383393,
      -0.0014062395,
      -0.00077821646,
      -0.00232187,
      -0.0056997957,
      -1.5006585,
      -0.00092878635,
      -0.0017289098,
      -0.0022488046,
      -0.22080646,
      -0.24593262,
      -0.007695266,
      -0.0010909562,
      -1.9188432,
      -0.074086204,
      -0.4441483,
      -0.01670064,
      -0.5180444,
      -0.0011786139,
      -0.065235354,
      -0.0019532004,
      -0.004489684,
      -0.75119394,
      -0.0008564793,
      -0.021627733,
      -0.002846436,
      -0.0006783028,
      -0.0023660795,
      -0.0063755494,
      -0.0022992252,
      -0.0031180289,
      -0.0015991725,
      -0.0016396517,
      -0.0034812682,
      -0.0010802733,
      -0.0040906486,
      -0.002456479,
      -0.0043680295,
      -0.58381665,
      -0.00071081106,
      -0.0026984431,
      -0.002134173,
      -0.73226744,
      -0.09518522,
      -0.010780501,
      -0.0017655726,
      -0.37390503,
      -0.71901786,
      -0.8667371,
      -1.0635875,
      -0.0003659939,
      -0.1087448,
      -0.008017671,
      -0.02387102,
      -0.018320432,
      -0.009485827,
      -0.006357675,
      -0.0019414352,
      -0.70965385,
      -0.028871175,
      -0.1627554,
      -0.04021859,
      -0.004095738,
      -0.0028280246,
      -0.0016784583,
      -0.00017937786,
      -0.0030229662,
      -0.007748725,
      -0.0028675972,
      -0.0030996155,
      -0.00057607895,
      -0.031891976,
      -1.5177249,
      -0.0061786957,
      -0.26831007,
      -0.02621395,
      -0.0546095,
      -0.001190729,
      -0.0002570597,
      -0.6544764,
      -0.023069778,
      -0.0015543386,
      -0.0014377565,
      -0.0062946924,
      -0.004922902,
      -0.0041478667,
      -0.00068516337,
      -1.9382311,
      -0.097197734,
      -1.2856683,
      -0.4337973,
      -0.0058143,
      -0.013572928,
      -0.024562338,
      -0.74456334,
      -0.0012461086,
      -0.0055871047,
      -0.00203281,
      -0.00038328386,
      -0.00105205,
      -0.0005688007,
      -0.07743354,
      -0.0018563363,
      -0.0010102238,
      -0.0036649131,
      -0.004687047,
      -0.0009255631,
      -0.0011280102,
      -0.0027714204,
      -0.001343746,
      -0.00029140117,
      -0.013959504,
      -0.0010678634,
      -0.00032586468,
      -0.0029413027,
      -0.0055702603,
      -0.023968939,
      -0.0006641085,
      -0.00018975277,
      -0.046506703,
      -0.00075679924,
      -0.00038006424,
      -0.0018271959,
      -0.005552822,
      -0.0075553237,
      -0.007058181,
      -0.0007753527,
      -0.8228219,
      -1.4723599,
      -0.14657529,
      -0.015452027,
      -0.00093994226,
      -0.041943237,
      -0.08355824,
      -0.0012629976,
      -0.00050719705,
      -0.003398672,
      -0.0034509432,
      -0.04114637,
      -0.0033794728,
      -0.0009092193,
      -0.6364865,
      -0.26034433,
      -0.13951895,
      -1.2035786,
      -0.28853765,
      -0.0071513485,
      -0.009340939,
      -0.018418055,
      -0.29579785,
      -0.0014136416,
      -0.051703766,
      -0.0016077685,
      -0.00034571995,
      -0.0016171437,
      -0.036370363,
      -0.3669394,
      -0.0012273083,
      -0.0037893546,
      -0.017726535,
      -0.007327197,
      -0.011613575,
      -0.0008799249,
      -0.0051528816,
      -0.0009048029,
      -0.00021741669,
      -0.01273454,
      -0.00041935995,
      -0.0003626532,
      -0.0021926516,
      -0.0054337922,
      -1.3145756,
      -0.0011250263,
      -0.3958092,
      -0.0015327873,
      -0.0005231795,
      -0.0014209846,
      -0.02821335,
      -0.055722184,
      -0.0007490442,
      -0.00093516917,
      -0.003929844,
      -0.0045696795,
      -0.0012988653,
      -0.00096094364,
      -0.0044105346,
      -0.0011522978,
      -0.0010086722,
      -0.023517583,
      -0.00046658723,
      -0.0011746744,
      -0.003943729,
      -0.0064811907,
      -0.106690265,
      -0.08303869,
      -0.0054954626,
      -0.01368906,
      -0.39018378,
      -0.00041804678,
      -0.0014027805,
      -0.36363837,
      -0.0015486083,
      -0.00013645618,
      -0.039926123,
      -0.0007222635,
      -0.00051172887,
      -0.0019935097,
      -0.014395509,
      -0.0075428924,
      -0.0046809986,
      -0.0016046644,
      -1.2553825,
      -0.34095332,
      -0.50731236,
      -0.2639079,
      -0.08327582,
      -0.00094626687,
      -0.0052972226,
      -0.013055992,
      -1.6566552,
      -0.00060130615,
      -0.012171034,
      -0.0012333954,
      -0.00041315737,
      -0.0005541305,
      -0.005424323,
      -0.0067981184,
      -0.0001678165,
      -0.00012357882,
      -0.0011527737,
      -0.0016589344,
      -0.00057202304,
      -0.00041208262,
      -0.0008987768,
      -0.00050779217,
      -4.2870764e-05,
      -0.0016808463,
      -0.0004236524,
      -2.8921473e-05,
      -0.0017018636,
      -0.003756267,
      -0.088694245,
      -0.003384317,
      -0.8977872,
      -0.034165096,
      -0.0005910477,
      -0.00030201545,
      -0.017152937,
      -0.00790274,
      -0.012756031,
      -0.00419982,
      -0.0018039672,
      -0.6617122,
      -0.057811856,
      -0.29744935,
      -0.033627182,
      -0.001170855,
      -0.0038551698,
      -0.01654204,
      -0.56721765,
      -0.0008224166,
      -0.0006283825,
      -0.00014063035,
      -0.024062961,
      -0.0014824043,
      -0.00021431445,
      -0.0016671148,
      -0.0074655456,
      -0.00649031,
      -0.009018452,
      -0.0016945206,
      -0.40110946
     ],
     "top_logprobs": [
      {
       " #": -0.016480353
      },
      {
       " 0": -0.008833344
      },
      {
       ":": -0.0017842611
      },
      {
       " walk": -0.29112443
      },
      {
       " to": -0.1295982
      },
      {
       " home": -0.85680026
      },
      {
       "\n": -0.022686316
      },
      {
       " walk": -0.009489257
      },
      {
       "('": -0.003965093
      },
      {
       "des": -0.011376801
      },
      {
       "k": -0.0010873751
      },
      {
       "')": -0.001295046
      },
      {
       "\n": -0.0069770883
      },
      {
       " #": -0.0056499215
      },
      {
       " 1": -0.003046823
      },
      {
       ":": -0.0006020214
      },
      {
       " find": -0.06430373
      },
      {
       " computer": -0.36647183
      },
      {
       "\n": -0.02062971
      },
      {
       " find": -0.04425944
      },
      {
       "('": -0.0009536644
      },
      {
       "computer": -0.0022304035
      },
      {
       "')": -0.0015773836
      },
      {
       "\n": -0.0053861467
      },
      {
       " #": -0.005607006
      },
      {
       " 2": -0.004200299
      },
      {
       ":": -0.0008117995
      },
      {
       " turn": -0.4574967
      },
      {
       " on": -0.0176524
      },
      {
       " computer": -0.6187078
      },
      {
       "\n": -0.012589605
      },
      {
       " assert": -0.3420668
      },
      {
       "('": -0.0014396667
      },
      {
       "close": -0.021186799
      },
      {
       "'": -0.0035600453
      },
      {
       " to": -0.0020166228
      },
      {
       " '": -0.0030484975
      },
      {
       "computer": -0.0020706188
      },
      {
       "')": -0.004754541
      },
      {
       "\n": -0.004573691
      },
      {
       " else": -0.0017247318
      },
      {
       ":": -0.0013320514
      },
      {
       " find": -0.00383393
      },
      {
       "('": -0.0014062395
      },
      {
       "computer": -0.00077821646
      },
      {
       "')": -0.00232187
      },
      {
       "\n": -0.0056997957
      },
      {
       " switch": -0.3533243
      },
      {
       "('": -0.00092878635
      },
      {
       "computer": -0.0017289098
      },
      {
       "')": -0.0022488046
      },
      {
       "\n": -0.22080646
      },
      {
       " #": -0.24593262
      },
      {
       " 3": -0.007695266
      },
      {
       ":": -0.0010909562
      },
      {
       " wait": -1.3027248
      },
      {
       " on": -0.074086204
      },
      {
       " monitor": -0.4441483
      },
      {
       "\n": -0.01670064
      },
      {
       " find": -0.5180444
      },
      {
       "('": -0.0011786139
      },
      {
       "monitor": -0.065235354
      },
      {
       "')": -0.0019532004
      },
      {
       "\n": -0.004489684
      },
      {
       " assert": -0.75119394
      },
      {
       "('": -0.0008564793
      },
      {
       "close": -0.021627733
      },
      {
       "'": -0.002846436
      },
      {
       " to": -0.0006783028
      },
      {
       " '": -0.0023660795
      },
      {
       "monitor": -0.0063755494
      },
      {
       "')": -0.0022992252
      },
      {
       "\n": -0.0031180289
      },
      {
       " else": -0.0015991725
      },
      {
       ":": -0.0016396517
      },
      {
       " find": -0.0034812682
      },
      {
       "('": -0.0010802733
      },
      {
       "monitor": -0.0040906486
      },
      {
       "')": -0.002456479
      },
      {
       "\n": -0.0043680295
      },
      {
       " plugin": -0.58381665
      },
      {
       "('": -0.00071081106
      },
      {
       "monitor": -0.0026984431
      },
      {
       "')": -0.002134173
      },
      {
       "<|endoftext|>": -0.6797151
      },
      {
       " #": -0.09518522
      },
      {
       " 4": -0.010780501
      },
      {
       ":": -0.0017655726
      },
      {
       " Done": -0.37390503
      },
      {
       "\n": -0.71901786
      },
      {
       "def": -0.8667371
      },
      {
       " make": -1.0635875
      },
      {
       "_": -0.0003659939
      },
      {
       "co": -0.1087448
      },
      {
       "ffee": -0.008017671
      },
      {
       "():": -0.02387102
      },
      {
       "\n": -0.018320432
      },
      {
       " #": -0.009485827
      },
      {
       " 0": -0.006357675
      },
      {
       ":": -0.0019414352
      },
      {
       " walk": -0.70965385
      },
      {
       " to": -0.028871175
      },
      {
       " kitchen": -0.1627554
      },
      {
       "\n": -0.04021859
      },
      {
       " walk": -0.004095738
      },
      {
       "('": -0.0028280246
      },
      {
       "kit": -0.0016784583
      },
      {
       "chen": -0.00017937786
      },
      {
       "')": -0.0030229662
      },
      {
       "\n": -0.007748725
      },
      {
       " #": -0.0028675972
      },
      {
       " 1": -0.0030996155
      },
      {
       ":": -0.00057607895
      },
      {
       " find": -0.031891976
      },
      {
       " coffee": -0.44228733
      },
      {
       "ffe": -0.0061786957
      },
      {
       " maker": -0.26831007
      },
      {
       "\n": -0.02621395
      },
      {
       " find": -0.0546095
      },
      {
       "('": -0.001190729
      },
      {
       "co": -0.0002570597
      },
      {
       "ffe": -0.6544764
      },
      {
       "_": -0.023069778
      },
      {
       "maker": -0.0015543386
      },
      {
       "')": -0.0014377565
      },
      {
       "\n": -0.0062946924
      },
      {
       " #": -0.004922902
      },
      {
       " 2": -0.0041478667
      },
      {
       ":": -0.00068516337
      },
      {
       " turn": -1.5768808
      },
      {
       " in": -0.097197734
      },
      {
       " co": -0.91134536
      },
      {
       " co": -0.4337973
      },
      {
       "ffe": -0.0058143
      },
      {
       " maker": -0.013572928
      },
      {
       "\n": -0.024562338
      },
      {
       " plugin": -0.73328316
      },
      {
       "('": -0.0012461086
      },
      {
       "close": -0.0055871047
      },
      {
       "'": -0.00203281
      },
      {
       " to": -0.00038328386
      },
      {
       " '": -0.00105205
      },
      {
       "co": -0.0005688007
      },
      {
       "ffe": -0.07743354
      },
      {
       "_": -0.0018563363
      },
      {
       "maker": -0.0010102238
      },
      {
       "')": -0.0036649131
      },
      {
       "\n": -0.004687047
      },
      {
       " else": -0.0009255631
      },
      {
       ":": -0.0011280102
      },
      {
       " find": -0.0027714204
      },
      {
       "('": -0.001343746
      },
      {
       "co": -0.00029140117
      },
      {
       "ffe": -0.013959504
      },
      {
       "_": -0.0010678634
      },
      {
       "maker": -0.00032586468
      },
      {
       "')": -0.0029413027
      },
      {
       "\n": -0.0055702603
      },
      {
       " plugin": -0.023968939
      },
      {
       "('": -0.0006641085
      },
      {
       "co": -0.00018975277
      },
      {
       "ffe": -0.046506703
      },
      {
       "_": -0.00075679924
      },
      {
       "maker": -0.00038006424
      },
      {
       "')": -0.0018271959
      },
      {
       "\n": -0.005552822
      },
      {
       " #": -0.0075553237
      },
      {
       " 3": -0.007058181
      },
      {
       ":": -0.0007753527
      },
      {
       " find": -0.8228219
      },
      {
       " coffee": -0.5261899
      },
      {
       "\n": -0.14657529
      },
      {
       " find": -0.015452027
      },
      {
       "('": -0.00093994226
      },
      {
       "co": -0.041943237
      },
      {
       "ffee": -0.08355824
      },
      {
       "_": -0.0012629976
      },
      {
       "filter": -0.00050719705
      },
      {
       "')": -0.003398672
      },
      {
       "\n": -0.0034509432
      },
      {
       " #": -0.04114637
      },
      {
       " 4": -0.0033794728
      },
      {
       ":": -0.0009092193
      },
      {
       " put": -0.6364865
      },
      {
       " filter": -0.26034433
      },
      {
       " in": -0.13951895
      },
      {
       " co": -0.8837411
      },
      {
       " co": -0.28853765
      },
      {
       "ffe": -0.0071513485
      },
      {
       " maker": -0.009340939
      },
      {
       "\n": -0.018418055
      },
      {
       " assert": -0.29579785
      },
      {
       "('": -0.0014136416
      },
      {
       "close": -0.051703766
      },
      {
       "'": -0.0016077685
      },
      {
       " to": -0.00034571995
      },
      {
       " '": -0.0016171437
      },
      {
       "co": -0.036370363
      },
      {
       "ffe": -0.3669394
      },
      {
       "_": -0.0012273083
      },
      {
       "maker": -0.0037893546
      },
      {
       "')": -0.017726535
      },
      {
       "\n": -0.007327197
      },
      {
       " else": -0.011613575
      },
      {
       ":": -0.0008799249
      },
      {
       " find": -0.0051528816
      },
      {
       "('": -0.0009048029
      },
      {
       "co": -0.00021741669
      },
      {
       "ffe": -0.01273454
      },
      {
       "_": -0.00041935995
      },
      {
       "maker": -0.0003626532
      },
      {
       "')": -0.0021926516
      },
      {
       "\n": -0.0054337922
      },
      {
       " put": -0.5131497
      },
      {
       "('": -0.0011250263
      },
      {
       "close": -0.3958092
      },
      {
       "'": -0.0015327873
      },
      {
       " to": -0.0005231795
      },
      {
       " '": -0.0014209846
      },
      {
       "co": -0.02821335
      },
      {
       "ffee": -0.055722184
      },
      {
       "_": -0.0007490442
      },
      {
       "filter": -0.00093516917
      },
      {
       "')": -0.003929844
      },
      {
       "\n": -0.0045696795
      },
      {
       " else": -0.0012988653
      },
      {
       ":": -0.00096094364
      },
      {
       " find": -0.0044105346
      },
      {
       "('": -0.0011522978
      },
      {
       "co": -0.0010086722
      },
      {
       "ffee": -0.023517583
      },
      {
       "_": -0.00046658723
      },
      {
       "filter": -0.0011746744
      },
      {
       "')": -0.003943729
      },
      {
       "\n": -0.0064811907
      },
      {
       " put": -0.106690265
      },
      {
       "in": -0.08303869
      },
      {
       "('": -0.0054954626
      },
      {
       "co": -0.01368906
      },
      {
       "ffee": -0.39018378
      },
      {
       "_": -0.00041804678
      },
      {
       "filter": -0.0014027805
      },
      {
       "',": -0.36363837
      },
      {
       " '": -0.0015486083
      },
      {
       "co": -0.00013645618
      },
      {
       "ffe": -0.039926123
      },
      {
       "_": -0.0007222635
      },
      {
       "maker": -0.00051172887
      },
      {
       "')": -0.0019935097
      },
      {
       "\n": -0.014395509
      },
      {
       " #": -0.0075428924
      },
      {
       " 5": -0.0046809986
      },
      {
       ":": -0.0016046644
      },
      {
       " find": -0.8644857
      },
      {
       " water": -0.34095332
      },
      {
       " in": -0.50731236
      },
      {
       " the": -0.2639079
      },
      {
       " co": -0.08327582
      },
      {
       "ffe": -0.00094626687
      },
      {
       " maker": -0.0052972226
      },
      {
       "\n": -0.013055992
      },
      {
       " find": -0.5019825
      },
      {
       "('": -0.00060130615
      },
      {
       "close": -0.012171034
      },
      {
       "'": -0.0012333954
      },
      {
       " to": -0.00041315737
      },
      {
       " '": -0.0005541305
      },
      {
       "co": -0.005424323
      },
      {
       "ffe": -0.0067981184
      },
      {
       "_": -0.0001678165
      },
      {
       "maker": -0.00012357882
      },
      {
       "')": -0.0011527737
      },
      {
       "\n": -0.0016589344
      },
      {
       " else": -0.00057202304
      },
      {
       ":": -0.00041208262
      },
      {
       " find": -0.0008987768
      },
      {
       "('": -0.00050779217
      },
      {
       "co": -4.2870764e-05
      },
      {
       "ffe": -0.0016808463
      },
      {
       "_": -0.0004236524
      },
      {
       "maker": -2.8921473e-05
      },
      {
       "')": -0.0017018636
      },
      {
       "\n": -0.003756267
      },
      {
       " pour": -0.088694245
      },
      {
       "('": -0.003384317
      },
      {
       "water": -0.5259095
      },
      {
       "ffe": -0.034165096
      },
      {
       "_": -0.0005910477
      },
      {
       "maker": -0.00030201545
      },
      {
       "')": -0.017152937
      },
      {
       "\n": -0.00790274
      },
      {
       " #": -0.012756031
      },
      {
       " 6": -0.00419982
      },
      {
       ":": -0.0018039672
      },
      {
       " turn": -0.6617122
      },
      {
       " on": -0.057811856
      },
      {
       " the": -0.29744935
      },
      {
       " co": -0.033627182
      },
      {
       "ffe": -0.001170855
      },
      {
       " maker": -0.0038551698
      },
      {
       "\n": -0.01654204
      },
      {
       " switch": -0.56721765
      },
      {
       "on": -0.0008224166
      },
      {
       "('": -0.0006283825
      },
      {
       "co": -0.00014063035
      },
      {
       "ffe": -0.024062961
      },
      {
       "_": -0.0014824043
      },
      {
       "maker": -0.00021431445
      },
      {
       "')": -0.0016671148
      },
      {
       "\n": -0.0074655456
      },
      {
       " #": -0.00649031
      },
      {
       " 7": -0.009018452
      },
      {
       ":": -0.0016945206
      },
      {
       " Done": -0.40110946
      }
     ],
     "text_offset": [
      3349,
      3351,
      3353,
      3354,
      3359,
      3362,
      3367,
      3368,
      3373,
      3375,
      3378,
      3379,
      3381,
      3382,
      3384,
      3386,
      3387,
      3392,
      3401,
      3402,
      3407,
      3409,
      3417,
      3419,
      3420,
      3422,
      3424,
      3425,
      3430,
      3433,
      3442,
      3443,
      3450,
      3452,
      3457,
      3458,
      3461,
      3463,
      3471,
      3473,
      3474,
      3479,
      3480,
      3485,
      3487,
      3495,
      3497,
      3498,
      3505,
      3507,
      3515,
      3517,
      3518,
      3520,
      3522,
      3523,
      3528,
      3531,
      3539,
      3540,
      3545,
      3547,
      3554,
      3556,
      3557,
      3564,
      3566,
      3571,
      3572,
      3575,
      3577,
      3584,
      3586,
      3587,
      3592,
      3593,
      3598,
      3600,
      3607,
      3609,
      3610,
      3617,
      3619,
      3626,
      3628,
      3629,
      3631,
      3633,
      3634,
      3639,
      3640,
      3643,
      3648,
      3649,
      3651,
      3655,
      3658,
      3659,
      3661,
      3663,
      3664,
      3669,
      3672,
      3680,
      3681,
      3686,
      3688,
      3691,
      3695,
      3697,
      3698,
      3700,
      3702,
      3703,
      3708,
      3711,
      3714,
      3720,
      3721,
      3726,
      3728,
      3730,
      3733,
      3734,
      3739,
      3741,
      3742,
      3744,
      3746,
      3747,
      3752,
      3755,
      3759,
      3762,
      3765,
      3771,
      3772,
      3779,
      3781,
      3786,
      3787,
      3790,
      3792,
      3794,
      3797,
      3798,
      3803,
      3805,
      3806,
      3811,
      3812,
      3817,
      3819,
      3821,
      3824,
      3825,
      3830,
      3832,
      3833,
      3840,
      3842,
      3844,
      3847,
      3848,
      3853,
      3855,
      3856,
      3858,
      3860,
      3861,
      3866,
      3873,
      3874,
      3879,
      3881,
      3883,
      3887,
      3888,
      3894,
      3896,
      3897,
      3899,
      3901,
      3902,
      3906,
      3913,
      3916,
      3920,
      3923,
      3926,
      3932,
      3933,
      3940,
      3942,
      3947,
      3948,
      3951,
      3953,
      3955,
      3958,
      3959,
      3964,
      3966,
      3967,
      3972,
      3973,
      3978,
      3980,
      3982,
      3985,
      3986,
      3991,
      3993,
      3994,
      4001,
      4003,
      4008,
      4009,
      4012,
      4014,
      4016,
      4020,
      4021,
      4027,
      4029,
      4030,
      4035,
      4036,
      4041,
      4043,
      4045,
      4049,
      4050,
      4056,
      4058,
      4059,
      4063,
      4065,
      4067,
      4069,
      4073,
      4074,
      4080,
      4082,
      4084,
      4086,
      4089,
      4090,
      4095,
      4097,
      4098,
      4100,
      4102,
      4103,
      4108,
      4114,
      4117,
      4121,
      4124,
      4127,
      4133,
      4134,
      4141,
      4143,
      4148,
      4149,
      4152,
      4154,
      4156,
      4159,
      4160,
      4165,
      4167,
      4168,
      4173,
      4174,
      4179,
      4181,
      4183,
      4186,
      4187,
      4192,
      4194,
      4195,
      4200,
      4202,
      4204,
      4207,
      4208,
      4213,
      4215,
      4216,
      4218,
      4220,
      4221,
      4226,
      4229,
      4233,
      4236,
      4239,
      4245,
      4246,
      4253,
      4255,
      4257,
      4259,
      4262,
      4263,
      4268,
      4270,
      4271,
      4273,
      4275,
      4276
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Turn on computer",
   "task_description": "Push power button.",
   "program": [
    "[Walk] <home_office> (1)",
    "[Walk] <computer> (1)",
    "[SwitchOn] <computer> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_turk_third",
   "file_id": "split56_4",
   "goal_condition": [
    [
     [
      240,
      241,
      "INSIDE",
      "character",
      "home_office"
     ]
    ],
    [
     [
      276,
      "computer",
      "ON"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1173,
   "completion_tokens": 314,
   "total_tokens": 1487
  }
 },
 "4": {
  "plan": [
   [
    " # 0: find electric shaver\n find('electric_shaver')\n # 1: grab electric shaver\n assert('close' to 'electric_shaver')\n else: find('electric_shaver')\n grab('electric_shaver')\n assert('electric_shaver' in 'hands')\n else: grab('electric_shaver')\n turnto('electric_shaver')\n assert('electric_shaver' in 'hands')\n else: grab('electric_shaver')\n pointat('electric_shaver')\n # 2: switch on electric shaver\n assert('electric_shaver' in 'hands')\n else: grab('electric_shaver')\n switchon('electric_shaver')\n # 3: shave\n turnto('face')\n lookat('face')\n assert('electric_shaver' in 'hands')\n else: grab('electric_shaver')\n shave('face')\n # 4: switch off electric shaver\n assert('electric_shaver' in 'hands')\n else: grab('electric_shaver')\n switchoff('electric_shaver')\n # 5: put electric shaver back\n putobjback('electric_shaver')\n # 6: Done\ndef make_coffee():\n # 0: find coffee maker\n find('coffee_maker')\n # 1: grab coffee filter\n assert('close' to 'coffee_filter')\n else: find('coffee_filter')\n grab('coffee_filter')\n assert('coffee_filter' in 'hands')\n else: grab('coffee_filter')\n turnto('coffee_filter')\n assert('coffee_filter' in 'hands')\n else: grab('coffee_filter')\n pointat('coffee_filter')\n # 2: fill with coffee\n assert('coffee_filter' in 'hands')\n else: grab('coffee_filter')\n fill('coffee_filter')\n turnto('coffee_filter')\n lookat('coffee_filter')\n # 3: put coffee filter back\n assert('coffee_filter' in 'hands')\n else: grab('coffee_filter')\n putobjback('coffee_filter')\n # 4: switch on coffee maker\n switchon('coffee_maker')\n # 5: pour coffee into cup\n find('cup')\n assert('close' to 'cup')\n else: find('cup')\n grab('cup')\n assert('cup' in 'hands')\n else: grab('cup')\n pour('coffee')\n # 6: Done\n putobjback('cup')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " electric",
      " sh",
      "aver",
      "\n",
      " find",
      "('",
      "electric",
      "_",
      "sh",
      "aver",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " grab",
      " electric",
      " sh",
      "aver",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "electric",
      "_",
      "sh",
      "aver",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "electric",
      "_",
      "sh",
      "aver",
      "')",
      "\n",
      " grab",
      "('",
      "electric",
      "_",
      "sh",
      "aver",
      "')",
      "\n",
      " assert",
      "('",
      "electric",
      "_",
      "sh",
      "aver",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "electric",
      "_",
      "sh",
      "aver",
      "')",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "electric",
      "_",
      "sh",
      "aver",
      "')",
      "\n",
      " assert",
      "('",
      "electric",
      "_",
      "sh",
      "aver",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "electric",
      "_",
      "sh",
      "aver",
      "')",
      "\n",
      " point",
      "at",
      "('",
      "electric",
      "_",
      "sh",
      "aver",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " switch",
      " on",
      " electric",
      " sh",
      "aver",
      "\n",
      " assert",
      "('",
      "electric",
      "_",
      "sh",
      "aver",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "electric",
      "_",
      "sh",
      "aver",
      "')",
      "\n",
      " switch",
      "on",
      "('",
      "electric",
      "_",
      "sh",
      "aver",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " shave",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "face",
      "')",
      "\n",
      " look",
      "at",
      "('",
      "face",
      "')",
      "\n",
      " assert",
      "('",
      "electric",
      "_",
      "sh",
      "aver",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "electric",
      "_",
      "sh",
      "aver",
      "')",
      "\n",
      " shave",
      "('",
      "face",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " switch",
      " off",
      " electric",
      " sh",
      "aver",
      "\n",
      " assert",
      "('",
      "electric",
      "_",
      "sh",
      "aver",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "electric",
      "_",
      "sh",
      "aver",
      "')",
      "\n",
      " switch",
      "off",
      "('",
      "electric",
      "_",
      "sh",
      "aver",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " put",
      " electric",
      " sh",
      "aver",
      " back",
      "\n",
      " put",
      "obj",
      "back",
      "('",
      "electric",
      "_",
      "sh",
      "aver",
      "')",
      "\n",
      " #",
      " 6",
      ":",
      " Done",
      "\n",
      "def",
      " make",
      "_",
      "co",
      "ffee",
      "():",
      "\n",
      " #",
      " 0",
      ":",
      " find",
      " coffee",
      " maker",
      "\n",
      " find",
      "('",
      "co",
      "ffee",
      "_",
      "maker",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " grab",
      " coffee",
      " filter",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "co",
      "ffee",
      "_",
      "filter",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "co",
      "ffee",
      "_",
      "filter",
      "')",
      "\n",
      " grab",
      "('",
      "co",
      "ffee",
      "_",
      "filter",
      "')",
      "\n",
      " assert",
      "('",
      "co",
      "ffee",
      "_",
      "filter",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "co",
      "ffee",
      "_",
      "filter",
      "')",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "co",
      "ffee",
      "_",
      "filter",
      "')",
      "\n",
      " assert",
      "('",
      "co",
      "ffee",
      "_",
      "filter",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "co",
      "ffee",
      "_",
      "filter",
      "')",
      "\n",
      " point",
      "at",
      "('",
      "co",
      "ffee",
      "_",
      "filter",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " fill",
      " with",
      " coffee",
      "\n",
      " assert",
      "('",
      "co",
      "ffee",
      "_",
      "filter",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "co",
      "ffee",
      "_",
      "filter",
      "')",
      "\n",
      " fill",
      "('",
      "co",
      "ffee",
      "_",
      "filter",
      "')",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "co",
      "ffee",
      "_",
      "filter",
      "')",
      "\n",
      " look",
      "at",
      "('",
      "co",
      "ffee",
      "_",
      "filter",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " put",
      " coffee",
      " filter",
      " back",
      "\n",
      " assert",
      "('",
      "co",
      "ffee",
      "_",
      "filter",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "co",
      "ffee",
      "_",
      "filter",
      "')",
      "\n",
      " put",
      "obj",
      "back",
      "('",
      "co",
      "ffee",
      "_",
      "filter",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " switch",
      " on",
      " coffee",
      " maker",
      "\n",
      " switch",
      "on",
      "('",
      "co",
      "ffee",
      "_",
      "maker",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " pour",
      " coffee",
      " into",
      " cup",
      "\n",
      " find",
      "('",
      "cup",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "cup",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "cup",
      "')",
      "\n",
      " grab",
      "('",
      "cup",
      "')",
      "\n",
      " assert",
      "('",
      "cup",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "cup",
      "')",
      "\n",
      " pour",
      "('",
      "co",
      "ffee",
      "')",
      "\n",
      " #",
      " 6",
      ":",
      " Done",
      "\n",
      " put",
      "obj",
      "back",
      "('",
      "cup",
      "')"
     ],
     "token_logprobs": [
      -0.02404257,
      -0.013371692,
      -0.0025889582,
      -0.3642186,
      -0.1794569,
      -0.14743005,
      -0.001791009,
      -0.030497596,
      -0.022577243,
      -0.003053159,
      -0.012436059,
      -0.0055001983,
      -0.002051446,
      -0.00075238576,
      -0.0033170949,
      -0.009134361,
      -0.006452693,
      -0.0040964554,
      -0.0006823005,
      -0.21489848,
      -0.11992437,
      -0.005797573,
      -0.003309201,
      -0.014329599,
      -0.4753077,
      -0.0015890829,
      -0.0035453911,
      -0.0027674162,
      -0.00053767127,
      -0.0036498364,
      -0.032659862,
      -0.0031086435,
      -0.002330531,
      -0.00031560898,
      -0.005936849,
      -0.008703106,
      -0.0017435388,
      -0.0011913251,
      -0.0035855877,
      -0.001553861,
      -0.0016218004,
      -0.0007421263,
      -0.0014019433,
      -0.00044452143,
      -0.0037523191,
      -0.007499714,
      -0.003153907,
      -0.0008769419,
      -0.0010688162,
      -0.0012414537,
      -0.0005889,
      -0.00072828965,
      -0.0019133667,
      -0.0053527122,
      -0.38876322,
      -0.0009255631,
      -0.013418266,
      -0.0018283908,
      -0.0007551294,
      -0.00049049745,
      -0.0017352401,
      -0.0109857945,
      -0.0029083653,
      -0.005077215,
      -0.033948947,
      -0.0030288862,
      -0.013453185,
      -0.0015961875,
      -0.0028117052,
      -0.0011244303,
      -0.00069673505,
      -0.00049562723,
      -0.00031990238,
      -0.0012587606,
      -0.0025079856,
      -0.004722261,
      -0.3590467,
      -4.9069615e-05,
      -0.00093779556,
      -0.0003776801,
      -0.0017297462,
      -0.0005418436,
      -0.0002164621,
      -0.0008085771,
      -0.0012763658,
      -0.0029095614,
      -0.2359214,
      -0.0002869914,
      -0.0023126684,
      -0.00026779127,
      -0.00053069333,
      -0.00020167646,
      -0.0011224,
      -0.0010000797,
      -0.0007166579,
      -0.0006314847,
      -0.0011575487,
      -0.001293256,
      -0.0030923802,
      -0.00086399604,
      -0.0010181,
      -0.00052962045,
      -0.0007671188,
      -0.00023464282,
      -0.0001735385,
      -0.0005791794,
      -0.0010795591,
      -0.0029824325,
      -0.06323529,
      -0.00063488266,
      -0.00031000242,
      -0.00060631573,
      -0.0004558547,
      -0.00016304628,
      -0.0006326768,
      -0.0010623733,
      -0.005849732,
      -0.0038198682,
      -0.007416542,
      -0.0007974823,
      -0.71569914,
      -0.057575885,
      -0.38956544,
      -0.00672683,
      -0.0006627972,
      -0.016913153,
      -0.5206057,
      -0.0006944701,
      -0.53290516,
      -0.0004403491,
      -0.00029104354,
      -0.0010141633,
      -0.0017037737,
      -0.012617853,
      -0.0011406023,
      -0.0019287155,
      -0.0035054928,
      -0.0017815146,
      -0.0034844398,
      -0.00084431254,
      -0.003070258,
      -0.0005937923,
      -0.00061060634,
      -0.00061764714,
      -0.00026540618,
      -0.00033039556,
      -0.0024763164,
      -0.004304275,
      -0.013757042,
      -0.0019073942,
      -0.00058347365,
      -0.0012514812,
      -0.00051638077,
      -0.00035776378,
      -0.0011114206,
      -0.0019083498,
      -0.0054394854,
      -0.5177135,
      -0.0076801293,
      -0.0010370156,
      -0.62689626,
      -0.7075982,
      -2.167326,
      -6.885639e-05,
      -0.0032981988,
      -0.0006287392,
      -1.5184939,
      -0.0018906139,
      -0.004810658,
      -0.7112271,
      -0.00075596484,
      -0.0004795284,
      -0.015445793,
      -0.0011187008,
      -0.0050213183,
      -1.0488596,
      -0.0011952628,
      -0.50893164,
      -0.0015425183,
      -0.0004256799,
      -0.00044452143,
      -0.004459329,
      -0.02765908,
      -0.0029252837,
      -0.0034004655,
      -0.0049646515,
      -0.002641607,
      -0.0016019199,
      -0.0011195361,
      -0.003195641,
      -0.0008160948,
      -0.000502546,
      -0.00027530332,
      -0.00013550156,
      -0.00096500135,
      -0.0023253919,
      -0.0045890193,
      -0.22506276,
      -0.24814375,
      -0.64162314,
      -0.017833866,
      -0.009760312,
      -0.1651044,
      -0.0084335385,
      -0.0019024963,
      -0.13208514,
      -0.03422061,
      -0.05970613,
      -0.0036213004,
      -0.00045883397,
      -0.02212224,
      -0.703793,
      -0.0004084472,
      -0.0033543543,
      -0.0009621376,
      -0.0003264598,
      -0.0005479298,
      -0.0009946515,
      -0.0018424217,
      -0.00085588143,
      -0.00068659574,
      -0.0012862133,
      -0.001349359,
      -0.0012213441,
      -0.0011432267,
      -0.0010011544,
      -0.0003794682,
      -0.0002712502,
      -0.00015696288,
      -0.00016793102,
      -0.00084407313,
      -0.0026220062,
      -0.0034091377,
      -0.0018403905,
      -0.0049029533,
      -0.00051876775,
      -0.0004492926,
      -0.00045692569,
      -0.00024287197,
      -0.00057226245,
      -0.002218337,
      -0.026228998,
      -0.016438723,
      -0.0065689627,
      -0.0013219636,
      -0.31711647,
      -0.42279175,
      -0.0038952022,
      -0.0005711877,
      -0.049688727,
      -0.023655623,
      -2.93112,
      -0.47790855,
      -0.0033485526,
      -0.0012134659,
      -0.0011603505,
      -0.0008364372,
      -0.00045072404,
      -0.00041745167,
      -0.002940585,
      -0.22938111,
      -0.014230563,
      -0.005779947,
      -0.0023654837,
      -0.17866123,
      -1.5575268,
      -0.45869222,
      -1.1120948,
      -0.0010095066,
      -0.15926152,
      -0.0101817865,
      -0.026417721,
      -0.019378262,
      -0.007074269,
      -0.005001914,
      -0.0023145794,
      -0.2202816,
      -0.59279716,
      -0.1515218,
      -0.034197107,
      -0.01248567,
      -0.0014469496,
      -9.377476e-05,
      -0.15046309,
      -0.0013590863,
      -0.0006794366,
      -0.0016171437,
      -0.009451468,
      -0.003497657,
      -0.0021758056,
      -0.00059069006,
      -0.6121951,
      -0.06959257,
      -0.62839854,
      -0.023078624,
      -0.5062839,
      -0.00093719765,
      -0.011261298,
      -0.0018744307,
      -0.00032204814,
      -0.0015919495,
      -0.0016976246,
      -0.019141098,
      -0.0022777189,
      -0.08691847,
      -0.006852673,
      -0.005177686,
      -0.0008842211,
      -0.0013310958,
      -0.0036059876,
      -0.0013445832,
      -0.00033558442,
      -0.0039405585,
      -0.0013039997,
      -0.0018360324,
      -0.0028452403,
      -0.005015512,
      -0.0027923419,
      -0.00064836355,
      -0.0002561051,
      -0.0025438992,
      -0.0009393453,
      -0.00047833633,
      -0.0022442052,
      -0.004211613,
      -0.1628886,
      -0.0005398189,
      -0.0030667898,
      -0.0129758,
      -0.0005443507,
      -0.0013558639,
      -0.0014813296,
      -0.0031728018,
      -0.0014372787,
      -0.0027978406,
      -0.004307867,
      -0.00223835,
      -0.0025936787,
      -0.0010413099,
      -0.0013606388,
      -0.0009161371,
      -0.000120481265,
      -0.0008544527,
      -0.0013605197,
      -0.00047940828,
      -0.0009857005,
      -0.0044511273,
      -0.11141792,
      -2.6538237e-05,
      -0.00026325852,
      -0.0002603966,
      -0.00043653257,
      -0.003806226,
      -0.00029986876,
      -0.0028316122,
      -0.0010469183,
      -0.0020875211,
      -0.07412485,
      -0.00020394142,
      -0.00045442232,
      -0.00049514946,
      -0.00055568025,
      -0.00037588822,
      -0.0007854929,
      -0.00074188696,
      -0.00046861471,
      -0.0010316446,
      -0.00116608,
      -0.0010567638,
      -0.00092580245,
      -0.00046730434,
      -0.0005319464,
      -0.00036157944,
      -6.4446605e-05,
      -0.00047964763,
      -0.00038531228,
      -0.0003850729,
      -0.0013700703,
      -0.0024858185,
      -0.016653728,
      -0.00039962292,
      -0.00026493028,
      -8.173468e-05,
      -0.00063488266,
      -0.00065158313,
      -0.00043832068,
      -0.0018055186,
      -0.0050902753,
      -0.0026995188,
      -0.0039871135,
      -0.00060774625,
      -2.7875595,
      -2.9559977,
      -0.39695734,
      -0.1898839,
      -0.15752873,
      -0.00051411585,
      -0.073248215,
      -0.006313706,
      -0.0017255673,
      -0.02852228,
      -0.0011055127,
      -0.0020356765,
      -0.00082074676,
      -0.0008143039,
      -0.0018251647,
      -0.0019105001,
      -0.00095020543,
      -0.0004614594,
      -0.002137338,
      -0.00037243115,
      -6.122609e-05,
      -0.00023667031,
      -0.00031441596,
      -0.00034416933,
      -0.0011232363,
      -0.003095549,
      -0.8007837,
      -0.07190618,
      -0.00079843693,
      -0.0023289765,
      -0.023457844,
      -0.01226498,
      -0.12348383,
      -0.006779397,
      -0.6345096,
      -4.871012e-05,
      -0.0005278305,
      -0.00022146793,
      -0.0010226364,
      -0.0084460415,
      -0.001047873,
      -0.070131846,
      -0.00074343756,
      -0.0013994371,
      -0.033924527,
      -0.00025920733,
      -0.00021860692,
      -0.00017210613,
      -0.001002109,
      -0.0004887075,
      -0.0007968252,
      -0.0012515995,
      -0.0042145466,
      -0.007104944,
      -0.0048890603,
      -0.0010202485,
      -0.34937313,
      -0.66580594,
      -0.012086327,
      -0.82862204,
      -0.050731454,
      -0.2214011,
      -0.0002903283,
      -0.00076461444,
      -0.00064180145,
      -0.00014969209,
      -0.00054685504,
      -0.00058466673,
      -0.0006419216,
      -0.0005371935,
      -0.0005055272,
      -0.0006265925,
      -0.0007527424,
      -0.0004634878,
      -0.000368853,
      -0.0005800119,
      -0.0003179941,
      -3.690939e-05,
      -0.00021634194,
      -0.00037100064,
      -0.00018438557,
      -0.0007791692,
      -0.0017840217,
      -0.0035688386,
      -0.03504196,
      -0.0003137007,
      -0.00046968853,
      -8.00667e-05,
      -0.0008394203,
      -0.00042699307,
      -0.0008242085,
      -0.0010586731,
      -0.0052704974,
      -0.0025075069,
      -0.005248928,
      -0.0011243102,
      -0.6254982,
      -0.012517355,
      -0.21309058,
      -0.011900106,
      -0.011681719,
      -1.2922081,
      -0.0003352268,
      -0.0004324776,
      -0.00010844024,
      -0.059013728,
      -0.0008219398,
      -0.0005614051,
      -0.0012159712,
      -0.0044383146,
      -0.016194325,
      -0.0035204475,
      -0.0014445627,
      -2.19852,
      -0.1635718,
      -2.504598,
      -0.32457945,
      -0.013773959,
      -1.4797906,
      -0.0017351198,
      -0.017825916,
      -0.0019954217,
      -0.0036626386,
      -0.46876726,
      -0.00048978225,
      -0.038536586,
      -0.00093069556,
      -0.0002977211,
      -0.0017696341,
      -0.015742868,
      -0.0029605525,
      -0.0019917197,
      -0.0008295757,
      -0.00096010824,
      -0.002079875,
      -0.000802015,
      -0.00021634194,
      -0.0025029676,
      -0.0050448035,
      -0.6574653,
      -0.00048620783,
      -0.00089591293,
      -0.0012891982,
      -0.002166607,
      -0.10261801,
      -0.00033844542,
      -0.013467864,
      -0.0006840886,
      -0.0023504866,
      -0.0010910763,
      -0.0030128625,
      -0.0024076044,
      -0.0014355488,
      -0.001633801,
      -0.0004608624,
      -0.0027684926,
      -0.0005797763,
      -0.00017496901,
      -0.0020360954,
      -0.003281334,
      -0.8327299,
      -0.0036855503,
      -0.19474213,
      -0.026895562,
      -0.6647396,
      -0.0070656245,
      -0.60438585,
      -0.0049751964,
      -0.0015598917,
      -0.48236552,
      -0.76368225,
      -2.288112,
      -0.116559096,
      -0.001256612,
      -0.0011377366,
      -0.010708925,
      -0.001047276
     ],
     "top_logprobs": [
      {
       " #": -0.02404257
      },
      {
       " 0": -0.013371692
      },
      {
       ":": -0.0025889582
      },
      {
       " find": -0.3642186
      },
      {
       " electric": -0.1794569
      },
      {
       " sh": -0.14743005
      },
      {
       "aver": -0.001791009
      },
      {
       "\n": -0.030497596
      },
      {
       " find": -0.022577243
      },
      {
       "('": -0.003053159
      },
      {
       "electric": -0.012436059
      },
      {
       "_": -0.0055001983
      },
      {
       "sh": -0.002051446
      },
      {
       "aver": -0.00075238576
      },
      {
       "')": -0.0033170949
      },
      {
       "\n": -0.009134361
      },
      {
       " #": -0.006452693
      },
      {
       " 1": -0.0040964554
      },
      {
       ":": -0.0006823005
      },
      {
       " grab": -0.21489848
      },
      {
       " electric": -0.11992437
      },
      {
       " sh": -0.005797573
      },
      {
       "aver": -0.003309201
      },
      {
       "\n": -0.014329599
      },
      {
       " assert": -0.4753077
      },
      {
       "('": -0.0015890829
      },
      {
       "close": -0.0035453911
      },
      {
       "'": -0.0027674162
      },
      {
       " to": -0.00053767127
      },
      {
       " '": -0.0036498364
      },
      {
       "electric": -0.032659862
      },
      {
       "_": -0.0031086435
      },
      {
       "sh": -0.002330531
      },
      {
       "aver": -0.00031560898
      },
      {
       "')": -0.005936849
      },
      {
       "\n": -0.008703106
      },
      {
       " else": -0.0017435388
      },
      {
       ":": -0.0011913251
      },
      {
       " find": -0.0035855877
      },
      {
       "('": -0.001553861
      },
      {
       "electric": -0.0016218004
      },
      {
       "_": -0.0007421263
      },
      {
       "sh": -0.0014019433
      },
      {
       "aver": -0.00044452143
      },
      {
       "')": -0.0037523191
      },
      {
       "\n": -0.007499714
      },
      {
       " grab": -0.003153907
      },
      {
       "('": -0.0008769419
      },
      {
       "electric": -0.0010688162
      },
      {
       "_": -0.0012414537
      },
      {
       "sh": -0.0005889
      },
      {
       "aver": -0.00072828965
      },
      {
       "')": -0.0019133667
      },
      {
       "\n": -0.0053527122
      },
      {
       " assert": -0.38876322
      },
      {
       "('": -0.0009255631
      },
      {
       "electric": -0.013418266
      },
      {
       "_": -0.0018283908
      },
      {
       "sh": -0.0007551294
      },
      {
       "aver": -0.00049049745
      },
      {
       "'": -0.0017352401
      },
      {
       " in": -0.0109857945
      },
      {
       " '": -0.0029083653
      },
      {
       "hands": -0.005077215
      },
      {
       "')": -0.033948947
      },
      {
       "\n": -0.0030288862
      },
      {
       " else": -0.013453185
      },
      {
       ":": -0.0015961875
      },
      {
       " grab": -0.0028117052
      },
      {
       "('": -0.0011244303
      },
      {
       "electric": -0.00069673505
      },
      {
       "_": -0.00049562723
      },
      {
       "sh": -0.00031990238
      },
      {
       "aver": -0.0012587606
      },
      {
       "')": -0.0025079856
      },
      {
       "\n": -0.004722261
      },
      {
       " tur": -0.3590467
      },
      {
       "nt": -4.9069615e-05
      },
      {
       "o": -0.00093779556
      },
      {
       "('": -0.0003776801
      },
      {
       "electric": -0.0017297462
      },
      {
       "_": -0.0005418436
      },
      {
       "sh": -0.0002164621
      },
      {
       "aver": -0.0008085771
      },
      {
       "')": -0.0012763658
      },
      {
       "\n": -0.0029095614
      },
      {
       " assert": -0.2359214
      },
      {
       "('": -0.0002869914
      },
      {
       "electric": -0.0023126684
      },
      {
       "_": -0.00026779127
      },
      {
       "sh": -0.00053069333
      },
      {
       "aver": -0.00020167646
      },
      {
       "'": -0.0011224
      },
      {
       " in": -0.0010000797
      },
      {
       " '": -0.0007166579
      },
      {
       "hands": -0.0006314847
      },
      {
       "')": -0.0011575487
      },
      {
       "\n": -0.001293256
      },
      {
       " else": -0.0030923802
      },
      {
       ":": -0.00086399604
      },
      {
       " grab": -0.0010181
      },
      {
       "('": -0.00052962045
      },
      {
       "electric": -0.0007671188
      },
      {
       "_": -0.00023464282
      },
      {
       "sh": -0.0001735385
      },
      {
       "aver": -0.0005791794
      },
      {
       "')": -0.0010795591
      },
      {
       "\n": -0.0029824325
      },
      {
       " point": -0.06323529
      },
      {
       "at": -0.00063488266
      },
      {
       "('": -0.00031000242
      },
      {
       "electric": -0.00060631573
      },
      {
       "_": -0.0004558547
      },
      {
       "sh": -0.00016304628
      },
      {
       "aver": -0.0006326768
      },
      {
       "')": -0.0010623733
      },
      {
       "\n": -0.005849732
      },
      {
       " #": -0.0038198682
      },
      {
       " 2": -0.007416542
      },
      {
       ":": -0.0007974823
      },
      {
       " switch": -0.71569914
      },
      {
       " on": -0.057575885
      },
      {
       " electric": -0.38956544
      },
      {
       " sh": -0.00672683
      },
      {
       "aver": -0.0006627972
      },
      {
       "\n": -0.016913153
      },
      {
       " assert": -0.5206057
      },
      {
       "('": -0.0006944701
      },
      {
       "electric": -0.53290516
      },
      {
       "_": -0.0004403491
      },
      {
       "sh": -0.00029104354
      },
      {
       "aver": -0.0010141633
      },
      {
       "'": -0.0017037737
      },
      {
       " in": -0.012617853
      },
      {
       " '": -0.0011406023
      },
      {
       "hands": -0.0019287155
      },
      {
       "')": -0.0035054928
      },
      {
       "\n": -0.0017815146
      },
      {
       " else": -0.0034844398
      },
      {
       ":": -0.00084431254
      },
      {
       " grab": -0.003070258
      },
      {
       "('": -0.0005937923
      },
      {
       "electric": -0.00061060634
      },
      {
       "_": -0.00061764714
      },
      {
       "sh": -0.00026540618
      },
      {
       "aver": -0.00033039556
      },
      {
       "')": -0.0024763164
      },
      {
       "\n": -0.004304275
      },
      {
       " switch": -0.013757042
      },
      {
       "on": -0.0019073942
      },
      {
       "('": -0.00058347365
      },
      {
       "electric": -0.0012514812
      },
      {
       "_": -0.00051638077
      },
      {
       "sh": -0.00035776378
      },
      {
       "aver": -0.0011114206
      },
      {
       "')": -0.0019083498
      },
      {
       "\n": -0.0054394854
      },
      {
       " #": -0.5177135
      },
      {
       " 3": -0.0076801293
      },
      {
       ":": -0.0010370156
      },
      {
       " shave": -0.62689626
      },
      {
       "\n": -0.7075982
      },
      {
       " assert": -0.7548647
      },
      {
       "nt": -6.885639e-05
      },
      {
       "o": -0.0032981988
      },
      {
       "('": -0.0006287392
      },
      {
       "electric": -0.34507394
      },
      {
       "')": -0.0018906139
      },
      {
       "\n": -0.004810658
      },
      {
       " look": -0.7112271
      },
      {
       "at": -0.00075596484
      },
      {
       "('": -0.0004795284
      },
      {
       "face": -0.015445793
      },
      {
       "')": -0.0011187008
      },
      {
       "\n": -0.0050213183
      },
      {
       " assert": -1.0488596
      },
      {
       "('": -0.0011952628
      },
      {
       "electric": -0.50893164
      },
      {
       "_": -0.0015425183
      },
      {
       "sh": -0.0004256799
      },
      {
       "aver": -0.00044452143
      },
      {
       "'": -0.004459329
      },
      {
       " in": -0.02765908
      },
      {
       " '": -0.0029252837
      },
      {
       "hands": -0.0034004655
      },
      {
       "')": -0.0049646515
      },
      {
       "\n": -0.002641607
      },
      {
       " else": -0.0016019199
      },
      {
       ":": -0.0011195361
      },
      {
       " grab": -0.003195641
      },
      {
       "('": -0.0008160948
      },
      {
       "electric": -0.000502546
      },
      {
       "_": -0.00027530332
      },
      {
       "sh": -0.00013550156
      },
      {
       "aver": -0.00096500135
      },
      {
       "')": -0.0023253919
      },
      {
       "\n": -0.0045890193
      },
      {
       " shave": -0.22506276
      },
      {
       "('": -0.24814375
      },
      {
       "face": -0.64162314
      },
      {
       "')": -0.017833866
      },
      {
       "\n": -0.009760312
      },
      {
       " #": -0.1651044
      },
      {
       " 4": -0.0084335385
      },
      {
       ":": -0.0019024963
      },
      {
       " switch": -0.13208514
      },
      {
       " off": -0.03422061
      },
      {
       " electric": -0.05970613
      },
      {
       " sh": -0.0036213004
      },
      {
       "aver": -0.00045883397
      },
      {
       "\n": -0.02212224
      },
      {
       " assert": -0.703793
      },
      {
       "('": -0.0004084472
      },
      {
       "electric": -0.0033543543
      },
      {
       "_": -0.0009621376
      },
      {
       "sh": -0.0003264598
      },
      {
       "aver": -0.0005479298
      },
      {
       "'": -0.0009946515
      },
      {
       " in": -0.0018424217
      },
      {
       " '": -0.00085588143
      },
      {
       "hands": -0.00068659574
      },
      {
       "')": -0.0012862133
      },
      {
       "\n": -0.001349359
      },
      {
       " else": -0.0012213441
      },
      {
       ":": -0.0011432267
      },
      {
       " grab": -0.0010011544
      },
      {
       "('": -0.0003794682
      },
      {
       "electric": -0.0002712502
      },
      {
       "_": -0.00015696288
      },
      {
       "sh": -0.00016793102
      },
      {
       "aver": -0.00084407313
      },
      {
       "')": -0.0026220062
      },
      {
       "\n": -0.0034091377
      },
      {
       " switch": -0.0018403905
      },
      {
       "off": -0.0049029533
      },
      {
       "('": -0.00051876775
      },
      {
       "electric": -0.0004492926
      },
      {
       "_": -0.00045692569
      },
      {
       "sh": -0.00024287197
      },
      {
       "aver": -0.00057226245
      },
      {
       "')": -0.002218337
      },
      {
       "\n": -0.026228998
      },
      {
       " #": -0.016438723
      },
      {
       " 5": -0.0065689627
      },
      {
       ":": -0.0013219636
      },
      {
       " put": -0.31711647
      },
      {
       " electric": -0.42279175
      },
      {
       " sh": -0.0038952022
      },
      {
       "aver": -0.0005711877
      },
      {
       " back": -0.049688727
      },
      {
       "\n": -0.023655623
      },
      {
       " assert": -0.059349462
      },
      {
       "obj": -0.47790855
      },
      {
       "back": -0.0033485526
      },
      {
       "('": -0.0012134659
      },
      {
       "electric": -0.0011603505
      },
      {
       "_": -0.0008364372
      },
      {
       "sh": -0.00045072404
      },
      {
       "aver": -0.00041745167
      },
      {
       "')": -0.002940585
      },
      {
       "\n": -0.22938111
      },
      {
       " #": -0.014230563
      },
      {
       " 6": -0.005779947
      },
      {
       ":": -0.0023654837
      },
      {
       " Done": -0.17866123
      },
      {
       "<|endoftext|>": -0.26735428
      },
      {
       "def": -0.45869222
      },
      {
       " make": -1.1120948
      },
      {
       "_": -0.0010095066
      },
      {
       "co": -0.15926152
      },
      {
       "ffee": -0.0101817865
      },
      {
       "():": -0.026417721
      },
      {
       "\n": -0.019378262
      },
      {
       " #": -0.007074269
      },
      {
       " 0": -0.005001914
      },
      {
       ":": -0.0023145794
      },
      {
       " find": -0.2202816
      },
      {
       " coffee": -0.59279716
      },
      {
       " maker": -0.1515218
      },
      {
       "\n": -0.034197107
      },
      {
       " find": -0.01248567
      },
      {
       "('": -0.0014469496
      },
      {
       "co": -9.377476e-05
      },
      {
       "ffee": -0.15046309
      },
      {
       "_": -0.0013590863
      },
      {
       "maker": -0.0006794366
      },
      {
       "')": -0.0016171437
      },
      {
       "\n": -0.009451468
      },
      {
       " #": -0.003497657
      },
      {
       " 1": -0.0021758056
      },
      {
       ":": -0.00059069006
      },
      {
       " grab": -0.6121951
      },
      {
       " coffee": -0.06959257
      },
      {
       " filter": -0.62839854
      },
      {
       "\n": -0.023078624
      },
      {
       " assert": -0.5062839
      },
      {
       "('": -0.00093719765
      },
      {
       "close": -0.011261298
      },
      {
       "'": -0.0018744307
      },
      {
       " to": -0.00032204814
      },
      {
       " '": -0.0015919495
      },
      {
       "co": -0.0016976246
      },
      {
       "ffee": -0.019141098
      },
      {
       "_": -0.0022777189
      },
      {
       "filter": -0.08691847
      },
      {
       "')": -0.006852673
      },
      {
       "\n": -0.005177686
      },
      {
       " else": -0.0008842211
      },
      {
       ":": -0.0013310958
      },
      {
       " find": -0.0036059876
      },
      {
       "('": -0.0013445832
      },
      {
       "co": -0.00033558442
      },
      {
       "ffee": -0.0039405585
      },
      {
       "_": -0.0013039997
      },
      {
       "filter": -0.0018360324
      },
      {
       "')": -0.0028452403
      },
      {
       "\n": -0.005015512
      },
      {
       " grab": -0.0027923419
      },
      {
       "('": -0.00064836355
      },
      {
       "co": -0.0002561051
      },
      {
       "ffee": -0.0025438992
      },
      {
       "_": -0.0009393453
      },
      {
       "filter": -0.00047833633
      },
      {
       "')": -0.0022442052
      },
      {
       "\n": -0.004211613
      },
      {
       " assert": -0.1628886
      },
      {
       "('": -0.0005398189
      },
      {
       "co": -0.0030667898
      },
      {
       "ffee": -0.0129758
      },
      {
       "_": -0.0005443507
      },
      {
       "filter": -0.0013558639
      },
      {
       "'": -0.0014813296
      },
      {
       " in": -0.0031728018
      },
      {
       " '": -0.0014372787
      },
      {
       "hands": -0.0027978406
      },
      {
       "')": -0.004307867
      },
      {
       "\n": -0.00223835
      },
      {
       " else": -0.0025936787
      },
      {
       ":": -0.0010413099
      },
      {
       " grab": -0.0013606388
      },
      {
       "('": -0.0009161371
      },
      {
       "co": -0.000120481265
      },
      {
       "ffee": -0.0008544527
      },
      {
       "_": -0.0013605197
      },
      {
       "filter": -0.00047940828
      },
      {
       "')": -0.0009857005
      },
      {
       "\n": -0.0044511273
      },
      {
       " tur": -0.11141792
      },
      {
       "nt": -2.6538237e-05
      },
      {
       "o": -0.00026325852
      },
      {
       "('": -0.0002603966
      },
      {
       "co": -0.00043653257
      },
      {
       "ffee": -0.003806226
      },
      {
       "_": -0.00029986876
      },
      {
       "filter": -0.0028316122
      },
      {
       "')": -0.0010469183
      },
      {
       "\n": -0.0020875211
      },
      {
       " assert": -0.07412485
      },
      {
       "('": -0.00020394142
      },
      {
       "co": -0.00045442232
      },
      {
       "ffee": -0.00049514946
      },
      {
       "_": -0.00055568025
      },
      {
       "filter": -0.00037588822
      },
      {
       "'": -0.0007854929
      },
      {
       " in": -0.00074188696
      },
      {
       " '": -0.00046861471
      },
      {
       "hands": -0.0010316446
      },
      {
       "')": -0.00116608
      },
      {
       "\n": -0.0010567638
      },
      {
       " else": -0.00092580245
      },
      {
       ":": -0.00046730434
      },
      {
       " grab": -0.0005319464
      },
      {
       "('": -0.00036157944
      },
      {
       "co": -6.4446605e-05
      },
      {
       "ffee": -0.00047964763
      },
      {
       "_": -0.00038531228
      },
      {
       "filter": -0.0003850729
      },
      {
       "')": -0.0013700703
      },
      {
       "\n": -0.0024858185
      },
      {
       " point": -0.016653728
      },
      {
       "at": -0.00039962292
      },
      {
       "('": -0.00026493028
      },
      {
       "co": -8.173468e-05
      },
      {
       "ffee": -0.00063488266
      },
      {
       "_": -0.00065158313
      },
      {
       "filter": -0.00043832068
      },
      {
       "')": -0.0018055186
      },
      {
       "\n": -0.0050902753
      },
      {
       " #": -0.0026995188
      },
      {
       " 2": -0.0039871135
      },
      {
       ":": -0.00060774625
      },
      {
       " put": -0.5259288
      },
      {
       " coffee": -0.6925852
      },
      {
       " coffee": -0.39695734
      },
      {
       "\n": -0.1898839
      },
      {
       " assert": -0.15752873
      },
      {
       "('": -0.00051411585
      },
      {
       "co": -0.073248215
      },
      {
       "ffee": -0.006313706
      },
      {
       "_": -0.0017255673
      },
      {
       "filter": -0.02852228
      },
      {
       "'": -0.0011055127
      },
      {
       " in": -0.0020356765
      },
      {
       " '": -0.00082074676
      },
      {
       "hands": -0.0008143039
      },
      {
       "')": -0.0018251647
      },
      {
       "\n": -0.0019105001
      },
      {
       " else": -0.00095020543
      },
      {
       ":": -0.0004614594
      },
      {
       " grab": -0.002137338
      },
      {
       "('": -0.00037243115
      },
      {
       "co": -6.122609e-05
      },
      {
       "ffee": -0.00023667031
      },
      {
       "_": -0.00031441596
      },
      {
       "filter": -0.00034416933
      },
      {
       "')": -0.0011232363
      },
      {
       "\n": -0.003095549
      },
      {
       " fill": -0.8007837
      },
      {
       "('": -0.07190618
      },
      {
       "co": -0.00079843693
      },
      {
       "ffee": -0.0023289765
      },
      {
       "_": -0.023457844
      },
      {
       "filter": -0.01226498
      },
      {
       "')": -0.12348383
      },
      {
       "\n": -0.006779397
      },
      {
       " tur": -0.6345096
      },
      {
       "nt": -4.871012e-05
      },
      {
       "o": -0.0005278305
      },
      {
       "('": -0.00022146793
      },
      {
       "co": -0.0010226364
      },
      {
       "ffee": -0.0084460415
      },
      {
       "_": -0.001047873
      },
      {
       "filter": -0.070131846
      },
      {
       "')": -0.00074343756
      },
      {
       "\n": -0.0013994371
      },
      {
       " look": -0.033924527
      },
      {
       "at": -0.00025920733
      },
      {
       "('": -0.00021860692
      },
      {
       "co": -0.00017210613
      },
      {
       "ffee": -0.001002109
      },
      {
       "_": -0.0004887075
      },
      {
       "filter": -0.0007968252
      },
      {
       "')": -0.0012515995
      },
      {
       "\n": -0.0042145466
      },
      {
       " #": -0.007104944
      },
      {
       " 3": -0.0048890603
      },
      {
       ":": -0.0010202485
      },
      {
       " put": -0.34937313
      },
      {
       " coffee": -0.66580594
      },
      {
       " filter": -0.012086327
      },
      {
       " in": -0.74981034
      },
      {
       "\n": -0.050731454
      },
      {
       " assert": -0.2214011
      },
      {
       "('": -0.0002903283
      },
      {
       "co": -0.00076461444
      },
      {
       "ffee": -0.00064180145
      },
      {
       "_": -0.00014969209
      },
      {
       "filter": -0.00054685504
      },
      {
       "'": -0.00058466673
      },
      {
       " in": -0.0006419216
      },
      {
       " '": -0.0005371935
      },
      {
       "hands": -0.0005055272
      },
      {
       "')": -0.0006265925
      },
      {
       "\n": -0.0007527424
      },
      {
       " else": -0.0004634878
      },
      {
       ":": -0.000368853
      },
      {
       " grab": -0.0005800119
      },
      {
       "('": -0.0003179941
      },
      {
       "co": -3.690939e-05
      },
      {
       "ffee": -0.00021634194
      },
      {
       "_": -0.00037100064
      },
      {
       "filter": -0.00018438557
      },
      {
       "')": -0.0007791692
      },
      {
       "\n": -0.0017840217
      },
      {
       " put": -0.0035688386
      },
      {
       "obj": -0.03504196
      },
      {
       "back": -0.0003137007
      },
      {
       "('": -0.00046968853
      },
      {
       "co": -8.00667e-05
      },
      {
       "ffee": -0.0008394203
      },
      {
       "_": -0.00042699307
      },
      {
       "filter": -0.0008242085
      },
      {
       "')": -0.0010586731
      },
      {
       "\n": -0.0052704974
      },
      {
       " #": -0.0025075069
      },
      {
       " 4": -0.005248928
      },
      {
       ":": -0.0011243102
      },
      {
       " switch": -0.6254982
      },
      {
       " on": -0.012517355
      },
      {
       " coffee": -0.21309058
      },
      {
       " maker": -0.011900106
      },
      {
       "\n": -0.011681719
      },
      {
       " assert": -0.37769735
      },
      {
       "on": -0.0003352268
      },
      {
       "('": -0.0004324776
      },
      {
       "co": -0.00010844024
      },
      {
       "ffee": -0.059013728
      },
      {
       "_": -0.0008219398
      },
      {
       "maker": -0.0005614051
      },
      {
       "')": -0.0012159712
      },
      {
       "\n": -0.0044383146
      },
      {
       " #": -0.016194325
      },
      {
       " 5": -0.0035204475
      },
      {
       ":": -0.0014445627
      },
      {
       " wait": -1.0279771
      },
      {
       " coffee": -0.1635718
      },
      {
       "\n": -0.30933714
      },
      {
       " cup": -0.32457945
      },
      {
       "\n": -0.013773959
      },
      {
       " assert": -0.68401706
      },
      {
       "('": -0.0017351198
      },
      {
       "cup": -0.017825916
      },
      {
       "')": -0.0019954217
      },
      {
       "\n": -0.0036626386
      },
      {
       " assert": -0.46876726
      },
      {
       "('": -0.00048978225
      },
      {
       "close": -0.038536586
      },
      {
       "'": -0.00093069556
      },
      {
       " to": -0.0002977211
      },
      {
       " '": -0.0017696341
      },
      {
       "cup": -0.015742868
      },
      {
       "')": -0.0029605525
      },
      {
       "\n": -0.0019917197
      },
      {
       " else": -0.0008295757
      },
      {
       ":": -0.00096010824
      },
      {
       " find": -0.002079875
      },
      {
       "('": -0.000802015
      },
      {
       "cup": -0.00021634194
      },
      {
       "')": -0.0025029676
      },
      {
       "\n": -0.0050448035
      },
      {
       " grab": -0.6574653
      },
      {
       "('": -0.00048620783
      },
      {
       "cup": -0.00089591293
      },
      {
       "')": -0.0012891982
      },
      {
       "\n": -0.002166607
      },
      {
       " assert": -0.10261801
      },
      {
       "('": -0.00033844542
      },
      {
       "cup": -0.013467864
      },
      {
       "'": -0.0006840886
      },
      {
       " in": -0.0023504866
      },
      {
       " '": -0.0010910763
      },
      {
       "hands": -0.0030128625
      },
      {
       "')": -0.0024076044
      },
      {
       "\n": -0.0014355488
      },
      {
       " else": -0.001633801
      },
      {
       ":": -0.0004608624
      },
      {
       " grab": -0.0027684926
      },
      {
       "('": -0.0005797763
      },
      {
       "cup": -0.00017496901
      },
      {
       "')": -0.0020360954
      },
      {
       "\n": -0.003281334
      },
      {
       " tur": -0.6223645
      },
      {
       "('": -0.0036855503
      },
      {
       "co": -0.19474213
      },
      {
       "ffee": -0.026895562
      },
      {
       "')": -0.6647396
      },
      {
       "\n": -0.0070656245
      },
      {
       " #": -0.60438585
      },
      {
       " 6": -0.0049751964
      },
      {
       ":": -0.0015598917
      },
      {
       " Done": -0.48236552
      },
      {
       "<|endoftext|>": -0.6832035
      },
      {
       "def": -0.5629895
      },
      {
       "obj": -0.116559096
      },
      {
       "back": -0.001256612
      },
      {
       "('": -0.0011377366
      },
      {
       "cup": -0.010708925
      },
      {
       "')": -0.001047276
      }
     ],
     "text_offset": [
      3338,
      3340,
      3342,
      3343,
      3348,
      3357,
      3360,
      3364,
      3365,
      3370,
      3372,
      3380,
      3381,
      3383,
      3387,
      3389,
      3390,
      3392,
      3394,
      3395,
      3400,
      3409,
      3412,
      3416,
      3417,
      3424,
      3426,
      3431,
      3432,
      3435,
      3437,
      3445,
      3446,
      3448,
      3452,
      3454,
      3455,
      3460,
      3461,
      3466,
      3468,
      3476,
      3477,
      3479,
      3483,
      3485,
      3486,
      3491,
      3493,
      3501,
      3502,
      3504,
      3508,
      3510,
      3511,
      3518,
      3520,
      3528,
      3529,
      3531,
      3535,
      3536,
      3539,
      3541,
      3546,
      3548,
      3549,
      3554,
      3555,
      3560,
      3562,
      3570,
      3571,
      3573,
      3577,
      3579,
      3580,
      3584,
      3586,
      3587,
      3589,
      3597,
      3598,
      3600,
      3604,
      3606,
      3607,
      3614,
      3616,
      3624,
      3625,
      3627,
      3631,
      3632,
      3635,
      3637,
      3642,
      3644,
      3645,
      3650,
      3651,
      3656,
      3658,
      3666,
      3667,
      3669,
      3673,
      3675,
      3676,
      3682,
      3684,
      3686,
      3694,
      3695,
      3697,
      3701,
      3703,
      3704,
      3706,
      3708,
      3709,
      3716,
      3719,
      3728,
      3731,
      3735,
      3736,
      3743,
      3745,
      3753,
      3754,
      3756,
      3760,
      3761,
      3764,
      3766,
      3771,
      3773,
      3774,
      3779,
      3780,
      3785,
      3787,
      3795,
      3796,
      3798,
      3802,
      3804,
      3805,
      3812,
      3814,
      3816,
      3824,
      3825,
      3827,
      3831,
      3833,
      3834,
      3836,
      3838,
      3839,
      3845,
      3846,
      3850,
      3852,
      3853,
      3855,
      3859,
      3861,
      3862,
      3867,
      3869,
      3871,
      3875,
      3877,
      3878,
      3885,
      3887,
      3895,
      3896,
      3898,
      3902,
      3903,
      3906,
      3908,
      3913,
      3915,
      3916,
      3921,
      3922,
      3927,
      3929,
      3937,
      3938,
      3940,
      3944,
      3946,
      3947,
      3953,
      3955,
      3959,
      3961,
      3962,
      3964,
      3966,
      3967,
      3974,
      3978,
      3987,
      3990,
      3994,
      3995,
      4002,
      4004,
      4012,
      4013,
      4015,
      4019,
      4020,
      4023,
      4025,
      4030,
      4032,
      4033,
      4038,
      4039,
      4044,
      4046,
      4054,
      4055,
      4057,
      4061,
      4063,
      4064,
      4071,
      4074,
      4076,
      4084,
      4085,
      4087,
      4091,
      4093,
      4094,
      4096,
      4098,
      4099,
      4103,
      4112,
      4115,
      4119,
      4124,
      4125,
      4129,
      4132,
      4136,
      4138,
      4146,
      4147,
      4149,
      4153,
      4155,
      4156,
      4158,
      4160,
      4161,
      4166,
      4167,
      4170,
      4175,
      4176,
      4178,
      4182,
      4185,
      4186,
      4188,
      4190,
      4191,
      4196,
      4203,
      4209,
      4210,
      4215,
      4217,
      4219,
      4223,
      4224,
      4229,
      4231,
      4232,
      4234,
      4236,
      4237,
      4242,
      4249,
      4256,
      4257,
      4264,
      4266,
      4271,
      4272,
      4275,
      4277,
      4279,
      4283,
      4284,
      4290,
      4292,
      4293,
      4298,
      4299,
      4304,
      4306,
      4308,
      4312,
      4313,
      4319,
      4321,
      4322,
      4327,
      4329,
      4331,
      4335,
      4336,
      4342,
      4344,
      4345,
      4352,
      4354,
      4356,
      4360,
      4361,
      4367,
      4368,
      4371,
      4373,
      4378,
      4380,
      4381,
      4386,
      4387,
      4392,
      4394,
      4396,
      4400,
      4401,
      4407,
      4409,
      4410,
      4414,
      4416,
      4417,
      4419,
      4421,
      4425,
      4426,
      4432,
      4434,
      4435,
      4442,
      4444,
      4446,
      4450,
      4451,
      4457,
      4458,
      4461,
      4463,
      4468,
      4470,
      4471,
      4476,
      4477,
      4482,
      4484,
      4486,
      4490,
      4491,
      4497,
      4499,
      4500,
      4506,
      4508,
      4510,
      4512,
      4516,
      4517,
      4523,
      4525,
      4526,
      4528,
      4530,
      4531,
      4536,
      4541,
      4548,
      4549,
      4556,
      4558,
      4560,
      4564,
      4565,
      4571,
      4572,
      4575,
      4577,
      4582,
      4584,
      4585,
      4590,
      4591,
      4596,
      4598,
      4600,
      4604,
      4605,
      4611,
      4613,
      4614,
      4619,
      4621,
      4623,
      4627,
      4628,
      4634,
      4636,
      4637,
      4641,
      4643,
      4644,
      4646,
      4648,
      4652,
      4653,
      4659,
      4661,
      4662,
      4667,
      4669,
      4671,
      4673,
      4677,
      4678,
      4684,
      4686,
      4687,
      4689,
      4691,
      4692,
      4696,
      4703,
      4710,
      4715,
      4716,
      4723,
      4725,
      4727,
      4731,
      4732,
      4738,
      4739,
      4742,
      4744,
      4749,
      4751,
      4752,
      4757,
      4758,
      4763,
      4765,
      4767,
      4771,
      4772,
      4778,
      4780,
      4781,
      4785,
      4788,
      4792,
      4794,
      4796,
      4800,
      4801,
      4807,
      4809,
      4810,
      4812,
      4814,
      4815,
      4822,
      4825,
      4832,
      4838,
      4839,
      4846,
      4848,
      4850,
      4852,
      4856,
      4857,
      4862,
      4864,
      4865,
      4867,
      4869,
      4870,
      4875,
      4882,
      4887,
      4891,
      4892,
      4897,
      4899,
      4902,
      4904,
      4905,
      4912,
      4914,
      4919,
      4920,
      4923,
      4925,
      4928,
      4930,
      4931,
      4936,
      4937,
      4942,
      4944,
      4947,
      4949,
      4950,
      4955,
      4957,
      4960,
      4962,
      4963,
      4970,
      4972,
      4975,
      4976,
      4979,
      4981,
      4986,
      4988,
      4989,
      4994,
      4995,
      5000,
      5002,
      5005,
      5007,
      5008,
      5013,
      5015,
      5017,
      5021,
      5023,
      5024,
      5026,
      5028,
      5029,
      5034,
      5035,
      5039,
      5042,
      5046,
      5048,
      5051
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Shave",
   "task_description": "I go into the bathroom, cut the tub water on, then wet my legs. I then open the shaving cream and apply it to my legs. I grab the razor off of the shelf and start shaving my legs until they are hairless and smooth.",
   "program": [
    "[Find] <razor> (1)",
    "[TurnTo] <razor> (1)",
    "[PointAt] <razor> (1)",
    "[Wash] <razor> (1)",
    "[TurnTo] <razor> (1)",
    "[LookAt] <razor> (1)",
    "[Grab] <razor> (1)",
    "[Walk] <bathroom> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_turk_third",
   "file_id": "split39_1",
   "goal_condition": [
    [
     [
      240,
      1000,
      "HOLDS_RH",
      "character",
      "razor"
     ],
     [
      240,
      1,
      "INSIDE",
      "character",
      "bathroom"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1169,
   "completion_tokens": 568,
   "total_tokens": 1737
  }
 },
 "5": {
  "plan": [
   [
    " # 0: find hanger\n find('hanger')\n # 1: grab hanger\n assert('close' to 'hanger')\n else: find('hanger')\n grab('hanger')\n assert('hanger' in 'hands')\n else: grab('hanger')\n turnto('hanger')\n assert('hanger' in 'hands')\n else: grab('hanger')\n pointat('hanger')\n # 2: grab jacket\n find('jacket')\n grab('jacket')\n assert('jacket' in 'hands')\n else: grab('jacket')\n turnto('jacket')\n lookat('jacket')\n # 3: hang jacket on hanger\n assert('hanger' in 'hands')\n else: grab('hanger')\n hang('jacket', 'hanger')\n # 4: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " h",
      "anger",
      "\n",
      " find",
      "('",
      "h",
      "anger",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " grab",
      " h",
      "anger",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "h",
      "anger",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "h",
      "anger",
      "')",
      "\n",
      " grab",
      "('",
      "h",
      "anger",
      "')",
      "\n",
      " assert",
      "('",
      "h",
      "anger",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "h",
      "anger",
      "')",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "h",
      "anger",
      "')",
      "\n",
      " assert",
      "('",
      "h",
      "anger",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "h",
      "anger",
      "')",
      "\n",
      " point",
      "at",
      "('",
      "h",
      "anger",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " grab",
      " jacket",
      "\n",
      " find",
      "('",
      "j",
      "acket",
      "')",
      "\n",
      " grab",
      "('",
      "j",
      "acket",
      "')",
      "\n",
      " assert",
      "('",
      "j",
      "acket",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "j",
      "acket",
      "')",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "j",
      "acket",
      "')",
      "\n",
      " look",
      "at",
      "('",
      "j",
      "acket",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " hang",
      " jacket",
      " on",
      " h",
      "anger",
      "\n",
      " assert",
      "('",
      "h",
      "anger",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "h",
      "anger",
      "')",
      "\n",
      " hang",
      "('",
      "j",
      "acket",
      "',",
      " '",
      "h",
      "anger",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.015407417,
      -0.0072792843,
      -0.0019405999,
      -0.5702514,
      -0.3543354,
      -0.004945424,
      -0.033175565,
      -0.03452134,
      -0.0019149183,
      -0.0004737435,
      -0.00054399215,
      -0.0015415646,
      -0.0077305236,
      -0.0037278496,
      -0.0021919366,
      -0.00057202304,
      -0.16280212,
      -0.08618776,
      -0.0016577403,
      -0.019573234,
      -0.5250988,
      -0.0016170247,
      -0.0059444024,
      -0.002368947,
      -0.000554368,
      -0.0024613186,
      -0.00064060936,
      -0.00018736672,
      -0.004404606,
      -0.006483109,
      -0.0012199107,
      -0.0013741902,
      -0.002978847,
      -0.0017792439,
      -0.00048596945,
      -0.0004160193,
      -0.0013606388,
      -0.0066007026,
      -0.0036710717,
      -0.0010871368,
      -0.00029664824,
      -0.000118931544,
      -0.001166678,
      -0.005366914,
      -0.6009743,
      -0.0014742268,
      -0.0070637628,
      -0.00046789853,
      -0.001314324,
      -0.013172729,
      -0.002558482,
      -0.005812322,
      -0.014475693,
      -0.0029373558,
      -0.011745523,
      -0.00268159,
      -0.0023200782,
      -0.0014281474,
      -0.0003936597,
      -0.0001878445,
      -0.002854028,
      -0.004206584,
      -0.54513884,
      -7.613187e-05,
      -6.635395e-05,
      -0.00043426573,
      -0.00040952102,
      -0.00031858825,
      -0.0011139287,
      -0.0030148947,
      -0.3365382,
      -0.00039258585,
      -0.0029823123,
      -0.0006060773,
      -0.0005573492,
      -0.0013281718,
      -0.0008072649,
      -0.00083100714,
      -0.001231367,
      -0.0012868103,
      -0.0027291041,
      -0.0017770954,
      -0.0010597479,
      -0.00075632246,
      -0.00023321231,
      -0.000104625564,
      -0.0008844586,
      -0.0026282792,
      -0.08533455,
      -0.0005739304,
      -0.00032681835,
      -0.00022266187,
      -0.00029283168,
      -0.0019312226,
      -0.005390163,
      -0.003404054,
      -0.0064367973,
      -0.0007671188,
      -1.377672,
      -0.14839146,
      -0.06235226,
      -0.26018462,
      -0.001111063,
      -0.0031894224,
      -0.00016769636,
      -0.0024059317,
      -0.003536718,
      -0.5813205,
      -0.00090862135,
      -0.0003595538,
      -1.688045e-05,
      -0.0015295639,
      -0.0029560686,
      -0.48508838,
      -0.0010126107,
      -0.022125775,
      -6.2420055e-05,
      -0.0012807831,
      -0.0066020237,
      -0.0021579443,
      -0.0021198953,
      -0.0035086025,
      -0.002278315,
      -0.009333961,
      -0.002931201,
      -0.026745869,
      -0.0018374056,
      -0.0011086769,
      -6.015603e-05,
      -0.0026025837,
      -0.004635188,
      -0.3339018,
      -6.2299914e-05,
      -0.0002644525,
      -0.00043044917,
      -0.0407127,
      -9.604066e-05,
      -0.0010312861,
      -0.0021448631,
      -1.0807462,
      -0.0006471705,
      -0.00042424936,
      -0.0008292181,
      -3.643162e-05,
      -0.0022340498,
      -0.0056557367,
      -0.013479524,
      -0.008499723,
      -0.0011102275,
      -0.2579538,
      -0.9115274,
      -0.26335233,
      -0.049199797,
      -0.0007230407,
      -0.009651134,
      -0.22908275,
      -0.0017720785,
      -0.57112837,
      -0.0005308135,
      -0.0015144619,
      -0.031081352,
      -0.003215255,
      -0.003625608,
      -0.029516174,
      -0.006590203,
      -0.024811538,
      -0.0020988104,
      -0.025045585,
      -0.0011734813,
      -0.0014675407,
      -0.00010188283,
      -0.0022711463,
      -0.0048832516,
      -1.6898752,
      -0.13488743,
      -0.08028584,
      -0.0001345479,
      -0.83626676,
      -0.007817505,
      -0.0047523845,
      -0.00016650239,
      -0.0022954622,
      -0.014391517,
      -0.5589735,
      -0.007784945,
      -0.0018027122,
      -0.8702445
     ],
     "top_logprobs": [
      {
       " #": -0.015407417
      },
      {
       " 0": -0.0072792843
      },
      {
       ":": -0.0019405999
      },
      {
       " find": -0.5702514
      },
      {
       " h": -0.3543354
      },
      {
       "anger": -0.004945424
      },
      {
       "\n": -0.033175565
      },
      {
       " find": -0.03452134
      },
      {
       "('": -0.0019149183
      },
      {
       "h": -0.0004737435
      },
      {
       "anger": -0.00054399215
      },
      {
       "')": -0.0015415646
      },
      {
       "\n": -0.0077305236
      },
      {
       " #": -0.0037278496
      },
      {
       " 1": -0.0021919366
      },
      {
       ":": -0.00057202304
      },
      {
       " grab": -0.16280212
      },
      {
       " h": -0.08618776
      },
      {
       "anger": -0.0016577403
      },
      {
       "\n": -0.019573234
      },
      {
       " assert": -0.5250988
      },
      {
       "('": -0.0016170247
      },
      {
       "close": -0.0059444024
      },
      {
       "'": -0.002368947
      },
      {
       " to": -0.000554368
      },
      {
       " '": -0.0024613186
      },
      {
       "h": -0.00064060936
      },
      {
       "anger": -0.00018736672
      },
      {
       "')": -0.004404606
      },
      {
       "\n": -0.006483109
      },
      {
       " else": -0.0012199107
      },
      {
       ":": -0.0013741902
      },
      {
       " find": -0.002978847
      },
      {
       "('": -0.0017792439
      },
      {
       "h": -0.00048596945
      },
      {
       "anger": -0.0004160193
      },
      {
       "')": -0.0013606388
      },
      {
       "\n": -0.0066007026
      },
      {
       " grab": -0.0036710717
      },
      {
       "('": -0.0010871368
      },
      {
       "h": -0.00029664824
      },
      {
       "anger": -0.000118931544
      },
      {
       "')": -0.001166678
      },
      {
       "\n": -0.005366914
      },
      {
       " assert": -0.6009743
      },
      {
       "('": -0.0014742268
      },
      {
       "h": -0.0070637628
      },
      {
       "anger": -0.00046789853
      },
      {
       "'": -0.001314324
      },
      {
       " in": -0.013172729
      },
      {
       " '": -0.002558482
      },
      {
       "hands": -0.005812322
      },
      {
       "')": -0.014475693
      },
      {
       "\n": -0.0029373558
      },
      {
       " else": -0.011745523
      },
      {
       ":": -0.00268159
      },
      {
       " grab": -0.0023200782
      },
      {
       "('": -0.0014281474
      },
      {
       "h": -0.0003936597
      },
      {
       "anger": -0.0001878445
      },
      {
       "')": -0.002854028
      },
      {
       "\n": -0.004206584
      },
      {
       " tur": -0.54513884
      },
      {
       "nt": -7.613187e-05
      },
      {
       "o": -6.635395e-05
      },
      {
       "('": -0.00043426573
      },
      {
       "h": -0.00040952102
      },
      {
       "anger": -0.00031858825
      },
      {
       "')": -0.0011139287
      },
      {
       "\n": -0.0030148947
      },
      {
       " assert": -0.3365382
      },
      {
       "('": -0.00039258585
      },
      {
       "h": -0.0029823123
      },
      {
       "anger": -0.0006060773
      },
      {
       "'": -0.0005573492
      },
      {
       " in": -0.0013281718
      },
      {
       " '": -0.0008072649
      },
      {
       "hands": -0.00083100714
      },
      {
       "')": -0.001231367
      },
      {
       "\n": -0.0012868103
      },
      {
       " else": -0.0027291041
      },
      {
       ":": -0.0017770954
      },
      {
       " grab": -0.0010597479
      },
      {
       "('": -0.00075632246
      },
      {
       "h": -0.00023321231
      },
      {
       "anger": -0.000104625564
      },
      {
       "')": -0.0008844586
      },
      {
       "\n": -0.0026282792
      },
      {
       " point": -0.08533455
      },
      {
       "at": -0.0005739304
      },
      {
       "('": -0.00032681835
      },
      {
       "h": -0.00022266187
      },
      {
       "anger": -0.00029283168
      },
      {
       "')": -0.0019312226
      },
      {
       "\n": -0.005390163
      },
      {
       " #": -0.003404054
      },
      {
       " 2": -0.0064367973
      },
      {
       ":": -0.0007671188
      },
      {
       " hang": -0.9763199
      },
      {
       " jacket": -0.14839146
      },
      {
       "\n": -0.06235226
      },
      {
       " find": -0.26018462
      },
      {
       "('": -0.001111063
      },
      {
       "j": -0.0031894224
      },
      {
       "acket": -0.00016769636
      },
      {
       "')": -0.0024059317
      },
      {
       "\n": -0.003536718
      },
      {
       " grab": -0.5813205
      },
      {
       "('": -0.00090862135
      },
      {
       "j": -0.0003595538
      },
      {
       "acket": -1.688045e-05
      },
      {
       "')": -0.0015295639
      },
      {
       "\n": -0.0029560686
      },
      {
       " assert": -0.48508838
      },
      {
       "('": -0.0010126107
      },
      {
       "j": -0.022125775
      },
      {
       "acket": -6.2420055e-05
      },
      {
       "'": -0.0012807831
      },
      {
       " in": -0.0066020237
      },
      {
       " '": -0.0021579443
      },
      {
       "hands": -0.0021198953
      },
      {
       "')": -0.0035086025
      },
      {
       "\n": -0.002278315
      },
      {
       " else": -0.009333961
      },
      {
       ":": -0.002931201
      },
      {
       " grab": -0.026745869
      },
      {
       "('": -0.0018374056
      },
      {
       "j": -0.0011086769
      },
      {
       "acket": -6.015603e-05
      },
      {
       "')": -0.0026025837
      },
      {
       "\n": -0.004635188
      },
      {
       " tur": -0.3339018
      },
      {
       "nt": -6.2299914e-05
      },
      {
       "o": -0.0002644525
      },
      {
       "('": -0.00043044917
      },
      {
       "j": -0.0407127
      },
      {
       "acket": -9.604066e-05
      },
      {
       "')": -0.0010312861
      },
      {
       "\n": -0.0021448631
      },
      {
       " assert": -0.6931024
      },
      {
       "at": -0.0006471705
      },
      {
       "('": -0.00042424936
      },
      {
       "j": -0.0008292181
      },
      {
       "acket": -3.643162e-05
      },
      {
       "')": -0.0022340498
      },
      {
       "\n": -0.0056557367
      },
      {
       " #": -0.013479524
      },
      {
       " 3": -0.008499723
      },
      {
       ":": -0.0011102275
      },
      {
       " hang": -0.2579538
      },
      {
       " up": -0.7765873
      },
      {
       " on": -0.26335233
      },
      {
       " h": -0.049199797
      },
      {
       "anger": -0.0007230407
      },
      {
       "\n": -0.009651134
      },
      {
       " assert": -0.22908275
      },
      {
       "('": -0.0017720785
      },
      {
       "h": -0.57112837
      },
      {
       "anger": -0.0005308135
      },
      {
       "'": -0.0015144619
      },
      {
       " in": -0.031081352
      },
      {
       " '": -0.003215255
      },
      {
       "hands": -0.003625608
      },
      {
       "')": -0.029516174
      },
      {
       "\n": -0.006590203
      },
      {
       " else": -0.024811538
      },
      {
       ":": -0.0020988104
      },
      {
       " grab": -0.025045585
      },
      {
       "('": -0.0011734813
      },
      {
       "h": -0.0014675407
      },
      {
       "anger": -0.00010188283
      },
      {
       "')": -0.0022711463
      },
      {
       "\n": -0.0048832516
      },
      {
       " assert": -1.0268409
      },
      {
       "('": -0.13488743
      },
      {
       "j": -0.08028584
      },
      {
       "acket": -0.0001345479
      },
      {
       "',": -0.83626676
      },
      {
       " '": -0.007817505
      },
      {
       "h": -0.0047523845
      },
      {
       "anger": -0.00016650239
      },
      {
       "')": -0.0022954622
      },
      {
       "\n": -0.014391517
      },
      {
       " #": -0.5589735
      },
      {
       " 4": -0.007784945
      },
      {
       ":": -0.0018027122
      },
      {
       " Done": -0.8702445
      }
     ],
     "text_offset": [
      3347,
      3349,
      3351,
      3352,
      3357,
      3359,
      3364,
      3365,
      3370,
      3372,
      3373,
      3378,
      3380,
      3381,
      3383,
      3385,
      3386,
      3391,
      3393,
      3398,
      3399,
      3406,
      3408,
      3413,
      3414,
      3417,
      3419,
      3420,
      3425,
      3427,
      3428,
      3433,
      3434,
      3439,
      3441,
      3442,
      3447,
      3449,
      3450,
      3455,
      3457,
      3458,
      3463,
      3465,
      3466,
      3473,
      3475,
      3476,
      3481,
      3482,
      3485,
      3487,
      3492,
      3494,
      3495,
      3500,
      3501,
      3506,
      3508,
      3509,
      3514,
      3516,
      3517,
      3521,
      3523,
      3524,
      3526,
      3527,
      3532,
      3534,
      3535,
      3542,
      3544,
      3545,
      3550,
      3551,
      3554,
      3556,
      3561,
      3563,
      3564,
      3569,
      3570,
      3575,
      3577,
      3578,
      3583,
      3585,
      3586,
      3592,
      3594,
      3596,
      3597,
      3602,
      3604,
      3605,
      3607,
      3609,
      3610,
      3615,
      3622,
      3623,
      3628,
      3630,
      3631,
      3636,
      3638,
      3639,
      3644,
      3646,
      3647,
      3652,
      3654,
      3655,
      3662,
      3664,
      3665,
      3670,
      3671,
      3674,
      3676,
      3681,
      3683,
      3684,
      3689,
      3690,
      3695,
      3697,
      3698,
      3703,
      3705,
      3706,
      3710,
      3712,
      3713,
      3715,
      3716,
      3721,
      3723,
      3724,
      3729,
      3731,
      3733,
      3734,
      3739,
      3741,
      3742,
      3744,
      3746,
      3747,
      3752,
      3759,
      3762,
      3764,
      3769,
      3770,
      3777,
      3779,
      3780,
      3785,
      3786,
      3789,
      3791,
      3796,
      3798,
      3799,
      3804,
      3805,
      3810,
      3812,
      3813,
      3818,
      3820,
      3821,
      3826,
      3828,
      3829,
      3834,
      3836,
      3838,
      3839,
      3844,
      3846,
      3847,
      3849,
      3851,
      3852
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Hang up jacket",
   "task_description": "Upon entering, remove coat and utilize coatrack/hook to store coat by neatly hanging coat on hook.",
   "program": [
    "[Walk] <bedroom> (1)",
    "[Walk] <clothes_jacket> (1)",
    "[Find] <clothes_jacket> (1)",
    "[Find] <clothes_jacket> (1)",
    "[PutOff] <clothes_jacket> (1)",
    "[Grab] <clothes_jacket> (1)",
    "[Find] <hanger> (1)",
    "[PutBack] <clothes_jacket> (1) <hanger> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_turk_third",
   "file_id": "split65_2",
   "goal_condition": [
    [
     [
      240,
      162,
      "INSIDE",
      "character",
      "bedroom"
     ],
     [
      1000,
      1001,
      "ON",
      "clothes_jacket",
      "hanger"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1174,
   "completion_tokens": 187,
   "total_tokens": 1361
  }
 },
 "6": {
  "plan": [
   [
    " # 0: find newspaper\n find('newspaper')\n # 1: grab newspaper\n grab('newspaper')\n # 2: find desk\n find('desk')\n # 3: put newspaper on desk\n assert('close' to 'desk')\n else: find('desk')\n puton('newspaper')\n # 4: sit down\n sit('desk')\n # 5: read newspaper\n lookat('newspaper')\n read('newspaper')\n # 6: put newspaper back\n putback('newspaper')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " newspaper",
      "\n",
      " find",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " grab",
      " newspaper",
      "\n",
      " grab",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " find",
      " desk",
      "\n",
      " find",
      "('",
      "des",
      "k",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " put",
      " newspaper",
      " on",
      " desk",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "des",
      "k",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "des",
      "k",
      "')",
      "\n",
      " put",
      "on",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " sit",
      " down",
      "\n",
      " sit",
      "('",
      "des",
      "k",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " read",
      " newspaper",
      "\n",
      " look",
      "at",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " read",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " #",
      " 6",
      ":",
      " put",
      " newspaper",
      " back",
      "\n",
      " put",
      "back",
      "('",
      "new",
      "sp",
      "aper",
      "')"
     ],
     "token_logprobs": [
      -0.017672297,
      -0.008794801,
      -0.0019450181,
      -0.47599605,
      -0.28250423,
      -0.028766457,
      -0.02894388,
      -0.0021687585,
      -0.0020696651,
      -0.0006238507,
      -0.00064895867,
      -0.0027124882,
      -0.00789589,
      -0.0039983634,
      -0.002397148,
      -0.0004492926,
      -0.19348107,
      -0.13552971,
      -0.014547901,
      -0.77656233,
      -0.0012912257,
      -0.0008240883,
      -0.00026421316,
      -0.0009461477,
      -0.0014295809,
      -0.0049716593,
      -0.54853135,
      -0.006544844,
      -0.0005346873,
      -1.5972453,
      -2.3684556,
      -0.20758343,
      -0.6130744,
      -0.00088278874,
      -0.0012582828,
      -0.00017914227,
      -0.0014825244,
      -0.0064353566,
      -0.028515223,
      -0.0070826723,
      -0.0007714141,
      -3.341728,
      -0.2564736,
      -0.054516144,
      -0.14455207,
      -0.012841817,
      -1.203934,
      -0.001867204,
      -0.14394212,
      -0.0036412827,
      -0.00042019345,
      -0.0023555038,
      -0.021685718,
      -8.447461e-05,
      -0.0064099226,
      -0.005177686,
      -0.0021424724,
      -0.0020411115,
      -0.0049724984,
      -0.0019553453,
      -0.00095807976,
      -0.00020191487,
      -0.0028180422,
      -0.00551416,
      -0.107082196,
      -0.052881744,
      -0.00113929,
      -0.18699168,
      -0.00043009248,
      -0.00061156094,
      -0.84303164,
      -0.008086409,
      -0.06573555,
      -0.0066555436,
      -0.0008113217,
      -0.27606568,
      -2.7633128,
      -0.60768384,
      -0.10856879,
      -0.00456992,
      -0.027618391,
      -0.0002409637,
      -0.034737,
      -0.0053070495,
      -0.014827649,
      -0.004637644,
      -0.0007795259,
      -0.15829192,
      -0.23493226,
      -0.010054382,
      -1.8837838,
      -0.0010530055,
      -0.0007038932,
      -0.0037874996,
      -0.00042496464,
      -0.00059247814,
      -0.001718579,
      -0.2984347,
      -0.19275507,
      -0.009025791,
      -0.000681465,
      -0.001742463,
      -0.00050850736,
      -0.0026068874,
      -0.88419306,
      -0.11206943,
      -0.0052912906,
      -0.0019366575,
      -0.8958891,
      -0.2019492,
      -0.28353631,
      -0.051759005,
      -0.7056427,
      -0.23091403,
      -0.002944051,
      -0.007426151,
      -0.00086471223,
      -0.00037016338,
      -0.0069943736
     ],
     "top_logprobs": [
      {
       " #": -0.017672297
      },
      {
       " 0": -0.008794801
      },
      {
       ":": -0.0019450181
      },
      {
       " find": -0.47599605
      },
      {
       " newspaper": -0.28250423
      },
      {
       "\n": -0.028766457
      },
      {
       " find": -0.02894388
      },
      {
       "('": -0.0021687585
      },
      {
       "new": -0.0020696651
      },
      {
       "sp": -0.0006238507
      },
      {
       "aper": -0.00064895867
      },
      {
       "')": -0.0027124882
      },
      {
       "\n": -0.00789589
      },
      {
       " #": -0.0039983634
      },
      {
       " 1": -0.002397148
      },
      {
       ":": -0.0004492926
      },
      {
       " grab": -0.19348107
      },
      {
       " newspaper": -0.13552971
      },
      {
       "\n": -0.014547901
      },
      {
       " assert": -0.63248026
      },
      {
       "('": -0.0012912257
      },
      {
       "new": -0.0008240883
      },
      {
       "sp": -0.00026421316
      },
      {
       "aper": -0.0009461477
      },
      {
       "')": -0.0014295809
      },
      {
       "\n": -0.0049716593
      },
      {
       " #": -0.54853135
      },
      {
       " 2": -0.006544844
      },
      {
       ":": -0.0005346873
      },
      {
       " sit": -0.8077565
      },
      {
       " chair": -1.1665485
      },
      {
       "\n": -0.20758343
      },
      {
       " find": -0.6130744
      },
      {
       "('": -0.00088278874
      },
      {
       "des": -0.0012582828
      },
      {
       "k": -0.00017914227
      },
      {
       "')": -0.0014825244
      },
      {
       "\n": -0.0064353566
      },
      {
       " #": -0.028515223
      },
      {
       " 3": -0.0070826723
      },
      {
       ":": -0.0007714141
      },
      {
       " sit": -0.11652769
      },
      {
       " newspaper": -0.2564736
      },
      {
       " on": -0.054516144
      },
      {
       " desk": -0.14455207
      },
      {
       "\n": -0.012841817
      },
      {
       " put": -0.52794
      },
      {
       "('": -0.001867204
      },
      {
       "close": -0.14394212
      },
      {
       "'": -0.0036412827
      },
      {
       " to": -0.00042019345
      },
      {
       " '": -0.0023555038
      },
      {
       "des": -0.021685718
      },
      {
       "k": -8.447461e-05
      },
      {
       "')": -0.0064099226
      },
      {
       "\n": -0.005177686
      },
      {
       " else": -0.0021424724
      },
      {
       ":": -0.0020411115
      },
      {
       " find": -0.0049724984
      },
      {
       "('": -0.0019553453
      },
      {
       "des": -0.00095807976
      },
      {
       "k": -0.00020191487
      },
      {
       "')": -0.0028180422
      },
      {
       "\n": -0.00551416
      },
      {
       " put": -0.107082196
      },
      {
       "on": -0.052881744
      },
      {
       "('": -0.00113929
      },
      {
       "new": -0.18699168
      },
      {
       "sp": -0.00043009248
      },
      {
       "aper": -0.00061156094
      },
      {
       "',": -0.7953831
      },
      {
       "\n": -0.008086409
      },
      {
       " #": -0.06573555
      },
      {
       " 4": -0.0066555436
      },
      {
       ":": -0.0008113217
      },
      {
       " sit": -0.27606568
      },
      {
       " on": -0.35707054
      },
      {
       "\n": -0.60768384
      },
      {
       " sit": -0.10856879
      },
      {
       "('": -0.00456992
      },
      {
       "des": -0.027618391
      },
      {
       "k": -0.0002409637
      },
      {
       "')": -0.034737
      },
      {
       "\n": -0.0053070495
      },
      {
       " #": -0.014827649
      },
      {
       " 5": -0.004637644
      },
      {
       ":": -0.0007795259
      },
      {
       " read": -0.15829192
      },
      {
       " newspaper": -0.23493226
      },
      {
       "\n": -0.010054382
      },
      {
       " read": -0.33868554
      },
      {
       "at": -0.0010530055
      },
      {
       "('": -0.0007038932
      },
      {
       "new": -0.0037874996
      },
      {
       "sp": -0.00042496464
      },
      {
       "aper": -0.00059247814
      },
      {
       "')": -0.001718579
      },
      {
       "\n": -0.2984347
      },
      {
       " read": -0.19275507
      },
      {
       "('": -0.009025791
      },
      {
       "new": -0.000681465
      },
      {
       "sp": -0.001742463
      },
      {
       "aper": -0.00050850736
      },
      {
       "')": -0.0026068874
      },
      {
       "<|endoftext|>": -0.55292857
      },
      {
       " #": -0.11206943
      },
      {
       " 6": -0.0052912906
      },
      {
       ":": -0.0019366575
      },
      {
       " put": -0.8958891
      },
      {
       " newspaper": -0.2019492
      },
      {
       " back": -0.28353631
      },
      {
       "\n": -0.051759005
      },
      {
       " put": -0.7056427
      },
      {
       "back": -0.23091403
      },
      {
       "('": -0.002944051
      },
      {
       "new": -0.007426151
      },
      {
       "sp": -0.00086471223
      },
      {
       "aper": -0.00037016338
      },
      {
       "')": -0.0069943736
      }
     ],
     "text_offset": [
      3347,
      3349,
      3351,
      3352,
      3357,
      3367,
      3368,
      3373,
      3375,
      3378,
      3380,
      3384,
      3386,
      3387,
      3389,
      3391,
      3392,
      3397,
      3407,
      3408,
      3413,
      3415,
      3418,
      3420,
      3424,
      3426,
      3427,
      3429,
      3431,
      3432,
      3437,
      3442,
      3443,
      3448,
      3450,
      3453,
      3454,
      3456,
      3457,
      3459,
      3461,
      3462,
      3466,
      3476,
      3479,
      3484,
      3485,
      3492,
      3494,
      3499,
      3500,
      3503,
      3505,
      3508,
      3509,
      3511,
      3512,
      3517,
      3518,
      3523,
      3525,
      3528,
      3529,
      3531,
      3532,
      3536,
      3538,
      3540,
      3543,
      3545,
      3549,
      3551,
      3552,
      3554,
      3556,
      3557,
      3561,
      3566,
      3567,
      3571,
      3573,
      3576,
      3577,
      3579,
      3580,
      3582,
      3584,
      3585,
      3590,
      3600,
      3601,
      3606,
      3608,
      3610,
      3613,
      3615,
      3619,
      3621,
      3622,
      3627,
      3629,
      3632,
      3634,
      3638,
      3640,
      3641,
      3643,
      3645,
      3646,
      3650,
      3660,
      3665,
      3666,
      3670,
      3674,
      3676,
      3679,
      3681,
      3685
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Read newspaper",
   "task_description": "I go outside to get the newspaper.I come back inside and sit down at the dining room table and read it.",
   "program": [
    "[Find] <chair> (1)",
    "[TurnTo] <chair> (1)",
    "[PointAt] <chair> (1)",
    "[Wash] <chair> (1)",
    "[Sit] <chair> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_turk_third",
   "file_id": "split3_3",
   "goal_condition": [
    [
     [
      240,
      194,
      "FACING",
      "character",
      "chair"
     ],
     [
      240,
      194,
      "ON",
      "character",
      "chair"
     ],
     [
      240,
      209,
      "FACING",
      "character",
      "computer"
     ]
    ],
    [
     [
      240,
      "character",
      "SITTING"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1173,
   "completion_tokens": 119,
   "total_tokens": 1292
  }
 },
 "7": {
  "plan": [
   [
    " # 0: find a chair\n find('chair')\n # 1: walk to the chair\n walk('chair')\n # 2: sit on the chair\n assert('close' to 'chair')\n else: find('chair')\n sit('chair')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " a",
      " chair",
      "\n",
      " find",
      "('",
      "chair",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " walk",
      " to",
      " the",
      " chair",
      "\n",
      " walk",
      "('",
      "chair",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " sit",
      " on",
      " the",
      " chair",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "chair",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "chair",
      "')",
      "\n",
      " sit",
      "('",
      "chair",
      "')"
     ],
     "token_logprobs": [
      -0.14377812,
      -0.039648775,
      -0.0040820916,
      -0.42261392,
      -1.2587943,
      -0.07765537,
      -0.069309086,
      -0.026174666,
      -0.0063855057,
      -0.0019929155,
      -0.0021988647,
      -0.013097119,
      -0.0047704712,
      -0.0044685486,
      -0.00066243956,
      -0.72739047,
      -0.105452575,
      -0.43817258,
      -0.0017833055,
      -0.019717481,
      -0.41714925,
      -0.008238686,
      -0.0016340376,
      -0.0015500396,
      -0.008506095,
      -0.059792373,
      -0.005234126,
      -0.0009642852,
      -0.07605298,
      -0.21667247,
      -0.05715119,
      -0.0013388556,
      -0.00960305,
      -0.5792621,
      -0.0020960628,
      -0.010736761,
      -0.0037173787,
      -0.0012781577,
      -0.0024707606,
      -0.00066530245,
      -0.004818026,
      -0.005875933,
      -0.002224072,
      -0.0014619333,
      -0.05376909,
      -0.0020593298,
      -0.0006496739,
      -0.002219532,
      -0.006308308,
      -0.23510191,
      -0.0024442323,
      -0.0009186434,
      -0.001496911
     ],
     "top_logprobs": [
      {
       " #": -0.14377812
      },
      {
       " 0": -0.039648775
      },
      {
       ":": -0.0040820916
      },
      {
       " find": -0.42261392
      },
      {
       " chair": -0.5744682
      },
      {
       " chair": -0.07765537
      },
      {
       "\n": -0.069309086
      },
      {
       " find": -0.026174666
      },
      {
       "('": -0.0063855057
      },
      {
       "chair": -0.0019929155
      },
      {
       "')": -0.0021988647
      },
      {
       "\n": -0.013097119
      },
      {
       " #": -0.0047704712
      },
      {
       " 1": -0.0044685486
      },
      {
       ":": -0.00066243956
      },
      {
       " walk": -0.72739047
      },
      {
       " to": -0.105452575
      },
      {
       " the": -0.43817258
      },
      {
       " chair": -0.0017833055
      },
      {
       "\n": -0.019717481
      },
      {
       " walk": -0.41714925
      },
      {
       "('": -0.008238686
      },
      {
       "chair": -0.0016340376
      },
      {
       "')": -0.0015500396
      },
      {
       "\n": -0.008506095
      },
      {
       " #": -0.059792373
      },
      {
       " 2": -0.005234126
      },
      {
       ":": -0.0009642852
      },
      {
       " sit": -0.07605298
      },
      {
       " on": -0.21667247
      },
      {
       " the": -0.05715119
      },
      {
       " chair": -0.0013388556
      },
      {
       "\n": -0.00960305
      },
      {
       " assert": -0.5792621
      },
      {
       "('": -0.0020960628
      },
      {
       "close": -0.010736761
      },
      {
       "'": -0.0037173787
      },
      {
       " to": -0.0012781577
      },
      {
       " '": -0.0024707606
      },
      {
       "chair": -0.00066530245
      },
      {
       "')": -0.004818026
      },
      {
       "\n": -0.005875933
      },
      {
       " else": -0.002224072
      },
      {
       ":": -0.0014619333
      },
      {
       " find": -0.05376909
      },
      {
       "('": -0.0020593298
      },
      {
       "chair": -0.0006496739
      },
      {
       "')": -0.002219532
      },
      {
       "\n": -0.006308308
      },
      {
       " sit": -0.23510191
      },
      {
       "('": -0.0024442323
      },
      {
       "chair": -0.0009186434
      },
      {
       "')": -0.001496911
      }
     ],
     "text_offset": [
      3336,
      3338,
      3340,
      3341,
      3346,
      3348,
      3354,
      3355,
      3360,
      3362,
      3367,
      3369,
      3370,
      3372,
      3374,
      3375,
      3380,
      3383,
      3387,
      3393,
      3394,
      3399,
      3401,
      3406,
      3408,
      3409,
      3411,
      3413,
      3414,
      3418,
      3421,
      3425,
      3431,
      3432,
      3439,
      3441,
      3446,
      3447,
      3450,
      3452,
      3457,
      3459,
      3460,
      3465,
      3466,
      3471,
      3473,
      3478,
      3480,
      3481,
      3485,
      3487,
      3492
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Sit",
   "task_description": "We sit at the dining room table",
   "program": [
    "[Walk] <dining_room> (1)",
    "[Walk] <chair> (1)",
    "[Find] <chair> (1)",
    "[Pull] <chair> (1)",
    "[Sit] <chair> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_turk_third",
   "file_id": "split41_2",
   "goal_condition": [
    [
     [
      240,
      41,
      "INSIDE",
      "character",
      "dining_room"
     ],
     [
      240,
      1000,
      "ON",
      "character",
      "chair"
     ]
    ],
    [
     [
      240,
      "character",
      "SITTING"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1169,
   "completion_tokens": 53,
   "total_tokens": 1222
  }
 },
 "8": {
  "plan": [
   [
    " # 0: find bed\n find('bed')\n # 1: lay down on bed\n turnto('bed')\n lookat('bed')\n assert('close' to 'bed')\n else: find('bed')\n sit('bed')\n sleep()\ndef wake_up():\n # 0: find bed\n find('bed')\n # 1: stand up from bed\n turnto('bed')\n lookat('bed')\n assert('close' to 'bed')\n else: find('bed')\n standup()\n # 2: wakeup\n wakeup()",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " bed",
      "\n",
      " find",
      "('",
      "bed",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " lay",
      " down",
      " on",
      " bed",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "bed",
      "')",
      "\n",
      " look",
      "at",
      "('",
      "bed",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "bed",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "bed",
      "')",
      "\n",
      " sit",
      "('",
      "bed",
      "')",
      "\n",
      " sleep",
      "()",
      "\n",
      "def",
      " wake",
      "_",
      "up",
      "():",
      "\n",
      " #",
      " 0",
      ":",
      " find",
      " bed",
      "\n",
      " find",
      "('",
      "bed",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " stand",
      " up",
      " from",
      " bed",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "bed",
      "')",
      "\n",
      " look",
      "at",
      "('",
      "bed",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "bed",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "bed",
      "')",
      "\n",
      " stand",
      "up",
      "()",
      "\n",
      " #",
      " 2",
      ":",
      " wake",
      "up",
      "\n",
      " wake",
      "up",
      "()"
     ],
     "token_logprobs": [
      -0.261699,
      -0.06002703,
      -0.0029604333,
      -1.0092105,
      -0.31149507,
      -0.01875391,
      -0.031013165,
      -0.0028015464,
      -0.00043307178,
      -0.0021567503,
      -0.008755598,
      -0.0034641623,
      -0.00228925,
      -0.0005032613,
      -0.55427855,
      -0.08335499,
      -0.22454484,
      -0.045978896,
      -0.00871495,
      -0.26766753,
      -3.0353855e-05,
      -0.00038519214,
      -0.00046992695,
      -8.256821e-05,
      -0.000825042,
      -0.003610174,
      -0.065027006,
      -0.00027709146,
      -0.0003342722,
      -0.00012012551,
      -0.00023488217,
      -0.0028483493,
      -0.02329573,
      -0.0005232977,
      -0.0012134659,
      -0.001633801,
      -0.0002607561,
      -0.00090659293,
      -0.00017556225,
      -0.0023290967,
      -0.0034401761,
      -0.00090731,
      -0.0007693875,
      -0.0029017292,
      -0.0007056832,
      -0.0001371733,
      -0.0012279053,
      -0.0033289366,
      -2.0345788,
      -0.00095438055,
      -9.425254e-05,
      -0.0006970936,
      -0.005460461,
      -0.23305218,
      -0.0033100382,
      -0.33975485,
      -2.4930863,
      -0.89215845,
      -0.52175593,
      -0.00030976496,
      -0.026909951,
      -0.014789538,
      -0.0088988915,
      -0.004984899,
      -0.0012267113,
      -0.6901289,
      -0.016204866,
      -0.019566609,
      -0.0069522387,
      -0.0013163543,
      -9.675685e-05,
      -0.0010871368,
      -0.0057715536,
      -0.004111896,
      -0.0025370885,
      -0.00057130784,
      -0.39161947,
      -0.051481154,
      -0.37604183,
      -0.04106023,
      -0.012423264,
      -0.3542784,
      -2.665838e-05,
      -0.00014217819,
      -0.0005377905,
      -8.626461e-05,
      -0.0007313909,
      -0.0039146445,
      -0.12777287,
      -0.00021228698,
      -0.00035526042,
      -9.520714e-05,
      -0.00066876045,
      -0.002865565,
      -0.03490721,
      -0.0007023416,
      -0.0052851182,
      -0.0014457565,
      -0.00035156214,
      -0.00071904395,
      -6.850158e-05,
      -0.001696669,
      -0.0031230527,
      -0.0010399977,
      -0.0009991269,
      -0.0020810708,
      -0.0011265778,
      -0.0001244142,
      -0.0010678634,
      -0.0040749675,
      -0.040687744,
      -0.0022572873,
      -0.34024128,
      -0.24555068,
      -0.71588826,
      -0.0067073866,
      -0.0006880262,
      -1.495399,
      -2.7783298,
      -0.047484264,
      -0.026366988,
      -0.0008066679,
      -0.0034481322
     ],
     "top_logprobs": [
      {
       " #": -0.261699
      },
      {
       " 0": -0.06002703
      },
      {
       ":": -0.0029604333
      },
      {
       " find": -1.0092105
      },
      {
       " bed": -0.31149507
      },
      {
       "\n": -0.01875391
      },
      {
       " find": -0.031013165
      },
      {
       "('": -0.0028015464
      },
      {
       "bed": -0.00043307178
      },
      {
       "')": -0.0021567503
      },
      {
       "\n": -0.008755598
      },
      {
       " #": -0.0034641623
      },
      {
       " 1": -0.00228925
      },
      {
       ":": -0.0005032613
      },
      {
       " lay": -0.55427855
      },
      {
       " down": -0.08335499
      },
      {
       " on": -0.22454484
      },
      {
       " bed": -0.045978896
      },
      {
       "\n": -0.00871495
      },
      {
       " tur": -0.26766753
      },
      {
       "nt": -3.0353855e-05
      },
      {
       "o": -0.00038519214
      },
      {
       "('": -0.00046992695
      },
      {
       "bed": -8.256821e-05
      },
      {
       "')": -0.000825042
      },
      {
       "\n": -0.003610174
      },
      {
       " look": -0.065027006
      },
      {
       "at": -0.00027709146
      },
      {
       "('": -0.0003342722
      },
      {
       "bed": -0.00012012551
      },
      {
       "')": -0.00023488217
      },
      {
       "\n": -0.0028483493
      },
      {
       " assert": -0.02329573
      },
      {
       "('": -0.0005232977
      },
      {
       "close": -0.0012134659
      },
      {
       "'": -0.001633801
      },
      {
       " to": -0.0002607561
      },
      {
       " '": -0.00090659293
      },
      {
       "bed": -0.00017556225
      },
      {
       "')": -0.0023290967
      },
      {
       "\n": -0.0034401761
      },
      {
       " else": -0.00090731
      },
      {
       ":": -0.0007693875
      },
      {
       " find": -0.0029017292
      },
      {
       "('": -0.0007056832
      },
      {
       "bed": -0.0001371733
      },
      {
       "')": -0.0012279053
      },
      {
       "\n": -0.0033289366
      },
      {
       " else": -0.4532019
      },
      {
       "('": -0.00095438055
      },
      {
       "bed": -9.425254e-05
      },
      {
       "')": -0.0006970936
      },
      {
       "\n": -0.005460461
      },
      {
       " sleep": -0.23305218
      },
      {
       "()": -0.0033100382
      },
      {
       "\n": -0.33975485
      },
      {
       " #": -0.17565012
      },
      {
       " wake": -0.89215845
      },
      {
       "_": -0.52175593
      },
      {
       "up": -0.00030976496
      },
      {
       "():": -0.026909951
      },
      {
       "\n": -0.014789538
      },
      {
       " #": -0.0088988915
      },
      {
       " 0": -0.004984899
      },
      {
       ":": -0.0012267113
      },
      {
       " find": -0.6901289
      },
      {
       " bed": -0.016204866
      },
      {
       "\n": -0.019566609
      },
      {
       " find": -0.0069522387
      },
      {
       "('": -0.0013163543
      },
      {
       "bed": -9.675685e-05
      },
      {
       "')": -0.0010871368
      },
      {
       "\n": -0.0057715536
      },
      {
       " #": -0.004111896
      },
      {
       " 1": -0.0025370885
      },
      {
       ":": -0.00057130784
      },
      {
       " stand": -0.39161947
      },
      {
       " up": -0.051481154
      },
      {
       " from": -0.37604183
      },
      {
       " bed": -0.04106023
      },
      {
       "\n": -0.012423264
      },
      {
       " tur": -0.3542784
      },
      {
       "nt": -2.665838e-05
      },
      {
       "o": -0.00014217819
      },
      {
       "('": -0.0005377905
      },
      {
       "bed": -8.626461e-05
      },
      {
       "')": -0.0007313909
      },
      {
       "\n": -0.0039146445
      },
      {
       " look": -0.12777287
      },
      {
       "at": -0.00021228698
      },
      {
       "('": -0.00035526042
      },
      {
       "bed": -9.520714e-05
      },
      {
       "')": -0.00066876045
      },
      {
       "\n": -0.002865565
      },
      {
       " assert": -0.03490721
      },
      {
       "('": -0.0007023416
      },
      {
       "close": -0.0052851182
      },
      {
       "'": -0.0014457565
      },
      {
       " to": -0.00035156214
      },
      {
       " '": -0.00071904395
      },
      {
       "bed": -6.850158e-05
      },
      {
       "')": -0.001696669
      },
      {
       "\n": -0.0031230527
      },
      {
       " else": -0.0010399977
      },
      {
       ":": -0.0009991269
      },
      {
       " find": -0.0020810708
      },
      {
       "('": -0.0011265778
      },
      {
       "bed": -0.0001244142
      },
      {
       "')": -0.0010678634
      },
      {
       "\n": -0.0040749675
      },
      {
       " stand": -0.040687744
      },
      {
       "up": -0.0022572873
      },
      {
       "()": -0.34024128
      },
      {
       "\n": -0.24555068
      },
      {
       " #": -0.71588826
      },
      {
       " 2": -0.0067073866
      },
      {
       ":": -0.0006880262
      },
      {
       " open": -0.67144835
      },
      {
       " up": -0.06658858
      },
      {
       "\n": -0.047484264
      },
      {
       " wake": -0.026366988
      },
      {
       "up": -0.0008066679
      },
      {
       "()": -0.0034481322
      }
     ],
     "text_offset": [
      3338,
      3340,
      3342,
      3343,
      3348,
      3352,
      3353,
      3358,
      3360,
      3363,
      3365,
      3366,
      3368,
      3370,
      3371,
      3375,
      3380,
      3383,
      3387,
      3388,
      3392,
      3394,
      3395,
      3397,
      3400,
      3402,
      3403,
      3408,
      3410,
      3412,
      3415,
      3417,
      3418,
      3425,
      3427,
      3432,
      3433,
      3436,
      3438,
      3441,
      3443,
      3444,
      3449,
      3450,
      3455,
      3457,
      3460,
      3462,
      3463,
      3467,
      3469,
      3472,
      3474,
      3475,
      3481,
      3483,
      3484,
      3487,
      3492,
      3493,
      3495,
      3498,
      3499,
      3501,
      3503,
      3504,
      3509,
      3513,
      3514,
      3519,
      3521,
      3524,
      3526,
      3527,
      3529,
      3531,
      3532,
      3538,
      3541,
      3546,
      3550,
      3551,
      3555,
      3557,
      3558,
      3560,
      3563,
      3565,
      3566,
      3571,
      3573,
      3575,
      3578,
      3580,
      3581,
      3588,
      3590,
      3595,
      3596,
      3599,
      3601,
      3604,
      3606,
      3607,
      3612,
      3613,
      3618,
      3620,
      3623,
      3625,
      3626,
      3632,
      3634,
      3636,
      3637,
      3639,
      3641,
      3642,
      3647,
      3649,
      3650,
      3655,
      3657
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Sleep",
   "task_description": "Lie down in a bed at night and fall asleep",
   "program": [
    "[Walk] <bedroom> (1)",
    "[Walk] <bed> (1)",
    "[Find] <bed> (1)",
    "[Lie] <bed> (1)",
    "[Sleep]"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_july",
   "file_id": "split22_2",
   "goal_condition": [
    [
     [
      240,
      162,
      "INSIDE",
      "character",
      "bedroom"
     ],
     [
      240,
      197,
      "ON",
      "character",
      "bed"
     ]
    ],
    [
     [
      240,
      "character",
      "LYING"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1169,
   "completion_tokens": 123,
   "total_tokens": 1292
  }
 },
 "9": {
  "plan": [
   [
    " # 0: find alarm clock\n find('alarm_clock')\n # 1: grab alarm clock\n grab('alarm_clock')\n assert('alarm_clock' in 'hands')\n else: grab('alarm_clock')\n # 2: walk to bedroom\n walk('bedroom')\n # 3: put alarm clock in bedroom\n putin('alarm_clock')\n # 4: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " alarm",
      " clock",
      "\n",
      " find",
      "('",
      "al",
      "arm",
      "_",
      "clock",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " grab",
      " alarm",
      " clock",
      "\n",
      " grab",
      "('",
      "al",
      "arm",
      "_",
      "clock",
      "')",
      "\n",
      " assert",
      "('",
      "al",
      "arm",
      "_",
      "clock",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "al",
      "arm",
      "_",
      "clock",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " walk",
      " to",
      " bedroom",
      "\n",
      " walk",
      "('",
      "bedroom",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " put",
      " alarm",
      " clock",
      " in",
      " bedroom",
      "\n",
      " put",
      "in",
      "('",
      "al",
      "arm",
      "_",
      "clock",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.0187861,
      -0.0083050355,
      -0.0020808312,
      -0.86399263,
      -0.19689716,
      -0.06523758,
      -0.030077124,
      -0.019597,
      -0.0021705495,
      -0.0029623464,
      -0.00030809414,
      -0.012390858,
      -0.000436174,
      -0.0035443145,
      -0.007977236,
      -0.0067403293,
      -0.002033526,
      -0.00072697556,
      -0.5708461,
      -0.19023898,
      -0.008741888,
      -0.017161245,
      -0.7212382,
      -0.0012612076,
      -0.00057130784,
      -0.00014420661,
      -0.0032803768,
      -0.00046825802,
      -0.0019124112,
      -0.005350075,
      -0.8945969,
      -0.0014698085,
      -0.16993055,
      -0.00031203084,
      -0.0077477037,
      -0.0010564062,
      -0.0025440194,
      -0.021659832,
      -0.005399394,
      -0.007742357,
      -0.040628582,
      -0.0042705736,
      -0.015397551,
      -0.004286614,
      -0.011236101,
      -0.0013193373,
      -0.0005473328,
      -0.00022838576,
      -0.0024270841,
      -0.0008801634,
      -0.0023553856,
      -0.0064933077,
      -0.27251083,
      -0.00700728,
      -0.0010299757,
      -0.11409616,
      -0.112131774,
      -0.077188,
      -0.021345524,
      -0.009296061,
      -0.0021352468,
      -0.002904241,
      -0.00114466,
      -0.005290211,
      -0.017120497,
      -0.005193564,
      -0.00083786866,
      -0.50126445,
      -0.11416423,
      -0.0056539387,
      -0.83619106,
      -0.077815786,
      -0.017444577,
      -0.9110656,
      -0.44381464,
      -0.009517116,
      -0.021253768,
      -0.00012643983,
      -0.0017018636,
      -0.0006525368,
      -1.218687,
      -0.34912485,
      -0.76614267,
      -0.004297629,
      -0.00197201,
      -0.22302768
     ],
     "top_logprobs": [
      {
       " #": -0.0187861
      },
      {
       " 0": -0.0083050355
      },
      {
       ":": -0.0020808312
      },
      {
       " walk": -0.7222566
      },
      {
       " alarm": -0.19689716
      },
      {
       " clock": -0.06523758
      },
      {
       "\n": -0.030077124
      },
      {
       " find": -0.019597
      },
      {
       "('": -0.0021705495
      },
      {
       "al": -0.0029623464
      },
      {
       "arm": -0.00030809414
      },
      {
       "_": -0.012390858
      },
      {
       "clock": -0.000436174
      },
      {
       "')": -0.0035443145
      },
      {
       "\n": -0.007977236
      },
      {
       " #": -0.0067403293
      },
      {
       " 1": -0.002033526
      },
      {
       ":": -0.00072697556
      },
      {
       " grab": -0.5708461
      },
      {
       " alarm": -0.19023898
      },
      {
       " clock": -0.008741888
      },
      {
       "\n": -0.017161245
      },
      {
       " assert": -0.6863385
      },
      {
       "('": -0.0012612076
      },
      {
       "al": -0.00057130784
      },
      {
       "arm": -0.00014420661
      },
      {
       "_": -0.0032803768
      },
      {
       "clock": -0.00046825802
      },
      {
       "')": -0.0019124112
      },
      {
       "\n": -0.005350075
      },
      {
       " #": -0.56940246
      },
      {
       "('": -0.0014698085
      },
      {
       "al": -0.16993055
      },
      {
       "arm": -0.00031203084
      },
      {
       "_": -0.0077477037
      },
      {
       "clock": -0.0010564062
      },
      {
       "'": -0.0025440194
      },
      {
       " in": -0.021659832
      },
      {
       " '": -0.005399394
      },
      {
       "hands": -0.007742357
      },
      {
       "')": -0.040628582
      },
      {
       "\n": -0.0042705736
      },
      {
       " else": -0.015397551
      },
      {
       ":": -0.004286614
      },
      {
       " grab": -0.011236101
      },
      {
       "('": -0.0013193373
      },
      {
       "al": -0.0005473328
      },
      {
       "arm": -0.00022838576
      },
      {
       "_": -0.0024270841
      },
      {
       "clock": -0.0008801634
      },
      {
       "')": -0.0023553856
      },
      {
       "\n": -0.0064933077
      },
      {
       " #": -0.27251083
      },
      {
       " 2": -0.00700728
      },
      {
       ":": -0.0010299757
      },
      {
       " walk": -0.11409616
      },
      {
       " to": -0.112131774
      },
      {
       " bedroom": -0.077188
      },
      {
       "\n": -0.021345524
      },
      {
       " walk": -0.009296061
      },
      {
       "('": -0.0021352468
      },
      {
       "bedroom": -0.002904241
      },
      {
       "')": -0.00114466
      },
      {
       "\n": -0.005290211
      },
      {
       " #": -0.017120497
      },
      {
       " 3": -0.005193564
      },
      {
       ":": -0.00083786866
      },
      {
       " put": -0.50126445
      },
      {
       " alarm": -0.11416423
      },
      {
       " clock": -0.0056539387
      },
      {
       " on": -0.7884262
      },
      {
       " bedroom": -0.077815786
      },
      {
       "\n": -0.017444577
      },
      {
       " assert": -0.8107963
      },
      {
       "in": -0.44381464
      },
      {
       "('": -0.009517116
      },
      {
       "al": -0.021253768
      },
      {
       "arm": -0.00012643983
      },
      {
       "_": -0.0017018636
      },
      {
       "clock": -0.0006525368
      },
      {
       "',": -0.5434637
      },
      {
       "\n": -0.34912485
      },
      {
       " #": -0.76614267
      },
      {
       " 4": -0.004297629
      },
      {
       ":": -0.00197201
      },
      {
       " Done": -0.22302768
      }
     ],
     "text_offset": [
      3359,
      3361,
      3363,
      3364,
      3369,
      3375,
      3381,
      3382,
      3387,
      3389,
      3391,
      3394,
      3395,
      3400,
      3402,
      3403,
      3405,
      3407,
      3408,
      3413,
      3419,
      3425,
      3426,
      3431,
      3433,
      3435,
      3438,
      3439,
      3444,
      3446,
      3447,
      3454,
      3456,
      3458,
      3461,
      3462,
      3467,
      3468,
      3471,
      3473,
      3478,
      3480,
      3481,
      3486,
      3487,
      3492,
      3494,
      3496,
      3499,
      3500,
      3505,
      3507,
      3508,
      3510,
      3512,
      3513,
      3518,
      3521,
      3529,
      3530,
      3535,
      3537,
      3544,
      3546,
      3547,
      3549,
      3551,
      3552,
      3556,
      3562,
      3568,
      3571,
      3579,
      3580,
      3584,
      3586,
      3588,
      3590,
      3593,
      3594,
      3599,
      3601,
      3602,
      3604,
      3606,
      3607
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Put alarm clock in bedroom",
   "task_description": "Take alarm clock. Sit it on stand, next to bed. Plug in alarm clock. Set time, according to watch. Set alarm, depending on what time you have to get up.",
   "program": [
    "[Walk] <bedroom> (1)",
    "[Walk] <alarm_clock> (1)",
    "[Find] <alarm_clock> (1)",
    "[Grab] <alarm_clock> (1)",
    "[Find] <dresser> (1)",
    "[Open] <dresser> (1)",
    "[PutBack] <alarm_clock> (1) <dresser> (1)",
    "[SwitchOn] <alarm_clock> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_kellensecond",
   "file_id": "split11_6",
   "goal_condition": [
    [
     [
      240,
      162,
      "INSIDE",
      "character",
      "bedroom"
     ],
     [
      1000,
      1001,
      "ON",
      "alarm_clock",
      "dresser"
     ]
    ],
    [
     [
      1001,
      "dresser",
      "OPEN"
     ],
     [
      1000,
      "alarm_clock",
      "ON"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1178,
   "completion_tokens": 86,
   "total_tokens": 1264
  }
 },
 "10": {
  "plan": [
   [
    " # 0: walk to living room\n walk('living_room')\n # 1: find chair\n find('chair')\n # 2: sit in chair\n assert('close' to 'chair')\n else: find('chair')\n sit('chair')\n lookat('chair')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " living",
      " room",
      "\n",
      " walk",
      "('",
      "living",
      "_",
      "room",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " chair",
      "\n",
      " find",
      "('",
      "chair",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " sit",
      " in",
      " chair",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "chair",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "chair",
      "')",
      "\n",
      " sit",
      "('",
      "chair",
      "')",
      "\n",
      " look",
      "at",
      "('",
      "chair",
      "')"
     ],
     "token_logprobs": [
      -0.022800887,
      -0.008573786,
      -0.0016912972,
      -0.9033518,
      -0.29484713,
      -1.1098992,
      -0.057739105,
      -0.019370724,
      -0.0040538404,
      -0.003944684,
      -0.010390994,
      -0.22742632,
      -0.00018796182,
      -0.0021216879,
      -0.007254668,
      -0.0013794418,
      -0.0026355723,
      -0.00053576205,
      -0.023432765,
      -0.12208688,
      -0.018612655,
      -0.3668573,
      -0.0008632808,
      -0.000881118,
      -0.001023469,
      -0.004774601,
      -0.011474651,
      -0.0048633646,
      -0.00061323267,
      -0.123733915,
      -0.5648227,
      -0.3666735,
      -0.009655829,
      -0.29666537,
      -0.0011869096,
      -0.0053436626,
      -0.0025758697,
      -0.00092640036,
      -0.0019358222,
      -0.0007701028,
      -0.003713371,
      -0.004144636,
      -0.0014426524,
      -0.0011704974,
      -0.0046118344,
      -0.0015584585,
      -0.00066721166,
      -0.0015934401,
      -0.0049512354,
      -0.23734598,
      -0.0018927644,
      -0.00053456903,
      -0.0014136416,
      -0.8263639,
      -2.2456174,
      -0.0145355025,
      -0.0008588654,
      -0.0015041932,
      -0.0013122956
     ],
     "top_logprobs": [
      {
       " #": -0.022800887
      },
      {
       " 0": -0.008573786
      },
      {
       ":": -0.0016912972
      },
      {
       " find": -0.6660453
      },
      {
       " to": -0.29484713
      },
      {
       " living": -1.1098992
      },
      {
       " room": -0.057739105
      },
      {
       "\n": -0.019370724
      },
      {
       " walk": -0.0040538404
      },
      {
       "('": -0.003944684
      },
      {
       "living": -0.010390994
      },
      {
       "_": -0.22742632
      },
      {
       "room": -0.00018796182
      },
      {
       "')": -0.0021216879
      },
      {
       "\n": -0.007254668
      },
      {
       " #": -0.0013794418
      },
      {
       " 1": -0.0026355723
      },
      {
       ":": -0.00053576205
      },
      {
       " find": -0.023432765
      },
      {
       " chair": -0.12208688
      },
      {
       "\n": -0.018612655
      },
      {
       " find": -0.3668573
      },
      {
       "('": -0.0008632808
      },
      {
       "chair": -0.000881118
      },
      {
       "')": -0.001023469
      },
      {
       "\n": -0.004774601
      },
      {
       " #": -0.011474651
      },
      {
       " 2": -0.0048633646
      },
      {
       ":": -0.00061323267
      },
      {
       " sit": -0.123733915
      },
      {
       " in": -0.5648227
      },
      {
       " chair": -0.3666735
      },
      {
       "\n": -0.009655829
      },
      {
       " assert": -0.29666537
      },
      {
       "('": -0.0011869096
      },
      {
       "close": -0.0053436626
      },
      {
       "'": -0.0025758697
      },
      {
       " to": -0.00092640036
      },
      {
       " '": -0.0019358222
      },
      {
       "chair": -0.0007701028
      },
      {
       "')": -0.003713371
      },
      {
       "\n": -0.004144636
      },
      {
       " else": -0.0014426524
      },
      {
       ":": -0.0011704974
      },
      {
       " find": -0.0046118344
      },
      {
       "('": -0.0015584585
      },
      {
       "chair": -0.00066721166
      },
      {
       "')": -0.0015934401
      },
      {
       "\n": -0.0049512354
      },
      {
       " sit": -0.23734598
      },
      {
       "('": -0.0018927644
      },
      {
       "chair": -0.00053456903
      },
      {
       "')": -0.0014136416
      },
      {
       "<|endoftext|>": -0.5902398
      },
      {
       " #": -0.5872331
      },
      {
       "at": -0.0145355025
      },
      {
       "('": -0.0008588654
      },
      {
       "chair": -0.0015041932
      },
      {
       "')": -0.0013122956
      }
     ],
     "text_offset": [
      3345,
      3347,
      3349,
      3350,
      3355,
      3358,
      3365,
      3370,
      3371,
      3376,
      3378,
      3384,
      3385,
      3389,
      3391,
      3392,
      3394,
      3396,
      3397,
      3402,
      3408,
      3409,
      3414,
      3416,
      3421,
      3423,
      3424,
      3426,
      3428,
      3429,
      3433,
      3436,
      3442,
      3443,
      3450,
      3452,
      3457,
      3458,
      3461,
      3463,
      3468,
      3470,
      3471,
      3476,
      3477,
      3482,
      3484,
      3489,
      3491,
      3492,
      3496,
      3498,
      3503,
      3505,
      3506,
      3511,
      3513,
      3515,
      3520
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Sit in chair",
   "task_description": "I sit in a chair to rest and eat.",
   "program": [
    "[Walk] <dining_room> (1)",
    "[Walk] <chair> (1)",
    "[Find] <chair> (1)",
    "[Pull] <chair> (1)",
    "[Sit] <chair> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_kellensecond",
   "file_id": "split8_7",
   "goal_condition": [
    [
     [
      240,
      41,
      "INSIDE",
      "character",
      "dining_room"
     ],
     [
      240,
      1000,
      "ON",
      "character",
      "chair"
     ]
    ],
    [
     [
      240,
      "character",
      "SITTING"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1173,
   "completion_tokens": 59,
   "total_tokens": 1232
  }
 },
 "11": {
  "plan": [
   [
    " # 0: walk to bathroom\n walk('bathroom')\n # 1: find window\n find('window')\n # 2: open window\n assert('close' to 'window')\n else: find('window')\n open('window')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " bathroom",
      "\n",
      " walk",
      "('",
      "bath",
      "room",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " window",
      "\n",
      " find",
      "('",
      "window",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " open",
      " window",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "window",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "window",
      "')",
      "\n",
      " open",
      "('",
      "window",
      "')"
     ],
     "token_logprobs": [
      -0.020247418,
      -0.010476281,
      -0.0024945422,
      -0.11835607,
      -0.2039248,
      -0.18468678,
      -0.02496516,
      -0.005001314,
      -0.0044417274,
      -0.002596548,
      -0.00019893186,
      -0.0017888587,
      -0.0076969485,
      -0.002458392,
      -0.0032239272,
      -0.0005454245,
      -0.03605059,
      -0.08572528,
      -0.020402046,
      -0.20850262,
      -0.0011406023,
      -0.002905316,
      -0.0016958338,
      -0.004912898,
      -0.006444176,
      -0.0049659694,
      -0.00094209076,
      -0.026293557,
      -0.43724385,
      -0.0121724205,
      -0.33728513,
      -0.001773154,
      -0.014162248,
      -0.0029600738,
      -0.0007528626,
      -0.0028157705,
      -0.0011855364,
      -0.0047219,
      -0.0057601617,
      -0.001768319,
      -0.0015871755,
      -0.004299785,
      -0.0017351198,
      -0.00081788294,
      -0.0025880015,
      -0.007014843,
      -0.07572047,
      -0.0015219243,
      -0.0009657166,
      -0.002750264
     ],
     "top_logprobs": [
      {
       " #": -0.020247418
      },
      {
       " 0": -0.010476281
      },
      {
       ":": -0.0024945422
      },
      {
       " walk": -0.11835607
      },
      {
       " to": -0.2039248
      },
      {
       " bathroom": -0.18468678
      },
      {
       "\n": -0.02496516
      },
      {
       " walk": -0.005001314
      },
      {
       "('": -0.0044417274
      },
      {
       "bath": -0.002596548
      },
      {
       "room": -0.00019893186
      },
      {
       "')": -0.0017888587
      },
      {
       "\n": -0.0076969485
      },
      {
       " #": -0.002458392
      },
      {
       " 1": -0.0032239272
      },
      {
       ":": -0.0005454245
      },
      {
       " find": -0.03605059
      },
      {
       " window": -0.08572528
      },
      {
       "\n": -0.020402046
      },
      {
       " find": -0.20850262
      },
      {
       "('": -0.0011406023
      },
      {
       "window": -0.002905316
      },
      {
       "')": -0.0016958338
      },
      {
       "\n": -0.004912898
      },
      {
       " #": -0.006444176
      },
      {
       " 2": -0.0049659694
      },
      {
       ":": -0.00094209076
      },
      {
       " open": -0.026293557
      },
      {
       " window": -0.43724385
      },
      {
       "\n": -0.0121724205
      },
      {
       " assert": -0.33728513
      },
      {
       "('": -0.001773154
      },
      {
       "close": -0.014162248
      },
      {
       "'": -0.0029600738
      },
      {
       " to": -0.0007528626
      },
      {
       " '": -0.0028157705
      },
      {
       "window": -0.0011855364
      },
      {
       "')": -0.0047219
      },
      {
       "\n": -0.0057601617
      },
      {
       " else": -0.001768319
      },
      {
       ":": -0.0015871755
      },
      {
       " find": -0.004299785
      },
      {
       "('": -0.0017351198
      },
      {
       "window": -0.00081788294
      },
      {
       "')": -0.0025880015
      },
      {
       "\n": -0.007014843
      },
      {
       " open": -0.07572047
      },
      {
       "('": -0.0015219243
      },
      {
       "window": -0.0009657166
      },
      {
       "')": -0.002750264
      }
     ],
     "text_offset": [
      3353,
      3355,
      3357,
      3358,
      3363,
      3366,
      3375,
      3376,
      3381,
      3383,
      3387,
      3391,
      3393,
      3394,
      3396,
      3398,
      3399,
      3404,
      3411,
      3412,
      3417,
      3419,
      3425,
      3427,
      3428,
      3430,
      3432,
      3433,
      3438,
      3445,
      3446,
      3453,
      3455,
      3460,
      3461,
      3464,
      3466,
      3472,
      3474,
      3475,
      3480,
      3481,
      3486,
      3488,
      3494,
      3496,
      3497,
      3502,
      3504,
      3510
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Open bathroom window",
   "task_description": "Make sure bathroom window is unlocked. Lift up bathroom window so it is open.",
   "program": [
    "[Walk] <bathroom> (1)",
    "[Walk] <window> (1)",
    "[Find] <window> (1)",
    "[Open] <window> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_kellensecond",
   "file_id": "split7_3",
   "goal_condition": [
    [
     [
      240,
      1,
      "INSIDE",
      "character",
      "bathroom"
     ]
    ],
    [
     [
      1000,
      "window",
      "OPEN"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1174,
   "completion_tokens": 50,
   "total_tokens": 1224
  }
 },
 "12": {
  "plan": [
   [
    " # 0: walk to home office\n walk('home_office')\n # 1: find computer\n find('computer')\n # 2: turn on computer\n assert('close' to 'computer')\n else: find('computer')\n switchon('computer')\n # 3: sit at the desk\n find('desk')\n sit('desk')\n # 4: open computer\n assert('close' to 'computer')\n else: find('computer')\n open('computer')\n # 5: use the computer\n turnto('computer')\n lookat('computer')\n assert('close' to 'computer')\n else: find('computer')\n use('computer')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " home",
      " office",
      "\n",
      " walk",
      "('",
      "home",
      "_",
      "office",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " computer",
      "\n",
      " find",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " turn",
      " on",
      " computer",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "computer",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "computer",
      "')",
      "\n",
      " switch",
      "on",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " sit",
      " at",
      " the",
      " desk",
      "\n",
      " find",
      "('",
      "des",
      "k",
      "')",
      "\n",
      " sit",
      "('",
      "des",
      "k",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " open",
      " computer",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "computer",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "computer",
      "')",
      "\n",
      " open",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " use",
      " the",
      " computer",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "computer",
      "')",
      "\n",
      " look",
      "at",
      "('",
      "computer",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "computer",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "computer",
      "')",
      "\n",
      " use",
      "('",
      "computer",
      "')"
     ],
     "token_logprobs": [
      -0.018286983,
      -0.007385919,
      -0.0018626666,
      -0.23927684,
      -0.25491765,
      -0.7236203,
      -0.040510207,
      -0.025143374,
      -0.005600232,
      -0.004731901,
      -0.014013839,
      -0.04962214,
      -0.00094459514,
      -0.002537566,
      -0.008115492,
      -0.0035395883,
      -0.003135848,
      -0.0007262603,
      -0.049984947,
      -0.38923058,
      -0.03007135,
      -0.33484745,
      -0.001248734,
      -0.0015786967,
      -0.0018202094,
      -0.0053178365,
      -0.009654445,
      -0.0046357876,
      -0.00081502006,
      -0.5192909,
      -0.034161642,
      -0.6696824,
      -0.01978867,
      -0.633623,
      -0.001774945,
      -0.057163373,
      -0.0044747153,
      -0.0012457508,
      -0.0038025763,
      -0.002337999,
      -0.006925349,
      -0.005225798,
      -0.0020791586,
      -0.0015732637,
      -0.004552015,
      -0.0016392922,
      -0.0008021343,
      -0.0026566095,
      -0.00560263,
      -0.3382796,
      -0.0030393484,
      -0.0010374935,
      -0.0010652371,
      -0.002068947,
      -0.0053365915,
      -0.021039598,
      -0.005795475,
      -0.00059319526,
      -0.9174542,
      -2.4109015,
      -0.9387905,
      -0.8220273,
      -0.0671321,
      -0.5013327,
      -0.0012112573,
      -0.0077678864,
      -0.00010748563,
      -0.002172821,
      -0.004275002,
      -0.56515115,
      -0.0016141589,
      -0.0009974561,
      -6.611553e-05,
      -0.0012496894,
      -0.0043255277,
      -0.021326955,
      -0.0063266624,
      -0.00089328847,
      -1.7616401,
      -1.5058655,
      -0.28644818,
      -1.0057309,
      -0.0013369455,
      -0.07499423,
      -0.0027140416,
      -0.0004051084,
      -0.0020532378,
      -0.0053268233,
      -0.0055836276,
      -0.0032052696,
      -0.0016633535,
      -0.0012311277,
      -0.005620372,
      -0.0022805864,
      -0.0005666531,
      -0.0024105923,
      -0.00544482,
      -0.037543762,
      -0.0025588416,
      -0.0013164725,
      -0.0017342846,
      -0.017900977,
      -0.01108849,
      -0.0054048453,
      -0.00075477175,
      -0.3085481,
      -1.0752703,
      -0.12180287,
      -0.016405886,
      -1.3769907,
      -0.00012143587,
      -0.0005106559,
      -0.00065909984,
      -0.0035206869,
      -0.0028589286,
      -0.0074888445,
      -0.13632977,
      -0.00093355944,
      -0.00049085513,
      -0.0015875332,
      -0.0021682796,
      -0.67598855,
      -1.0739021,
      -0.002068947,
      -0.5203202,
      -0.0026548149,
      -0.0005937923,
      -0.0027141618,
      -0.061713114,
      -0.004661176,
      -0.0038543316,
      -0.0023699026,
      -0.0009443577,
      -0.021387056,
      -0.0010632077,
      -0.00035860104,
      -0.0024769134,
      -0.10969529,
      -0.39101183,
      -0.008125887,
      -0.0022945064,
      -0.0025706093
     ],
     "top_logprobs": [
      {
       " #": -0.018286983
      },
      {
       " 0": -0.007385919
      },
      {
       ":": -0.0018626666
      },
      {
       " walk": -0.23927684
      },
      {
       " to": -0.25491765
      },
      {
       " home": -0.7236203
      },
      {
       " office": -0.040510207
      },
      {
       "\n": -0.025143374
      },
      {
       " walk": -0.005600232
      },
      {
       "('": -0.004731901
      },
      {
       "home": -0.014013839
      },
      {
       "_": -0.04962214
      },
      {
       "office": -0.00094459514
      },
      {
       "')": -0.002537566
      },
      {
       "\n": -0.008115492
      },
      {
       " #": -0.0035395883
      },
      {
       " 1": -0.003135848
      },
      {
       ":": -0.0007262603
      },
      {
       " find": -0.049984947
      },
      {
       " computer": -0.38923058
      },
      {
       "\n": -0.03007135
      },
      {
       " find": -0.33484745
      },
      {
       "('": -0.001248734
      },
      {
       "computer": -0.0015786967
      },
      {
       "')": -0.0018202094
      },
      {
       "\n": -0.0053178365
      },
      {
       " #": -0.009654445
      },
      {
       " 2": -0.0046357876
      },
      {
       ":": -0.00081502006
      },
      {
       " turn": -0.5192909
      },
      {
       " on": -0.034161642
      },
      {
       " computer": -0.6696824
      },
      {
       "\n": -0.01978867
      },
      {
       " assert": -0.633623
      },
      {
       "('": -0.001774945
      },
      {
       "close": -0.057163373
      },
      {
       "'": -0.0044747153
      },
      {
       " to": -0.0012457508
      },
      {
       " '": -0.0038025763
      },
      {
       "computer": -0.002337999
      },
      {
       "')": -0.006925349
      },
      {
       "\n": -0.005225798
      },
      {
       " else": -0.0020791586
      },
      {
       ":": -0.0015732637
      },
      {
       " find": -0.004552015
      },
      {
       "('": -0.0016392922
      },
      {
       "computer": -0.0008021343
      },
      {
       "')": -0.0026566095
      },
      {
       "\n": -0.00560263
      },
      {
       " switch": -0.3382796
      },
      {
       "on": -0.0030393484
      },
      {
       "('": -0.0010374935
      },
      {
       "computer": -0.0010652371
      },
      {
       "')": -0.002068947
      },
      {
       "\n": -0.0053365915
      },
      {
       " #": -0.021039598
      },
      {
       " 3": -0.005795475
      },
      {
       ":": -0.00059319526
      },
      {
       " sit": -0.9174542
      },
      {
       " on": -0.78345734
      },
      {
       " the": -0.9387905
      },
      {
       " desk": -0.8220273
      },
      {
       "\n": -0.0671321
      },
      {
       " find": -0.5013327
      },
      {
       "('": -0.0012112573
      },
      {
       "des": -0.0077678864
      },
      {
       "k": -0.00010748563
      },
      {
       "')": -0.002172821
      },
      {
       "\n": -0.004275002
      },
      {
       " sit": -0.56515115
      },
      {
       "('": -0.0016141589
      },
      {
       "des": -0.0009974561
      },
      {
       "k": -6.611553e-05
      },
      {
       "')": -0.0012496894
      },
      {
       "\n": -0.0043255277
      },
      {
       " #": -0.021326955
      },
      {
       " 4": -0.0063266624
      },
      {
       ":": -0.00089328847
      },
      {
       " use": -0.875217
      },
      {
       " the": -0.7747788
      },
      {
       "\n": -0.28644818
      },
      {
       " open": -0.7660888
      },
      {
       "('": -0.0013369455
      },
      {
       "close": -0.07499423
      },
      {
       "'": -0.0027140416
      },
      {
       " to": -0.0004051084
      },
      {
       " '": -0.0020532378
      },
      {
       "computer": -0.0053268233
      },
      {
       "')": -0.0055836276
      },
      {
       "\n": -0.0032052696
      },
      {
       " else": -0.0016633535
      },
      {
       ":": -0.0012311277
      },
      {
       " find": -0.005620372
      },
      {
       "('": -0.0022805864
      },
      {
       "computer": -0.0005666531
      },
      {
       "')": -0.0024105923
      },
      {
       "\n": -0.00544482
      },
      {
       " open": -0.037543762
      },
      {
       "('": -0.0025588416
      },
      {
       "computer": -0.0013164725
      },
      {
       "')": -0.0017342846
      },
      {
       "\n": -0.017900977
      },
      {
       " #": -0.01108849
      },
      {
       " 5": -0.0054048453
      },
      {
       ":": -0.00075477175
      },
      {
       " use": -0.3085481
      },
      {
       " computer": -0.5148054
      },
      {
       " computer": -0.12180287
      },
      {
       "\n": -0.016405886
      },
      {
       " look": -1.2582277
      },
      {
       "nt": -0.00012143587
      },
      {
       "o": -0.0005106559
      },
      {
       "('": -0.00065909984
      },
      {
       "computer": -0.0035206869
      },
      {
       "')": -0.0028589286
      },
      {
       "\n": -0.0074888445
      },
      {
       " look": -0.13632977
      },
      {
       "at": -0.00093355944
      },
      {
       "('": -0.00049085513
      },
      {
       "computer": -0.0015875332
      },
      {
       "')": -0.0021682796
      },
      {
       "\n": -0.67598855
      },
      {
       " assert": -1.0739021
      },
      {
       "('": -0.002068947
      },
      {
       "close": -0.5203202
      },
      {
       "'": -0.0026548149
      },
      {
       " to": -0.0005937923
      },
      {
       " '": -0.0027141618
      },
      {
       "computer": -0.061713114
      },
      {
       "')": -0.004661176
      },
      {
       "\n": -0.0038543316
      },
      {
       " else": -0.0023699026
      },
      {
       ":": -0.0009443577
      },
      {
       " find": -0.021387056
      },
      {
       "('": -0.0010632077
      },
      {
       "computer": -0.00035860104
      },
      {
       "')": -0.0024769134
      },
      {
       "\n": -0.10969529
      },
      {
       " use": -0.39101183
      },
      {
       "('": -0.008125887
      },
      {
       "computer": -0.0022945064
      },
      {
       "')": -0.0025706093
      }
     ],
     "text_offset": [
      3345,
      3347,
      3349,
      3350,
      3355,
      3358,
      3363,
      3370,
      3371,
      3376,
      3378,
      3382,
      3383,
      3389,
      3391,
      3392,
      3394,
      3396,
      3397,
      3402,
      3411,
      3412,
      3417,
      3419,
      3427,
      3429,
      3430,
      3432,
      3434,
      3435,
      3440,
      3443,
      3452,
      3453,
      3460,
      3462,
      3467,
      3468,
      3471,
      3473,
      3481,
      3483,
      3484,
      3489,
      3490,
      3495,
      3497,
      3505,
      3507,
      3508,
      3515,
      3517,
      3519,
      3527,
      3529,
      3530,
      3532,
      3534,
      3535,
      3539,
      3542,
      3546,
      3551,
      3552,
      3557,
      3559,
      3562,
      3563,
      3565,
      3566,
      3570,
      3572,
      3575,
      3576,
      3578,
      3579,
      3581,
      3583,
      3584,
      3589,
      3598,
      3599,
      3606,
      3608,
      3613,
      3614,
      3617,
      3619,
      3627,
      3629,
      3630,
      3635,
      3636,
      3641,
      3643,
      3651,
      3653,
      3654,
      3659,
      3661,
      3669,
      3671,
      3672,
      3674,
      3676,
      3677,
      3681,
      3685,
      3694,
      3695,
      3699,
      3701,
      3702,
      3704,
      3712,
      3714,
      3715,
      3720,
      3722,
      3724,
      3732,
      3734,
      3735,
      3742,
      3744,
      3749,
      3750,
      3753,
      3755,
      3763,
      3765,
      3766,
      3771,
      3772,
      3777,
      3779,
      3787,
      3789,
      3790,
      3794,
      3796,
      3804
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Use computer",
   "task_description": "Browse the internet",
   "program": [
    "[Walk] <home_office> (1)",
    "[Walk] <chair> (1)",
    "[Find] <chair> (1)",
    "[Sit] <chair> (1)",
    "[Find] <computer> (1)",
    "[SwitchOn] <computer> (1)",
    "[TurnTo] <computer> (1)",
    "[LookAt] <computer> (1)",
    "[Find] <keyboard> (1)",
    "[Type] <keyboard> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upworknturk_second",
   "file_id": "split146_1",
   "goal_condition": [
    [
     [
      240,
      241,
      "INSIDE",
      "character",
      "home_office"
     ],
     [
      240,
      271,
      "ON",
      "character",
      "chair"
     ]
    ],
    [
     [
      240,
      "character",
      "SITTING"
     ],
     [
      276,
      "computer",
      "ON"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1171,
   "completion_tokens": 142,
   "total_tokens": 1313
  }
 },
 "13": {
  "plan": [
   [
    " # 0: walk to bathroom\n walk('bathroom')\n # 1: find sink\n find('sink')\n # 2: turn on faucet\n assert('close' to 'sink')\n else: find('sink')\n turnto('faucet')\n switchon('faucet')\n # 3: put hands under running water\n standup()\n turnto('faucet')\n lookat('faucet')\n # 4: turn off faucet\n switchoff('faucet')\n # 5: Done\n done()",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " bathroom",
      "\n",
      " walk",
      "('",
      "bath",
      "room",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " sink",
      "\n",
      " find",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " turn",
      " on",
      " f",
      "auc",
      "et",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "s",
      "ink",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " switch",
      "on",
      "('",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " put",
      " hands",
      " under",
      " running",
      " water",
      "\n",
      " stand",
      "up",
      "()",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " look",
      "at",
      "('",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " turn",
      " off",
      " f",
      "auc",
      "et",
      "\n",
      " switch",
      "off",
      "('",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " Done",
      "\n",
      " done",
      "()"
     ],
     "token_logprobs": [
      -0.017229099,
      -0.006861191,
      -0.001781753,
      -0.78868324,
      -0.29026783,
      -0.11747364,
      -0.014414436,
      -0.0051830183,
      -0.004375275,
      -0.002704598,
      -0.0001792624,
      -0.0018002059,
      -0.0063336203,
      -0.001958573,
      -0.0029541547,
      -0.0006028587,
      -0.101009555,
      -0.117882505,
      -0.025323395,
      -0.4069606,
      -0.00093117333,
      -0.00058711285,
      -9.174727e-05,
      -0.001605023,
      -0.004987894,
      -0.021129267,
      -0.0047246558,
      -0.00081561797,
      -0.4487797,
      -0.0744097,
      -0.9257125,
      -0.0019042891,
      -0.0022460553,
      -0.039202176,
      -0.7161872,
      -0.0019177267,
      -0.011673214,
      -0.0040325387,
      -0.0007807199,
      -0.00214092,
      -2.3723106,
      -0.00026969958,
      -0.007820329,
      -0.0059803193,
      -0.002849425,
      -0.0017939958,
      -0.010408339,
      -0.002203403,
      -0.001380037,
      -0.0004285409,
      -0.0022724604,
      -0.008896427,
      -1.3688283,
      -7.279122e-05,
      -0.00044476078,
      -0.0007635397,
      -1.0106685,
      -0.00041315737,
      -0.00040272233,
      -0.0023052006,
      -0.0073767924,
      -0.69133633,
      -0.0011179856,
      -0.00082886044,
      -0.0015258647,
      -0.0003264598,
      -0.00018486334,
      -0.0017702902,
      -0.004286734,
      -0.03366139,
      -0.007867532,
      -0.0006277846,
      -2.691131,
      -0.40849403,
      -0.56359,
      -1.9440455,
      -0.0158147,
      -0.02920602,
      -5.4497175,
      -0.0109870015,
      -0.0893781,
      -0.0069601615,
      -2.2415833,
      -4.370523e-05,
      -0.0015169701,
      -0.00076700153,
      -0.30443886,
      -0.00049169146,
      -0.00010939391,
      -0.001641085,
      -0.004221547,
      -1.4484994,
      -0.0010510954,
      -0.0007440355,
      -0.027297614,
      -0.00083607866,
      -0.00010450542,
      -0.0018927644,
      -0.0051642642,
      -0.6534152,
      -0.0077493256,
      -0.0016102776,
      -2.4127028,
      -0.048263628,
      -0.22478348,
      -0.0007779781,
      -0.0010141633,
      -0.04693058,
      -0.0684538,
      -0.0030116665,
      -0.0010843911,
      -0.0003888895,
      -0.00453932,
      -0.00025872953,
      -0.002240262,
      -0.09345875,
      -0.06870072,
      -0.00393936,
      -0.0026107123,
      -1.297866,
      -0.28492776,
      -4.0020137,
      -0.055796105
     ],
     "top_logprobs": [
      {
       " #": -0.017229099
      },
      {
       " 0": -0.006861191
      },
      {
       ":": -0.001781753
      },
      {
       " walk": -0.78868324
      },
      {
       " to": -0.29026783
      },
      {
       " bathroom": -0.11747364
      },
      {
       "\n": -0.014414436
      },
      {
       " walk": -0.0051830183
      },
      {
       "('": -0.004375275
      },
      {
       "bath": -0.002704598
      },
      {
       "room": -0.0001792624
      },
      {
       "')": -0.0018002059
      },
      {
       "\n": -0.0063336203
      },
      {
       " #": -0.001958573
      },
      {
       " 1": -0.0029541547
      },
      {
       ":": -0.0006028587
      },
      {
       " find": -0.101009555
      },
      {
       " sink": -0.117882505
      },
      {
       "\n": -0.025323395
      },
      {
       " find": -0.4069606
      },
      {
       "('": -0.00093117333
      },
      {
       "s": -0.00058711285
      },
      {
       "ink": -9.174727e-05
      },
      {
       "')": -0.001605023
      },
      {
       "\n": -0.004987894
      },
      {
       " #": -0.021129267
      },
      {
       " 2": -0.0047246558
      },
      {
       ":": -0.00081561797
      },
      {
       " turn": -0.4487797
      },
      {
       " on": -0.0744097
      },
      {
       " f": -0.9257125
      },
      {
       "auc": -0.0019042891
      },
      {
       "et": -0.0022460553
      },
      {
       "\n": -0.039202176
      },
      {
       " assert": -0.7161872
      },
      {
       "('": -0.0019177267
      },
      {
       "close": -0.011673214
      },
      {
       "'": -0.0040325387
      },
      {
       " to": -0.0007807199
      },
      {
       " '": -0.00214092
      },
      {
       "f": -0.098958954
      },
      {
       "ink": -0.00026969958
      },
      {
       "')": -0.007820329
      },
      {
       "\n": -0.0059803193
      },
      {
       " else": -0.002849425
      },
      {
       ":": -0.0017939958
      },
      {
       " find": -0.010408339
      },
      {
       "('": -0.002203403
      },
      {
       "s": -0.001380037
      },
      {
       "ink": -0.0004285409
      },
      {
       "')": -0.0022724604
      },
      {
       "\n": -0.008896427
      },
      {
       " switch": -0.8985819
      },
      {
       "nt": -7.279122e-05
      },
      {
       "o": -0.00044476078
      },
      {
       "('": -0.0007635397
      },
      {
       "s": -0.45431396
      },
      {
       "auc": -0.00041315737
      },
      {
       "et": -0.00040272233
      },
      {
       "')": -0.0023052006
      },
      {
       "\n": -0.0073767924
      },
      {
       " switch": -0.69133633
      },
      {
       "on": -0.0011179856
      },
      {
       "('": -0.00082886044
      },
      {
       "f": -0.0015258647
      },
      {
       "auc": -0.0003264598
      },
      {
       "et": -0.00018486334
      },
      {
       "')": -0.0017702902
      },
      {
       "\n": -0.004286734
      },
      {
       " #": -0.03366139
      },
      {
       " 3": -0.007867532
      },
      {
       ":": -0.0006277846
      },
      {
       " wash": -1.1583563
      },
      {
       " hands": -0.40849403
      },
      {
       " under": -0.56359
      },
      {
       " water": -1.0270219
      },
      {
       " water": -0.0158147
      },
      {
       "\n": -0.02920602
      },
      {
       " assert": -1.0965977
      },
      {
       "up": -0.0109870015
      },
      {
       "()": -0.0893781
      },
      {
       "\n": -0.0069601615
      },
      {
       " assert": -1.4558274
      },
      {
       "nt": -4.370523e-05
      },
      {
       "o": -0.0015169701
      },
      {
       "('": -0.00076700153
      },
      {
       "f": -0.30443886
      },
      {
       "auc": -0.00049169146
      },
      {
       "et": -0.00010939391
      },
      {
       "')": -0.001641085
      },
      {
       "\n": -0.004221547
      },
      {
       " point": -1.3069313
      },
      {
       "at": -0.0010510954
      },
      {
       "('": -0.0007440355
      },
      {
       "f": -0.027297614
      },
      {
       "auc": -0.00083607866
      },
      {
       "et": -0.00010450542
      },
      {
       "')": -0.0018927644
      },
      {
       "\n": -0.0051642642
      },
      {
       " #": -0.6534152
      },
      {
       " 4": -0.0077493256
      },
      {
       ":": -0.0016102776
      },
      {
       " wash": -1.2629273
      },
      {
       " off": -0.048263628
      },
      {
       " f": -0.22478348
      },
      {
       "auc": -0.0007779781
      },
      {
       "et": -0.0010141633
      },
      {
       "\n": -0.04693058
      },
      {
       " switch": -0.0684538
      },
      {
       "off": -0.0030116665
      },
      {
       "('": -0.0010843911
      },
      {
       "f": -0.0003888895
      },
      {
       "auc": -0.00453932
      },
      {
       "et": -0.00025872953
      },
      {
       "')": -0.002240262
      },
      {
       "\n": -0.09345875
      },
      {
       " #": -0.06870072
      },
      {
       " 5": -0.00393936
      },
      {
       ":": -0.0026107123
      },
      {
       " Done": -1.297866
      },
      {
       "\n": -0.28492776
      },
      {
       "def": -0.7773759
      },
      {
       "()": -0.055796105
      }
     ],
     "text_offset": [
      3342,
      3344,
      3346,
      3347,
      3352,
      3355,
      3364,
      3365,
      3370,
      3372,
      3376,
      3380,
      3382,
      3383,
      3385,
      3387,
      3388,
      3393,
      3398,
      3399,
      3404,
      3406,
      3407,
      3410,
      3412,
      3413,
      3415,
      3417,
      3418,
      3423,
      3426,
      3428,
      3431,
      3433,
      3434,
      3441,
      3443,
      3448,
      3449,
      3452,
      3454,
      3455,
      3458,
      3460,
      3461,
      3466,
      3467,
      3472,
      3474,
      3475,
      3478,
      3480,
      3481,
      3485,
      3487,
      3488,
      3490,
      3491,
      3494,
      3496,
      3498,
      3499,
      3506,
      3508,
      3510,
      3511,
      3514,
      3516,
      3518,
      3519,
      3521,
      3523,
      3524,
      3528,
      3534,
      3540,
      3548,
      3554,
      3555,
      3561,
      3563,
      3565,
      3566,
      3570,
      3572,
      3573,
      3575,
      3576,
      3579,
      3581,
      3583,
      3584,
      3589,
      3591,
      3593,
      3594,
      3597,
      3599,
      3601,
      3602,
      3604,
      3606,
      3607,
      3612,
      3616,
      3618,
      3621,
      3623,
      3624,
      3631,
      3634,
      3636,
      3637,
      3640,
      3642,
      3644,
      3645,
      3647,
      3649,
      3650,
      3655,
      3656,
      3661
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Wash face",
   "task_description": "Turn on water faucet. Get rag wet. Get face soap out. Squirt face soap in hands and put it on face. Rub soap into face. Wash soap off of face. Dry face off on the hand towel. Hang out rag and hand towel.",
   "program": [
    "[Walk] <bathroom> (1)",
    "[Walk] <sink> (1)",
    "[Find] <rag> (1)",
    "[Grab] <rag> (1)",
    "[Find] <faucet> (1)",
    "[SwitchOn] <faucet> (1)",
    "[Wash] <rag> (1)",
    "[Find] <face_soap> (1)",
    "[Grab] <face_soap> (1)",
    "[Pour] <face_soap> (1) <rag> (1)",
    "[PutObjBack] <face_soap> (1)",
    "[Find] <face> (1)",
    "[Scrub] <face> (1)",
    "[PutBack] <rag> (1) <sink> (1)",
    "[Rinse] <face> (1)",
    "[Rinse] <rag> (1)",
    "[SwitchOff] <faucet> (1)",
    "[Grab] <rag> (1)",
    "[PutObjBack] <rag> (1)",
    "[Find] <towel> (1)",
    "[Grab] <towel> (1)",
    "[Wipe] <face> (1)",
    "[PutObjBack] <towel> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upworknturk_second",
   "file_id": "split145_3",
   "goal_condition": [
    [
     [
      240,
      1,
      "INSIDE",
      "character",
      "bathroom"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1171,
   "completion_tokens": 123,
   "total_tokens": 1294
  }
 },
 "14": {
  "plan": [
   [
    " # 0: walk to home office\n walk('home_office')\n # 1: find desk\n find('desk')\n # 2: sit on chair\n assert('close' to 'chair')\n else: find('chair')\n sit('chair')\n # 3: find computer\n find('computer')\n # 4: turn on the computer\n plugin('computer')\n # 5: start working\n turnto('computer')\n lookat('computer')\n assert('close' to 'computer')\n else: find('computer')\n switchon('computer')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " home",
      " office",
      "\n",
      " walk",
      "('",
      "home",
      "_",
      "office",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " desk",
      "\n",
      " find",
      "('",
      "des",
      "k",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " sit",
      " on",
      " chair",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "chair",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "chair",
      "')",
      "\n",
      " sit",
      "('",
      "chair",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " find",
      " computer",
      "\n",
      " find",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " turn",
      " on",
      " the",
      " computer",
      "\n",
      " plugin",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " start",
      " working",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "computer",
      "')",
      "\n",
      " look",
      "at",
      "('",
      "computer",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "computer",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "computer",
      "')",
      "\n",
      " switch",
      "on",
      "('",
      "computer",
      "')"
     ],
     "token_logprobs": [
      -0.017445851,
      -0.008001269,
      -0.0022204884,
      -0.35638255,
      -0.2569828,
      -0.51792324,
      -0.04366463,
      -0.025038373,
      -0.005938765,
      -0.00473364,
      -0.015435262,
      -0.04983482,
      -0.0010734709,
      -0.002684281,
      -0.0072206864,
      -0.0034597355,
      -0.0035814005,
      -0.0008024919,
      -0.077181436,
      -1.1231087,
      -0.027994497,
      -0.7537582,
      -0.0010256786,
      -0.0014818073,
      -0.0003317078,
      -0.0012881234,
      -0.0041299113,
      -0.029056592,
      -0.004902117,
      -0.0005592584,
      -0.30207092,
      -0.57279867,
      -0.8970792,
      -0.057552967,
      -0.8627551,
      -0.001598337,
      -0.015574553,
      -0.0036074235,
      -0.000456569,
      -0.0022433698,
      -0.716961,
      -0.008080822,
      -0.005438887,
      -0.0019211895,
      -0.0019686655,
      -0.0070776306,
      -0.0017901736,
      -0.0019583337,
      -0.0033985516,
      -0.0066184606,
      -0.05220095,
      -0.0014966717,
      -0.0030710953,
      -0.00074164855,
      -0.00513425,
      -0.016271384,
      -0.0075776665,
      -0.0009934576,
      -0.5256051,
      -0.72265464,
      -0.07481718,
      -0.068872415,
      -0.00083446794,
      -0.0015518324,
      -0.0019470493,
      -0.003921765,
      -0.028598145,
      -0.006833887,
      -0.0007726081,
      -0.34794703,
      -0.03701973,
      -1.0794113,
      -0.008061234,
      -0.013250522,
      -2.8197236,
      -0.001633084,
      -0.0016272934,
      -0.0023037673,
      -0.0090559255,
      -0.029047081,
      -0.0051434743,
      -0.00082361064,
      -2.7190309,
      -0.655782,
      -0.2215413,
      -1.5875384,
      -0.00013013717,
      -0.0003204956,
      -0.0008080994,
      -0.010790625,
      -0.0041109384,
      -0.007457979,
      -0.19320807,
      -0.0013657723,
      -0.000553771,
      -0.0030158523,
      -0.002221564,
      -0.40699044,
      -1.4758042,
      -0.0019311046,
      -0.3908032,
      -0.0041581616,
      -0.0005668924,
      -0.0026513494,
      -0.11228974,
      -0.00692895,
      -0.0039094435,
      -0.0025321885,
      -0.0015339822,
      -0.010758931,
      -0.0019610801,
      -0.0008548122,
      -0.0033022033,
      -0.12117054,
      -1.3983402,
      -0.0027261165,
      -0.0011400053,
      -0.0010824228,
      -0.0026184195
     ],
     "top_logprobs": [
      {
       " #": -0.017445851
      },
      {
       " 0": -0.008001269
      },
      {
       ":": -0.0022204884
      },
      {
       " walk": -0.35638255
      },
      {
       " to": -0.2569828
      },
      {
       " home": -0.51792324
      },
      {
       " office": -0.04366463
      },
      {
       "\n": -0.025038373
      },
      {
       " walk": -0.005938765
      },
      {
       "('": -0.00473364
      },
      {
       "home": -0.015435262
      },
      {
       "_": -0.04983482
      },
      {
       "office": -0.0010734709
      },
      {
       "')": -0.002684281
      },
      {
       "\n": -0.0072206864
      },
      {
       " #": -0.0034597355
      },
      {
       " 1": -0.0035814005
      },
      {
       ":": -0.0008024919
      },
      {
       " find": -0.077181436
      },
      {
       " computer": -0.7820672
      },
      {
       "\n": -0.027994497
      },
      {
       " walk": -0.6611602
      },
      {
       "('": -0.0010256786
      },
      {
       "des": -0.0014818073
      },
      {
       "k": -0.0003317078
      },
      {
       "')": -0.0012881234
      },
      {
       "\n": -0.0041299113
      },
      {
       " #": -0.029056592
      },
      {
       " 2": -0.004902117
      },
      {
       ":": -0.0005592584
      },
      {
       " sit": -0.30207092
      },
      {
       " on": -0.57279867
      },
      {
       " chair": -0.8970792
      },
      {
       "\n": -0.057552967
      },
      {
       " assert": -0.8627551
      },
      {
       "('": -0.001598337
      },
      {
       "close": -0.015574553
      },
      {
       "'": -0.0036074235
      },
      {
       " to": -0.000456569
      },
      {
       " '": -0.0022433698
      },
      {
       "des": -0.6758367
      },
      {
       "')": -0.008080822
      },
      {
       "\n": -0.005438887
      },
      {
       " else": -0.0019211895
      },
      {
       ":": -0.0019686655
      },
      {
       " find": -0.0070776306
      },
      {
       "('": -0.0017901736
      },
      {
       "chair": -0.0019583337
      },
      {
       "')": -0.0033985516
      },
      {
       "\n": -0.0066184606
      },
      {
       " sit": -0.05220095
      },
      {
       "('": -0.0014966717
      },
      {
       "chair": -0.0030710953
      },
      {
       "')": -0.00074164855
      },
      {
       "\n": -0.00513425
      },
      {
       " #": -0.016271384
      },
      {
       " 3": -0.0075776665
      },
      {
       ":": -0.0009934576
      },
      {
       " find": -0.5256051
      },
      {
       " computer": -0.72265464
      },
      {
       "\n": -0.07481718
      },
      {
       " find": -0.068872415
      },
      {
       "('": -0.00083446794
      },
      {
       "computer": -0.0015518324
      },
      {
       "')": -0.0019470493
      },
      {
       "\n": -0.003921765
      },
      {
       " #": -0.028598145
      },
      {
       " 4": -0.006833887
      },
      {
       ":": -0.0007726081
      },
      {
       " turn": -0.34794703
      },
      {
       " on": -0.03701973
      },
      {
       " computer": -0.43048173
      },
      {
       " computer": -0.008061234
      },
      {
       "\n": -0.013250522
      },
      {
       " assert": -0.78992426
      },
      {
       "('": -0.001633084
      },
      {
       "computer": -0.0016272934
      },
      {
       "')": -0.0023037673
      },
      {
       "\n": -0.0090559255
      },
      {
       " #": -0.029047081
      },
      {
       " 5": -0.0051434743
      },
      {
       ":": -0.00082361064
      },
      {
       " open": -1.4585186
      },
      {
       " working": -0.655782
      },
      {
       "\n": -0.2215413
      },
      {
       " tur": -1.5875384
      },
      {
       "nt": -0.00013013717
      },
      {
       "o": -0.0003204956
      },
      {
       "('": -0.0008080994
      },
      {
       "computer": -0.010790625
      },
      {
       "')": -0.0041109384
      },
      {
       "\n": -0.007457979
      },
      {
       " look": -0.19320807
      },
      {
       "at": -0.0013657723
      },
      {
       "('": -0.000553771
      },
      {
       "computer": -0.0030158523
      },
      {
       "')": -0.002221564
      },
      {
       "\n": -0.40699044
      },
      {
       " assert": -1.4758042
      },
      {
       "('": -0.0019311046
      },
      {
       "close": -0.3908032
      },
      {
       "'": -0.0041581616
      },
      {
       " to": -0.0005668924
      },
      {
       " '": -0.0026513494
      },
      {
       "computer": -0.11228974
      },
      {
       "')": -0.00692895
      },
      {
       "\n": -0.0039094435
      },
      {
       " else": -0.0025321885
      },
      {
       ":": -0.0015339822
      },
      {
       " find": -0.010758931
      },
      {
       "('": -0.0019610801
      },
      {
       "computer": -0.0008548122
      },
      {
       "')": -0.0033022033
      },
      {
       "\n": -0.12117054
      },
      {
       " open": -1.0446063
      },
      {
       "on": -0.0027261165
      },
      {
       "('": -0.0011400053
      },
      {
       "computer": -0.0010824228
      },
      {
       "')": -0.0026184195
      }
     ],
     "text_offset": [
      3346,
      3348,
      3350,
      3351,
      3356,
      3359,
      3364,
      3371,
      3372,
      3377,
      3379,
      3383,
      3384,
      3390,
      3392,
      3393,
      3395,
      3397,
      3398,
      3403,
      3408,
      3409,
      3414,
      3416,
      3419,
      3420,
      3422,
      3423,
      3425,
      3427,
      3428,
      3432,
      3435,
      3441,
      3442,
      3449,
      3451,
      3456,
      3457,
      3460,
      3462,
      3467,
      3469,
      3470,
      3475,
      3476,
      3481,
      3483,
      3488,
      3490,
      3491,
      3495,
      3497,
      3502,
      3504,
      3505,
      3507,
      3509,
      3510,
      3515,
      3524,
      3525,
      3530,
      3532,
      3540,
      3542,
      3543,
      3545,
      3547,
      3548,
      3553,
      3556,
      3560,
      3569,
      3570,
      3577,
      3579,
      3587,
      3589,
      3590,
      3592,
      3594,
      3595,
      3601,
      3609,
      3610,
      3614,
      3616,
      3617,
      3619,
      3627,
      3629,
      3630,
      3635,
      3637,
      3639,
      3647,
      3649,
      3650,
      3657,
      3659,
      3664,
      3665,
      3668,
      3670,
      3678,
      3680,
      3681,
      3686,
      3687,
      3692,
      3694,
      3702,
      3704,
      3705,
      3712,
      3714,
      3716,
      3724
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Computer work",
   "task_description": "Find the computer, Turn on the computer, find keyboard, find mouse, go online",
   "program": [
    "[Walk] <home_office> (1)",
    "[Walk] <chair> (1)",
    "[Find] <chair> (1)",
    "[Sit] <chair> (1)",
    "[Find] <computer> (1)",
    "[SwitchOn] <computer> (1)",
    "[Find] <mouse> (1)",
    "[Grab] <mouse> (1)",
    "[TurnTo] <computer> (1)",
    "[PointAt] <computer> (1)",
    "[TurnTo] <computer> (1)",
    "[LookAt] <computer> (1)",
    "[PutObjBack] <mouse> (1)",
    "[Find] <keyboard> (1)",
    "[Type] <keyboard> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upworknturk_second",
   "file_id": "split84_1",
   "goal_condition": [
    [
     [
      240,
      241,
      "INSIDE",
      "character",
      "home_office"
     ],
     [
      240,
      271,
      "ON",
      "character",
      "chair"
     ]
    ],
    [
     [
      240,
      "character",
      "SITTING"
     ],
     [
      276,
      "computer",
      "ON"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1171,
   "completion_tokens": 119,
   "total_tokens": 1290
  }
 },
 "15": {
  "plan": [
   [
    " # 0: find bed\n find('bed')\n # 1: lay down\n turnto('bed')\n lookat('bed')\n assert('close' to 'bed')\n else: find('bed')\n else: turnto('bed')\n lie('bed')\n # 2: sleep\n sleep()\n # 3: wake up\n wakeup()",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " bed",
      "\n",
      " find",
      "('",
      "bed",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " lay",
      " down",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "bed",
      "')",
      "\n",
      " look",
      "at",
      "('",
      "bed",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "bed",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "bed",
      "')",
      "\n",
      " else",
      ":",
      " tur",
      "nt",
      "o",
      "('",
      "bed",
      "')",
      "\n",
      " lie",
      "('",
      "bed",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " sleep",
      "\n",
      " sleep",
      "()",
      "\n",
      " #",
      " 3",
      ":",
      " wake",
      " up",
      "\n",
      " wake",
      "up",
      "()"
     ],
     "token_logprobs": [
      -0.017333528,
      -0.009456282,
      -0.0019592883,
      -1.2329139,
      -0.5413938,
      -0.030367883,
      -0.19053553,
      -0.0017640191,
      -0.0003726696,
      -0.0015724284,
      -0.0066113826,
      -0.0039426507,
      -0.0031362078,
      -0.0006194353,
      -0.5517466,
      -0.11401265,
      -2.0152488,
      -0.43361312,
      -5.109523e-05,
      -0.0007090229,
      -0.0005979664,
      -0.00012810968,
      -0.00105915,
      -0.0038416474,
      -0.13041371,
      -0.0005790592,
      -0.00045179878,
      -0.00012405471,
      -0.00048632707,
      -0.0031469103,
      -0.053868473,
      -0.00070508523,
      -0.0018798044,
      -0.0023844207,
      -0.0005181708,
      -0.0017357179,
      -0.00017210613,
      -0.003469128,
      -0.0036881831,
      -0.0010872569,
      -0.0013374232,
      -0.004219814,
      -0.001028304,
      -0.00021550842,
      -0.0009262802,
      -0.00410986,
      -0.60678685,
      -0.0016511736,
      -0.008315073,
      -3.6195077e-05,
      -0.00033123003,
      -0.0005980866,
      -0.0002022697,
      -0.0007431982,
      -0.002239067,
      -1.2611324,
      -0.0054852753,
      -0.00070508523,
      -0.0009780627,
      -0.0062463465,
      -0.17308876,
      -0.008850785,
      -0.00096488127,
      -1.1461366,
      -0.043060657,
      -0.016015518,
      -0.006258405,
      -0.75687903,
      -0.12030639,
      -0.0072467425,
      -0.0019854505,
      -0.16340545,
      -0.11494559,
      -0.04634387,
      -0.0115133,
      -0.0011554011,
      -0.0063548554
     ],
     "top_logprobs": [
      {
       " #": -0.017333528
      },
      {
       " 0": -0.009456282
      },
      {
       ":": -0.0019592883
      },
      {
       " walk": -0.62806296
      },
      {
       " bed": -0.5413938
      },
      {
       "\n": -0.030367883
      },
      {
       " find": -0.19053553
      },
      {
       "('": -0.0017640191
      },
      {
       "bed": -0.0003726696
      },
      {
       "')": -0.0015724284
      },
      {
       "\n": -0.0066113826
      },
      {
       " #": -0.0039426507
      },
      {
       " 1": -0.0031362078
      },
      {
       ":": -0.0006194353
      },
      {
       " lay": -0.5517466
      },
      {
       " down": -0.11401265
      },
      {
       " on": -0.20799968
      },
      {
       " tur": -0.43361312
      },
      {
       "nt": -5.109523e-05
      },
      {
       "o": -0.0007090229
      },
      {
       "('": -0.0005979664
      },
      {
       "bed": -0.00012810968
      },
      {
       "')": -0.00105915
      },
      {
       "\n": -0.0038416474
      },
      {
       " look": -0.13041371
      },
      {
       "at": -0.0005790592
      },
      {
       "('": -0.00045179878
      },
      {
       "bed": -0.00012405471
      },
      {
       "')": -0.00048632707
      },
      {
       "\n": -0.0031469103
      },
      {
       " assert": -0.053868473
      },
      {
       "('": -0.00070508523
      },
      {
       "close": -0.0018798044
      },
      {
       "'": -0.0023844207
      },
      {
       " to": -0.0005181708
      },
      {
       " '": -0.0017357179
      },
      {
       "bed": -0.00017210613
      },
      {
       "')": -0.003469128
      },
      {
       "\n": -0.0036881831
      },
      {
       " else": -0.0010872569
      },
      {
       ":": -0.0013374232
      },
      {
       " find": -0.004219814
      },
      {
       "('": -0.001028304
      },
      {
       "bed": -0.00021550842
      },
      {
       "')": -0.0009262802
      },
      {
       "\n": -0.00410986
      },
      {
       " else": -0.60678685
      },
      {
       ":": -0.0016511736
      },
      {
       " tur": -0.008315073
      },
      {
       "nt": -3.6195077e-05
      },
      {
       "o": -0.00033123003
      },
      {
       "('": -0.0005980866
      },
      {
       "bed": -0.0002022697
      },
      {
       "')": -0.0007431982
      },
      {
       "\n": -0.002239067
      },
      {
       " sit": -0.3797876
      },
      {
       "('": -0.0054852753
      },
      {
       "bed": -0.00070508523
      },
      {
       "')": -0.0009780627
      },
      {
       "\n": -0.0062463465
      },
      {
       " #": -0.17308876
      },
      {
       " 2": -0.008850785
      },
      {
       ":": -0.00096488127
      },
      {
       " close": -0.94311637
      },
      {
       "\n": -0.043060657
      },
      {
       " sleep": -0.016015518
      },
      {
       "()": -0.006258405
      },
      {
       "<|endoftext|>": -0.66422194
      },
      {
       " #": -0.12030639
      },
      {
       " 3": -0.0072467425
      },
      {
       ":": -0.0019854505
      },
      {
       " wake": -0.16340545
      },
      {
       " up": -0.11494559
      },
      {
       "\n": -0.04634387
      },
      {
       " wake": -0.0115133
      },
      {
       "up": -0.0011554011
      },
      {
       "()": -0.0063548554
      }
     ],
     "text_offset": [
      3341,
      3343,
      3345,
      3346,
      3351,
      3355,
      3356,
      3361,
      3363,
      3366,
      3368,
      3369,
      3371,
      3373,
      3374,
      3378,
      3383,
      3384,
      3388,
      3390,
      3391,
      3393,
      3396,
      3398,
      3399,
      3404,
      3406,
      3408,
      3411,
      3413,
      3414,
      3421,
      3423,
      3428,
      3429,
      3432,
      3434,
      3437,
      3439,
      3440,
      3445,
      3446,
      3451,
      3453,
      3456,
      3458,
      3459,
      3464,
      3465,
      3469,
      3471,
      3472,
      3474,
      3477,
      3479,
      3480,
      3484,
      3486,
      3489,
      3491,
      3492,
      3494,
      3496,
      3497,
      3503,
      3504,
      3510,
      3512,
      3513,
      3515,
      3517,
      3518,
      3523,
      3526,
      3527,
      3532,
      3534
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Take nap",
   "task_description": "Sleep for a short amount of time during the day",
   "program": [
    "[Walk] <bedroom> (1)",
    "[Walk] <bed> (1)",
    "[Find] <bed> (1)",
    "[Lie] <bed> (1)",
    "[Sleep]"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_july",
   "file_id": "split6_5",
   "goal_condition": [
    [
     [
      240,
      197,
      "ON",
      "character",
      "bed"
     ],
     [
      240,
      162,
      "INSIDE",
      "character",
      "bedroom"
     ]
    ],
    [
     [
      240,
      "character",
      "LYING"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1172,
   "completion_tokens": 77,
   "total_tokens": 1249
  }
 },
 "16": {
  "plan": [
   [
    " # 0: walk to home office\n walk('home_office')\n # 1: find computer\n walk('computer')\n find('computer')\n # 2: turn on computer\n assert('close' to 'computer')\n else: find('computer')\n plugin('computer')\n # 3: sit in chair\n find('chair')\n sit('chair')\n # 4: touch the mouse\n assert('close' to 'mouse')\n else: find('mouse')\n touch('mouse')\n # 5: look at computer\n turnto('computer')\n lookat('computer')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " home",
      " office",
      "\n",
      " walk",
      "('",
      "home",
      "_",
      "office",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " computer",
      "\n",
      " walk",
      "('",
      "computer",
      "')",
      "\n",
      " find",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " turn",
      " on",
      " computer",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "computer",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "computer",
      "')",
      "\n",
      " plugin",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " sit",
      " in",
      " chair",
      "\n",
      " find",
      "('",
      "chair",
      "')",
      "\n",
      " sit",
      "('",
      "chair",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " touch",
      " the",
      " mouse",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "mouse",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "mouse",
      "')",
      "\n",
      " touch",
      "('",
      "mouse",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " look",
      " at",
      " computer",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "computer",
      "')",
      "\n",
      " look",
      "at",
      "('",
      "computer",
      "')"
     ],
     "token_logprobs": [
      -0.017012091,
      -0.0073147677,
      -0.0018414661,
      -0.16712625,
      -0.23830564,
      -0.49273467,
      -0.034659863,
      -0.024314176,
      -0.005187392,
      -0.0045143547,
      -0.012142617,
      -0.050213244,
      -0.00091410964,
      -0.0025185633,
      -0.0077802013,
      -0.0030464632,
      -0.003251732,
      -0.0007048478,
      -0.051306333,
      -0.68495214,
      -0.03395425,
      -1.2304076,
      -0.0018655322,
      -0.004268477,
      -0.0020264788,
      -0.004169712,
      -0.0139042605,
      -0.0009211495,
      -0.00059963536,
      -0.0009316502,
      -0.0041999402,
      -0.004186293,
      -0.0049246396,
      -0.00068790605,
      -0.6504119,
      -0.028526753,
      -0.7847001,
      -0.027173828,
      -0.3907303,
      -0.0013353939,
      -0.03310958,
      -0.0039120163,
      -0.0013494163,
      -0.0031733988,
      -0.0019614988,
      -0.0061106887,
      -0.0039619193,
      -0.0015115981,
      -0.0013682795,
      -0.0054059247,
      -0.0015872938,
      -0.00070508523,
      -0.0017724378,
      -0.0049116393,
      -1.6559261,
      -0.0010303333,
      -0.002084295,
      -0.0020122065,
      -0.008673947,
      -0.124734275,
      -0.007485301,
      -0.0008544527,
      -1.2668307,
      -1.4079046,
      -0.9518934,
      -0.08287724,
      -0.23512128,
      -0.0012569706,
      -0.0023330399,
      -0.0015742793,
      -0.0038246543,
      -1.1023811,
      -0.002216366,
      -0.0013619519,
      -0.00067746826,
      -0.00534546,
      -0.04184758,
      -0.0070060785,
      -0.00074152835,
      -2.7104056,
      -0.8773155,
      -0.9739194,
      -0.47057825,
      -0.4710353,
      -0.0013777702,
      -0.02782037,
      -0.0029613888,
      -0.001257805,
      -0.0031165965,
      -0.028794859,
      -0.012409623,
      -0.003566445,
      -0.0012634745,
      -0.0013494163,
      -0.007925567,
      -0.0017561391,
      -0.0018071913,
      -0.0027068695,
      -0.0053956173,
      -0.06343322,
      -0.0011222807,
      -0.00066649547,
      -0.0032160932,
      -0.007522534,
      -0.019853964,
      -0.0076237307,
      -0.00090408674,
      -1.1367917,
      -0.0077401344,
      -1.3496307,
      -1.3152714,
      -0.08516487,
      -7.8634315e-05,
      -0.00025431695,
      -0.00058866065,
      -0.0040121297,
      -0.002034602,
      -0.005790019,
      -0.007646434,
      -0.0009435232,
      -0.0008356018,
      -0.0007684329,
      -0.0020334062
     ],
     "top_logprobs": [
      {
       " #": -0.017012091
      },
      {
       " 0": -0.0073147677
      },
      {
       ":": -0.0018414661
      },
      {
       " walk": -0.16712625
      },
      {
       " to": -0.23830564
      },
      {
       " home": -0.49273467
      },
      {
       " office": -0.034659863
      },
      {
       "\n": -0.024314176
      },
      {
       " walk": -0.005187392
      },
      {
       "('": -0.0045143547
      },
      {
       "home": -0.012142617
      },
      {
       "_": -0.050213244
      },
      {
       "office": -0.00091410964
      },
      {
       "')": -0.0025185633
      },
      {
       "\n": -0.0077802013
      },
      {
       " #": -0.0030464632
      },
      {
       " 1": -0.003251732
      },
      {
       ":": -0.0007048478
      },
      {
       " find": -0.051306333
      },
      {
       " computer": -0.68495214
      },
      {
       "\n": -0.03395425
      },
      {
       " find": -0.37263873
      },
      {
       "('": -0.0018655322
      },
      {
       "computer": -0.004268477
      },
      {
       "')": -0.0020264788
      },
      {
       "\n": -0.004169712
      },
      {
       " find": -0.0139042605
      },
      {
       "('": -0.0009211495
      },
      {
       "computer": -0.00059963536
      },
      {
       "')": -0.0009316502
      },
      {
       "\n": -0.0041999402
      },
      {
       " #": -0.004186293
      },
      {
       " 2": -0.0049246396
      },
      {
       ":": -0.00068790605
      },
      {
       " turn": -0.6504119
      },
      {
       " on": -0.028526753
      },
      {
       " the": -0.6302259
      },
      {
       "\n": -0.027173828
      },
      {
       " assert": -0.3907303
      },
      {
       "('": -0.0013353939
      },
      {
       "close": -0.03310958
      },
      {
       "'": -0.0039120163
      },
      {
       " to": -0.0013494163
      },
      {
       " '": -0.0031733988
      },
      {
       "computer": -0.0019614988
      },
      {
       "')": -0.0061106887
      },
      {
       "\n": -0.0039619193
      },
      {
       " else": -0.0015115981
      },
      {
       ":": -0.0013682795
      },
      {
       " find": -0.0054059247
      },
      {
       "('": -0.0015872938
      },
      {
       "computer": -0.00070508523
      },
      {
       "')": -0.0017724378
      },
      {
       "\n": -0.0049116393
      },
      {
       " switch": -0.42246002
      },
      {
       "('": -0.0010303333
      },
      {
       "computer": -0.002084295
      },
      {
       "')": -0.0020122065
      },
      {
       "\n": -0.008673947
      },
      {
       " #": -0.124734275
      },
      {
       " 3": -0.007485301
      },
      {
       ":": -0.0008544527
      },
      {
       " sit": -1.2668307
      },
      {
       " on": -0.59020424
      },
      {
       " front": -0.6475245
      },
      {
       "\n": -0.08287724
      },
      {
       " find": -0.23512128
      },
      {
       "('": -0.0012569706
      },
      {
       "chair": -0.0023330399
      },
      {
       "')": -0.0015742793
      },
      {
       "\n": -0.0038246543
      },
      {
       " assert": -0.50430614
      },
      {
       "('": -0.002216366
      },
      {
       "chair": -0.0013619519
      },
      {
       "')": -0.00067746826
      },
      {
       "\n": -0.00534546
      },
      {
       " #": -0.04184758
      },
      {
       " 4": -0.0070060785
      },
      {
       ":": -0.00074152835
      },
      {
       " open": -1.2713873
      },
      {
       " the": -0.8773155
      },
      {
       " keyboard": -0.738215
      },
      {
       "\n": -0.47057825
      },
      {
       " assert": -0.4710353
      },
      {
       "('": -0.0013777702
      },
      {
       "close": -0.02782037
      },
      {
       "'": -0.0029613888
      },
      {
       " to": -0.001257805
      },
      {
       " '": -0.0031165965
      },
      {
       "mouse": -0.028794859
      },
      {
       "')": -0.012409623
      },
      {
       "\n": -0.003566445
      },
      {
       " else": -0.0012634745
      },
      {
       ":": -0.0013494163
      },
      {
       " find": -0.007925567
      },
      {
       "('": -0.0017561391
      },
      {
       "mouse": -0.0018071913
      },
      {
       "')": -0.0027068695
      },
      {
       "\n": -0.0053956173
      },
      {
       " touch": -0.06343322
      },
      {
       "('": -0.0011222807
      },
      {
       "mouse": -0.00066649547
      },
      {
       "')": -0.0032160932
      },
      {
       "\n": -0.007522534
      },
      {
       " #": -0.019853964
      },
      {
       " 5": -0.0076237307
      },
      {
       ":": -0.00090408674
      },
      {
       " look": -1.1367917
      },
      {
       " at": -0.0077401344
      },
      {
       " the": -0.38494048
      },
      {
       " screen": -0.34978494
      },
      {
       " tur": -0.08516487
      },
      {
       "nt": -7.8634315e-05
      },
      {
       "o": -0.00025431695
      },
      {
       "('": -0.00058866065
      },
      {
       "computer": -0.0040121297
      },
      {
       "')": -0.002034602
      },
      {
       "\n": -0.005790019
      },
      {
       " look": -0.007646434
      },
      {
       "at": -0.0009435232
      },
      {
       "('": -0.0008356018
      },
      {
       "computer": -0.0007684329
      },
      {
       "')": -0.0020334062
      }
     ],
     "text_offset": [
      3352,
      3354,
      3356,
      3357,
      3362,
      3365,
      3370,
      3377,
      3378,
      3383,
      3385,
      3389,
      3390,
      3396,
      3398,
      3399,
      3401,
      3403,
      3404,
      3409,
      3418,
      3419,
      3424,
      3426,
      3434,
      3436,
      3437,
      3442,
      3444,
      3452,
      3454,
      3455,
      3457,
      3459,
      3460,
      3465,
      3468,
      3477,
      3478,
      3485,
      3487,
      3492,
      3493,
      3496,
      3498,
      3506,
      3508,
      3509,
      3514,
      3515,
      3520,
      3522,
      3530,
      3532,
      3533,
      3540,
      3542,
      3550,
      3552,
      3553,
      3555,
      3557,
      3558,
      3562,
      3565,
      3571,
      3572,
      3577,
      3579,
      3584,
      3586,
      3587,
      3591,
      3593,
      3598,
      3600,
      3601,
      3603,
      3605,
      3606,
      3612,
      3616,
      3622,
      3623,
      3630,
      3632,
      3637,
      3638,
      3641,
      3643,
      3648,
      3650,
      3651,
      3656,
      3657,
      3662,
      3664,
      3669,
      3671,
      3672,
      3678,
      3680,
      3685,
      3687,
      3688,
      3690,
      3692,
      3693,
      3698,
      3701,
      3710,
      3711,
      3715,
      3717,
      3718,
      3720,
      3728,
      3730,
      3731,
      3736,
      3738,
      3740,
      3748
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Do work on computer",
   "task_description": "Open home office, sit in my chair at the desk and do work on the computer. Stand up from chair and desk, leave home office.",
   "program": [
    "[Walk] <home_office> (1)",
    "[Walk] <chair> (1)",
    "[Find] <chair> (1)",
    "[Sit] <chair> (1)",
    "[Find] <computer> (1)",
    "[SwitchOn] <computer> (1)",
    "[TurnTo] <computer> (1)",
    "[LookAt] <computer> (1)",
    "[Find] <keyboard> (1)",
    "[Type] <keyboard> (1)",
    "[SwitchOff] <computer> (1)",
    "[StandUp]"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upworknturk_second",
   "file_id": "split119_3",
   "goal_condition": [
    [
     [
      240,
      241,
      "INSIDE",
      "character",
      "home_office"
     ],
     [
      240,
      271,
      "ON",
      "character",
      "chair"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1175,
   "completion_tokens": 123,
   "total_tokens": 1298
  }
 },
 "17": {
  "plan": [
   [
    " # 0: find newspaper\n find('newspaper')\n # 1: pick up newspaper\n grab('newspaper')\n # 2: read newspaper\n turnto('newspaper')\n lookat('newspaper')\n read('newspaper')\n # 3: put newspaper back\n assert('close' to 'newspaper')\n else: find('newspaper')\n putobjback('newspaper')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " newspaper",
      "\n",
      " find",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " pick",
      " up",
      " newspaper",
      "\n",
      " grab",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " read",
      " newspaper",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " look",
      "at",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " read",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " put",
      " newspaper",
      " back",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " put",
      "obj",
      "back",
      "('",
      "new",
      "sp",
      "aper",
      "')"
     ],
     "token_logprobs": [
      -0.018389398,
      -0.009722093,
      -0.0021267661,
      -0.699622,
      -0.29464078,
      -0.029826669,
      -0.027859591,
      -0.002379046,
      -0.0031586902,
      -0.0007848969,
      -0.0004874009,
      -0.0025902723,
      -0.007955847,
      -0.004636866,
      -0.0027026269,
      -0.00052162877,
      -2.8308575,
      -0.08752443,
      -0.42490783,
      -0.023221789,
      -0.6389066,
      -0.001130754,
      -0.0012537473,
      -0.0003172779,
      -0.001090239,
      -0.0014887346,
      -0.0050209607,
      -0.39828438,
      -0.0065994426,
      -0.0005327809,
      -2.246675,
      -0.35817632,
      -0.010932946,
      -0.5648095,
      -7.362661e-05,
      -0.00022480857,
      -0.0006308868,
      -0.0018273152,
      -0.00034882128,
      -0.0009913117,
      -0.0016412033,
      -0.0043612644,
      -0.267313,
      -0.00068432797,
      -0.0005168586,
      -0.0011422721,
      -0.0014512477,
      -0.0013475663,
      -0.0018175814,
      -0.020400768,
      -0.49697497,
      -0.008647068,
      -0.002360046,
      -0.00041912153,
      -0.000323121,
      -0.0021906807,
      -0.28957126,
      -0.039711352,
      -0.011209699,
      -0.0015597717,
      -0.22878727,
      -0.5246125,
      -0.1434609,
      -0.030919904,
      -1.2598406,
      -0.0013502537,
      -1.6290907,
      -0.0028659236,
      -0.000698404,
      -0.0044615464,
      -0.018234534,
      -0.0005133987,
      -0.0009834346,
      -0.0062417304,
      -0.006332902,
      -0.002267861,
      -0.001388633,
      -0.02521941,
      -0.0020245668,
      -0.0011890564,
      -0.0016511736,
      -0.0065366263,
      -0.0026016862,
      -0.0067152483,
      -0.18947548,
      -0.52962047,
      -0.0037519597,
      -0.0012976732,
      -0.0011539687,
      -0.0009136328,
      -0.00046599025,
      -0.0020989294
     ],
     "top_logprobs": [
      {
       " #": -0.018389398
      },
      {
       " 0": -0.009722093
      },
      {
       ":": -0.0021267661
      },
      {
       " find": -0.699622
      },
      {
       " newspaper": -0.29464078
      },
      {
       "\n": -0.029826669
      },
      {
       " find": -0.027859591
      },
      {
       "('": -0.002379046
      },
      {
       "new": -0.0031586902
      },
      {
       "sp": -0.0007848969
      },
      {
       "aper": -0.0004874009
      },
      {
       "')": -0.0025902723
      },
      {
       "\n": -0.007955847
      },
      {
       " #": -0.004636866
      },
      {
       " 1": -0.0027026269
      },
      {
       ":": -0.00052162877
      },
      {
       " grab": -0.18501607
      },
      {
       " up": -0.08752443
      },
      {
       " newspaper": -0.42490783
      },
      {
       "\n": -0.023221789
      },
      {
       " grab": -0.6389066
      },
      {
       "('": -0.001130754
      },
      {
       "new": -0.0012537473
      },
      {
       "sp": -0.0003172779
      },
      {
       "aper": -0.001090239
      },
      {
       "')": -0.0014887346
      },
      {
       "\n": -0.0050209607
      },
      {
       " #": -0.39828438
      },
      {
       " 2": -0.0065994426
      },
      {
       ":": -0.0005327809
      },
      {
       " sit": -1.0263772
      },
      {
       " newspaper": -0.35817632
      },
      {
       "\n": -0.010932946
      },
      {
       " tur": -0.5648095
      },
      {
       "nt": -7.362661e-05
      },
      {
       "o": -0.00022480857
      },
      {
       "('": -0.0006308868
      },
      {
       "new": -0.0018273152
      },
      {
       "sp": -0.00034882128
      },
      {
       "aper": -0.0009913117
      },
      {
       "')": -0.0016412033
      },
      {
       "\n": -0.0043612644
      },
      {
       " look": -0.267313
      },
      {
       "at": -0.00068432797
      },
      {
       "('": -0.0005168586
      },
      {
       "new": -0.0011422721
      },
      {
       "sp": -0.0014512477
      },
      {
       "aper": -0.0013475663
      },
      {
       "')": -0.0018175814
      },
      {
       "\n": -0.020400768
      },
      {
       " read": -0.49697497
      },
      {
       "('": -0.008647068
      },
      {
       "new": -0.002360046
      },
      {
       "sp": -0.00041912153
      },
      {
       "aper": -0.000323121
      },
      {
       "')": -0.0021906807
      },
      {
       "\n": -0.28957126
      },
      {
       " #": -0.039711352
      },
      {
       " 3": -0.011209699
      },
      {
       ":": -0.0015597717
      },
      {
       " put": -0.22878727
      },
      {
       " newspaper": -0.5246125
      },
      {
       " back": -0.1434609
      },
      {
       "\n": -0.030919904
      },
      {
       " put": -0.3829485
      },
      {
       "('": -0.0013502537
      },
      {
       "new": -0.23757876
      },
      {
       "'": -0.0028659236
      },
      {
       " to": -0.000698404
      },
      {
       " '": -0.0044615464
      },
      {
       "new": -0.018234534
      },
      {
       "sp": -0.0005133987
      },
      {
       "aper": -0.0009834346
      },
      {
       "')": -0.0062417304
      },
      {
       "\n": -0.006332902
      },
      {
       " else": -0.002267861
      },
      {
       ":": -0.001388633
      },
      {
       " find": -0.02521941
      },
      {
       "('": -0.0020245668
      },
      {
       "new": -0.0011890564
      },
      {
       "sp": -0.0016511736
      },
      {
       "aper": -0.0065366263
      },
      {
       "')": -0.0026016862
      },
      {
       "\n": -0.0067152483
      },
      {
       " put": -0.18947548
      },
      {
       "obj": -0.52962047
      },
      {
       "back": -0.0037519597
      },
      {
       "('": -0.0012976732
      },
      {
       "new": -0.0011539687
      },
      {
       "sp": -0.0009136328
      },
      {
       "aper": -0.00046599025
      },
      {
       "')": -0.0020989294
      }
     ],
     "text_offset": [
      3342,
      3344,
      3346,
      3347,
      3352,
      3362,
      3363,
      3368,
      3370,
      3373,
      3375,
      3379,
      3381,
      3382,
      3384,
      3386,
      3387,
      3392,
      3395,
      3405,
      3406,
      3411,
      3413,
      3416,
      3418,
      3422,
      3424,
      3425,
      3427,
      3429,
      3430,
      3435,
      3445,
      3446,
      3450,
      3452,
      3453,
      3455,
      3458,
      3460,
      3464,
      3466,
      3467,
      3472,
      3474,
      3476,
      3479,
      3481,
      3485,
      3487,
      3488,
      3493,
      3495,
      3498,
      3500,
      3504,
      3506,
      3507,
      3509,
      3511,
      3512,
      3516,
      3526,
      3531,
      3532,
      3539,
      3541,
      3546,
      3547,
      3550,
      3552,
      3555,
      3557,
      3561,
      3563,
      3564,
      3569,
      3570,
      3575,
      3577,
      3580,
      3582,
      3586,
      3588,
      3589,
      3593,
      3596,
      3600,
      3602,
      3605,
      3607,
      3611
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Read news",
   "task_description": "Read news articles in a newspaper",
   "program": [
    "[Walk] <home_office> (1)",
    "[Walk] <chair> (1)",
    "[Find] <chair> (1)",
    "[Sit] <chair> (1)",
    "[Find] <newspaper> (1)",
    "[Grab] <newspaper> (1)",
    "[Read] <newspaper> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_july",
   "file_id": "split15_4",
   "goal_condition": [
    [
     [
      240,
      241,
      "INSIDE",
      "character",
      "home_office"
     ],
     [
      240,
      1000,
      "HOLDS_RH",
      "character",
      "newspaper"
     ],
     [
      240,
      271,
      "ON",
      "character",
      "chair"
     ]
    ],
    [
     [
      240,
      "character",
      "SITTING"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1171,
   "completion_tokens": 92,
   "total_tokens": 1263
  }
 },
 "18": {
  "plan": [
   [
    " # 0: find sink\n find('sink')\n # 1: turn on the water\n switchon('sink')\n # 2: pour soap\n pour('soap')\n # 3: grab sponge\n grab('sponge')\n # 4: wash hands\n assert('close' to 'sponge')\n else: grab('sponge')\n wash('sponge')\n turnto('sponge')\n lookat('sponge')\n # 5: turn off the water\n switchoff('sink')\n # 6: done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " sink",
      "\n",
      " find",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " turn",
      " on",
      " the",
      " water",
      "\n",
      " switch",
      "on",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " pour",
      " soap",
      "\n",
      " pour",
      "('",
      "so",
      "ap",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " grab",
      " sponge",
      "\n",
      " grab",
      "('",
      "sp",
      "onge",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " wash",
      " hands",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "sp",
      "onge",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "sp",
      "onge",
      "')",
      "\n",
      " wash",
      "('",
      "sp",
      "onge",
      "')",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "sp",
      "onge",
      "')",
      "\n",
      " look",
      "at",
      "('",
      "sp",
      "onge",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " turn",
      " off",
      " the",
      " water",
      "\n",
      " switch",
      "off",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " #",
      " 6",
      ":",
      " done"
     ],
     "token_logprobs": [
      -0.022016702,
      -0.011172328,
      -0.002581309,
      -0.7971218,
      -0.37459013,
      -0.030491266,
      -0.18114708,
      -0.0024852215,
      -0.001099665,
      -0.00017854528,
      -0.0017877847,
      -0.007876724,
      -0.013818078,
      -0.0036850716,
      -0.0009852228,
      -0.5768393,
      -0.19552796,
      -1.0759866,
      -1.989198,
      -0.06757299,
      -1.7148218,
      -0.0022562123,
      -0.0015007324,
      -0.7837391,
      -0.00074284157,
      -0.03208565,
      -0.0055242293,
      -0.07021726,
      -0.004105253,
      -0.0011320681,
      -1.115133,
      -0.93787676,
      -0.43247616,
      -1.1916367,
      -0.004541657,
      -0.014184918,
      -0.0010428615,
      -0.01451361,
      -0.005967068,
      -0.038119275,
      -0.005043906,
      -0.0010327185,
      -1.0751784,
      -1.2655537,
      -0.030437684,
      -0.20170036,
      -0.0013181443,
      -0.0016948791,
      -0.0011522978,
      -0.0017544666,
      -0.003800302,
      -0.03106807,
      -0.003932718,
      -0.00053206563,
      -0.79660916,
      -0.3552049,
      -0.27953923,
      -2.0993502,
      -0.0021236583,
      -1.3839928,
      -0.004707769,
      -0.011254003,
      -0.0035916306,
      -0.54907393,
      -0.0006441875,
      -0.013266167,
      -0.0055728387,
      -0.0018319736,
      -0.0018729974,
      -0.4653043,
      -0.0019054831,
      -0.0010851074,
      -0.0004832248,
      -0.002228373,
      -0.0062175593,
      -0.11164675,
      -0.0038917311,
      -0.3406337,
      -0.0012279053,
      -0.00532317,
      -0.0066999462,
      -1.4706659,
      -0.00013371343,
      -0.000524134,
      -0.0005711877,
      -0.041040793,
      -0.00063524215,
      -0.0013165927,
      -0.0047200434,
      -0.23634996,
      -0.0009799729,
      -0.00058794545,
      -0.002588121,
      -0.00043796306,
      -0.0018890623,
      -0.006718909,
      -0.012644473,
      -0.0058317455,
      -0.0018311372,
      -0.5460949,
      -0.02065922,
      -0.5482969,
      -0.034014065,
      -0.022162827,
      -0.039977614,
      -0.0042810496,
      -0.0009572444,
      -0.016221281,
      -0.000113686365,
      -0.0018539474,
      -0.06581538,
      -0.016292466,
      -0.0030393484,
      -0.001781753,
      -1.8429972
     ],
     "top_logprobs": [
      {
       " #": -0.022016702
      },
      {
       " 0": -0.011172328
      },
      {
       ":": -0.002581309
      },
      {
       " find": -0.7971218
      },
      {
       " sink": -0.37459013
      },
      {
       "\n": -0.030491266
      },
      {
       " find": -0.18114708
      },
      {
       "('": -0.0024852215
      },
      {
       "s": -0.001099665
      },
      {
       "ink": -0.00017854528
      },
      {
       "')": -0.0017877847
      },
      {
       "\n": -0.007876724
      },
      {
       " #": -0.013818078
      },
      {
       " 1": -0.0036850716
      },
      {
       ":": -0.0009852228
      },
      {
       " turn": -0.5768393
      },
      {
       " on": -0.19552796
      },
      {
       " f": -0.9647137
      },
      {
       " f": -0.52299434
      },
      {
       "\n": -0.06757299
      },
      {
       " assert": -1.0936241
      },
      {
       "on": -0.0022562123
      },
      {
       "('": -0.0015007324
      },
      {
       "s": -0.7837391
      },
      {
       "ink": -0.00074284157
      },
      {
       "')": -0.03208565
      },
      {
       "\n": -0.0055242293
      },
      {
       " #": -0.07021726
      },
      {
       " 2": -0.004105253
      },
      {
       ":": -0.0011320681
      },
      {
       " pour": -1.115133
      },
      {
       " soap": -0.93787676
      },
      {
       "\n": -0.43247616
      },
      {
       " assert": -1.0235143
      },
      {
       "('": -0.004541657
      },
      {
       "so": -0.014184918
      },
      {
       "ap": -0.0010428615
      },
      {
       "')": -0.01451361
      },
      {
       "\n": -0.005967068
      },
      {
       " #": -0.038119275
      },
      {
       " 3": -0.005043906
      },
      {
       ":": -0.0010327185
      },
      {
       " grab": -1.0751784
      },
      {
       " sponge": -1.2655537
      },
      {
       "\n": -0.030437684
      },
      {
       " grab": -0.20170036
      },
      {
       "('": -0.0013181443
      },
      {
       "sp": -0.0016948791
      },
      {
       "onge": -0.0011522978
      },
      {
       "')": -0.0017544666
      },
      {
       "\n": -0.003800302
      },
      {
       " #": -0.03106807
      },
      {
       " 4": -0.003932718
      },
      {
       ":": -0.00053206563
      },
      {
       " wash": -0.79660916
      },
      {
       " hands": -0.3552049
      },
      {
       "\n": -0.27953923
      },
      {
       " wash": -0.25771654
      },
      {
       "('": -0.0021236583
      },
      {
       "sp": -0.3826939
      },
      {
       "'": -0.004707769
      },
      {
       " to": -0.011254003
      },
      {
       " '": -0.0035916306
      },
      {
       "sp": -0.54907393
      },
      {
       "onge": -0.0006441875
      },
      {
       "')": -0.013266167
      },
      {
       "\n": -0.0055728387
      },
      {
       " else": -0.0018319736
      },
      {
       ":": -0.0018729974
      },
      {
       " grab": -0.4653043
      },
      {
       "('": -0.0019054831
      },
      {
       "sp": -0.0010851074
      },
      {
       "onge": -0.0004832248
      },
      {
       "')": -0.002228373
      },
      {
       "\n": -0.0062175593
      },
      {
       " wash": -0.11164675
      },
      {
       "('": -0.0038917311
      },
      {
       "sp": -0.3406337
      },
      {
       "onge": -0.0012279053
      },
      {
       "')": -0.00532317
      },
      {
       "\n": -0.0066999462
      },
      {
       " #": -0.3268157
      },
      {
       "nt": -0.00013371343
      },
      {
       "o": -0.000524134
      },
      {
       "('": -0.0005711877
      },
      {
       "sp": -0.041040793
      },
      {
       "onge": -0.00063524215
      },
      {
       "')": -0.0013165927
      },
      {
       "\n": -0.0047200434
      },
      {
       " look": -0.23634996
      },
      {
       "at": -0.0009799729
      },
      {
       "('": -0.00058794545
      },
      {
       "sp": -0.002588121
      },
      {
       "onge": -0.00043796306
      },
      {
       "')": -0.0018890623
      },
      {
       "\n": -0.006718909
      },
      {
       " #": -0.012644473
      },
      {
       " 5": -0.0058317455
      },
      {
       ":": -0.0018311372
      },
      {
       " turn": -0.5460949
      },
      {
       " off": -0.02065922
      },
      {
       " the": -0.5482969
      },
      {
       " water": -0.034014065
      },
      {
       "\n": -0.022162827
      },
      {
       " switch": -0.039977614
      },
      {
       "off": -0.0042810496
      },
      {
       "('": -0.0009572444
      },
      {
       "s": -0.016221281
      },
      {
       "ink": -0.000113686365
      },
      {
       "')": -0.0018539474
      },
      {
       "\n": -0.06581538
      },
      {
       " #": -0.016292466
      },
      {
       " 6": -0.0030393484
      },
      {
       ":": -0.001781753
      },
      {
       " Done": -0.93689704
      }
     ],
     "text_offset": [
      3345,
      3347,
      3349,
      3350,
      3355,
      3360,
      3361,
      3366,
      3368,
      3369,
      3372,
      3374,
      3375,
      3377,
      3379,
      3380,
      3385,
      3388,
      3392,
      3398,
      3399,
      3406,
      3408,
      3410,
      3411,
      3414,
      3416,
      3417,
      3419,
      3421,
      3422,
      3427,
      3432,
      3433,
      3438,
      3440,
      3442,
      3444,
      3446,
      3447,
      3449,
      3451,
      3452,
      3457,
      3464,
      3465,
      3470,
      3472,
      3474,
      3478,
      3480,
      3481,
      3483,
      3485,
      3486,
      3491,
      3497,
      3498,
      3505,
      3507,
      3512,
      3513,
      3516,
      3518,
      3520,
      3524,
      3526,
      3527,
      3532,
      3533,
      3538,
      3540,
      3542,
      3546,
      3548,
      3549,
      3554,
      3556,
      3558,
      3562,
      3564,
      3565,
      3569,
      3571,
      3572,
      3574,
      3576,
      3580,
      3582,
      3583,
      3588,
      3590,
      3592,
      3594,
      3598,
      3600,
      3601,
      3603,
      3605,
      3606,
      3611,
      3615,
      3619,
      3625,
      3626,
      3633,
      3636,
      3638,
      3639,
      3642,
      3644,
      3645,
      3647,
      3649,
      3650
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Hand washing",
   "task_description": "Turn on the faucet. Soap up your hands. Then rinse under the running water of the faucet. Turn off faucet and dry hands.",
   "program": [
    "[Walk] <bathroom> (1)",
    "[Walk] <sink> (1)",
    "[Find] <faucet> (1)",
    "[SwitchOn] <faucet> (1)",
    "[Find] <soap> (1)",
    "[Grab] <soap> (1)",
    "[Find] <hands_both> (1)",
    "[Scrub] <hands_both> (1)",
    "[PutObjBack] <soap> (1)",
    "[Wash] <hands_both> (1)",
    "[SwitchOff] <faucet> (1)",
    "[Find] <towel> (1)",
    "[Grab] <towel> (1)",
    "[Wipe] <hands_both> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_july",
   "file_id": "split4_7",
   "goal_condition": [
    [
     [
      240,
      1,
      "INSIDE",
      "character",
      "bathroom"
     ],
     [
      240,
      1002,
      "HOLDS_RH",
      "character",
      "towel"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1171,
   "completion_tokens": 115,
   "total_tokens": 1286
  }
 },
 "19": {
  "plan": [
   [
    " # 0: walk in to bathroom\n walk('bathroom')\n # 1: find mop bucket\n find('mop_bucket')\n # 2: grab mop bucket\n assert('close' to 'mop_bucket')\n else: find('mop_bucket')\n grab('mop_bucket')\n assert('mop_bucket' in 'hands')\n else: grab('mop_bucket')\n # 3: fill up mop bucket with water\n fillup('mop_bucket')\n # 4: grab mop\n find('mop')\n assert('close' to 'mop')\n else: find('mop')\n grab('mop')\n # 5: use mop to wipe floor\n wipe('floor')\n # 6: put mop and mop bucket back\n assert('mop' in 'hands')\n else: grab('mop')\n putobjback('mop')\n assert('mop_bucket' in 'hands')\n else: grab('mop_bucket')\n putobjback('mop_bucket')\n # 7: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " in",
      " to",
      " bathroom",
      "\n",
      " walk",
      "('",
      "bath",
      "room",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " m",
      "op",
      " bucket",
      "\n",
      " find",
      "('",
      "mop",
      "_",
      "buck",
      "et",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " grab",
      " m",
      "op",
      " bucket",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "mop",
      "_",
      "buck",
      "et",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "mop",
      "_",
      "buck",
      "et",
      "')",
      "\n",
      " grab",
      "('",
      "mop",
      "_",
      "buck",
      "et",
      "')",
      "\n",
      " assert",
      "('",
      "mop",
      "_",
      "buck",
      "et",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "mop",
      "_",
      "buck",
      "et",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " fill",
      " up",
      " m",
      "op",
      " bucket",
      " with",
      " water",
      "\n",
      " fill",
      "up",
      "('",
      "mop",
      "_",
      "buck",
      "et",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " grab",
      " m",
      "op",
      "\n",
      " find",
      "('",
      "mop",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "mop",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "mop",
      "')",
      "\n",
      " grab",
      "('",
      "mop",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " use",
      " m",
      "op",
      " to",
      " wipe",
      " floor",
      "\n",
      " wipe",
      "('",
      "floor",
      "')",
      "\n",
      " #",
      " 6",
      ":",
      " put",
      " m",
      "op",
      " and",
      " m",
      "op",
      " bucket",
      " back",
      "\n",
      " assert",
      "('",
      "mop",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "mop",
      "')",
      "\n",
      " put",
      "obj",
      "back",
      "('",
      "mop",
      "')",
      "\n",
      " assert",
      "('",
      "mop",
      "_",
      "buck",
      "et",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "mop",
      "_",
      "buck",
      "et",
      "')",
      "\n",
      " put",
      "obj",
      "back",
      "('",
      "mop",
      "_",
      "buck",
      "et",
      "')",
      "\n",
      " #",
      " 7",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.01630864,
      -0.0070765493,
      -0.0022384692,
      -0.12871936,
      -1.4874232,
      -0.054321855,
      -0.1333347,
      -0.017517667,
      -0.005042947,
      -0.0066626226,
      -0.002194683,
      -0.0001722244,
      -0.0016069341,
      -0.006094916,
      -0.0018541868,
      -0.003519371,
      -0.00069768965,
      -0.13430475,
      -0.5160778,
      -0.00021479129,
      -0.95476526,
      -0.06085961,
      -0.18714376,
      -0.0010565255,
      -0.0024349699,
      -0.0049448246,
      -0.00042508479,
      -0.0006162157,
      -0.0023430188,
      -0.006145051,
      -0.016699728,
      -0.0043756324,
      -0.00074713683,
      -0.63595605,
      -0.16253588,
      -4.954739e-05,
      -0.4790349,
      -0.039395288,
      -0.8322476,
      -0.0013368253,
      -0.0025410317,
      -0.002179092,
      -0.0006392971,
      -0.001806356,
      -0.006716148,
      -0.0031030816,
      -0.0003940164,
      -8.9960085e-05,
      -0.0053839935,
      -0.006312686,
      -0.0017852166,
      -0.0012964783,
      -0.0044355597,
      -0.0017132063,
      -0.00066148496,
      -0.0007813178,
      -0.00042067032,
      -0.00022743117,
      -0.0024896434,
      -0.0066408427,
      -0.0034728355,
      -0.00091196294,
      -0.0006259955,
      -0.002902925,
      -0.0003372524,
      -9.5562886e-05,
      -0.0019087074,
      -0.005283321,
      -0.9215313,
      -0.0014289829,
      -0.02157164,
      -0.0061238185,
      -0.0010261564,
      -0.0002095461,
      -0.0020957042,
      -0.016289923,
      -0.003520806,
      -0.0055990326,
      -0.020151507,
      -0.0036423581,
      -0.01800159,
      -0.002157825,
      -0.0031998884,
      -0.0013863653,
      -0.00037612757,
      -0.0013880371,
      -0.0007846584,
      -0.00018593716,
      -0.0019567802,
      -0.0046656677,
      -0.6447155,
      -0.008653442,
      -0.0010073618,
      -0.85253835,
      -2.5486088,
      -0.44715908,
      -9.0437854e-05,
      -0.011505884,
      -0.44240132,
      -0.14629348,
      -0.0637,
      -0.9485698,
      -1.0441829,
      -0.0061087687,
      -0.010049081,
      -0.0013097875,
      -0.0006617234,
      -0.00032681835,
      -0.13904923,
      -0.007884533,
      -0.15430312,
      -0.0045578224,
      -0.0007186854,
      -1.7576572,
      -0.27497536,
      -0.00010772499,
      -0.1233025,
      -0.32917827,
      -0.0008345872,
      -0.0009880884,
      -0.002346364,
      -0.0032168112,
      -1.9301914,
      -0.0006746054,
      -0.013924568,
      -0.0018225383,
      -0.00038495276,
      -0.0010817066,
      -0.0004974163,
      -0.0051029753,
      -0.0024567184,
      -0.0018300626,
      -0.00096070615,
      -0.0037923432,
      -0.0010241861,
      -0.00033653717,
      -0.00201722,
      -0.0053184363,
      -0.006645702,
      -0.0008193153,
      -0.00020334445,
      -0.0015421616,
      -0.0031477485,
      -1.4709526,
      -0.007100201,
      -0.0008046404,
      -3.6046162,
      -0.060558576,
      -4.9782993e-05,
      -0.076707534,
      -1.910435,
      -1.1954496,
      -0.030610546,
      -0.99600303,
      -0.009781259,
      -0.1829476,
      -0.061869852,
      -0.016358504,
      -0.15150593,
      -0.003765003,
      -0.0013262617,
      -0.97486955,
      -0.2480206,
      -0.00026481107,
      -1.1688352,
      -0.35223752,
      -9.115311e-05,
      -0.03575928,
      -0.19094697,
      -0.036658946,
      -1.6701233,
      -0.0014754217,
      -0.080879316,
      -0.06457745,
      -0.05570208,
      -0.0037863029,
      -0.005068528,
      -0.02354376,
      -0.0038528955,
      -0.01685914,
      -0.001918443,
      -0.06286067,
      -0.0012042165,
      -0.0004054651,
      -0.004774601,
      -0.004412928,
      -0.25374895,
      -0.55949754,
      -0.01614635,
      -0.0010136855,
      -0.0005889,
      -0.09955202,
      -0.0134762,
      -0.1333798,
      -0.0005699937,
      -0.0047763987,
      -0.0030470614,
      -0.000773205,
      -9.21049e-05,
      -0.0018245695,
      -0.0017098656,
      -0.0015431152,
      -0.0019019003,
      -0.0029669486,
      -0.0021922924,
      -0.00059892103,
      -0.0016253833,
      -0.004541058,
      -0.0009217446,
      -0.00032002066,
      -0.00215914,
      -0.00073115254,
      -0.0009393453,
      -0.0019094244,
      -0.0073425686,
      -0.004465499,
      -0.016962377,
      -0.0005180506,
      -0.00062957645,
      -0.0002389362,
      -0.001081229,
      -0.0004761286,
      -0.00035609488,
      -0.0017976969,
      -0.17934795,
      -0.011225855,
      -0.014078461,
      -0.002771302,
      -0.3092366
     ],
     "top_logprobs": [
      {
       " #": -0.01630864
      },
      {
       " 0": -0.0070765493
      },
      {
       ":": -0.0022384692
      },
      {
       " walk": -0.12871936
      },
      {
       " to": -0.37681234
      },
      {
       " to": -0.054321855
      },
      {
       " bathroom": -0.1333347
      },
      {
       "\n": -0.017517667
      },
      {
       " walk": -0.005042947
      },
      {
       "('": -0.0066626226
      },
      {
       "bath": -0.002194683
      },
      {
       "room": -0.0001722244
      },
      {
       "')": -0.0016069341
      },
      {
       "\n": -0.006094916
      },
      {
       " #": -0.0018541868
      },
      {
       " 1": -0.003519371
      },
      {
       ":": -0.00069768965
      },
      {
       " find": -0.13430475
      },
      {
       " m": -0.5160778
      },
      {
       "op": -0.00021479129
      },
      {
       "\n": -0.9039629
      },
      {
       "\n": -0.06085961
      },
      {
       " find": -0.18714376
      },
      {
       "('": -0.0010565255
      },
      {
       "mop": -0.0024349699
      },
      {
       "_": -0.0049448246
      },
      {
       "buck": -0.00042508479
      },
      {
       "et": -0.0006162157
      },
      {
       "')": -0.0023430188
      },
      {
       "\n": -0.006145051
      },
      {
       " #": -0.016699728
      },
      {
       " 2": -0.0043756324
      },
      {
       ":": -0.00074713683
      },
      {
       " grab": -0.63595605
      },
      {
       " m": -0.16253588
      },
      {
       "op": -4.954739e-05
      },
      {
       " bucket": -0.4790349
      },
      {
       "\n": -0.039395288
      },
      {
       " grab": -0.588807
      },
      {
       "('": -0.0013368253
      },
      {
       "close": -0.0025410317
      },
      {
       "'": -0.002179092
      },
      {
       " to": -0.0006392971
      },
      {
       " '": -0.001806356
      },
      {
       "mop": -0.006716148
      },
      {
       "_": -0.0031030816
      },
      {
       "buck": -0.0003940164
      },
      {
       "et": -8.9960085e-05
      },
      {
       "')": -0.0053839935
      },
      {
       "\n": -0.006312686
      },
      {
       " else": -0.0017852166
      },
      {
       ":": -0.0012964783
      },
      {
       " find": -0.0044355597
      },
      {
       "('": -0.0017132063
      },
      {
       "mop": -0.00066148496
      },
      {
       "_": -0.0007813178
      },
      {
       "buck": -0.00042067032
      },
      {
       "et": -0.00022743117
      },
      {
       "')": -0.0024896434
      },
      {
       "\n": -0.0066408427
      },
      {
       " grab": -0.0034728355
      },
      {
       "('": -0.00091196294
      },
      {
       "mop": -0.0006259955
      },
      {
       "_": -0.002902925
      },
      {
       "buck": -0.0003372524
      },
      {
       "et": -9.5562886e-05
      },
      {
       "')": -0.0019087074
      },
      {
       "\n": -0.005283321
      },
      {
       " #": -0.5547558
      },
      {
       "('": -0.0014289829
      },
      {
       "mop": -0.02157164
      },
      {
       "_": -0.0061238185
      },
      {
       "buck": -0.0010261564
      },
      {
       "et": -0.0002095461
      },
      {
       "'": -0.0020957042
      },
      {
       " in": -0.016289923
      },
      {
       " '": -0.003520806
      },
      {
       "hands": -0.0055990326
      },
      {
       "')": -0.020151507
      },
      {
       "\n": -0.0036423581
      },
      {
       " else": -0.01800159
      },
      {
       ":": -0.002157825
      },
      {
       " grab": -0.0031998884
      },
      {
       "('": -0.0013863653
      },
      {
       "mop": -0.00037612757
      },
      {
       "_": -0.0013880371
      },
      {
       "buck": -0.0007846584
      },
      {
       "et": -0.00018593716
      },
      {
       "')": -0.0019567802
      },
      {
       "\n": -0.0046656677
      },
      {
       " #": -0.6447155
      },
      {
       " 3": -0.008653442
      },
      {
       ":": -0.0010073618
      },
      {
       " fill": -0.85253835
      },
      {
       " m": -0.42948917
      },
      {
       " m": -0.44715908
      },
      {
       "op": -9.0437854e-05
      },
      {
       " bucket": -0.011505884
      },
      {
       " with": -0.44240132
      },
      {
       " water": -0.14629348
      },
      {
       "\n": -0.0637
      },
      {
       " fill": -0.9485698
      },
      {
       "('": -0.4792299
      },
      {
       "('": -0.0061087687
      },
      {
       "mop": -0.010049081
      },
      {
       "_": -0.0013097875
      },
      {
       "buck": -0.0006617234
      },
      {
       "et": -0.00032681835
      },
      {
       "')": -0.13904923
      },
      {
       "\n": -0.007884533
      },
      {
       " #": -0.15430312
      },
      {
       " 4": -0.0045578224
      },
      {
       ":": -0.0007186854
      },
      {
       " m": -1.2732993
      },
      {
       " m": -0.27497536
      },
      {
       "op": -0.00010772499
      },
      {
       "\n": -0.1233025
      },
      {
       " find": -0.32917827
      },
      {
       "('": -0.0008345872
      },
      {
       "mop": -0.0009880884
      },
      {
       "')": -0.002346364
      },
      {
       "\n": -0.0032168112
      },
      {
       " grab": -0.30343562
      },
      {
       "('": -0.0006746054
      },
      {
       "close": -0.013924568
      },
      {
       "'": -0.0018225383
      },
      {
       " to": -0.00038495276
      },
      {
       " '": -0.0010817066
      },
      {
       "mop": -0.0004974163
      },
      {
       "')": -0.0051029753
      },
      {
       "\n": -0.0024567184
      },
      {
       " else": -0.0018300626
      },
      {
       ":": -0.00096070615
      },
      {
       " find": -0.0037923432
      },
      {
       "('": -0.0010241861
      },
      {
       "mop": -0.00033653717
      },
      {
       "')": -0.00201722
      },
      {
       "\n": -0.0053184363
      },
      {
       " grab": -0.006645702
      },
      {
       "('": -0.0008193153
      },
      {
       "mop": -0.00020334445
      },
      {
       "')": -0.0015421616
      },
      {
       "\n": -0.0031477485
      },
      {
       " assert": -0.27917653
      },
      {
       " 5": -0.007100201
      },
      {
       ":": -0.0008046404
      },
      {
       " m": -0.67662054
      },
      {
       " m": -0.060558576
      },
      {
       "op": -4.9782993e-05
      },
      {
       " to": -0.076707534
      },
      {
       " clean": -0.25734833
      },
      {
       " the": -0.9019288
      },
      {
       "\n": -0.030610546
      },
      {
       " wipe": -0.99600303
      },
      {
       "('": -0.009781259
      },
      {
       "floor": -0.1829476
      },
      {
       "')": -0.061869852
      },
      {
       "\n": -0.016358504
      },
      {
       " #": -0.15150593
      },
      {
       " 6": -0.003765003
      },
      {
       ":": -0.0013262617
      },
      {
       " put": -0.97486955
      },
      {
       " m": -0.2480206
      },
      {
       "op": -0.00026481107
      },
      {
       " back": -0.4812417
      },
      {
       " m": -0.35223752
      },
      {
       "op": -9.115311e-05
      },
      {
       " bucket": -0.03575928
      },
      {
       " back": -0.19094697
      },
      {
       "\n": -0.036658946
      },
      {
       " put": -0.263121
      },
      {
       "('": -0.0014754217
      },
      {
       "mop": -0.080879316
      },
      {
       "'": -0.06457745
      },
      {
       " in": -0.05570208
      },
      {
       " '": -0.0037863029
      },
      {
       "hands": -0.005068528
      },
      {
       "')": -0.02354376
      },
      {
       "\n": -0.0038528955
      },
      {
       " else": -0.01685914
      },
      {
       ":": -0.001918443
      },
      {
       " grab": -0.06286067
      },
      {
       "('": -0.0012042165
      },
      {
       "mop": -0.0004054651
      },
      {
       "')": -0.004774601
      },
      {
       "\n": -0.004412928
      },
      {
       " put": -0.25374895
      },
      {
       "obj": -0.55949754
      },
      {
       "back": -0.01614635
      },
      {
       "('": -0.0010136855
      },
      {
       "mop": -0.0005889
      },
      {
       "')": -0.09955202
      },
      {
       "\n": -0.0134762
      },
      {
       " assert": -0.1333798
      },
      {
       "('": -0.0005699937
      },
      {
       "mop": -0.0047763987
      },
      {
       "_": -0.0030470614
      },
      {
       "buck": -0.000773205
      },
      {
       "et": -9.21049e-05
      },
      {
       "'": -0.0018245695
      },
      {
       " in": -0.0017098656
      },
      {
       " '": -0.0015431152
      },
      {
       "hands": -0.0019019003
      },
      {
       "')": -0.0029669486
      },
      {
       "\n": -0.0021922924
      },
      {
       " else": -0.00059892103
      },
      {
       ":": -0.0016253833
      },
      {
       " grab": -0.004541058
      },
      {
       "('": -0.0009217446
      },
      {
       "mop": -0.00032002066
      },
      {
       "_": -0.00215914
      },
      {
       "buck": -0.00073115254
      },
      {
       "et": -0.0009393453
      },
      {
       "')": -0.0019094244
      },
      {
       "\n": -0.0073425686
      },
      {
       " put": -0.004465499
      },
      {
       "obj": -0.016962377
      },
      {
       "back": -0.0005180506
      },
      {
       "('": -0.00062957645
      },
      {
       "mop": -0.0002389362
      },
      {
       "_": -0.001081229
      },
      {
       "buck": -0.0004761286
      },
      {
       "et": -0.00035609488
      },
      {
       "')": -0.0017976969
      },
      {
       "\n": -0.17934795
      },
      {
       " #": -0.011225855
      },
      {
       " 7": -0.014078461
      },
      {
       ":": -0.002771302
      },
      {
       " Done": -0.3092366
      }
     ],
     "text_offset": [
      3347,
      3349,
      3351,
      3352,
      3357,
      3360,
      3363,
      3372,
      3373,
      3378,
      3380,
      3384,
      3388,
      3390,
      3391,
      3393,
      3395,
      3396,
      3401,
      3403,
      3405,
      3412,
      3413,
      3418,
      3420,
      3423,
      3424,
      3428,
      3430,
      3432,
      3433,
      3435,
      3437,
      3438,
      3443,
      3445,
      3447,
      3454,
      3455,
      3462,
      3464,
      3469,
      3470,
      3473,
      3475,
      3478,
      3479,
      3483,
      3485,
      3487,
      3488,
      3493,
      3494,
      3499,
      3501,
      3504,
      3505,
      3509,
      3511,
      3513,
      3514,
      3519,
      3521,
      3524,
      3525,
      3529,
      3531,
      3533,
      3534,
      3541,
      3543,
      3546,
      3547,
      3551,
      3553,
      3554,
      3557,
      3559,
      3564,
      3566,
      3567,
      3572,
      3573,
      3578,
      3580,
      3583,
      3584,
      3588,
      3590,
      3592,
      3593,
      3595,
      3597,
      3598,
      3603,
      3606,
      3608,
      3610,
      3617,
      3622,
      3628,
      3629,
      3634,
      3636,
      3638,
      3641,
      3642,
      3646,
      3648,
      3650,
      3651,
      3653,
      3655,
      3656,
      3661,
      3663,
      3665,
      3666,
      3671,
      3673,
      3676,
      3678,
      3679,
      3686,
      3688,
      3693,
      3694,
      3697,
      3699,
      3702,
      3704,
      3705,
      3710,
      3711,
      3716,
      3718,
      3721,
      3723,
      3724,
      3729,
      3731,
      3734,
      3736,
      3737,
      3739,
      3741,
      3742,
      3746,
      3748,
      3750,
      3753,
      3758,
      3764,
      3765,
      3770,
      3772,
      3777,
      3779,
      3780,
      3782,
      3784,
      3785,
      3789,
      3791,
      3793,
      3797,
      3799,
      3801,
      3808,
      3813,
      3814,
      3821,
      3823,
      3826,
      3827,
      3830,
      3832,
      3837,
      3839,
      3840,
      3845,
      3846,
      3851,
      3853,
      3856,
      3858,
      3859,
      3863,
      3866,
      3870,
      3872,
      3875,
      3877,
      3878,
      3885,
      3887,
      3890,
      3891,
      3895,
      3897,
      3898,
      3901,
      3903,
      3908,
      3910,
      3911,
      3916,
      3917,
      3922,
      3924,
      3927,
      3928,
      3932,
      3934,
      3936,
      3937,
      3941,
      3944,
      3948,
      3950,
      3953,
      3954,
      3958,
      3960,
      3962,
      3963,
      3965,
      3967,
      3968
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Clean bathroom",
   "task_description": "I'm going to clean the bathroom, take the brush, wash and rinse the toilet and shower",
   "program": [
    "[Walk] <bathroom> (1)",
    "[Walk] <brush> (1)",
    "[Find] <brush> (1)",
    "[Grab] <brush> (1)",
    "[Find] <detergent> (1)",
    "[Grab] <detergent> (1)",
    "[Find] <toilet> (1)",
    "[PutBack] <detergent> (1) <toilet> (1)",
    "[Find] <toilet> (1)",
    "[Scrub] <toilet> (1)",
    "[Rinse] <toilet> (1)",
    "[Find] <shower> (1)",
    "[Scrub] <shower> (1)",
    "[Rinse] <shower> (1)"
   ],
   "batch": "results_intentions_march-13-18",
   "file_id": "file367_1",
   "goal_condition": [
    [
     [
      240,
      1000,
      "HOLDS_RH",
      "character",
      "brush"
     ],
     [
      1001,
      15,
      "ON",
      "detergent",
      "toilet"
     ],
     [
      240,
      1,
      "INSIDE",
      "character",
      "bathroom"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1172,
   "completion_tokens": 229,
   "total_tokens": 1401
  }
 },
 "20": {
  "plan": [
   [
    " # 0: walk to bedroom\n walk('bedroom')\n # 1: find phone\n find('phone')\n # 2: pick up phone\n grab('phone')\n # 3: done\n assert('close' to 'phone')\n else: find('phone')\n else: grab('phone')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " bedroom",
      "\n",
      " walk",
      "('",
      "bedroom",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " phone",
      "\n",
      " find",
      "('",
      "phone",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " pick",
      " up",
      " phone",
      "\n",
      " grab",
      "('",
      "phone",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " done",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "phone",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "phone",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "phone",
      "')"
     ],
     "token_logprobs": [
      -0.018295784,
      -0.008297703,
      -0.0017960242,
      -0.82296187,
      -0.20260644,
      -0.4779218,
      -0.017162701,
      -0.0046868087,
      -0.004014284,
      -0.0027007137,
      -0.0009314108,
      -0.008589054,
      -0.0027723769,
      -0.0028749479,
      -0.00049264514,
      -0.03168741,
      -0.33225,
      -0.023136267,
      -0.54098976,
      -0.0010805127,
      -0.0011971729,
      -0.0023501283,
      -0.0061731176,
      -0.009370542,
      -0.0039336747,
      -0.0011670357,
      -1.0288334,
      -0.01946055,
      -0.58067966,
      -0.0178923,
      -0.7414497,
      -0.001114167,
      -0.00024871225,
      -0.0015331467,
      -0.11869925,
      -0.7262662,
      -0.007835226,
      -0.0010120138,
      -2.800615,
      -0.14294781,
      -0.25229678,
      -0.003029961,
      -1.6628232,
      -0.0042287903,
      -0.0011881017,
      -0.002920859,
      -0.0008620868,
      -0.0057810266,
      -0.0063237827,
      -0.0018652928,
      -0.0015591746,
      -0.011586864,
      -0.0021616481,
      -0.00036575546,
      -0.0026845194,
      -0.186083,
      -1.2877897,
      -0.0032855803,
      -0.029092921,
      -0.0018987342,
      -0.00027947655,
      -0.0019044074
     ],
     "top_logprobs": [
      {
       " #": -0.018295784
      },
      {
       " 0": -0.008297703
      },
      {
       ":": -0.0017960242
      },
      {
       " find": -0.7380143
      },
      {
       " to": -0.20260644
      },
      {
       " bedroom": -0.4779218
      },
      {
       "\n": -0.017162701
      },
      {
       " walk": -0.0046868087
      },
      {
       "('": -0.004014284
      },
      {
       "bedroom": -0.0027007137
      },
      {
       "')": -0.0009314108
      },
      {
       "\n": -0.008589054
      },
      {
       " #": -0.0027723769
      },
      {
       " 1": -0.0028749479
      },
      {
       ":": -0.00049264514
      },
      {
       " find": -0.03168741
      },
      {
       " phone": -0.33225
      },
      {
       "\n": -0.023136267
      },
      {
       " find": -0.54098976
      },
      {
       "('": -0.0010805127
      },
      {
       "phone": -0.0011971729
      },
      {
       "')": -0.0023501283
      },
      {
       "\n": -0.0061731176
      },
      {
       " #": -0.009370542
      },
      {
       " 2": -0.0039336747
      },
      {
       ":": -0.0011670357
      },
      {
       " grab": -0.48590264
      },
      {
       " up": -0.01946055
      },
      {
       " phone": -0.58067966
      },
      {
       "\n": -0.0178923
      },
      {
       " grab": -0.7414497
      },
      {
       "('": -0.001114167
      },
      {
       "phone": -0.00024871225
      },
      {
       "')": -0.0015331467
      },
      {
       "\n": -0.11869925
      },
      {
       " #": -0.7262662
      },
      {
       " 3": -0.007835226
      },
      {
       ":": -0.0010120138
      },
      {
       " Done": -1.3574275
      },
      {
       "\n": -0.14294781
      },
      {
       " assert": -0.25229678
      },
      {
       "('": -0.003029961
      },
      {
       "phone": -0.2255195
      },
      {
       "'": -0.0042287903
      },
      {
       " to": -0.0011881017
      },
      {
       " '": -0.002920859
      },
      {
       "phone": -0.0008620868
      },
      {
       "')": -0.0057810266
      },
      {
       "\n": -0.0063237827
      },
      {
       " else": -0.0018652928
      },
      {
       ":": -0.0015591746
      },
      {
       " find": -0.011586864
      },
      {
       "('": -0.0021616481
      },
      {
       "phone": -0.00036575546
      },
      {
       "')": -0.0026845194
      },
      {
       "\n": -0.186083
      },
      {
       " grab": -0.50892687
      },
      {
       ":": -0.0032855803
      },
      {
       " grab": -0.029092921
      },
      {
       "('": -0.0018987342
      },
      {
       "phone": -0.00027947655
      },
      {
       "')": -0.0019044074
      }
     ],
     "text_offset": [
      3346,
      3348,
      3350,
      3351,
      3356,
      3359,
      3367,
      3368,
      3373,
      3375,
      3382,
      3384,
      3385,
      3387,
      3389,
      3390,
      3395,
      3401,
      3402,
      3407,
      3409,
      3414,
      3416,
      3417,
      3419,
      3421,
      3422,
      3427,
      3430,
      3436,
      3437,
      3442,
      3444,
      3449,
      3451,
      3452,
      3454,
      3456,
      3457,
      3462,
      3463,
      3470,
      3472,
      3477,
      3478,
      3481,
      3483,
      3488,
      3490,
      3491,
      3496,
      3497,
      3502,
      3504,
      3509,
      3511,
      3512,
      3517,
      3518,
      3523,
      3525,
      3530
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Pick up phone",
   "task_description": "Find the phone.Grab the phone.Touch phone to answer.Say Hello.",
   "program": [
    "[Find] <phone> (1)",
    "[Grab] <phone> (1)",
    "[Touch] <phone> (1)"
   ],
   "batch": "results_intentions_march-13-18",
   "file_id": "file356_2",
   "goal_condition": [
    [
     [
      240,
      71,
      "HOLDS_RH",
      "character",
      "phone"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1173,
   "completion_tokens": 62,
   "total_tokens": 1235
  }
 },
 "21": {
  "plan": [
   [
    " # 0: walk to bathroom\n walk('bathroom')\n # 1: find toilet\n find('toilet')\n # 2: open toilet seat\n open('toilet_seat')\n # 3: sit on toilet\n sit('toilet')\n # 4: do your thing\n # 5: flush the toilet\n flush('toilet')\n # 6: close toilet seat\n close('toilet_seat')\n # 7: wash your hands\n find('sink')\n turnon('water')\n wash('hands')\n turnoff('water')\n # 8: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " bathroom",
      "\n",
      " walk",
      "('",
      "bath",
      "room",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " toilet",
      "\n",
      " find",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " open",
      " toilet",
      " seat",
      "\n",
      " open",
      "('",
      "to",
      "ilet",
      "_",
      "seat",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " sit",
      " on",
      " toilet",
      "\n",
      " sit",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " do",
      " your",
      " thing",
      "\n",
      " #",
      " 5",
      ":",
      " flush",
      " the",
      " toilet",
      "\n",
      " flush",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 6",
      ":",
      " close",
      " toilet",
      " seat",
      "\n",
      " close",
      "('",
      "to",
      "ilet",
      "_",
      "seat",
      "')",
      "\n",
      " #",
      " 7",
      ":",
      " wash",
      " your",
      " hands",
      "\n",
      " find",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " turn",
      "on",
      "('",
      "water",
      "')",
      "\n",
      " wash",
      "('",
      "hands",
      "')",
      "\n",
      " turn",
      "off",
      "('",
      "water",
      "')",
      "\n",
      " #",
      " 8",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.015969189,
      -0.007833545,
      -0.0023936834,
      -0.12898284,
      -0.30113417,
      -0.5293138,
      -0.018712008,
      -0.004762387,
      -0.0037469934,
      -0.002608561,
      -0.00017282138,
      -0.0014874195,
      -0.006921087,
      -0.0018165065,
      -0.0031301675,
      -0.0004814367,
      -0.12097961,
      -0.04216989,
      -0.021960162,
      -0.29543874,
      -0.00089806155,
      -0.00068182364,
      -0.00020703992,
      -0.0015349359,
      -0.0047978414,
      -0.016248602,
      -0.0047005815,
      -0.00056498323,
      -1.7409226,
      -0.7795583,
      -1.7796158,
      -0.04852989,
      -0.70570976,
      -0.0029676666,
      -0.003738677,
      -0.00023702794,
      -0.6564822,
      -0.0028482291,
      -0.0025395984,
      -0.0064299568,
      -0.017458407,
      -0.005735345,
      -0.00062683,
      -0.3219653,
      -0.06639148,
      -0.27458522,
      -0.17606422,
      -0.30283263,
      -0.0009721014,
      -0.00034548063,
      -0.00024465634,
      -0.014883305,
      -0.014763709,
      -0.0068211043,
      -0.0045949467,
      -0.0013638621,
      -1.5919566,
      -0.75942427,
      -2.6535406,
      -0.060260102,
      -0.5399735,
      -0.08447155,
      -0.0011124962,
      -0.41056383,
      -0.92107767,
      -0.0041266186,
      -0.023225937,
      -0.04268114,
      -0.004163607,
      -0.0004467892,
      -0.00019893186,
      -0.004225978,
      -0.015360146,
      -0.0026175831,
      -0.0025553133,
      -0.0010945352,
      -0.6463593,
      -0.73578584,
      -0.010998753,
      -0.017486062,
      -0.006474832,
      -0.00064848276,
      -0.00018283867,
      -1.163433e-05,
      -0.001801997,
      -0.00045883397,
      -0.0016127257,
      -0.18373927,
      -0.01604453,
      -0.0079529025,
      -0.0014819265,
      -2.5400198,
      -0.6632839,
      -0.038552076,
      -0.02177331,
      -0.59007776,
      -0.0014329234,
      -0.24425356,
      -0.00016268677,
      -0.0025759898,
      -0.0053082495,
      -2.6404076,
      -0.10238627,
      -0.002148327,
      -2.660531,
      -0.2576911,
      -0.005304534,
      -0.5398228,
      -0.014724513,
      -0.025608622,
      -0.0026711915,
      -0.16423729,
      -0.3102596,
      -0.0044998047,
      -0.00083184446,
      -0.0010708455,
      -0.004413347,
      -0.33311024,
      -0.06481184,
      -0.004119497,
      -0.00243007,
      -0.7733019
     ],
     "top_logprobs": [
      {
       " #": -0.015969189
      },
      {
       " 0": -0.007833545
      },
      {
       ":": -0.0023936834
      },
      {
       " walk": -0.12898284
      },
      {
       " to": -0.30113417
      },
      {
       " bathroom": -0.5293138
      },
      {
       "\n": -0.018712008
      },
      {
       " walk": -0.004762387
      },
      {
       "('": -0.0037469934
      },
      {
       "bath": -0.002608561
      },
      {
       "room": -0.00017282138
      },
      {
       "')": -0.0014874195
      },
      {
       "\n": -0.006921087
      },
      {
       " #": -0.0018165065
      },
      {
       " 1": -0.0031301675
      },
      {
       ":": -0.0004814367
      },
      {
       " find": -0.12097961
      },
      {
       " toilet": -0.04216989
      },
      {
       "\n": -0.021960162
      },
      {
       " find": -0.29543874
      },
      {
       "('": -0.00089806155
      },
      {
       "to": -0.00068182364
      },
      {
       "ilet": -0.00020703992
      },
      {
       "')": -0.0015349359
      },
      {
       "\n": -0.0047978414
      },
      {
       " #": -0.016248602
      },
      {
       " 2": -0.0047005815
      },
      {
       ":": -0.00056498323
      },
      {
       " sit": -0.543597
      },
      {
       " toilet": -0.7795583
      },
      {
       "\n": -1.0302767
      },
      {
       "\n": -0.04852989
      },
      {
       " open": -0.70570976
      },
      {
       "('": -0.0029676666
      },
      {
       "to": -0.003738677
      },
      {
       "ilet": -0.00023702794
      },
      {
       "_": -0.6564822
      },
      {
       "seat": -0.0028482291
      },
      {
       "')": -0.0025395984
      },
      {
       "\n": -0.0064299568
      },
      {
       " #": -0.017458407
      },
      {
       " 3": -0.005735345
      },
      {
       ":": -0.00062683
      },
      {
       " sit": -0.3219653
      },
      {
       " on": -0.06639148
      },
      {
       " toilet": -0.27458522
      },
      {
       "\n": -0.17606422
      },
      {
       " sit": -0.30283263
      },
      {
       "('": -0.0009721014
      },
      {
       "to": -0.00034548063
      },
      {
       "ilet": -0.00024465634
      },
      {
       "')": -0.014883305
      },
      {
       "\n": -0.014763709
      },
      {
       " #": -0.0068211043
      },
      {
       " 4": -0.0045949467
      },
      {
       ":": -0.0013638621
      },
      {
       " flush": -1.4858468
      },
      {
       " your": -0.75942427
      },
      {
       " business": -0.19554035
      },
      {
       "\n": -0.060260102
      },
      {
       " #": -0.5399735
      },
      {
       " 5": -0.08447155
      },
      {
       ":": -0.0011124962
      },
      {
       " flush": -0.41056383
      },
      {
       " the": -0.92107767
      },
      {
       " toilet": -0.0041266186
      },
      {
       "\n": -0.023225937
      },
      {
       " flush": -0.04268114
      },
      {
       "('": -0.004163607
      },
      {
       "to": -0.0004467892
      },
      {
       "ilet": -0.00019893186
      },
      {
       "')": -0.004225978
      },
      {
       "\n": -0.015360146
      },
      {
       " #": -0.0026175831
      },
      {
       " 6": -0.0025553133
      },
      {
       ":": -0.0010945352
      },
      {
       " close": -0.6463593
      },
      {
       " the": -0.68447435
      },
      {
       " seat": -0.010998753
      },
      {
       "\n": -0.017486062
      },
      {
       " close": -0.006474832
      },
      {
       "('": -0.00064848276
      },
      {
       "to": -0.00018283867
      },
      {
       "ilet": -1.163433e-05
      },
      {
       "_": -0.001801997
      },
      {
       "seat": -0.00045883397
      },
      {
       "')": -0.0016127257
      },
      {
       "\n": -0.18373927
      },
      {
       " #": -0.01604453
      },
      {
       " 7": -0.0079529025
      },
      {
       ":": -0.0014819265
      },
      {
       " stand": -0.3059795
      },
      {
       " your": -0.6632839
      },
      {
       " hands": -0.038552076
      },
      {
       "\n": -0.02177331
      },
      {
       " find": -0.59007776
      },
      {
       "('": -0.0014329234
      },
      {
       "s": -0.24425356
      },
      {
       "ink": -0.00016268677
      },
      {
       "')": -0.0025759898
      },
      {
       "\n": -0.0053082495
      },
      {
       " wash": -1.0083523
      },
      {
       "on": -0.10238627
      },
      {
       "('": -0.002148327
      },
      {
       "f": -0.37620828
      },
      {
       "')": -0.2576911
      },
      {
       "\n": -0.005304534
      },
      {
       " wash": -0.5398228
      },
      {
       "('": -0.014724513
      },
      {
       "hands": -0.025608622
      },
      {
       "')": -0.0026711915
      },
      {
       "\n": -0.16423729
      },
      {
       " turn": -0.3102596
      },
      {
       "off": -0.0044998047
      },
      {
       "('": -0.00083184446
      },
      {
       "water": -0.0010708455
      },
      {
       "')": -0.004413347
      },
      {
       "\n": -0.33311024
      },
      {
       " #": -0.06481184
      },
      {
       " 8": -0.004119497
      },
      {
       ":": -0.00243007
      },
      {
       " Done": -0.7733019
      }
     ],
     "text_offset": [
      3345,
      3347,
      3349,
      3350,
      3355,
      3358,
      3367,
      3368,
      3373,
      3375,
      3379,
      3383,
      3385,
      3386,
      3388,
      3390,
      3391,
      3396,
      3403,
      3404,
      3409,
      3411,
      3413,
      3417,
      3419,
      3420,
      3422,
      3424,
      3425,
      3430,
      3437,
      3442,
      3443,
      3448,
      3450,
      3452,
      3456,
      3457,
      3461,
      3463,
      3464,
      3466,
      3468,
      3469,
      3473,
      3476,
      3483,
      3484,
      3488,
      3490,
      3492,
      3496,
      3498,
      3499,
      3501,
      3503,
      3504,
      3507,
      3512,
      3518,
      3519,
      3521,
      3523,
      3524,
      3530,
      3534,
      3541,
      3542,
      3548,
      3550,
      3552,
      3556,
      3558,
      3559,
      3561,
      3563,
      3564,
      3570,
      3577,
      3582,
      3583,
      3589,
      3591,
      3593,
      3597,
      3598,
      3602,
      3604,
      3605,
      3607,
      3609,
      3610,
      3615,
      3620,
      3626,
      3627,
      3632,
      3634,
      3635,
      3638,
      3640,
      3641,
      3646,
      3648,
      3650,
      3655,
      3657,
      3658,
      3663,
      3665,
      3670,
      3672,
      3673,
      3678,
      3681,
      3683,
      3688,
      3690,
      3691,
      3693,
      3695,
      3696
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Go to toilet",
   "task_description": "I walk to the entrance of the bathroom. I turn to the door. I open the door to the bathroom. I walk inside of the bathroom. I find the toilet inside of the bathroom and walk over to it. I turn and look at the toilet.",
   "program": [
    "[Walk] <bathroom> (1)",
    "[Walk] <toilet> (1)",
    "[Find] <toilet> (1)",
    "[TurnTo] <toilet> (1)",
    "[LookAt] <toilet> (1)",
    "[Walk] <toilet> (1)",
    "[TurnTo] <toilet> (1)"
   ],
   "batch": "results_intentions_march-13-18",
   "file_id": "file496_1",
   "goal_condition": [
    [
     [
      240,
      15,
      "FACING",
      "character",
      "toilet"
     ],
     [
      240,
      1,
      "INSIDE",
      "character",
      "bathroom"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1174,
   "completion_tokens": 122,
   "total_tokens": 1296
  }
 }
}