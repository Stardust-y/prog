{
 "0": {
  "plan": [
   [
    " # 0: walk to bedroom\n walk('bedroom')\n # 1: find desk\n walk('desk')\n find('desk')\n # 2: find computer\n find('computer')\n # 3: turn on the computer\n assert('close' to 'computer')\n else: find('computer')\n switchon('computer')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " bedroom",
      "\n",
      " walk",
      "('",
      "bedroom",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " desk",
      "\n",
      " walk",
      "('",
      "des",
      "k",
      "')",
      "\n",
      " find",
      "('",
      "des",
      "k",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " find",
      " computer",
      "\n",
      " find",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " turn",
      " on",
      " the",
      " computer",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "computer",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "computer",
      "')",
      "\n",
      " switch",
      "on",
      "('",
      "computer",
      "')"
     ],
     "token_logprobs": [
      -0.016999176,
      -0.008891555,
      -0.0019197562,
      -0.29520723,
      -0.14452845,
      -1.6992303,
      -0.015402636,
      -0.004378268,
      -0.0044257427,
      -0.023750344,
      -0.0009304562,
      -0.004728308,
      -0.004780052,
      -0.003676636,
      -0.00061382964,
      -0.022640651,
      -0.43960214,
      -0.005568465,
      -0.13594009,
      -0.00036193893,
      -0.0012139418,
      -0.00019177745,
      -0.00073926337,
      -0.0020915836,
      -0.007337645,
      -0.00046873486,
      -0.00084586226,
      -0.0001625685,
      -0.0009017598,
      -0.0039329585,
      -0.0019166511,
      -0.003978437,
      -0.000682063,
      -0.04793988,
      -0.22190213,
      -0.01654919,
      -0.016489746,
      -0.0006593373,
      -0.0023141035,
      -0.0012677707,
      -0.004902237,
      -0.0050312052,
      -0.0061103287,
      -0.0008861294,
      -0.13249056,
      -0.005206804,
      -0.18955617,
      -0.00937716,
      -0.008653142,
      -0.10245654,
      -0.00078656676,
      -0.00598308,
      -0.0016741593,
      -0.00045907334,
      -0.0014091042,
      -0.0020256434,
      -0.0035122521,
      -0.0036247706,
      -0.0011824332,
      -0.0008926924,
      -0.0026584023,
      -0.0011064683,
      -0.00073031615,
      -0.0009527098,
      -0.0050478005,
      -0.29150674,
      -0.00237773,
      -0.0010149986,
      -0.0012132276,
      -0.0018559778
     ],
     "top_logprobs": [
      {
       " #": -0.016999176
      },
      {
       " 0": -0.008891555
      },
      {
       ":": -0.0019197562
      },
      {
       " walk": -0.29520723
      },
      {
       " to": -0.14452845
      },
      {
       " home": -0.66904175
      },
      {
       "\n": -0.015402636
      },
      {
       " walk": -0.004378268
      },
      {
       "('": -0.0044257427
      },
      {
       "bedroom": -0.023750344
      },
      {
       "')": -0.0009304562
      },
      {
       "\n": -0.004728308
      },
      {
       " #": -0.004780052
      },
      {
       " 1": -0.003676636
      },
      {
       ":": -0.00061382964
      },
      {
       " find": -0.022640651
      },
      {
       " desk": -0.43960214
      },
      {
       "\n": -0.005568465
      },
      {
       " walk": -0.13594009
      },
      {
       "('": -0.00036193893
      },
      {
       "des": -0.0012139418
      },
      {
       "k": -0.00019177745
      },
      {
       "')": -0.00073926337
      },
      {
       "\n": -0.0020915836
      },
      {
       " find": -0.007337645
      },
      {
       "('": -0.00046873486
      },
      {
       "des": -0.00084586226
      },
      {
       "k": -0.0001625685
      },
      {
       "')": -0.0009017598
      },
      {
       "\n": -0.0039329585
      },
      {
       " #": -0.0019166511
      },
      {
       " 2": -0.003978437
      },
      {
       ":": -0.000682063
      },
      {
       " find": -0.04793988
      },
      {
       " computer": -0.22190213
      },
      {
       "\n": -0.01654919
      },
      {
       " find": -0.016489746
      },
      {
       "('": -0.0006593373
      },
      {
       "computer": -0.0023141035
      },
      {
       "')": -0.0012677707
      },
      {
       "\n": -0.004902237
      },
      {
       " #": -0.0050312052
      },
      {
       " 3": -0.0061103287
      },
      {
       ":": -0.0008861294
      },
      {
       " turn": -0.13249056
      },
      {
       " on": -0.005206804
      },
      {
       " the": -0.18955617
      },
      {
       " computer": -0.00937716
      },
      {
       "\n": -0.008653142
      },
      {
       " assert": -0.10245654
      },
      {
       "('": -0.00078656676
      },
      {
       "close": -0.00598308
      },
      {
       "'": -0.0016741593
      },
      {
       " to": -0.00045907334
      },
      {
       " '": -0.0014091042
      },
      {
       "computer": -0.0020256434
      },
      {
       "')": -0.0035122521
      },
      {
       "\n": -0.0036247706
      },
      {
       " else": -0.0011824332
      },
      {
       ":": -0.0008926924
      },
      {
       " find": -0.0026584023
      },
      {
       "('": -0.0011064683
      },
      {
       "computer": -0.00073031615
      },
      {
       "')": -0.0009527098
      },
      {
       "\n": -0.0050478005
      },
      {
       " switch": -0.29150674
      },
      {
       "on": -0.00237773
      },
      {
       "('": -0.0010149986
      },
      {
       "computer": -0.0012132276
      },
      {
       "')": -0.0018559778
      }
     ],
     "text_offset": [
      3380,
      3382,
      3384,
      3385,
      3390,
      3393,
      3401,
      3402,
      3407,
      3409,
      3416,
      3418,
      3419,
      3421,
      3423,
      3424,
      3429,
      3434,
      3435,
      3440,
      3442,
      3445,
      3446,
      3448,
      3449,
      3454,
      3456,
      3459,
      3460,
      3462,
      3463,
      3465,
      3467,
      3468,
      3473,
      3482,
      3483,
      3488,
      3490,
      3498,
      3500,
      3501,
      3503,
      3505,
      3506,
      3511,
      3514,
      3518,
      3527,
      3528,
      3535,
      3537,
      3542,
      3543,
      3546,
      3548,
      3556,
      3558,
      3559,
      3564,
      3565,
      3570,
      3572,
      3580,
      3582,
      3583,
      3590,
      3592,
      3594,
      3602
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Turn on computer",
   "task_description": "Press the power button on the computer to turn it on",
   "program": [
    "[Walk] <home_office> (1)",
    "[Walk] <computer> (1)",
    "[SwitchOn] <computer> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_kellensecond",
   "file_id": "split1_4",
   "goal_condition": [
    [
     [
      247,
      248,
      "INSIDE",
      "character",
      "home_office"
     ]
    ],
    [
     [
      273,
      "computer",
      "ON"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1183,
   "completion_tokens": 70,
   "total_tokens": 1253
  }
 },
 "1": {
  "plan": [
   [
    " # 0: walk to bathroom\n walk('bathroom')\n # 1: find toilet \n find('toilet')\n # 2: open the toilet lid \n turnto('toilet')\n open('toilet')\n # 3: grab toilet brush\n grab('toilet_brush')\n # 4: wash the toilet\n assert('close' to 'toilet')\n else: find('toilet')\n wash('toilet')\n # 5: put brush back \n putobjback('toilet_brush')\n # 6: close the lid \n close('toilet')\n # 7: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " bathroom",
      "\n",
      " walk",
      "('",
      "bath",
      "room",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " toilet",
      " ",
      "\n",
      " find",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " open",
      " the",
      " toilet",
      " lid",
      " ",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " open",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " grab",
      " toilet",
      " brush",
      "\n",
      " grab",
      "('",
      "to",
      "ilet",
      "_",
      "brush",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " wash",
      " the",
      " toilet",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "to",
      "ilet",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " wash",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " put",
      " brush",
      " back",
      " ",
      "\n",
      " put",
      "obj",
      "back",
      "('",
      "to",
      "ilet",
      "_",
      "brush",
      "')",
      "\n",
      " #",
      " 6",
      ":",
      " close",
      " the",
      " lid",
      " ",
      "\n",
      " close",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 7",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.018893365,
      -0.008505733,
      -0.0021124883,
      -0.32006696,
      -0.22882158,
      -0.28807428,
      -0.021019328,
      -0.0054860525,
      -0.0044707046,
      -0.0021154769,
      -0.00014551697,
      -0.0017341643,
      -0.0068217646,
      -0.003986994,
      -0.0037084045,
      -0.0009913117,
      -0.08358351,
      -0.08560501,
      -3.9916596,
      -0.00013597934,
      -0.24779235,
      -0.0020282706,
      -0.0009126782,
      -0.00041661627,
      -0.006155845,
      -0.030334093,
      -0.010830269,
      -0.0079017775,
      -0.0019293117,
      -2.1178951,
      -0.92699516,
      -0.6734154,
      -0.9845455,
      -2.22961,
      -0.000107247215,
      -3.0508912,
      -5.061746e-05,
      -0.00043975122,
      -0.0011323065,
      -0.0039002877,
      -0.0004051084,
      -0.015719375,
      -0.038239658,
      -1.1981231,
      -0.0037082853,
      -0.04168898,
      -0.0012193137,
      -0.27430382,
      -0.027672008,
      -0.036719292,
      -0.012827933,
      -0.0020365731,
      -1.3682846,
      -0.6464145,
      -0.28895795,
      -0.49246347,
      -0.9921661,
      -0.0013681601,
      -0.02843262,
      -0.00067543896,
      -0.12233285,
      -0.00043283522,
      -0.002970416,
      -0.01697117,
      -0.0904817,
      -0.008124145,
      -0.0010284232,
      -0.79449487,
      -0.2630439,
      -0.06949979,
      -0.54053974,
      -1.4954616,
      -0.0023908159,
      -1.0501604,
      -0.0051789437,
      -0.0008714536,
      -0.0025284246,
      -0.0068065217,
      -0.00035430674,
      -0.18452899,
      -0.008529838,
      -0.0025421083,
      -0.0018432572,
      -0.04575213,
      -0.0019571378,
      -0.0009197181,
      -0.000111657944,
      -0.0036679637,
      -0.011204878,
      -0.30468604,
      -0.0017907696,
      -0.0004941948,
      -3.7983213e-05,
      -0.09829061,
      -0.020943182,
      -0.283574,
      -0.007749566,
      -0.0017003721,
      -0.83732647,
      -2.3527198,
      -0.03771359,
      -1.9124308,
      -9.2821094e-05,
      -0.47892606,
      -0.8220644,
      -0.0037440015,
      -0.001700968,
      -0.058305133,
      -0.00090187904,
      -0.009614664,
      -0.00023059067,
      -0.006656504,
      -0.08643109,
      -0.0127041135,
      -0.004439153,
      -0.0029448892,
      -0.35329926,
      -0.28712094,
      -1.0902226,
      -0.8233068,
      -6.933416e-05,
      -0.18374057,
      -0.00104668,
      -0.00889396,
      -0.0001866524,
      -0.01763705,
      -0.16246422,
      -0.029167602,
      -0.012028052,
      -0.004766758,
      -0.5463518
     ],
     "top_logprobs": [
      {
       " #": -0.018893365
      },
      {
       " 0": -0.008505733
      },
      {
       ":": -0.0021124883
      },
      {
       " walk": -0.32006696
      },
      {
       " to": -0.22882158
      },
      {
       " bathroom": -0.28807428
      },
      {
       "\n": -0.021019328
      },
      {
       " walk": -0.0054860525
      },
      {
       "('": -0.0044707046
      },
      {
       "bath": -0.0021154769
      },
      {
       "room": -0.00014551697
      },
      {
       "')": -0.0017341643
      },
      {
       "\n": -0.0068217646
      },
      {
       " #": -0.003986994
      },
      {
       " 1": -0.0037084045
      },
      {
       ":": -0.0009913117
      },
      {
       " find": -0.08358351
      },
      {
       " toilet": -0.08560501
      },
      {
       "\n": -0.051565874
      },
      {
       "\n": -0.00013597934
      },
      {
       " find": -0.24779235
      },
      {
       "('": -0.0020282706
      },
      {
       "to": -0.0009126782
      },
      {
       "ilet": -0.00041661627
      },
      {
       "')": -0.006155845
      },
      {
       "\n": -0.030334093
      },
      {
       " #": -0.010830269
      },
      {
       " 2": -0.0079017775
      },
      {
       ":": -0.0019293117
      },
      {
       " grab": -1.503874
      },
      {
       " toilet": -0.92530525
      },
      {
       " toilet": -0.6734154
      },
      {
       " lid": -0.9845455
      },
      {
       "\n": -0.12713784
      },
      {
       "\n": -0.000107247215
      },
      {
       " open": -0.4168076
      },
      {
       "nt": -5.061746e-05
      },
      {
       "o": -0.00043975122
      },
      {
       "('": -0.0011323065
      },
      {
       "to": -0.0039002877
      },
      {
       "ilet": -0.0004051084
      },
      {
       "')": -0.015719375
      },
      {
       "\n": -0.038239658
      },
      {
       " look": -0.61520594
      },
      {
       "('": -0.0037082853
      },
      {
       "to": -0.04168898
      },
      {
       "ilet": -0.0012193137
      },
      {
       "')": -0.27430382
      },
      {
       "\n": -0.027672008
      },
      {
       " #": -0.036719292
      },
      {
       " 3": -0.012827933
      },
      {
       ":": -0.0020365731
      },
      {
       " grab": -1.3682846
      },
      {
       " toilet": -0.6464145
      },
      {
       " brush": -0.28895795
      },
      {
       "\n": -0.49246347
      },
      {
       " find": -0.7342419
      },
      {
       "('": -0.0013681601
      },
      {
       "to": -0.02843262
      },
      {
       "ilet": -0.00067543896
      },
      {
       "_": -0.12233285
      },
      {
       "brush": -0.00043283522
      },
      {
       "')": -0.002970416
      },
      {
       "\n": -0.01697117
      },
      {
       " #": -0.0904817
      },
      {
       " 4": -0.008124145
      },
      {
       ":": -0.0010284232
      },
      {
       " wash": -0.79449487
      },
      {
       " the": -0.2630439
      },
      {
       " toilet": -0.06949979
      },
      {
       "\n": -0.54053974
      },
      {
       " wash": -0.5400899
      },
      {
       "('": -0.0023908159
      },
      {
       "to": -0.5447816
      },
      {
       "'": -0.0051789437
      },
      {
       " to": -0.0008714536
      },
      {
       " '": -0.0025284246
      },
      {
       "to": -0.0068065217
      },
      {
       "ilet": -0.00035430674
      },
      {
       "')": -0.18452899
      },
      {
       "\n": -0.008529838
      },
      {
       " else": -0.0025421083
      },
      {
       ":": -0.0018432572
      },
      {
       " find": -0.04575213
      },
      {
       "('": -0.0019571378
      },
      {
       "to": -0.0009197181
      },
      {
       "ilet": -0.000111657944
      },
      {
       "')": -0.0036679637
      },
      {
       "\n": -0.011204878
      },
      {
       " wash": -0.30468604
      },
      {
       "('": -0.0017907696
      },
      {
       "to": -0.0004941948
      },
      {
       "ilet": -3.7983213e-05
      },
      {
       "')": -0.09829061
      },
      {
       "\n": -0.020943182
      },
      {
       " #": -0.283574
      },
      {
       " 5": -0.007749566
      },
      {
       ":": -0.0017003721
      },
      {
       " put": -0.83732647
      },
      {
       " the": -1.0270381
      },
      {
       " back": -0.03771359
      },
      {
       "\n": -0.23193267
      },
      {
       "\n": -9.2821094e-05
      },
      {
       " put": -0.47892606
      },
      {
       "back": -0.6198167
      },
      {
       "back": -0.0037440015
      },
      {
       "('": -0.001700968
      },
      {
       "to": -0.058305133
      },
      {
       "ilet": -0.00090187904
      },
      {
       "_": -0.009614664
      },
      {
       "brush": -0.00023059067
      },
      {
       "')": -0.006656504
      },
      {
       "\n": -0.08643109
      },
      {
       " #": -0.0127041135
      },
      {
       " 6": -0.004439153
      },
      {
       ":": -0.0029448892
      },
      {
       " close": -0.35329926
      },
      {
       " the": -0.28712094
      },
      {
       " toilet": -0.41682738
      },
      {
       "\n": -0.6452291
      },
      {
       "\n": -6.933416e-05
      },
      {
       " close": -0.18374057
      },
      {
       "('": -0.00104668
      },
      {
       "to": -0.00889396
      },
      {
       "ilet": -0.0001866524
      },
      {
       "')": -0.01763705
      },
      {
       "\n": -0.16246422
      },
      {
       " #": -0.029167602
      },
      {
       " 7": -0.012028052
      },
      {
       ":": -0.004766758
      },
      {
       " Done": -0.5463518
      }
     ],
     "text_offset": [
      3376,
      3378,
      3380,
      3381,
      3386,
      3389,
      3398,
      3399,
      3404,
      3406,
      3410,
      3414,
      3416,
      3417,
      3419,
      3421,
      3422,
      3427,
      3434,
      3435,
      3436,
      3441,
      3443,
      3445,
      3449,
      3451,
      3452,
      3454,
      3456,
      3457,
      3462,
      3466,
      3473,
      3477,
      3478,
      3479,
      3483,
      3485,
      3486,
      3488,
      3490,
      3494,
      3496,
      3497,
      3502,
      3504,
      3506,
      3510,
      3512,
      3513,
      3515,
      3517,
      3518,
      3523,
      3530,
      3536,
      3537,
      3542,
      3544,
      3546,
      3550,
      3551,
      3556,
      3558,
      3559,
      3561,
      3563,
      3564,
      3569,
      3573,
      3580,
      3581,
      3588,
      3590,
      3595,
      3596,
      3599,
      3601,
      3603,
      3607,
      3609,
      3610,
      3615,
      3616,
      3621,
      3623,
      3625,
      3629,
      3631,
      3632,
      3637,
      3639,
      3641,
      3645,
      3647,
      3648,
      3650,
      3652,
      3653,
      3657,
      3663,
      3668,
      3669,
      3670,
      3674,
      3677,
      3681,
      3683,
      3685,
      3689,
      3690,
      3695,
      3697,
      3698,
      3700,
      3702,
      3703,
      3709,
      3713,
      3717,
      3718,
      3719,
      3725,
      3727,
      3729,
      3733,
      3735,
      3736,
      3738,
      3740,
      3741
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Clean toilet",
   "task_description": "Use the toilet bowl cleaner and squeeze it around the inside of toilet bowl. Let it sit in there while you clean the rest of the toilet. Spray the all purpose cleaner on top of toilet, sides, bottom, and on and under the seat and lid. Wipe down toilet with paper towels on all the areas you sprayed the cleaner. Now using the toilet brush, scrub the inside bowl around completely in all areas.",
   "program": [
    "[Find] <brush> (1)",
    "[TurnTo] <brush> (1)",
    "[PointAt] <brush> (1)",
    "[Wash] <brush> (1)",
    "[TurnTo] <brush> (1)",
    "[LookAt] <brush> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_turk_robot",
   "file_id": "split67_2",
   "goal_condition": [
    [
     [
      247,
      1000,
      "FACING",
      "character",
      "brush"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1182,
   "completion_tokens": 131,
   "total_tokens": 1313
  }
 },
 "2": {
  "plan": [
   [
    " # 0: walk to bedroom\n walk('bedroom')\n # 1: find dresser\n find('dresser')\n # 2: open dresser\n open('dresser')\n # 3: find spare change\n find('spare_change')\n # 4: grab spare change\n grab('spare_change')\n # 5: close dresser\n close('dresser')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " bedroom",
      "\n",
      " walk",
      "('",
      "bedroom",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " dress",
      "er",
      "\n",
      " find",
      "('",
      "dress",
      "er",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " open",
      " dress",
      "er",
      "\n",
      " open",
      "('",
      "dress",
      "er",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " find",
      " spare",
      " change",
      "\n",
      " find",
      "('",
      "sp",
      "are",
      "_",
      "change",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " grab",
      " spare",
      " change",
      "\n",
      " grab",
      "('",
      "sp",
      "are",
      "_",
      "change",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " close",
      " dress",
      "er",
      "\n",
      " close",
      "('",
      "dress",
      "er",
      "')"
     ],
     "token_logprobs": [
      -0.022690952,
      -0.012818878,
      -0.0027135639,
      -0.24229555,
      -0.18395768,
      -0.22837472,
      -0.02129103,
      -0.0052308915,
      -0.004633992,
      -0.0021525696,
      -0.0011915636,
      -0.0078171445,
      -0.0022275376,
      -0.0031986916,
      -0.0008495615,
      -0.04804221,
      -0.03294214,
      -0.0007006726,
      -0.016133206,
      -0.9568024,
      -0.0010536597,
      -0.0012199107,
      -0.00017687635,
      -0.0014123294,
      -0.005043787,
      -0.035988305,
      -0.0044899243,
      -0.00082253676,
      -0.80263436,
      -0.63940966,
      -0.0013106248,
      -0.2990454,
      -0.71374035,
      -0.0032960456,
      -0.0036899776,
      -0.00015505555,
      -0.0018380017,
      -0.006252466,
      -0.030910315,
      -0.0052428753,
      -0.0011790916,
      -0.81247306,
      -0.4333001,
      -0.041042283,
      -0.053966727,
      -0.3472065,
      -0.00224964,
      -0.0365892,
      -0.00019142075,
      -0.05894247,
      -0.0010169069,
      -0.0030786882,
      -0.004821558,
      -0.0077880085,
      -0.005132811,
      -0.0012451529,
      -0.4196669,
      -0.17694743,
      -0.004634112,
      -0.014084808,
      -0.14876197,
      -0.0010627309,
      -0.0008456238,
      -0.00038435764,
      -0.0025756303,
      -7.505805e-05,
      -0.0013010148,
      -0.06324196,
      -0.040548135,
      -0.005740021,
      -0.0014106566,
      -0.34301415,
      -0.10835321,
      -0.00023595692,
      -0.017543811,
      -0.017508266,
      -0.0010774095,
      -0.0024216457,
      -0.00027101085,
      -0.0017686784
     ],
     "top_logprobs": [
      {
       " #": -0.022690952
      },
      {
       " 0": -0.012818878
      },
      {
       ":": -0.0027135639
      },
      {
       " walk": -0.24229555
      },
      {
       " to": -0.18395768
      },
      {
       " bedroom": -0.22837472
      },
      {
       "\n": -0.02129103
      },
      {
       " walk": -0.0052308915
      },
      {
       "('": -0.004633992
      },
      {
       "bedroom": -0.0021525696
      },
      {
       "')": -0.0011915636
      },
      {
       "\n": -0.0078171445
      },
      {
       " #": -0.0022275376
      },
      {
       " 1": -0.0031986916
      },
      {
       ":": -0.0008495615
      },
      {
       " find": -0.04804221
      },
      {
       " dress": -0.03294214
      },
      {
       "er": -0.0007006726
      },
      {
       "\n": -0.016133206
      },
      {
       " walk": -0.49588686
      },
      {
       "('": -0.0010536597
      },
      {
       "dress": -0.0012199107
      },
      {
       "er": -0.00017687635
      },
      {
       "')": -0.0014123294
      },
      {
       "\n": -0.005043787
      },
      {
       " #": -0.035988305
      },
      {
       " 2": -0.0044899243
      },
      {
       ":": -0.00082253676
      },
      {
       " open": -0.80263436
      },
      {
       " dress": -0.63940966
      },
      {
       "er": -0.0013106248
      },
      {
       "\n": -0.2990454
      },
      {
       " open": -0.71374035
      },
      {
       "('": -0.0032960456
      },
      {
       "dress": -0.0036899776
      },
      {
       "er": -0.00015505555
      },
      {
       "')": -0.0018380017
      },
      {
       "\n": -0.006252466
      },
      {
       " #": -0.030910315
      },
      {
       " 3": -0.0052428753
      },
      {
       ":": -0.0011790916
      },
      {
       " find": -0.81247306
      },
      {
       " spare": -0.4333001
      },
      {
       " change": -0.041042283
      },
      {
       "\n": -0.053966727
      },
      {
       " find": -0.3472065
      },
      {
       "('": -0.00224964
      },
      {
       "sp": -0.0365892
      },
      {
       "are": -0.00019142075
      },
      {
       "_": -0.05894247
      },
      {
       "change": -0.0010169069
      },
      {
       "')": -0.0030786882
      },
      {
       "\n": -0.004821558
      },
      {
       " #": -0.0077880085
      },
      {
       " 4": -0.005132811
      },
      {
       ":": -0.0012451529
      },
      {
       " grab": -0.4196669
      },
      {
       " spare": -0.17694743
      },
      {
       " change": -0.004634112
      },
      {
       "\n": -0.014084808
      },
      {
       " grab": -0.14876197
      },
      {
       "('": -0.0010627309
      },
      {
       "sp": -0.0008456238
      },
      {
       "are": -0.00038435764
      },
      {
       "_": -0.0025756303
      },
      {
       "change": -7.505805e-05
      },
      {
       "')": -0.0013010148
      },
      {
       "\n": -0.06324196
      },
      {
       " #": -0.040548135
      },
      {
       " 5": -0.005740021
      },
      {
       ":": -0.0014106566
      },
      {
       " close": -0.34301415
      },
      {
       " dress": -0.10835321
      },
      {
       "er": -0.00023595692
      },
      {
       "\n": -0.017543811
      },
      {
       " close": -0.017508266
      },
      {
       "('": -0.0010774095
      },
      {
       "dress": -0.0024216457
      },
      {
       "er": -0.00027101085
      },
      {
       "')": -0.0017686784
      }
     ],
     "text_offset": [
      3395,
      3397,
      3399,
      3400,
      3405,
      3408,
      3416,
      3417,
      3422,
      3424,
      3431,
      3433,
      3434,
      3436,
      3438,
      3439,
      3444,
      3450,
      3452,
      3453,
      3458,
      3460,
      3465,
      3467,
      3469,
      3470,
      3472,
      3474,
      3475,
      3480,
      3486,
      3488,
      3489,
      3494,
      3496,
      3501,
      3503,
      3505,
      3506,
      3508,
      3510,
      3511,
      3516,
      3522,
      3529,
      3530,
      3535,
      3537,
      3539,
      3542,
      3543,
      3549,
      3551,
      3552,
      3554,
      3556,
      3557,
      3562,
      3568,
      3575,
      3576,
      3581,
      3583,
      3585,
      3588,
      3589,
      3595,
      3597,
      3598,
      3600,
      3602,
      3603,
      3609,
      3615,
      3617,
      3618,
      3624,
      3626,
      3631,
      3633
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Pick up spare change on dresser",
   "task_description": "Locate all the coins on the dresser top. Pick them up.",
   "program": [
    "[Walk] <bedroom> (1)",
    "[Walk] <dresser> (1)",
    "[Find] <coin> (1)",
    "[Grab] <coin> (1)",
    "[Walk] <cup> (1)",
    "[PutBack] <coin> (1) <cup> (1)",
    "[Walk] <dresser> (1)",
    "[Find] <coin> (2)",
    "[Grab] <coin> (2)",
    "[Walk] <cup> (1)",
    "[PutBack] <coin> (2) <cup> (1)",
    "[Walk] <dresser> (1)",
    "[Find] <coin> (3)",
    "[Grab] <coin> (3)",
    "[Walk] <cup> (1)",
    "[PutBack] <coin> (3) <cup> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_turk_robot",
   "file_id": "split6_1",
   "goal_condition": [
    [
     [
      1003,
      1002,
      "ON",
      "coin",
      "cup"
     ],
     [
      247,
      189,
      "INSIDE",
      "character",
      "bedroom"
     ],
     [
      1001,
      1002,
      "ON",
      "coin",
      "cup"
     ],
     [
      1004,
      1002,
      "ON",
      "coin",
      "cup"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1191,
   "completion_tokens": 80,
   "total_tokens": 1271
  }
 },
 "3": {
  "plan": [
   [
    " # 0: find remote\n find('remote')\n # 1: find tv\n find('tv')\n # 2: turn on tv\n assert('close' to 'tv')\n else: find('tv')\n assert('remote' in 'hands'):\n else: find('remote')\n assert('tv' is 'switchoff')\n else: switchoff('tv')\n switchon('tv')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " remote",
      "\n",
      " find",
      "('",
      "remote",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " tv",
      "\n",
      " find",
      "('",
      "tv",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " turn",
      " on",
      " tv",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "tv",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "tv",
      "')",
      "\n",
      " assert",
      "('",
      "remote",
      "'",
      " in",
      " '",
      "hands",
      "'",
      "):",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "remote",
      "')",
      "\n",
      " assert",
      "('",
      "tv",
      "'",
      " is",
      " '",
      "switch",
      "off",
      "')",
      "\n",
      " else",
      ":",
      " switch",
      "off",
      "('",
      "tv",
      "')",
      "\n",
      " switch",
      "on",
      "('",
      "tv",
      "')"
     ],
     "token_logprobs": [
      -0.015769707,
      -0.007827898,
      -0.0014945832,
      -1.0358578,
      -1.155866,
      -1.9660789,
      -0.0135652535,
      -0.0035833155,
      -0.003589716,
      -0.9819441,
      -0.008044167,
      -0.0049723797,
      -0.0033286973,
      -0.00058925856,
      -0.13633633,
      -0.8178243,
      -0.018958725,
      -0.031127835,
      -0.0012424093,
      -0.26552823,
      -0.002546948,
      -0.00413446,
      -0.0072014146,
      -0.0048169475,
      -0.00073031615,
      -0.26115716,
      -0.046978623,
      -0.19360729,
      -0.6053193,
      -0.186206,
      -0.0020018711,
      -0.09196375,
      -0.0044615464,
      -0.0009936969,
      -0.0017041331,
      -0.0028971862,
      -0.0050770952,
      -0.0055308836,
      -0.001409702,
      -0.0016736815,
      -0.0032501766,
      -0.0011240707,
      -0.00040272233,
      -0.0035171567,
      -0.0048547997,
      -0.16854832,
      -0.001137975,
      -0.0070297886,
      -0.015015867,
      -0.016499558,
      -0.0032236879,
      -0.01108156,
      -0.80307966,
      -0.003602279,
      -0.002815531,
      -0.00040439412,
      -0.00056164444,
      -0.012546144,
      -0.00042472623,
      -0.0009106507,
      -0.007538869,
      -0.0025549566,
      -0.3029606,
      -0.00037851362,
      -0.0008222993,
      -0.0015326691,
      -0.0018304202,
      -0.003457403,
      -0.014365578,
      -0.0026191378,
      -0.004007642,
      -0.0009589143,
      -0.001168467,
      -0.00067007454,
      -0.0005998747,
      -0.0019787587,
      -0.000397832,
      -0.00014933258,
      -0.0028130203,
      -0.0026759729,
      -0.002922175,
      -0.00022951684,
      -0.0002773308,
      -0.24678835,
      -0.0030617071
     ],
     "top_logprobs": [
      {
       " #": -0.015769707
      },
      {
       " 0": -0.007827898
      },
      {
       ":": -0.0014945832
      },
      {
       " walk": -0.5196587
      },
      {
       " the": -1.0978798
      },
      {
       " control": -0.20343816
      },
      {
       " find": -0.0135652535
      },
      {
       "('": -0.0035833155
      },
      {
       "remote": -0.003589716
      },
      {
       "_": -0.47344297
      },
      {
       "\n": -0.008044167
      },
      {
       " #": -0.0049723797
      },
      {
       " 1": -0.0033286973
      },
      {
       ":": -0.00058925856
      },
      {
       " find": -0.13633633
      },
      {
       " television": -0.7041702
      },
      {
       "\n": -0.018958725
      },
      {
       " find": -0.031127835
      },
      {
       "('": -0.0012424093
      },
      {
       "tv": -0.26552823
      },
      {
       "')": -0.002546948
      },
      {
       "\n": -0.00413446
      },
      {
       " #": -0.0072014146
      },
      {
       " 2": -0.0048169475
      },
      {
       ":": -0.00073031615
      },
      {
       " turn": -0.26115716
      },
      {
       " on": -0.046978623
      },
      {
       " tv": -0.19360729
      },
      {
       "\n": -0.6053193
      },
      {
       " assert": -0.186206
      },
      {
       "('": -0.0020018711
      },
      {
       "close": -0.09196375
      },
      {
       "'": -0.0044615464
      },
      {
       " to": -0.0009936969
      },
      {
       " '": -0.0017041331
      },
      {
       "tv": -0.0028971862
      },
      {
       "')": -0.0050770952
      },
      {
       "\n": -0.0055308836
      },
      {
       " else": -0.001409702
      },
      {
       ":": -0.0016736815
      },
      {
       " find": -0.0032501766
      },
      {
       "('": -0.0011240707
      },
      {
       "tv": -0.00040272233
      },
      {
       "')": -0.0035171567
      },
      {
       "\n": -0.0048547997
      },
      {
       " assert": -0.16854832
      },
      {
       "('": -0.001137975
      },
      {
       "remote": -0.0070297886
      },
      {
       "'": -0.015015867
      },
      {
       " in": -0.016499558
      },
      {
       " '": -0.0032236879
      },
      {
       "hands": -0.01108156
      },
      {
       "')": -0.6192532
      },
      {
       "):": -0.003602279
      },
      {
       "\n": -0.002815531
      },
      {
       " else": -0.00040439412
      },
      {
       ":": -0.00056164444
      },
      {
       " find": -0.012546144
      },
      {
       "('": -0.00042472623
      },
      {
       "remote": -0.0009106507
      },
      {
       "')": -0.007538869
      },
      {
       "\n": -0.0025549566
      },
      {
       " assert": -0.3029606
      },
      {
       "('": -0.00037851362
      },
      {
       "tv": -0.0008222993
      },
      {
       "'": -0.0015326691
      },
      {
       " is": -0.0018304202
      },
      {
       " '": -0.003457403
      },
      {
       "switch": -0.014365578
      },
      {
       "off": -0.0026191378
      },
      {
       "')": -0.004007642
      },
      {
       "\n": -0.0009589143
      },
      {
       " else": -0.001168467
      },
      {
       ":": -0.00067007454
      },
      {
       " switch": -0.0005998747
      },
      {
       "off": -0.0019787587
      },
      {
       "('": -0.000397832
      },
      {
       "tv": -0.00014933258
      },
      {
       "')": -0.0028130203
      },
      {
       "\n": -0.0026759729
      },
      {
       " switch": -0.002922175
      },
      {
       "on": -0.00022951684
      },
      {
       "('": -0.0002773308
      },
      {
       "tv": -0.24678835
      },
      {
       "')": -0.0030617071
      }
     ],
     "text_offset": [
      3374,
      3376,
      3378,
      3379,
      3384,
      3391,
      3392,
      3397,
      3399,
      3405,
      3407,
      3408,
      3410,
      3412,
      3413,
      3418,
      3421,
      3422,
      3427,
      3429,
      3431,
      3433,
      3434,
      3436,
      3438,
      3439,
      3444,
      3447,
      3450,
      3451,
      3458,
      3460,
      3465,
      3466,
      3469,
      3471,
      3473,
      3475,
      3476,
      3481,
      3482,
      3487,
      3489,
      3491,
      3493,
      3494,
      3501,
      3503,
      3509,
      3510,
      3513,
      3515,
      3520,
      3521,
      3523,
      3524,
      3529,
      3530,
      3535,
      3537,
      3543,
      3545,
      3546,
      3553,
      3555,
      3557,
      3558,
      3561,
      3563,
      3569,
      3572,
      3574,
      3575,
      3580,
      3581,
      3588,
      3591,
      3593,
      3595,
      3597,
      3598,
      3605,
      3607,
      3609,
      3611
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Turn on TV",
   "task_description": "Sit in a chair.  Grab the remote control.  Point the remote at the television.  Press the power button.",
   "program": [
    "[Walk] <home_office> (1)",
    "[Walk] <chair> (1)",
    "[Find] <chair> (1)",
    "[Sit] <chair> (1)",
    "[Find] <remote_control> (1)",
    "[Grab] <remote_control> (1)",
    "[Find] <television> (1)",
    "[TurnTo] <television> (1)",
    "[PointAt] <television> (1)",
    "[SwitchOn] <television> (1)",
    "[PutObjBack] <remote_control> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_kellensecond",
   "file_id": "split5_9",
   "goal_condition": [
    [
     [
      247,
      254,
      "ON",
      "character",
      "chair"
     ],
     [
      247,
      248,
      "INSIDE",
      "character",
      "home_office"
     ],
     [
      247,
      278,
      "FACING",
      "character",
      "television"
     ]
    ],
    [
     [
      247,
      "character",
      "SITTING"
     ],
     [
      278,
      "television",
      "ON"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1183,
   "completion_tokens": 85,
   "total_tokens": 1268
  }
 },
 "4": {
  "plan": [
   [
    " # 0: walk to closet\n walk('closet')\n # 1: find hanger\n find('hanger')\n # 2: grab hanger\n grab('hanger')\n # 3: walk to jacket\n walk('jacket')\n # 4: grab jacket\n grab('jacket')\n # 5: hang up jacket\n assert('hanger' in 'hands')\n else: grab('hanger')\n assert('jacket' in 'hands')\n else: grab('jacket')\n hang('jacket', 'hanger')\n # 6: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " closet",
      "\n",
      " walk",
      "('",
      "cl",
      "os",
      "et",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " h",
      "anger",
      "\n",
      " find",
      "('",
      "h",
      "anger",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " grab",
      " h",
      "anger",
      "\n",
      " grab",
      "('",
      "h",
      "anger",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " walk",
      " to",
      " jacket",
      "\n",
      " walk",
      "('",
      "j",
      "acket",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " grab",
      " jacket",
      "\n",
      " grab",
      "('",
      "j",
      "acket",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " hang",
      " up",
      " jacket",
      "\n",
      " assert",
      "('",
      "h",
      "anger",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "h",
      "anger",
      "')",
      "\n",
      " assert",
      "('",
      "j",
      "acket",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "j",
      "acket",
      "')",
      "\n",
      " hang",
      "('",
      "j",
      "acket",
      "',",
      " '",
      "h",
      "anger",
      "')",
      "\n",
      " #",
      " 6",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.01491174,
      -0.007016524,
      -0.0018624272,
      -0.7068197,
      -0.2839239,
      -0.70722514,
      -0.054356344,
      -0.010105798,
      -0.0036881831,
      -0.0035236762,
      -0.006021815,
      -0.0004509634,
      -0.009735997,
      -0.0070249266,
      -0.006155365,
      -0.0030651153,
      -0.00088553247,
      -0.09731553,
      -0.16069913,
      -0.019402873,
      -0.028126294,
      -0.17454964,
      -0.0011448994,
      -0.00046515674,
      -0.00070365384,
      -0.0017464053,
      -0.004827009,
      -0.014487909,
      -0.0041651633,
      -0.0005526991,
      -0.23401988,
      -0.299951,
      -0.0014344739,
      -0.03663656,
      -0.39495826,
      -0.0013370637,
      -0.00036766095,
      -0.00023488217,
      -0.0020664372,
      -0.004457295,
      -0.28365108,
      -0.007166116,
      -0.0005623597,
      -2.6899903,
      -0.019367503,
      -0.7175176,
      -0.038982082,
      -0.09244665,
      -0.0045479424,
      -0.12424035,
      -7.255186e-05,
      -0.0015555937,
      -0.006550005,
      -0.08470209,
      -0.0054310374,
      -0.0006270693,
      -0.55788165,
      -0.07432848,
      -0.022648208,
      -0.049158163,
      -0.0010898814,
      -0.0004403491,
      -6.6294406e-06,
      -0.0008635183,
      -0.004504294,
      -0.0044432837,
      -0.004456576,
      -0.0006392971,
      -0.31835228,
      -0.41963905,
      -0.24592188,
      -0.32210398,
      -0.8947135,
      -0.0028479896,
      -0.75434554,
      -0.0008103671,
      -0.0033149424,
      -0.06650002,
      -0.008705569,
      -0.019473433,
      -0.12104708,
      -0.009583249,
      -0.01267073,
      -0.004578482,
      -0.060163245,
      -0.0022023264,
      -0.0014775102,
      -0.0002516953,
      -0.003909922,
      -0.009530717,
      -1.5757974,
      -0.0016514121,
      -0.065197244,
      -0.00028555995,
      -0.0008551662,
      -0.0032520907,
      -0.0020636306,
      -0.0021012002,
      -0.0044352002,
      -0.007548718,
      -0.0008548122,
      -0.0026698173,
      -0.0053243656,
      -0.0023366846,
      -0.0019248935,
      -8.459475e-05,
      -0.0030275702,
      -0.0085127065,
      -0.61660755,
      -0.4758559,
      -0.17955628,
      -1.7475562e-05,
      -1.4571955,
      -0.004672316,
      -0.0019492598,
      -0.00023285468,
      -0.002385855,
      -0.5610761,
      -0.19200498,
      -0.004056175,
      -0.0016341578,
      -1.0542549
     ],
     "top_logprobs": [
      {
       " #": -0.01491174
      },
      {
       " 0": -0.007016524
      },
      {
       ":": -0.0018624272
      },
      {
       " walk": -0.7068197
      },
      {
       " to": -0.2839239
      },
      {
       " closet": -0.70722514
      },
      {
       "\n": -0.054356344
      },
      {
       " walk": -0.010105798
      },
      {
       "('": -0.0036881831
      },
      {
       "cl": -0.0035236762
      },
      {
       "os": -0.006021815
      },
      {
       "et": -0.0004509634
      },
      {
       "')": -0.009735997
      },
      {
       "\n": -0.0070249266
      },
      {
       " #": -0.006155365
      },
      {
       " 1": -0.0030651153
      },
      {
       ":": -0.00088553247
      },
      {
       " find": -0.09731553
      },
      {
       " h": -0.16069913
      },
      {
       "anger": -0.019402873
      },
      {
       "\n": -0.028126294
      },
      {
       " find": -0.17454964
      },
      {
       "('": -0.0011448994
      },
      {
       "h": -0.00046515674
      },
      {
       "anger": -0.00070365384
      },
      {
       "')": -0.0017464053
      },
      {
       "\n": -0.004827009
      },
      {
       " #": -0.014487909
      },
      {
       " 2": -0.0041651633
      },
      {
       ":": -0.0005526991
      },
      {
       " grab": -0.23401988
      },
      {
       " h": -0.299951
      },
      {
       "anger": -0.0014344739
      },
      {
       "\n": -0.03663656
      },
      {
       " grab": -0.39495826
      },
      {
       "('": -0.0013370637
      },
      {
       "h": -0.00036766095
      },
      {
       "anger": -0.00023488217
      },
      {
       "')": -0.0020664372
      },
      {
       "\n": -0.004457295
      },
      {
       " #": -0.28365108
      },
      {
       " 3": -0.007166116
      },
      {
       ":": -0.0005623597
      },
      {
       " find": -0.37847742
      },
      {
       " to": -0.019367503
      },
      {
       " jacket": -0.7175176
      },
      {
       "\n": -0.038982082
      },
      {
       " walk": -0.09244665
      },
      {
       "('": -0.0045479424
      },
      {
       "j": -0.12424035
      },
      {
       "acket": -7.255186e-05
      },
      {
       "')": -0.0015555937
      },
      {
       "\n": -0.006550005
      },
      {
       " #": -0.08470209
      },
      {
       " 4": -0.0054310374
      },
      {
       ":": -0.0006270693
      },
      {
       " grab": -0.55788165
      },
      {
       " jacket": -0.07432848
      },
      {
       "\n": -0.022648208
      },
      {
       " grab": -0.049158163
      },
      {
       "('": -0.0010898814
      },
      {
       "j": -0.0004403491
      },
      {
       "acket": -6.6294406e-06
      },
      {
       "')": -0.0008635183
      },
      {
       "\n": -0.004504294
      },
      {
       " #": -0.0044432837
      },
      {
       " 5": -0.004456576
      },
      {
       ":": -0.0006392971
      },
      {
       " hang": -0.31835228
      },
      {
       " up": -0.41963905
      },
      {
       " jacket": -0.24592188
      },
      {
       "\n": -0.32210398
      },
      {
       " assert": -0.8947135
      },
      {
       "('": -0.0028479896
      },
      {
       "close": -0.67355615
      },
      {
       "anger": -0.0008103671
      },
      {
       "'": -0.0033149424
      },
      {
       " in": -0.06650002
      },
      {
       " '": -0.008705569
      },
      {
       "hands": -0.019473433
      },
      {
       "')": -0.12104708
      },
      {
       "\n": -0.009583249
      },
      {
       " else": -0.01267073
      },
      {
       ":": -0.004578482
      },
      {
       " grab": -0.060163245
      },
      {
       "('": -0.0022023264
      },
      {
       "h": -0.0014775102
      },
      {
       "anger": -0.0002516953
      },
      {
       "')": -0.003909922
      },
      {
       "\n": -0.009530717
      },
      {
       " hang": -1.065105
      },
      {
       "('": -0.0016514121
      },
      {
       "j": -0.065197244
      },
      {
       "acket": -0.00028555995
      },
      {
       "'": -0.0008551662
      },
      {
       " in": -0.0032520907
      },
      {
       " '": -0.0020636306
      },
      {
       "hands": -0.0021012002
      },
      {
       "')": -0.0044352002
      },
      {
       "\n": -0.007548718
      },
      {
       " else": -0.0008548122
      },
      {
       ":": -0.0026698173
      },
      {
       " grab": -0.0053243656
      },
      {
       "('": -0.0023366846
      },
      {
       "j": -0.0019248935
      },
      {
       "acket": -8.459475e-05
      },
      {
       "')": -0.0030275702
      },
      {
       "\n": -0.0085127065
      },
      {
       " hang": -0.61660755
      },
      {
       "('": -0.4758559
      },
      {
       "j": -0.17955628
      },
      {
       "acket": -1.7475562e-05
      },
      {
       "')": -0.5002443
      },
      {
       " '": -0.004672316
      },
      {
       "h": -0.0019492598
      },
      {
       "anger": -0.00023285468
      },
      {
       "')": -0.002385855
      },
      {
       "\n": -0.5610761
      },
      {
       " #": -0.19200498
      },
      {
       " 6": -0.004056175
      },
      {
       ":": -0.0016341578
      },
      {
       " put": -0.70491636
      }
     ],
     "text_offset": [
      3378,
      3380,
      3382,
      3383,
      3388,
      3391,
      3398,
      3399,
      3404,
      3406,
      3408,
      3410,
      3412,
      3414,
      3415,
      3417,
      3419,
      3420,
      3425,
      3427,
      3432,
      3433,
      3438,
      3440,
      3441,
      3446,
      3448,
      3449,
      3451,
      3453,
      3454,
      3459,
      3461,
      3466,
      3467,
      3472,
      3474,
      3475,
      3480,
      3482,
      3483,
      3485,
      3487,
      3488,
      3493,
      3496,
      3503,
      3504,
      3509,
      3511,
      3512,
      3517,
      3519,
      3520,
      3522,
      3524,
      3525,
      3530,
      3537,
      3538,
      3543,
      3545,
      3546,
      3551,
      3553,
      3554,
      3556,
      3558,
      3559,
      3564,
      3567,
      3574,
      3575,
      3582,
      3584,
      3585,
      3590,
      3591,
      3594,
      3596,
      3601,
      3603,
      3604,
      3609,
      3610,
      3615,
      3617,
      3618,
      3623,
      3625,
      3626,
      3633,
      3635,
      3636,
      3641,
      3642,
      3645,
      3647,
      3652,
      3654,
      3655,
      3660,
      3661,
      3666,
      3668,
      3669,
      3674,
      3676,
      3677,
      3682,
      3684,
      3685,
      3690,
      3692,
      3694,
      3695,
      3700,
      3702,
      3703,
      3705,
      3707,
      3708
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Hang up jacket",
   "task_description": "Setting the coat on the proper hook",
   "program": [
    "[Find] <dresser> (1)",
    "[TurnTo] <dresser> (1)",
    "[PointAt] <dresser> (1)",
    "[Wash] <dresser> (1)",
    "[TurnTo] <dresser> (1)",
    "[LookAt] <dresser> (1)",
    "[Open] <dresser> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_turk_third",
   "file_id": "split13_1",
   "goal_condition": [
    [
     [
      247,
      258,
      "FACING",
      "character",
      "dresser"
     ]
    ],
    [
     [
      258,
      "dresser",
      "OPEN"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1184,
   "completion_tokens": 122,
   "total_tokens": 1306
  }
 },
 "5": {
  "plan": [
   [
    " # 0: find chair\n find('chair')\n # 1: walk to chair\n walk('chair')\n # 2: sit on chair\n assert('close' to 'chair')\n else: find('chair')\n sit('chair')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " chair",
      "\n",
      " find",
      "('",
      "chair",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " walk",
      " to",
      " chair",
      "\n",
      " walk",
      "('",
      "chair",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " sit",
      " on",
      " chair",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "chair",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "chair",
      "')",
      "\n",
      " sit",
      "('",
      "chair",
      "')"
     ],
     "token_logprobs": [
      -0.16259108,
      -0.039362986,
      -0.003979153,
      -0.40455994,
      -0.7321371,
      -0.05638868,
      -0.028817188,
      -0.005649562,
      -0.0018525141,
      -0.0024568366,
      -0.00994234,
      -0.0039109997,
      -0.003978556,
      -0.00077272824,
      -0.89489704,
      -0.07735446,
      -0.19389576,
      -0.022560662,
      -0.4028226,
      -0.006350117,
      -0.0013494163,
      -0.0017068788,
      -0.008249082,
      -0.056752548,
      -0.00548,
      -0.0011342157,
      -0.074759886,
      -0.18722777,
      -0.21652126,
      -0.011078847,
      -0.56942344,
      -0.0021436682,
      -0.014711568,
      -0.0035739231,
      -0.000881118,
      -0.0026752558,
      -0.0007110504,
      -0.005113399,
      -0.0050739804,
      -0.0018012797,
      -0.0014961967,
      -0.03386009,
      -0.0014907621,
      -0.00077630725,
      -0.0024675326,
      -0.006083101,
      -0.22695638,
      -0.0022827378,
      -0.000918404,
      -0.0021650544
     ],
     "top_logprobs": [
      {
       " #": -0.16259108
      },
      {
       " 0": -0.039362986
      },
      {
       ":": -0.003979153
      },
      {
       " find": -0.40455994
      },
      {
       " chair": -0.7321371
      },
      {
       "\n": -0.05638868
      },
      {
       " find": -0.028817188
      },
      {
       "('": -0.005649562
      },
      {
       "chair": -0.0018525141
      },
      {
       "')": -0.0024568366
      },
      {
       "\n": -0.00994234
      },
      {
       " #": -0.0039109997
      },
      {
       " 1": -0.003978556
      },
      {
       ":": -0.00077272824
      },
      {
       " walk": -0.89489704
      },
      {
       " to": -0.07735446
      },
      {
       " chair": -0.19389576
      },
      {
       "\n": -0.022560662
      },
      {
       " walk": -0.4028226
      },
      {
       "('": -0.006350117
      },
      {
       "chair": -0.0013494163
      },
      {
       "')": -0.0017068788
      },
      {
       "\n": -0.008249082
      },
      {
       " #": -0.056752548
      },
      {
       " 2": -0.00548
      },
      {
       ":": -0.0011342157
      },
      {
       " sit": -0.074759886
      },
      {
       " on": -0.18722777
      },
      {
       " chair": -0.21652126
      },
      {
       "\n": -0.011078847
      },
      {
       " assert": -0.56942344
      },
      {
       "('": -0.0021436682
      },
      {
       "close": -0.014711568
      },
      {
       "'": -0.0035739231
      },
      {
       " to": -0.000881118
      },
      {
       " '": -0.0026752558
      },
      {
       "chair": -0.0007110504
      },
      {
       "')": -0.005113399
      },
      {
       "\n": -0.0050739804
      },
      {
       " else": -0.0018012797
      },
      {
       ":": -0.0014961967
      },
      {
       " find": -0.03386009
      },
      {
       "('": -0.0014907621
      },
      {
       "chair": -0.00077630725
      },
      {
       "')": -0.0024675326
      },
      {
       "\n": -0.006083101
      },
      {
       " sit": -0.22695638
      },
      {
       "('": -0.0022827378
      },
      {
       "chair": -0.000918404
      },
      {
       "')": -0.0021650544
      }
     ],
     "text_offset": [
      3367,
      3369,
      3371,
      3372,
      3377,
      3383,
      3384,
      3389,
      3391,
      3396,
      3398,
      3399,
      3401,
      3403,
      3404,
      3409,
      3412,
      3418,
      3419,
      3424,
      3426,
      3431,
      3433,
      3434,
      3436,
      3438,
      3439,
      3443,
      3446,
      3452,
      3453,
      3460,
      3462,
      3467,
      3468,
      3471,
      3473,
      3478,
      3480,
      3481,
      3486,
      3487,
      3492,
      3494,
      3499,
      3501,
      3502,
      3506,
      3508,
      3513
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Sit",
   "task_description": "We sit at the dining room table",
   "program": [
    "[Walk] <dining_room> (1)",
    "[Walk] <chair> (1)",
    "[Find] <chair> (1)",
    "[Pull] <chair> (1)",
    "[Sit] <chair> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_turk_third",
   "file_id": "split41_2",
   "goal_condition": [
    [
     [
      247,
      1,
      "INSIDE",
      "character",
      "dining_room"
     ],
     [
      247,
      61,
      "ON",
      "character",
      "chair"
     ]
    ],
    [
     [
      247,
      "character",
      "SITTING"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1179,
   "completion_tokens": 50,
   "total_tokens": 1229
  }
 },
 "6": {
  "plan": [
   [
    " # 0: walk to the sink\n walk('sink')\n # 1: find sink\n find('sink')\n # 2: pull the sink\n assert('close' to 'sink')\n else: find('sink')\n pull('sink')\n # 3: turn on the faucet\n assert('close' to 'faucet')\n else: find('faucet')\n switchon('faucet')\n # 4: pour some soap\n grab('soap')\n pour('soap')\n # 5: wash the sink\n wash('sink')\n # 6: turn off the faucet\n switchoff('faucet')\n # 7: put the soap back\n putback('soap')\n # 8: push the sink\n push('sink')\n # 9: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " the",
      " sink",
      "\n",
      " walk",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " sink",
      "\n",
      " find",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " pull",
      " the",
      " sink",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "s",
      "ink",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " pull",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " turn",
      " on",
      " the",
      " f",
      "auc",
      "et",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " switch",
      "on",
      "('",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " pour",
      " some",
      " soap",
      "\n",
      " grab",
      "('",
      "so",
      "ap",
      "')",
      "\n",
      " pour",
      "('",
      "so",
      "ap",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " wash",
      " the",
      " sink",
      "\n",
      " wash",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " #",
      " 6",
      ":",
      " turn",
      " off",
      " the",
      " f",
      "auc",
      "et",
      "\n",
      " switch",
      "off",
      "('",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " #",
      " 7",
      ":",
      " put",
      " the",
      " soap",
      " back",
      "\n",
      " put",
      "back",
      "('",
      "so",
      "ap",
      "')",
      "\n",
      " #",
      " 8",
      ":",
      " push",
      " the",
      " sink",
      "\n",
      " push",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " #",
      " 9",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.022905838,
      -0.00812553,
      -0.0020624348,
      -0.56560993,
      -0.21020679,
      -1.7495596,
      -1.60451,
      -0.034983996,
      -0.015252354,
      -0.0055554565,
      -0.014539618,
      -0.000116426294,
      -0.001645384,
      -0.009129727,
      -0.09646939,
      -0.0028922246,
      -0.0008667416,
      -0.34385842,
      -0.81300205,
      -0.027291795,
      -0.041886237,
      -0.0009936969,
      -0.00038173224,
      -0.00011678579,
      -0.0020518035,
      -0.004916972,
      -0.010365638,
      -0.0049916687,
      -0.0009394654,
      -4.297865,
      -0.9308351,
      -0.82751477,
      -0.425601,
      -0.7201448,
      -0.0017939958,
      -0.0038612136,
      -0.0028184005,
      -0.00038244936,
      -0.0023583714,
      -0.0012468238,
      -5.7177684e-05,
      -0.006117104,
      -0.00541791,
      -0.002184111,
      -0.0016961914,
      -0.006870315,
      -0.0014729146,
      -0.00035084877,
      -0.00024692412,
      -0.002299823,
      -0.010641812,
      -0.048384737,
      -0.0019637677,
      -0.0004967001,
      -0.00010987075,
      -0.0017493903,
      -0.006678764,
      -0.03278488,
      -0.009165518,
      -0.0010420242,
      -2.2220736,
      -0.11572636,
      -0.21048369,
      -0.66987944,
      -0.0018781327,
      -0.0017160728,
      -0.036752682,
      -0.9785796,
      -0.0014797788,
      -0.024858281,
      -0.0022476087,
      -0.0004200752,
      -0.0010436969,
      -0.040207732,
      -0.00051351794,
      -0.00033379628,
      -0.0040602456,
      -0.00473364,
      -0.0017908899,
      -0.00093260483,
      -0.007454436,
      -0.0009324847,
      -0.00137407,
      -0.0031036807,
      -0.00016185326,
      -0.0022729393,
      -0.0065576234,
      -0.573271,
      -0.0016443083,
      -0.0008889932,
      -0.00073914323,
      -0.0005110145,
      -0.00012989782,
      -0.001846961,
      -0.0054960623,
      -0.024803655,
      -0.0064076423,
      -0.0010892844,
      -0.93662953,
      -3.0173008,
      -1.6755574,
      -0.33574837,
      -1.5109341,
      -0.0019155162,
      -0.026734177,
      -0.00035979127,
      -0.007939267,
      -0.004541537,
      -0.3434169,
      -0.002922772,
      -0.0018457661,
      -9.771052e-05,
      -0.028420044,
      -0.0075944825,
      -0.026779847,
      -0.004803769,
      -0.00092580245,
      -0.86248744,
      -0.20299381,
      -0.031727217,
      -0.04178468,
      -0.17989685,
      -0.0010141633,
      -0.0016679501,
      -0.00021014028,
      -0.0014298182,
      -0.009931745,
      -0.02691736,
      -0.0030467028,
      -0.0015342206,
      -0.22981985,
      -0.020314572,
      -0.06647359,
      -0.011730145,
      -0.0008325587,
      -0.000696139,
      -0.021231728,
      -0.08275415,
      -0.0039868737,
      -0.00087216886,
      -0.0007411717,
      -0.0013868432,
      -0.00021956058,
      -0.003000846,
      -0.05268745,
      -0.009970694,
      -0.007231131,
      -0.0020519237,
      -0.71035755,
      -0.54330343,
      -0.039566487,
      -0.07262569,
      -0.020220295,
      -0.10272739,
      -0.42570266,
      -0.0031335757,
      -0.0005453053,
      -0.00030976496,
      -0.008203109,
      -0.32100993,
      -0.02753384,
      -0.0024249328,
      -0.0024135208,
      -1.553065,
      -0.11262404,
      -0.0011425115,
      -0.88450766,
      -0.022769544,
      -0.0014434869,
      -0.00036134195,
      -7.219704e-05,
      -0.002500099,
      -0.14217165,
      -0.0070395144,
      -0.008854092,
      -0.003206944,
      -0.33158496
     ],
     "top_logprobs": [
      {
       " #": -0.022905838
      },
      {
       " 0": -0.00812553
      },
      {
       ":": -0.0020624348
      },
      {
       " walk": -0.56560993
      },
      {
       " to": -0.21020679
      },
      {
       " bathroom": -0.74335396
      },
      {
       " bathroom": -0.800924
      },
      {
       "\n": -0.034983996
      },
      {
       " walk": -0.015252354
      },
      {
       "('": -0.0055554565
      },
      {
       "s": -0.014539618
      },
      {
       "ink": -0.000116426294
      },
      {
       "')": -0.001645384
      },
      {
       "\n": -0.009129727
      },
      {
       " #": -0.09646939
      },
      {
       " 1": -0.0028922246
      },
      {
       ":": -0.0008667416
      },
      {
       " find": -0.34385842
      },
      {
       " sink": -0.81300205
      },
      {
       "\n": -0.027291795
      },
      {
       " find": -0.041886237
      },
      {
       "('": -0.0009936969
      },
      {
       "s": -0.00038173224
      },
      {
       "ink": -0.00011678579
      },
      {
       "')": -0.0020518035
      },
      {
       "\n": -0.004916972
      },
      {
       " #": -0.010365638
      },
      {
       " 2": -0.0049916687
      },
      {
       ":": -0.0009394654
      },
      {
       " turn": -0.65200496
      },
      {
       " the": -0.9308351
      },
      {
       " sink": -0.82751477
      },
      {
       "\n": -0.425601
      },
      {
       " assert": -0.7201448
      },
      {
       "('": -0.0017939958
      },
      {
       "close": -0.0038612136
      },
      {
       "'": -0.0028184005
      },
      {
       " to": -0.00038244936
      },
      {
       " '": -0.0023583714
      },
      {
       "s": -0.0012468238
      },
      {
       "ink": -5.7177684e-05
      },
      {
       "')": -0.006117104
      },
      {
       "\n": -0.00541791
      },
      {
       " else": -0.002184111
      },
      {
       ":": -0.0016961914
      },
      {
       " find": -0.006870315
      },
      {
       "('": -0.0014729146
      },
      {
       "s": -0.00035084877
      },
      {
       "ink": -0.00024692412
      },
      {
       "')": -0.002299823
      },
      {
       "\n": -0.010641812
      },
      {
       " pull": -0.048384737
      },
      {
       "('": -0.0019637677
      },
      {
       "s": -0.0004967001
      },
      {
       "ink": -0.00010987075
      },
      {
       "')": -0.0017493903
      },
      {
       "\n": -0.006678764
      },
      {
       " #": -0.03278488
      },
      {
       " 3": -0.009165518
      },
      {
       ":": -0.0010420242
      },
      {
       " pour": -0.79316527
      },
      {
       " on": -0.11572636
      },
      {
       " the": -0.21048369
      },
      {
       " f": -0.66987944
      },
      {
       "auc": -0.0018781327
      },
      {
       "et": -0.0017160728
      },
      {
       "\n": -0.036752682
      },
      {
       " assert": -0.9785796
      },
      {
       "('": -0.0014797788
      },
      {
       "close": -0.024858281
      },
      {
       "'": -0.0022476087
      },
      {
       " to": -0.0004200752
      },
      {
       " '": -0.0010436969
      },
      {
       "f": -0.040207732
      },
      {
       "auc": -0.00051351794
      },
      {
       "et": -0.00033379628
      },
      {
       "')": -0.0040602456
      },
      {
       "\n": -0.00473364
      },
      {
       " else": -0.0017908899
      },
      {
       ":": -0.00093260483
      },
      {
       " find": -0.007454436
      },
      {
       "('": -0.0009324847
      },
      {
       "f": -0.00137407
      },
      {
       "auc": -0.0031036807
      },
      {
       "et": -0.00016185326
      },
      {
       "')": -0.0022729393
      },
      {
       "\n": -0.0065576234
      },
      {
       " switch": -0.573271
      },
      {
       "on": -0.0016443083
      },
      {
       "('": -0.0008889932
      },
      {
       "f": -0.00073914323
      },
      {
       "auc": -0.0005110145
      },
      {
       "et": -0.00012989782
      },
      {
       "')": -0.001846961
      },
      {
       "\n": -0.0054960623
      },
      {
       " #": -0.024803655
      },
      {
       " 4": -0.0064076423
      },
      {
       ":": -0.0010892844
      },
      {
       " pour": -0.93662953
      },
      {
       " deter": -0.90195596
      },
      {
       " deter": -0.64232856
      },
      {
       "\n": -0.33574837
      },
      {
       " assert": -0.96880275
      },
      {
       "('": -0.0019155162
      },
      {
       "so": -0.026734177
      },
      {
       "ap": -0.00035979127
      },
      {
       "')": -0.007939267
      },
      {
       "\n": -0.004541537
      },
      {
       " pour": -0.3434169
      },
      {
       "('": -0.002922772
      },
      {
       "so": -0.0018457661
      },
      {
       "ap": -9.771052e-05
      },
      {
       "')": -0.028420044
      },
      {
       "\n": -0.0075944825
      },
      {
       " #": -0.026779847
      },
      {
       " 5": -0.004803769
      },
      {
       ":": -0.00092580245
      },
      {
       " wash": -0.86248744
      },
      {
       " the": -0.20299381
      },
      {
       " sink": -0.031727217
      },
      {
       "\n": -0.04178468
      },
      {
       " wash": -0.17989685
      },
      {
       "('": -0.0010141633
      },
      {
       "s": -0.0016679501
      },
      {
       "ink": -0.00021014028
      },
      {
       "')": -0.0014298182
      },
      {
       "\n": -0.009931745
      },
      {
       " #": -0.02691736
      },
      {
       " 6": -0.0030467028
      },
      {
       ":": -0.0015342206
      },
      {
       " turn": -0.22981985
      },
      {
       " off": -0.020314572
      },
      {
       " the": -0.06647359
      },
      {
       " f": -0.011730145
      },
      {
       "auc": -0.0008325587
      },
      {
       "et": -0.000696139
      },
      {
       "\n": -0.021231728
      },
      {
       " switch": -0.08275415
      },
      {
       "off": -0.0039868737
      },
      {
       "('": -0.00087216886
      },
      {
       "f": -0.0007411717
      },
      {
       "auc": -0.0013868432
      },
      {
       "et": -0.00021956058
      },
      {
       "')": -0.003000846
      },
      {
       "\n": -0.05268745
      },
      {
       " #": -0.009970694
      },
      {
       " 7": -0.007231131
      },
      {
       ":": -0.0020519237
      },
      {
       " put": -0.71035755
      },
      {
       " the": -0.54330343
      },
      {
       " soap": -0.039566487
      },
      {
       " back": -0.07262569
      },
      {
       "\n": -0.020220295
      },
      {
       " put": -0.10272739
      },
      {
       "back": -0.42570266
      },
      {
       "('": -0.0031335757
      },
      {
       "so": -0.0005453053
      },
      {
       "ap": -0.00030976496
      },
      {
       "')": -0.008203109
      },
      {
       "\n": -0.32100993
      },
      {
       " #": -0.02753384
      },
      {
       " 8": -0.0024249328
      },
      {
       ":": -0.0024135208
      },
      {
       " Done": -0.5782838
      },
      {
       " the": -0.11262404
      },
      {
       " sink": -0.0011425115
      },
      {
       " back": -0.56392044
      },
      {
       " push": -0.022769544
      },
      {
       "('": -0.0014434869
      },
      {
       "s": -0.00036134195
      },
      {
       "ink": -7.219704e-05
      },
      {
       "')": -0.002500099
      },
      {
       "\n": -0.14217165
      },
      {
       " #": -0.0070395144
      },
      {
       " 9": -0.008854092
      },
      {
       ":": -0.003206944
      },
      {
       " Done": -0.33158496
      }
     ],
     "text_offset": [
      3373,
      3375,
      3377,
      3378,
      3383,
      3386,
      3390,
      3395,
      3396,
      3401,
      3403,
      3404,
      3407,
      3409,
      3410,
      3412,
      3414,
      3415,
      3420,
      3425,
      3426,
      3431,
      3433,
      3434,
      3437,
      3439,
      3440,
      3442,
      3444,
      3445,
      3450,
      3454,
      3459,
      3460,
      3467,
      3469,
      3474,
      3475,
      3478,
      3480,
      3481,
      3484,
      3486,
      3487,
      3492,
      3493,
      3498,
      3500,
      3501,
      3504,
      3506,
      3507,
      3512,
      3514,
      3515,
      3518,
      3520,
      3521,
      3523,
      3525,
      3526,
      3531,
      3534,
      3538,
      3540,
      3543,
      3545,
      3546,
      3553,
      3555,
      3560,
      3561,
      3564,
      3566,
      3567,
      3570,
      3572,
      3574,
      3575,
      3580,
      3581,
      3586,
      3588,
      3589,
      3592,
      3594,
      3596,
      3597,
      3604,
      3606,
      3608,
      3609,
      3612,
      3614,
      3616,
      3617,
      3619,
      3621,
      3622,
      3627,
      3632,
      3637,
      3638,
      3643,
      3645,
      3647,
      3649,
      3651,
      3652,
      3657,
      3659,
      3661,
      3663,
      3665,
      3666,
      3668,
      3670,
      3671,
      3676,
      3680,
      3685,
      3686,
      3691,
      3693,
      3694,
      3697,
      3699,
      3700,
      3702,
      3704,
      3705,
      3710,
      3714,
      3718,
      3720,
      3723,
      3725,
      3726,
      3733,
      3736,
      3738,
      3739,
      3742,
      3744,
      3746,
      3747,
      3749,
      3751,
      3752,
      3756,
      3760,
      3765,
      3770,
      3771,
      3775,
      3779,
      3781,
      3783,
      3785,
      3787,
      3788,
      3790,
      3792,
      3793,
      3798,
      3802,
      3807,
      3808,
      3813,
      3815,
      3816,
      3819,
      3821,
      3822,
      3824,
      3826,
      3827
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Wash sink",
   "task_description": "I spray some cleaner and wait a minte or so then wipe it out.",
   "program": [
    "[Walk] <bathroom> (1)",
    "[Walk] <cleaning_solution> (1)",
    "[Find] <cleaning_solution> (1)",
    "[Grab] <cleaning_solution> (1)",
    "[Walk] <sink> (1)",
    "[Pour] <cleaning_solution> (1) <sink> (1)",
    "[PutObjBack] <cleaning_solution> (1)",
    "[Find] <rag> (1)",
    "[Grab] <rag> (1)",
    "[Walk] <sink> (1)",
    "[Wipe] <sink> (1)",
    "[Wipe] <sink> (1)",
    "[Wipe] <sink> (1)",
    "[PutObjBack] <rag> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_turk_third",
   "file_id": "split87_3",
   "goal_condition": [
    [
     [
      247,
      149,
      "INSIDE",
      "character",
      "bathroom"
     ],
     [
      1000,
      173,
      "INSIDE",
      "cleaning_solution",
      "sink"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1182,
   "completion_tokens": 177,
   "total_tokens": 1359
  }
 },
 "7": {
  "plan": [
   [
    " # 0: find bed\n find('bed')\n # 1: lay down on bed\n turnto('bed')\n lookat('bed')\n assert('close' to 'bed')\n else: find('bed')\n else: turnto('bed')\n sit('bed')\n sleep()",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " bed",
      "\n",
      " find",
      "('",
      "bed",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " lay",
      " down",
      " on",
      " bed",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "bed",
      "')",
      "\n",
      " look",
      "at",
      "('",
      "bed",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "bed",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "bed",
      "')",
      "\n",
      " else",
      ":",
      " tur",
      "nt",
      "o",
      "('",
      "bed",
      "')",
      "\n",
      " sit",
      "('",
      "bed",
      "')",
      "\n",
      " sleep",
      "()"
     ],
     "token_logprobs": [
      -0.25172493,
      -0.065768845,
      -0.0027549237,
      -0.81710327,
      -0.21849057,
      -0.018924221,
      -0.027347967,
      -0.003062305,
      -0.00048263065,
      -0.002216485,
      -0.008645325,
      -0.0035824773,
      -0.0021370987,
      -0.00046014716,
      -0.63073075,
      -0.0885085,
      -0.21852624,
      -0.04983263,
      -0.009205099,
      -0.2806633,
      -2.272356e-05,
      -0.00032407563,
      -0.0004795284,
      -8.650302e-05,
      -0.0008802835,
      -0.0035053738,
      -0.07479695,
      -0.00023309403,
      -0.0003566928,
      -0.00013216372,
      -0.0002760195,
      -0.0027437469,
      -0.02514723,
      -0.00050779217,
      -0.0012552998,
      -0.0013743065,
      -0.00023440628,
      -0.0007943191,
      -0.0001941635,
      -0.0023047237,
      -0.0031256224,
      -0.0006592172,
      -0.00077272824,
      -0.0028555815,
      -0.0007009111,
      -0.00013872207,
      -0.0011719288,
      -0.0030877162,
      -0.4153444,
      -0.0008243249,
      -0.0055645686,
      -2.5941252e-05,
      -0.00010927377,
      -0.00051447254,
      -0.00018248011,
      -0.0008942431,
      -0.0014384736,
      -0.10209988,
      -0.0003274144,
      -9.7471166e-05,
      -0.00080774265,
      -0.0050300066,
      -0.03528126,
      -0.0025451551
     ],
     "top_logprobs": [
      {
       " #": -0.25172493
      },
      {
       " 0": -0.065768845
      },
      {
       ":": -0.0027549237
      },
      {
       " find": -0.81710327
      },
      {
       " bed": -0.21849057
      },
      {
       "\n": -0.018924221
      },
      {
       " find": -0.027347967
      },
      {
       "('": -0.003062305
      },
      {
       "bed": -0.00048263065
      },
      {
       "')": -0.002216485
      },
      {
       "\n": -0.008645325
      },
      {
       " #": -0.0035824773
      },
      {
       " 1": -0.0021370987
      },
      {
       ":": -0.00046014716
      },
      {
       " lay": -0.63073075
      },
      {
       " down": -0.0885085
      },
      {
       " on": -0.21852624
      },
      {
       " bed": -0.04983263
      },
      {
       "\n": -0.009205099
      },
      {
       " tur": -0.2806633
      },
      {
       "nt": -2.272356e-05
      },
      {
       "o": -0.00032407563
      },
      {
       "('": -0.0004795284
      },
      {
       "bed": -8.650302e-05
      },
      {
       "')": -0.0008802835
      },
      {
       "\n": -0.0035053738
      },
      {
       " look": -0.07479695
      },
      {
       "at": -0.00023309403
      },
      {
       "('": -0.0003566928
      },
      {
       "bed": -0.00013216372
      },
      {
       "')": -0.0002760195
      },
      {
       "\n": -0.0027437469
      },
      {
       " assert": -0.02514723
      },
      {
       "('": -0.00050779217
      },
      {
       "close": -0.0012552998
      },
      {
       "'": -0.0013743065
      },
      {
       " to": -0.00023440628
      },
      {
       " '": -0.0007943191
      },
      {
       "bed": -0.0001941635
      },
      {
       "')": -0.0023047237
      },
      {
       "\n": -0.0031256224
      },
      {
       " else": -0.0006592172
      },
      {
       ":": -0.00077272824
      },
      {
       " find": -0.0028555815
      },
      {
       "('": -0.0007009111
      },
      {
       "bed": -0.00013872207
      },
      {
       "')": -0.0011719288
      },
      {
       "\n": -0.0030877162
      },
      {
       " else": -0.4153444
      },
      {
       ":": -0.0008243249
      },
      {
       " tur": -0.0055645686
      },
      {
       "nt": -2.5941252e-05
      },
      {
       "o": -0.00010927377
      },
      {
       "('": -0.00051447254
      },
      {
       "bed": -0.00018248011
      },
      {
       "')": -0.0008942431
      },
      {
       "\n": -0.0014384736
      },
      {
       " sit": -0.10209988
      },
      {
       "('": -0.0003274144
      },
      {
       "bed": -9.7471166e-05
      },
      {
       "')": -0.00080774265
      },
      {
       "\n": -0.0050300066
      },
      {
       " sleep": -0.03528126
      },
      {
       "()": -0.0025451551
      }
     ],
     "text_offset": [
      3369,
      3371,
      3373,
      3374,
      3379,
      3383,
      3384,
      3389,
      3391,
      3394,
      3396,
      3397,
      3399,
      3401,
      3402,
      3406,
      3411,
      3414,
      3418,
      3419,
      3423,
      3425,
      3426,
      3428,
      3431,
      3433,
      3434,
      3439,
      3441,
      3443,
      3446,
      3448,
      3449,
      3456,
      3458,
      3463,
      3464,
      3467,
      3469,
      3472,
      3474,
      3475,
      3480,
      3481,
      3486,
      3488,
      3491,
      3493,
      3494,
      3499,
      3500,
      3504,
      3506,
      3507,
      3509,
      3512,
      3514,
      3515,
      3519,
      3521,
      3524,
      3526,
      3527,
      3533
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Sleep",
   "task_description": "Lie down in a bed at night and fall asleep",
   "program": [
    "[Walk] <bedroom> (1)",
    "[Walk] <bed> (1)",
    "[Find] <bed> (1)",
    "[Lie] <bed> (1)",
    "[Sleep]"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_july",
   "file_id": "split22_2",
   "goal_condition": [
    [
     [
      247,
      194,
      "ON",
      "character",
      "bed"
     ],
     [
      247,
      189,
      "INSIDE",
      "character",
      "bedroom"
     ]
    ],
    [
     [
      247,
      "character",
      "LYING"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1179,
   "completion_tokens": 64,
   "total_tokens": 1243
  }
 },
 "8": {
  "plan": [
   [
    " # 0: find glasses\n find('glasses')\n # 1: grab glasses\n grab('glasses')\n assert('close' to 'glasses')\n else: find('glasses')\n # 2: put on glasses\n puton('glasses')\n assert('glasses' in 'hands')\n else: grab('glasses')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " glasses",
      "\n",
      " find",
      "('",
      "gl",
      "asses",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " grab",
      " glasses",
      "\n",
      " grab",
      "('",
      "gl",
      "asses",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "gl",
      "asses",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "gl",
      "asses",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " put",
      " on",
      " glasses",
      "\n",
      " put",
      "on",
      "('",
      "gl",
      "asses",
      "')",
      "\n",
      " assert",
      "('",
      "gl",
      "asses",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "gl",
      "asses",
      "')"
     ],
     "token_logprobs": [
      -0.017339591,
      -0.009362902,
      -0.0020875211,
      -0.19771701,
      -0.15560843,
      -0.03157108,
      -0.01651986,
      -0.002358254,
      -0.13674423,
      -0.0018101772,
      -0.00420802,
      -0.0083111655,
      -0.004264169,
      -0.0023982245,
      -0.000591883,
      -0.113946915,
      -0.07510261,
      -0.018022528,
      -0.82778317,
      -0.0014070758,
      -0.00046193527,
      -0.0013909019,
      -0.0016122478,
      -0.0050479206,
      -1.0331286,
      -0.0019278782,
      -1.4903406,
      -0.0029771724,
      -0.0011345734,
      -0.0031193448,
      -0.0011634555,
      -0.0014353112,
      -0.0068099415,
      -0.006205924,
      -0.0027583297,
      -0.0025733605,
      -0.019290874,
      -0.0018116105,
      -0.0009596314,
      -0.0010657149,
      -0.00327356,
      -0.006341719,
      -0.32459947,
      -0.006449215,
      -0.0009336777,
      -0.08511717,
      -0.23163807,
      -0.076165214,
      -0.018060217,
      -0.42818737,
      -0.0063564745,
      -0.0008936471,
      -0.00046992695,
      -0.0005383865,
      -0.002414834,
      -0.03696295,
      -0.8608064,
      -0.001788501,
      -0.08647393,
      -0.0012058873,
      -0.001913485,
      -0.056518156,
      -0.004060604,
      -0.5678449,
      -0.013743506,
      -0.004474476,
      -0.0019641262,
      -0.0034104527,
      -0.0058005694,
      -0.001934507,
      -0.000493718,
      -0.00035931446,
      -0.0022166052
     ],
     "top_logprobs": [
      {
       " #": -0.017339591
      },
      {
       " 0": -0.009362902
      },
      {
       ":": -0.0020875211
      },
      {
       " find": -0.19771701
      },
      {
       " glasses": -0.15560843
      },
      {
       "\n": -0.03157108
      },
      {
       " find": -0.01651986
      },
      {
       "('": -0.002358254
      },
      {
       "gl": -0.13674423
      },
      {
       "asses": -0.0018101772
      },
      {
       "')": -0.00420802
      },
      {
       "\n": -0.0083111655
      },
      {
       " #": -0.004264169
      },
      {
       " 1": -0.0023982245
      },
      {
       ":": -0.000591883
      },
      {
       " grab": -0.113946915
      },
      {
       " glasses": -0.07510261
      },
      {
       "\n": -0.018022528
      },
      {
       " assert": -0.59259653
      },
      {
       "('": -0.0014070758
      },
      {
       "gl": -0.00046193527
      },
      {
       "asses": -0.0013909019
      },
      {
       "')": -0.0016122478
      },
      {
       "\n": -0.0050479206
      },
      {
       " #": -0.51746273
      },
      {
       "('": -0.0019278782
      },
      {
       "gl": -0.26159987
      },
      {
       "'": -0.0029771724
      },
      {
       " to": -0.0011345734
      },
      {
       " '": -0.0031193448
      },
      {
       "gl": -0.0011634555
      },
      {
       "asses": -0.0014353112
      },
      {
       "')": -0.0068099415
      },
      {
       "\n": -0.006205924
      },
      {
       " else": -0.0027583297
      },
      {
       ":": -0.0025733605
      },
      {
       " find": -0.019290874
      },
      {
       "('": -0.0018116105
      },
      {
       "gl": -0.0009596314
      },
      {
       "asses": -0.0010657149
      },
      {
       "')": -0.00327356
      },
      {
       "\n": -0.006341719
      },
      {
       " #": -0.32459947
      },
      {
       " 2": -0.006449215
      },
      {
       ":": -0.0009336777
      },
      {
       " put": -0.08511717
      },
      {
       " on": -0.23163807
      },
      {
       " glasses": -0.076165214
      },
      {
       "\n": -0.018060217
      },
      {
       " put": -0.42818737
      },
      {
       "on": -0.0063564745
      },
      {
       "('": -0.0008936471
      },
      {
       "gl": -0.00046992695
      },
      {
       "asses": -0.0005383865
      },
      {
       "')": -0.002414834
      },
      {
       "\n": -0.03696295
      },
      {
       " #": -0.8255558
      },
      {
       "('": -0.001788501
      },
      {
       "gl": -0.08647393
      },
      {
       "asses": -0.0012058873
      },
      {
       "'": -0.001913485
      },
      {
       " in": -0.056518156
      },
      {
       " '": -0.004060604
      },
      {
       "hands": -0.5678449
      },
      {
       "')": -0.013743506
      },
      {
       "\n": -0.004474476
      },
      {
       " else": -0.0019641262
      },
      {
       ":": -0.0034104527
      },
      {
       " grab": -0.0058005694
      },
      {
       "('": -0.001934507
      },
      {
       "gl": -0.000493718
      },
      {
       "asses": -0.00035931446
      },
      {
       "')": -0.0022166052
      }
     ],
     "text_offset": [
      3378,
      3380,
      3382,
      3383,
      3388,
      3396,
      3397,
      3402,
      3404,
      3406,
      3411,
      3413,
      3414,
      3416,
      3418,
      3419,
      3424,
      3432,
      3433,
      3438,
      3440,
      3442,
      3447,
      3449,
      3450,
      3457,
      3459,
      3464,
      3465,
      3468,
      3470,
      3472,
      3477,
      3479,
      3480,
      3485,
      3486,
      3491,
      3493,
      3495,
      3500,
      3502,
      3503,
      3505,
      3507,
      3508,
      3512,
      3515,
      3523,
      3524,
      3528,
      3530,
      3532,
      3534,
      3539,
      3541,
      3542,
      3549,
      3551,
      3553,
      3558,
      3559,
      3562,
      3564,
      3569,
      3571,
      3572,
      3577,
      3578,
      3583,
      3585,
      3587,
      3592
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Put on glasses",
   "task_description": "Put on glasses.",
   "program": [
    "[Walk] <bedroom> (1)",
    "[Walk] <dresser> (1)",
    "[Find] <dresser> (1)",
    "[Find] <spectacles> (1)",
    "[Grab] <spectacles> (1)",
    "[PutOn] <spectacles> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_turk_third",
   "file_id": "split112_2",
   "goal_condition": [
    [
     [
      247,
      189,
      "INSIDE",
      "character",
      "bedroom"
     ],
     [
      1001,
      247,
      "ON",
      "spectacles",
      "character"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1184,
   "completion_tokens": 73,
   "total_tokens": 1257
  }
 },
 "9": {
  "plan": [
   [
    " # 0: find computer\n find('computer')\n # 1: turn on the computer\n assert('close' to 'computer')\n else: find('computer')\n switchon('computer')\n # 2: find mouse\n find('mouse')\n # 3: grab mouse\n assert('close' to 'mouse')\n else: find('mouse')\n grab('mouse')\n # 4: use mouse to interact with the computer\n touch('mouse')\n move('mouse')\n click('mouse')\n # 5: find keyboard\n find('keyboard')\n # 6: use keyboard to interact with the computer\n touch('keyboard')\n type('keyboard')\n press('keyboard')\n # 7: done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " computer",
      "\n",
      " find",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " turn",
      " on",
      " the",
      " computer",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "computer",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "computer",
      "')",
      "\n",
      " switch",
      "on",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " find",
      " mouse",
      "\n",
      " find",
      "('",
      "mouse",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " grab",
      " mouse",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "mouse",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "mouse",
      "')",
      "\n",
      " grab",
      "('",
      "mouse",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " use",
      " mouse",
      " to",
      " interact",
      " with",
      " the",
      " computer",
      "\n",
      " touch",
      "('",
      "mouse",
      "')",
      "\n",
      " move",
      "('",
      "mouse",
      "')",
      "\n",
      " click",
      "('",
      "mouse",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " find",
      " keyboard",
      "\n",
      " find",
      "('",
      "key",
      "board",
      "')",
      "\n",
      " #",
      " 6",
      ":",
      " use",
      " keyboard",
      " to",
      " interact",
      " with",
      " the",
      " computer",
      "\n",
      " touch",
      "('",
      "key",
      "board",
      "')",
      "\n",
      " type",
      "('",
      "key",
      "board",
      "')",
      "\n",
      " press",
      "('",
      "key",
      "board",
      "')",
      "\n",
      " #",
      " 7",
      ":",
      " done"
     ],
     "token_logprobs": [
      -0.022894435,
      -0.011024849,
      -0.0020743217,
      -0.97441137,
      -0.90719646,
      -0.035686016,
      -0.06529898,
      -0.0028124235,
      -0.0032574127,
      -0.0022537026,
      -0.00884537,
      -0.006015757,
      -0.0036715504,
      -0.0007300778,
      -1.284015,
      -0.06080653,
      -1.3279604,
      -0.02610755,
      -0.016105765,
      -0.6196327,
      -0.0018676817,
      -0.05454957,
      -0.0037749952,
      -0.0013576549,
      -0.0033174532,
      -0.0028698698,
      -0.0068634707,
      -0.005983199,
      -0.00203281,
      -0.0016283673,
      -0.003702661,
      -0.0019078719,
      -0.00087551045,
      -0.0029068112,
      -0.0071195303,
      -0.26520345,
      -0.0027042413,
      -0.001032957,
      -0.0013290665,
      -0.0016340376,
      -0.00604622,
      -0.04415484,
      -0.008696131,
      -0.00063858187,
      -0.5513858,
      -0.80523676,
      -0.14479007,
      -0.044718277,
      -0.0010558084,
      -0.00061848067,
      -0.0020509672,
      -0.0043046325,
      -0.029053587,
      -0.005505172,
      -0.00062170305,
      -0.7135521,
      -0.28045326,
      -0.08189228,
      -0.62196773,
      -0.0010290202,
      -0.008484573,
      -0.001805041,
      -0.0011790916,
      -0.0029043595,
      -0.0015852643,
      -0.0044960934,
      -0.0040844237,
      -0.0011521796,
      -0.0011073037,
      -0.00413799,
      -0.0012731435,
      -0.0010765732,
      -0.0014129244,
      -0.0050531314,
      -0.0059372084,
      -0.0011339772,
      -0.00023464282,
      -0.0013749044,
      -0.0052656434,
      -0.5733057,
      -0.008018513,
      -0.0010372541,
      -2.124433,
      -0.1402511,
      -0.24533194,
      -3.0432875,
      -0.05372362,
      -1.5191935,
      -0.04290062,
      -0.02066415,
      -4.1369104,
      -0.005321012,
      -0.0650209,
      -0.078692265,
      -0.220104,
      -1.1528704,
      -0.032848015,
      -0.004252675,
      -0.012724999,
      -0.1444843,
      -0.80035454,
      -0.0050391126,
      -0.0016497403,
      -0.0029069313,
      -0.40038487,
      -0.37803456,
      -0.0070547597,
      -0.0020498333,
      -2.2534688,
      -0.12253036,
      -0.019481696,
      -0.014989124,
      -0.0013153987,
      -0.00021538827,
      -0.0006487193,
      -0.0023693065,
      -0.0061727576,
      -0.008054385,
      -0.004543093,
      -0.0011499099,
      -1.2889724,
      -0.16407476,
      -0.11920128,
      -0.38172442,
      -0.021499166,
      -0.10681388,
      -0.002372653,
      -0.008007519,
      -0.5728524,
      -0.0007724888,
      -0.00070353557,
      -0.00060381147,
      -0.0030960278,
      -0.007352292,
      -0.19415337,
      -0.012598896,
      -0.0017801995,
      -0.0016139206,
      -0.0051520425,
      -0.7206512,
      -1.3760227,
      -0.017189259,
      -0.0036299757,
      -0.0006277846,
      -0.0041293134,
      -1.4065535,
      -0.10643147,
      -0.014515969,
      -0.0024795434,
      -2.2931092
     ],
     "top_logprobs": [
      {
       " #": -0.022894435
      },
      {
       " 0": -0.011024849
      },
      {
       ":": -0.0020743217
      },
      {
       " walk": -0.63053644
      },
      {
       " computer": -0.90719646
      },
      {
       "\n": -0.035686016
      },
      {
       " find": -0.06529898
      },
      {
       "('": -0.0028124235
      },
      {
       "computer": -0.0032574127
      },
      {
       "')": -0.0022537026
      },
      {
       "\n": -0.00884537
      },
      {
       " #": -0.006015757
      },
      {
       " 1": -0.0036715504
      },
      {
       ":": -0.0007300778
      },
      {
       " turn": -1.284015
      },
      {
       " on": -0.06080653
      },
      {
       " computer": -0.33914322
      },
      {
       " computer": -0.02610755
      },
      {
       "\n": -0.016105765
      },
      {
       " assert": -0.6196327
      },
      {
       "('": -0.0018676817
      },
      {
       "close": -0.05454957
      },
      {
       "'": -0.0037749952
      },
      {
       " to": -0.0013576549
      },
      {
       " '": -0.0033174532
      },
      {
       "computer": -0.0028698698
      },
      {
       "')": -0.0068634707
      },
      {
       "\n": -0.005983199
      },
      {
       " else": -0.00203281
      },
      {
       ":": -0.0016283673
      },
      {
       " find": -0.003702661
      },
      {
       "('": -0.0019078719
      },
      {
       "computer": -0.00087551045
      },
      {
       "')": -0.0029068112
      },
      {
       "\n": -0.0071195303
      },
      {
       " switch": -0.26520345
      },
      {
       "on": -0.0027042413
      },
      {
       "('": -0.001032957
      },
      {
       "computer": -0.0013290665
      },
      {
       "')": -0.0016340376
      },
      {
       "\n": -0.00604622
      },
      {
       " #": -0.04415484
      },
      {
       " 2": -0.008696131
      },
      {
       ":": -0.00063858187
      },
      {
       " find": -0.5513858
      },
      {
       " mouse": -0.80523676
      },
      {
       "\n": -0.14479007
      },
      {
       " find": -0.044718277
      },
      {
       "('": -0.0010558084
      },
      {
       "mouse": -0.00061848067
      },
      {
       "')": -0.0020509672
      },
      {
       "\n": -0.0043046325
      },
      {
       " #": -0.029053587
      },
      {
       " 3": -0.005505172
      },
      {
       ":": -0.00062170305
      },
      {
       " grab": -0.7135521
      },
      {
       " mouse": -0.28045326
      },
      {
       "\n": -0.08189228
      },
      {
       " assert": -0.62196773
      },
      {
       "('": -0.0010290202
      },
      {
       "close": -0.008484573
      },
      {
       "'": -0.001805041
      },
      {
       " to": -0.0011790916
      },
      {
       " '": -0.0029043595
      },
      {
       "mouse": -0.0015852643
      },
      {
       "')": -0.0044960934
      },
      {
       "\n": -0.0040844237
      },
      {
       " else": -0.0011521796
      },
      {
       ":": -0.0011073037
      },
      {
       " find": -0.00413799
      },
      {
       "('": -0.0012731435
      },
      {
       "mouse": -0.0010765732
      },
      {
       "')": -0.0014129244
      },
      {
       "\n": -0.0050531314
      },
      {
       " grab": -0.0059372084
      },
      {
       "('": -0.0011339772
      },
      {
       "mouse": -0.00023464282
      },
      {
       "')": -0.0013749044
      },
      {
       "\n": -0.0052656434
      },
      {
       " #": -0.5733057
      },
      {
       " 4": -0.008018513
      },
      {
       ":": -0.0010372541
      },
      {
       " move": -0.9223323
      },
      {
       " mouse": -0.1402511
      },
      {
       " to": -0.24533194
      },
      {
       " click": -1.6098026
      },
      {
       " with": -0.05372362
      },
      {
       " computer": -0.2811878
      },
      {
       " computer": -0.04290062
      },
      {
       "\n": -0.02066415
      },
      {
       " assert": -0.9259757
      },
      {
       "('": -0.005321012
      },
      {
       "mouse": -0.0650209
      },
      {
       "')": -0.078692265
      },
      {
       "\n": -0.220104
      },
      {
       " move": -1.1528704
      },
      {
       "('": -0.032848015
      },
      {
       "mouse": -0.004252675
      },
      {
       "')": -0.012724999
      },
      {
       "\n": -0.1444843
      },
      {
       " click": -0.80035454
      },
      {
       "('": -0.0050391126
      },
      {
       "mouse": -0.0016497403
      },
      {
       "')": -0.0029069313
      },
      {
       "\n": -0.40038487
      },
      {
       " #": -0.37803456
      },
      {
       " 5": -0.0070547597
      },
      {
       ":": -0.0020498333
      },
      {
       " Done": -0.3596129
      },
      {
       " keyboard": -0.12253036
      },
      {
       "\n": -0.019481696
      },
      {
       " find": -0.014989124
      },
      {
       "('": -0.0013153987
      },
      {
       "key": -0.00021538827
      },
      {
       "board": -0.0006487193
      },
      {
       "')": -0.0023693065
      },
      {
       "\n": -0.0061727576
      },
      {
       " #": -0.008054385
      },
      {
       " 6": -0.004543093
      },
      {
       ":": -0.0011499099
      },
      {
       " grab": -0.6522737
      },
      {
       " keyboard": -0.16407476
      },
      {
       " to": -0.11920128
      },
      {
       " interact": -0.38172442
      },
      {
       " with": -0.021499166
      },
      {
       " the": -0.10681388
      },
      {
       " computer": -0.002372653
      },
      {
       "\n": -0.008007519
      },
      {
       " touch": -0.5728524
      },
      {
       "('": -0.0007724888
      },
      {
       "key": -0.00070353557
      },
      {
       "board": -0.00060381147
      },
      {
       "')": -0.0030960278
      },
      {
       "\n": -0.007352292
      },
      {
       " type": -0.19415337
      },
      {
       "('": -0.012598896
      },
      {
       "key": -0.0017801995
      },
      {
       "board": -0.0016139206
      },
      {
       "')": -0.0051520425
      },
      {
       "<|endoftext|>": -0.69912285
      },
      {
       " #": -0.7800821
      },
      {
       "('": -0.017189259
      },
      {
       "key": -0.0036299757
      },
      {
       "board": -0.0006277846
      },
      {
       "')": -0.0041293134
      },
      {
       "<|endoftext|>": -0.2994321
      },
      {
       " #": -0.10643147
      },
      {
       " 7": -0.014515969
      },
      {
       ":": -0.0024795434
      },
      {
       " Done": -0.15625685
      }
     ],
     "text_offset": [
      3378,
      3380,
      3382,
      3383,
      3388,
      3397,
      3398,
      3403,
      3405,
      3413,
      3415,
      3416,
      3418,
      3420,
      3421,
      3426,
      3429,
      3433,
      3442,
      3443,
      3450,
      3452,
      3457,
      3458,
      3461,
      3463,
      3471,
      3473,
      3474,
      3479,
      3480,
      3485,
      3487,
      3495,
      3497,
      3498,
      3505,
      3507,
      3509,
      3517,
      3519,
      3520,
      3522,
      3524,
      3525,
      3530,
      3536,
      3537,
      3542,
      3544,
      3549,
      3551,
      3552,
      3554,
      3556,
      3557,
      3562,
      3568,
      3569,
      3576,
      3578,
      3583,
      3584,
      3587,
      3589,
      3594,
      3596,
      3597,
      3602,
      3603,
      3608,
      3610,
      3615,
      3617,
      3618,
      3623,
      3625,
      3630,
      3632,
      3633,
      3635,
      3637,
      3638,
      3642,
      3648,
      3651,
      3660,
      3665,
      3669,
      3678,
      3679,
      3685,
      3687,
      3692,
      3694,
      3695,
      3700,
      3702,
      3707,
      3709,
      3710,
      3716,
      3718,
      3723,
      3725,
      3726,
      3728,
      3730,
      3731,
      3736,
      3745,
      3746,
      3751,
      3753,
      3756,
      3761,
      3763,
      3764,
      3766,
      3768,
      3769,
      3773,
      3782,
      3785,
      3794,
      3799,
      3803,
      3812,
      3813,
      3819,
      3821,
      3824,
      3829,
      3831,
      3832,
      3837,
      3839,
      3842,
      3847,
      3849,
      3850,
      3856,
      3858,
      3861,
      3866,
      3868,
      3869,
      3871,
      3873,
      3874
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Start computer",
   "task_description": "Sit in desk chair, press power button, let computer power on",
   "program": [
    "[Walk] <home_office> (1)",
    "[Walk] <chair> (1)",
    "[Find] <chair> (1)",
    "[Sit] <chair> (1)",
    "[Find] <computer> (1)",
    "[TurnTo] <computer> (1)",
    "[LookAt] <computer> (1)",
    "[SwitchOn] <computer> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_kellensecond",
   "file_id": "split11_9",
   "goal_condition": [
    [
     [
      247,
      254,
      "ON",
      "character",
      "chair"
     ],
     [
      247,
      273,
      "FACING",
      "character",
      "computer"
     ],
     [
      247,
      248,
      "INSIDE",
      "character",
      "home_office"
     ]
    ],
    [
     [
      247,
      "character",
      "SITTING"
     ],
     [
      273,
      "computer",
      "ON"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1181,
   "completion_tokens": 150,
   "total_tokens": 1331
  }
 },
 "10": {
  "plan": [
   [
    " # 0: walk to bedroom\n walk('bedroom')\n # 1: find desk\n walk('desk')\n find('desk')\n # 2: find alarm clock\n find('alarm_clock')\n # 3: grab alarm clock\n grab('alarm_clock')\n # 4: put alarm clock on desk\n puton('alarm_clock', 'desk')\n # 5: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " bedroom",
      "\n",
      " walk",
      "('",
      "bedroom",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " desk",
      "\n",
      " walk",
      "('",
      "des",
      "k",
      "')",
      "\n",
      " find",
      "('",
      "des",
      "k",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " find",
      " alarm",
      " clock",
      "\n",
      " find",
      "('",
      "al",
      "arm",
      "_",
      "clock",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " grab",
      " alarm",
      " clock",
      "\n",
      " grab",
      "('",
      "al",
      "arm",
      "_",
      "clock",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " put",
      " alarm",
      " clock",
      " on",
      " desk",
      "\n",
      " put",
      "on",
      "('",
      "al",
      "arm",
      "_",
      "clock",
      "',",
      " '",
      "des",
      "k",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.02056923,
      -0.0090949,
      -0.0021405614,
      -0.8132224,
      -0.26943657,
      -0.07564242,
      -0.02123374,
      -0.0057621403,
      -0.0052603125,
      -0.0016865203,
      -0.0012157318,
      -0.009604734,
      -0.0033785151,
      -0.0031111552,
      -0.0005467358,
      -0.039257657,
      -2.5222337,
      -0.010785923,
      -0.28000176,
      -0.0006543287,
      -0.0032063464,
      -9.091469e-05,
      -0.0005711877,
      -0.002631508,
      -0.008010702,
      -0.00040355683,
      -0.0044381954,
      -0.00013323847,
      -0.00070639845,
      -0.005057385,
      -0.0021767605,
      -0.004452444,
      -0.00047290904,
      -0.100442104,
      -0.057805732,
      -0.08011315,
      -0.014566711,
      -0.015467768,
      -0.00067162147,
      -0.0034130847,
      -0.00014337122,
      -0.0236732,
      -0.0004225786,
      -0.0022042985,
      -0.004504892,
      -0.007200575,
      -0.005449074,
      -0.00073926337,
      -0.7917749,
      -0.43668875,
      -0.008844528,
      -0.034283705,
      -0.38075706,
      -0.0010752628,
      -0.00044106436,
      -7.255186e-05,
      -0.0033770802,
      -0.00032622044,
      -0.0020487567,
      -0.0052123168,
      -0.19867876,
      -0.008643762,
      -0.0009154238,
      -0.21313064,
      -0.19172147,
      -0.0045121377,
      -0.25109047,
      -0.45584765,
      -0.012641877,
      -0.99894834,
      -0.10231306,
      -0.0015311155,
      -0.09875333,
      -0.00031847187,
      -0.002836692,
      -0.0004367719,
      -1.1922154,
      -0.002834182,
      -0.0026156711,
      -3.869565e-05,
      -0.0016428749,
      -0.532283,
      -0.05561417,
      -0.006309087,
      -0.001725804,
      -0.71922845
     ],
     "top_logprobs": [
      {
       " #": -0.02056923
      },
      {
       " 0": -0.0090949
      },
      {
       ":": -0.0021405614
      },
      {
       " find": -0.74486214
      },
      {
       " to": -0.26943657
      },
      {
       " bedroom": -0.07564242
      },
      {
       "\n": -0.02123374
      },
      {
       " walk": -0.0057621403
      },
      {
       "('": -0.0052603125
      },
      {
       "bedroom": -0.0016865203
      },
      {
       "')": -0.0012157318
      },
      {
       "\n": -0.009604734
      },
      {
       " #": -0.0033785151
      },
      {
       " 1": -0.0031111552
      },
      {
       ":": -0.0005467358
      },
      {
       " find": -0.039257657
      },
      {
       " alarm": -0.30439174
      },
      {
       "\n": -0.010785923
      },
      {
       " walk": -0.28000176
      },
      {
       "('": -0.0006543287
      },
      {
       "des": -0.0032063464
      },
      {
       "k": -9.091469e-05
      },
      {
       "')": -0.0005711877
      },
      {
       "\n": -0.002631508
      },
      {
       " find": -0.008010702
      },
      {
       "('": -0.00040355683
      },
      {
       "des": -0.0044381954
      },
      {
       "k": -0.00013323847
      },
      {
       "')": -0.00070639845
      },
      {
       "\n": -0.005057385
      },
      {
       " #": -0.0021767605
      },
      {
       " 2": -0.004452444
      },
      {
       ":": -0.00047290904
      },
      {
       " find": -0.100442104
      },
      {
       " alarm": -0.057805732
      },
      {
       " clock": -0.08011315
      },
      {
       "\n": -0.014566711
      },
      {
       " find": -0.015467768
      },
      {
       "('": -0.00067162147
      },
      {
       "al": -0.0034130847
      },
      {
       "arm": -0.00014337122
      },
      {
       "_": -0.0236732
      },
      {
       "clock": -0.0004225786
      },
      {
       "')": -0.0022042985
      },
      {
       "\n": -0.004504892
      },
      {
       " #": -0.007200575
      },
      {
       " 3": -0.005449074
      },
      {
       ":": -0.00073926337
      },
      {
       " grab": -0.7917749
      },
      {
       " alarm": -0.43668875
      },
      {
       " clock": -0.008844528
      },
      {
       "\n": -0.034283705
      },
      {
       " grab": -0.38075706
      },
      {
       "('": -0.0010752628
      },
      {
       "al": -0.00044106436
      },
      {
       "arm": -7.255186e-05
      },
      {
       "_": -0.0033770802
      },
      {
       "clock": -0.00032622044
      },
      {
       "')": -0.0020487567
      },
      {
       "\n": -0.0052123168
      },
      {
       " #": -0.19867876
      },
      {
       " 4": -0.008643762
      },
      {
       ":": -0.0009154238
      },
      {
       " put": -0.21313064
      },
      {
       " alarm": -0.19172147
      },
      {
       " clock": -0.0045121377
      },
      {
       " on": -0.25109047
      },
      {
       " desk": -0.45584765
      },
      {
       "\n": -0.012641877
      },
      {
       " assert": -0.78134567
      },
      {
       "on": -0.10231306
      },
      {
       "('": -0.0015311155
      },
      {
       "al": -0.09875333
      },
      {
       "arm": -0.00031847187
      },
      {
       "_": -0.002836692
      },
      {
       "clock": -0.0004367719
      },
      {
       "')": -0.48928592
      },
      {
       " '": -0.002834182
      },
      {
       "des": -0.0026156711
      },
      {
       "k": -3.869565e-05
      },
      {
       "')": -0.0016428749
      },
      {
       "\n": -0.532283
      },
      {
       " #": -0.05561417
      },
      {
       " 5": -0.006309087
      },
      {
       ":": -0.001725804
      },
      {
       " Done": -0.71922845
      }
     ],
     "text_offset": [
      3390,
      3392,
      3394,
      3395,
      3400,
      3403,
      3411,
      3412,
      3417,
      3419,
      3426,
      3428,
      3429,
      3431,
      3433,
      3434,
      3439,
      3444,
      3445,
      3450,
      3452,
      3455,
      3456,
      3458,
      3459,
      3464,
      3466,
      3469,
      3470,
      3472,
      3473,
      3475,
      3477,
      3478,
      3483,
      3489,
      3495,
      3496,
      3501,
      3503,
      3505,
      3508,
      3509,
      3514,
      3516,
      3517,
      3519,
      3521,
      3522,
      3527,
      3533,
      3539,
      3540,
      3545,
      3547,
      3549,
      3552,
      3553,
      3558,
      3560,
      3561,
      3563,
      3565,
      3566,
      3570,
      3576,
      3582,
      3585,
      3590,
      3591,
      3595,
      3597,
      3599,
      3601,
      3604,
      3605,
      3610,
      3612,
      3614,
      3617,
      3618,
      3620,
      3621,
      3623,
      3625,
      3626
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Put alarm clock in bedroom",
   "task_description": "Take alarm clock. Sit it on stand, next to bed. Plug in alarm clock. Set time, according to watch. Set alarm, depending on what time you have to get up.",
   "program": [
    "[Walk] <bedroom> (1)",
    "[Walk] <alarm_clock> (1)",
    "[Find] <alarm_clock> (1)",
    "[Grab] <alarm_clock> (1)",
    "[Find] <dresser> (1)",
    "[Open] <dresser> (1)",
    "[PutBack] <alarm_clock> (1) <dresser> (1)",
    "[SwitchOn] <alarm_clock> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_kellensecond",
   "file_id": "split11_6",
   "goal_condition": [
    [
     [
      247,
      189,
      "INSIDE",
      "character",
      "bedroom"
     ],
     [
      1000,
      1001,
      "ON",
      "alarm_clock",
      "dresser"
     ]
    ],
    [
     [
      1001,
      "dresser",
      "OPEN"
     ],
     [
      1000,
      "alarm_clock",
      "ON"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1188,
   "completion_tokens": 86,
   "total_tokens": 1274
  }
 },
 "11": {
  "plan": [
   [
    " # 0: find chair\n find('chair')\n # 1: walk to chair\n walk('chair')\n # 2: sit in chair\n assert('close' to 'chair')\n else: find('chair')\n sit('chair')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " chair",
      "\n",
      " find",
      "('",
      "chair",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " walk",
      " to",
      " chair",
      "\n",
      " walk",
      "('",
      "chair",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " sit",
      " in",
      " chair",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "chair",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "chair",
      "')",
      "\n",
      " sit",
      "('",
      "chair",
      "')"
     ],
     "token_logprobs": [
      -0.02281857,
      -0.00860288,
      -0.0018331658,
      -0.6038982,
      -0.16345571,
      -0.027733406,
      -0.039576035,
      -0.0020071885,
      -0.0012114957,
      -0.0015272944,
      -0.007737251,
      -0.0037796611,
      -0.002695814,
      -0.00070019584,
      -0.6356085,
      -0.05858513,
      -0.12728453,
      -0.020716239,
      -0.40869266,
      -0.004668063,
      -0.0010249014,
      -0.001625263,
      -0.005842058,
      -0.073446855,
      -0.0044174204,
      -0.00080404343,
      -0.10251115,
      -0.58222926,
      -0.15864901,
      -0.009260142,
      -0.49680215,
      -0.0014182372,
      -0.013729427,
      -0.003099974,
      -0.0009240134,
      -0.0022340498,
      -0.000650988,
      -0.0040294845,
      -0.0038714458,
      -0.0015355338,
      -0.0011489544,
      -0.033551674,
      -0.0013658915,
      -0.0006570705,
      -0.0019903465,
      -0.0048894207,
      -0.34051222,
      -0.0017067596,
      -0.0005074364,
      -0.001107482
     ],
     "top_logprobs": [
      {
       " #": -0.02281857
      },
      {
       " 0": -0.00860288
      },
      {
       ":": -0.0018331658
      },
      {
       " find": -0.6038982
      },
      {
       " chair": -0.16345571
      },
      {
       "\n": -0.027733406
      },
      {
       " find": -0.039576035
      },
      {
       "('": -0.0020071885
      },
      {
       "chair": -0.0012114957
      },
      {
       "')": -0.0015272944
      },
      {
       "\n": -0.007737251
      },
      {
       " #": -0.0037796611
      },
      {
       " 1": -0.002695814
      },
      {
       ":": -0.00070019584
      },
      {
       " walk": -0.6356085
      },
      {
       " to": -0.05858513
      },
      {
       " chair": -0.12728453
      },
      {
       "\n": -0.020716239
      },
      {
       " walk": -0.40869266
      },
      {
       "('": -0.004668063
      },
      {
       "chair": -0.0010249014
      },
      {
       "')": -0.001625263
      },
      {
       "\n": -0.005842058
      },
      {
       " #": -0.073446855
      },
      {
       " 2": -0.0044174204
      },
      {
       ":": -0.00080404343
      },
      {
       " sit": -0.10251115
      },
      {
       " in": -0.58222926
      },
      {
       " chair": -0.15864901
      },
      {
       "\n": -0.009260142
      },
      {
       " assert": -0.49680215
      },
      {
       "('": -0.0014182372
      },
      {
       "close": -0.013729427
      },
      {
       "'": -0.003099974
      },
      {
       " to": -0.0009240134
      },
      {
       " '": -0.0022340498
      },
      {
       "chair": -0.000650988
      },
      {
       "')": -0.0040294845
      },
      {
       "\n": -0.0038714458
      },
      {
       " else": -0.0015355338
      },
      {
       ":": -0.0011489544
      },
      {
       " find": -0.033551674
      },
      {
       "('": -0.0013658915
      },
      {
       "chair": -0.0006570705
      },
      {
       "')": -0.0019903465
      },
      {
       "\n": -0.0048894207
      },
      {
       " sit": -0.34051222
      },
      {
       "('": -0.0017067596
      },
      {
       "chair": -0.0005074364
      },
      {
       "')": -0.001107482
      }
     ],
     "text_offset": [
      3376,
      3378,
      3380,
      3381,
      3386,
      3392,
      3393,
      3398,
      3400,
      3405,
      3407,
      3408,
      3410,
      3412,
      3413,
      3418,
      3421,
      3427,
      3428,
      3433,
      3435,
      3440,
      3442,
      3443,
      3445,
      3447,
      3448,
      3452,
      3455,
      3461,
      3462,
      3469,
      3471,
      3476,
      3477,
      3480,
      3482,
      3487,
      3489,
      3490,
      3495,
      3496,
      3501,
      3503,
      3508,
      3510,
      3511,
      3515,
      3517,
      3522
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Sit in chair",
   "task_description": "I sit in a chair to rest and eat.",
   "program": [
    "[Walk] <dining_room> (1)",
    "[Walk] <chair> (1)",
    "[Find] <chair> (1)",
    "[Pull] <chair> (1)",
    "[Sit] <chair> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_kellensecond",
   "file_id": "split8_7",
   "goal_condition": [
    [
     [
      247,
      60,
      "ON",
      "character",
      "chair"
     ],
     [
      247,
      1,
      "INSIDE",
      "character",
      "dining_room"
     ]
    ],
    [
     [
      247,
      "character",
      "SITTING"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1183,
   "completion_tokens": 50,
   "total_tokens": 1233
  }
 },
 "12": {
  "plan": [
   [
    " # 0: find alarm\n find('alarm')\n # 1: switch off alarm\n assert('close' to 'alarm')\n else: find('alarm')\n switchoff('alarm')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " alarm",
      "\n",
      " find",
      "('",
      "al",
      "arm",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " switch",
      " off",
      " alarm",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "al",
      "arm",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "al",
      "arm",
      "')",
      "\n",
      " switch",
      "off",
      "('",
      "al",
      "arm",
      "')"
     ],
     "token_logprobs": [
      -0.024352469,
      -0.013606641,
      -0.002631985,
      -0.30965254,
      -0.22456335,
      -0.58758587,
      -0.0322969,
      -0.002765385,
      -0.0050606197,
      -0.00025646458,
      -0.010836294,
      -0.01019407,
      -0.005021798,
      -0.004326245,
      -0.0009750853,
      -0.87598974,
      -0.09512517,
      -0.4640121,
      -0.019637786,
      -0.6405174,
      -0.0022107507,
      -0.022254484,
      -0.0038563665,
      -0.0010396382,
      -0.002155914,
      -0.0016438306,
      -0.00055544183,
      -0.006117405,
      -0.007141262,
      -0.002311235,
      -0.0019673523,
      -0.0038202277,
      -0.0013565801,
      -0.00052938296,
      -6.468596e-05,
      -0.0045301593,
      -0.007713946,
      -0.04103862,
      -0.007695626,
      -0.0010948947,
      -0.00044690748,
      -0.00016614476,
      -0.0021106973
     ],
     "top_logprobs": [
      {
       " #": -0.024352469
      },
      {
       " 0": -0.013606641
      },
      {
       ":": -0.002631985
      },
      {
       " find": -0.30965254
      },
      {
       " alarm": -0.22456335
      },
      {
       "\n": -0.58758587
      },
      {
       " find": -0.0322969
      },
      {
       "('": -0.002765385
      },
      {
       "al": -0.0050606197
      },
      {
       "arm": -0.00025646458
      },
      {
       "')": -0.010836294
      },
      {
       "\n": -0.01019407
      },
      {
       " #": -0.005021798
      },
      {
       " 1": -0.004326245
      },
      {
       ":": -0.0009750853
      },
      {
       " switch": -0.87598974
      },
      {
       " off": -0.09512517
      },
      {
       " alarm": -0.4640121
      },
      {
       "\n": -0.019637786
      },
      {
       " assert": -0.6405174
      },
      {
       "('": -0.0022107507
      },
      {
       "close": -0.022254484
      },
      {
       "'": -0.0038563665
      },
      {
       " to": -0.0010396382
      },
      {
       " '": -0.002155914
      },
      {
       "al": -0.0016438306
      },
      {
       "arm": -0.00055544183
      },
      {
       "')": -0.006117405
      },
      {
       "\n": -0.007141262
      },
      {
       " else": -0.002311235
      },
      {
       ":": -0.0019673523
      },
      {
       " find": -0.0038202277
      },
      {
       "('": -0.0013565801
      },
      {
       "al": -0.00052938296
      },
      {
       "arm": -6.468596e-05
      },
      {
       "')": -0.0045301593
      },
      {
       "\n": -0.007713946
      },
      {
       " switch": -0.04103862
      },
      {
       "off": -0.007695626
      },
      {
       "('": -0.0010948947
      },
      {
       "al": -0.00044690748
      },
      {
       "arm": -0.00016614476
      },
      {
       "')": -0.0021106973
      }
     ],
     "text_offset": [
      3378,
      3380,
      3382,
      3383,
      3388,
      3394,
      3395,
      3400,
      3402,
      3404,
      3407,
      3409,
      3410,
      3412,
      3414,
      3415,
      3422,
      3426,
      3432,
      3433,
      3440,
      3442,
      3447,
      3448,
      3451,
      3453,
      3455,
      3458,
      3460,
      3461,
      3466,
      3467,
      3472,
      3474,
      3476,
      3479,
      3481,
      3482,
      3489,
      3492,
      3494,
      3496,
      3499
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Shut off alarm",
   "task_description": "Shutting of the alarm clock",
   "program": [
    "[Walk] <bedroom> (1)",
    "[Walk] <alarm_clock> (1)",
    "[Find] <alarm_clock> (1)",
    "[Grab] <alarm_clock> (1)",
    "[SwitchOff] <alarm_clock> (1)",
    "[PutObjBack] <alarm_clock> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_kellensecond",
   "file_id": "split4_4",
   "goal_condition": [
    [
     [
      247,
      189,
      "INSIDE",
      "character",
      "bedroom"
     ]
    ],
    [
     [
      1000,
      "alarm_clock",
      "OFF"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1184,
   "completion_tokens": 43,
   "total_tokens": 1227
  }
 },
 "13": {
  "plan": [
   [
    " # 0: find bed\n find('bed')\n # 1: sit on the bed\n assert('close' to 'bed')\n else: find('bed')\n sit('bed')\n # 2: lie down on the bed\n lie('bed')\n # 3: sleep\n sleep()",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " bed",
      "\n",
      " find",
      "('",
      "bed",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " sit",
      " on",
      " the",
      " bed",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "bed",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "bed",
      "')",
      "\n",
      " sit",
      "('",
      "bed",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " lie",
      " down",
      " on",
      " the",
      " bed",
      "\n",
      " lie",
      "('",
      "bed",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " sleep",
      "\n",
      " sleep",
      "()"
     ],
     "token_logprobs": [
      -0.018925497,
      -0.010594645,
      -0.0020805919,
      -1.1271313,
      -0.51315826,
      -0.029728178,
      -0.19732939,
      -0.0021467744,
      -0.00035490093,
      -0.0016718914,
      -0.007143782,
      -0.0049202656,
      -0.003234869,
      -0.0006353595,
      -1.9595295,
      -0.09909326,
      -1.9074299,
      -0.0068721147,
      -0.015682986,
      -0.4718613,
      -0.0015264626,
      -0.0051823007,
      -0.0027346038,
      -0.0009791375,
      -0.0022194127,
      -0.00033355693,
      -0.0048203003,
      -0.005524709,
      -0.0014713621,
      -0.0015195354,
      -0.0042307065,
      -0.0017672452,
      -0.00032681835,
      -0.0009049231,
      -0.0056076045,
      -0.26034734,
      -0.0011594589,
      -0.00013776746,
      -0.0005441123,
      -0.005365236,
      -0.032009825,
      -0.0070884954,
      -0.00067209924,
      -0.72603047,
      -0.22590344,
      -0.54480714,
      -0.3670259,
      -0.00079169736,
      -0.010710311,
      -0.18346074,
      -0.023543028,
      -0.003503579,
      -0.0013156371,
      -0.004713516,
      -0.028094294,
      -0.0060566566,
      -0.00073234556,
      -1.6270216,
      -0.10287932,
      -0.026781749,
      -0.005038873
     ],
     "top_logprobs": [
      {
       " #": -0.018925497
      },
      {
       " 0": -0.010594645
      },
      {
       ":": -0.0020805919
      },
      {
       " walk": -0.6895265
      },
      {
       " bed": -0.51315826
      },
      {
       "\n": -0.029728178
      },
      {
       " find": -0.19732939
      },
      {
       "('": -0.0021467744
      },
      {
       "bed": -0.00035490093
      },
      {
       "')": -0.0016718914
      },
      {
       "\n": -0.007143782
      },
      {
       " #": -0.0049202656
      },
      {
       " 1": -0.003234869
      },
      {
       ":": -0.0006353595
      },
      {
       " lay": -0.5306908
      },
      {
       " on": -0.09909326
      },
      {
       " bed": -0.17175016
      },
      {
       " bed": -0.0068721147
      },
      {
       "\n": -0.015682986
      },
      {
       " assert": -0.4718613
      },
      {
       "('": -0.0015264626
      },
      {
       "close": -0.0051823007
      },
      {
       "'": -0.0027346038
      },
      {
       " to": -0.0009791375
      },
      {
       " '": -0.0022194127
      },
      {
       "bed": -0.00033355693
      },
      {
       "')": -0.0048203003
      },
      {
       "\n": -0.005524709
      },
      {
       " else": -0.0014713621
      },
      {
       ":": -0.0015195354
      },
      {
       " find": -0.0042307065
      },
      {
       "('": -0.0017672452
      },
      {
       "bed": -0.00032681835
      },
      {
       "')": -0.0009049231
      },
      {
       "\n": -0.0056076045
      },
      {
       " sit": -0.26034734
      },
      {
       "('": -0.0011594589
      },
      {
       "bed": -0.00013776746
      },
      {
       "')": -0.0005441123
      },
      {
       "\n": -0.005365236
      },
      {
       " #": -0.032009825
      },
      {
       " 2": -0.0070884954
      },
      {
       ":": -0.00067209924
      },
      {
       " lie": -0.72603047
      },
      {
       " down": -0.22590344
      },
      {
       " on": -0.54480714
      },
      {
       " the": -0.3670259
      },
      {
       " bed": -0.00079169736
      },
      {
       "\n": -0.010710311
      },
      {
       " lie": -0.18346074
      },
      {
       "('": -0.023543028
      },
      {
       "bed": -0.003503579
      },
      {
       "')": -0.0013156371
      },
      {
       "\n": -0.004713516
      },
      {
       " #": -0.028094294
      },
      {
       " 3": -0.0060566566
      },
      {
       ":": -0.00073234556
      },
      {
       " close": -0.55490667
      },
      {
       "\n": -0.10287932
      },
      {
       " sleep": -0.026781749
      },
      {
       "()": -0.005038873
      }
     ],
     "text_offset": [
      3372,
      3374,
      3376,
      3377,
      3382,
      3386,
      3387,
      3392,
      3394,
      3397,
      3399,
      3400,
      3402,
      3404,
      3405,
      3409,
      3412,
      3416,
      3420,
      3421,
      3428,
      3430,
      3435,
      3436,
      3439,
      3441,
      3444,
      3446,
      3447,
      3452,
      3453,
      3458,
      3460,
      3463,
      3465,
      3466,
      3470,
      3472,
      3475,
      3477,
      3478,
      3480,
      3482,
      3483,
      3487,
      3492,
      3495,
      3499,
      3503,
      3504,
      3508,
      3510,
      3513,
      3515,
      3516,
      3518,
      3520,
      3521,
      3527,
      3528,
      3534
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Take nap",
   "task_description": "Sleep for a short amount of time during the day",
   "program": [
    "[Walk] <bedroom> (1)",
    "[Walk] <bed> (1)",
    "[Find] <bed> (1)",
    "[Lie] <bed> (1)",
    "[Sleep]"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_july",
   "file_id": "split6_5",
   "goal_condition": [
    [
     [
      247,
      194,
      "ON",
      "character",
      "bed"
     ],
     [
      247,
      189,
      "INSIDE",
      "character",
      "bedroom"
     ]
    ],
    [
     [
      247,
      "character",
      "LYING"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1182,
   "completion_tokens": 61,
   "total_tokens": 1243
  }
 },
 "14": {
  "plan": [
   [
    " # 0: walk to home office\n walk('home_office')\n # 1: find computer\n find('computer')\n # 2: turn on the computer\n switchon('computer')\n # 3: sit on chair\n find('chair')\n sit('chair')\n # 4: touch the mousepad\n touch('mousepad')\n # 5: use the mouse\n find('mouse')\n grab('mouse')\n # 6: use the keyboard\n find('keyboard')\n grab('keyboard')\n # 7: look at the computer screen\n lookat('computer_screen')\ndef wash_dishes():\n # 0: find sink\n find('sink')\n # 1: get water\n turnto('sink')\n lookat('sink')\n # 2: find dishwasher\n find('dishwasher')\n # 3: fill dishwasher with water\n turnon('dishwasher')\n # 4: add soap\n add('soap')\n # 5: put dishes in dishwasher\n putin('dishes','dishwasher')\n # 6: turn on the dishwasher\n turnon('dishwasher')\n # 7: wait for dishwasher to finish\n wait()\n # 8: remove dishes\n pull('dishes','dishwasher')\n # 9: turn off dishwasher\n turnoff('dishwasher')\n # 10: put dishes away\n putback('dishes','cupboard')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " home",
      " office",
      "\n",
      " walk",
      "('",
      "home",
      "_",
      "office",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " computer",
      "\n",
      " find",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " turn",
      " on",
      " the",
      " computer",
      "\n",
      " switch",
      "on",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " sit",
      " on",
      " chair",
      "\n",
      " find",
      "('",
      "chair",
      "')",
      "\n",
      " sit",
      "('",
      "chair",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " touch",
      " the",
      " mouse",
      "pad",
      "\n",
      " touch",
      "('",
      "mouse",
      "pad",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " use",
      " the",
      " mouse",
      "\n",
      " find",
      "('",
      "mouse",
      "')",
      "\n",
      " grab",
      "('",
      "mouse",
      "')",
      "\n",
      " #",
      " 6",
      ":",
      " use",
      " the",
      " keyboard",
      "\n",
      " find",
      "('",
      "key",
      "board",
      "')",
      "\n",
      " grab",
      "('",
      "key",
      "board",
      "')",
      "\n",
      " #",
      " 7",
      ":",
      " look",
      " at",
      " the",
      " computer",
      " screen",
      "\n",
      " look",
      "at",
      "('",
      "computer",
      "_",
      "screen",
      "')",
      "\n",
      "def",
      " wash",
      "_",
      "d",
      "ishes",
      "():",
      "\n",
      " #",
      " 0",
      ":",
      " find",
      " sink",
      "\n",
      " find",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " get",
      " water",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " look",
      "at",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " find",
      " dish",
      "washer",
      "\n",
      " find",
      "('",
      "d",
      "ish",
      "washer",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " fill",
      " dish",
      "washer",
      " with",
      " water",
      "\n",
      " turn",
      "on",
      "('",
      "d",
      "ish",
      "washer",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " add",
      " soap",
      "\n",
      " add",
      "('",
      "so",
      "ap",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " put",
      " dishes",
      " in",
      " dish",
      "washer",
      "\n",
      " put",
      "in",
      "('",
      "d",
      "ishes",
      "','",
      "d",
      "ish",
      "washer",
      "')",
      "\n",
      " #",
      " 6",
      ":",
      " turn",
      " on",
      " the",
      " dish",
      "washer",
      "\n",
      " turn",
      "on",
      "('",
      "d",
      "ish",
      "washer",
      "')",
      "\n",
      " #",
      " 7",
      ":",
      " wait",
      " for",
      " dish",
      "washer",
      " to",
      " finish",
      "\n",
      " wait",
      "()",
      "\n",
      " #",
      " 8",
      ":",
      " remove",
      " dishes",
      "\n",
      " pull",
      "('",
      "d",
      "ishes",
      "','",
      "d",
      "ish",
      "washer",
      "')",
      "\n",
      " #",
      " 9",
      ":",
      " turn",
      " off",
      " dish",
      "washer",
      "\n",
      " turn",
      "off",
      "('",
      "d",
      "ish",
      "washer",
      "')",
      "\n",
      " #",
      " 10",
      ":",
      " put",
      " dishes",
      " away",
      "\n",
      " put",
      "back",
      "('",
      "d",
      "ishes",
      "','",
      "cup",
      "board",
      "')"
     ],
     "token_logprobs": [
      -0.019156653,
      -0.007353613,
      -0.0017770954,
      -0.32672292,
      -0.2658616,
      -0.5502787,
      -0.051760383,
      -0.024377264,
      -0.0065464643,
      -0.0049224226,
      -0.011745886,
      -0.035694048,
      -0.00084359536,
      -0.0027038828,
      -0.008393569,
      -0.0038240564,
      -0.0031996493,
      -0.0006695977,
      -0.04140217,
      -0.46253377,
      -0.033348776,
      -0.25197604,
      -0.0013518042,
      -0.0018452883,
      -0.0019748765,
      -0.0057606413,
      -0.010223576,
      -0.005035938,
      -0.00081692834,
      -0.54653543,
      -0.0307642,
      -0.78045756,
      -0.007965101,
      -0.013786591,
      -1.2731886,
      -0.0041572032,
      -0.0013508496,
      -0.0017238945,
      -0.001890734,
      -0.0046700398,
      -0.018768426,
      -0.0038855677,
      -0.0006057206,
      -1.4819591,
      -0.80704993,
      -0.7769377,
      -0.07939339,
      -0.19586873,
      -0.0015088517,
      -0.0020733671,
      -0.0017839035,
      -0.004129672,
      -0.6402921,
      -0.002121211,
      -0.0011395275,
      -0.00055186276,
      -0.0046159653,
      -0.006811502,
      -0.0067261094,
      -0.0006182413,
      -2.4771097,
      -0.31607133,
      -0.9247191,
      -2.6142416,
      -0.068931416,
      -1.2180904,
      -0.001680728,
      -0.0013874401,
      -0.0059351693,
      -0.0017637815,
      -0.010275726,
      -0.0104777245,
      -0.0053398875,
      -0.00087312347,
      -0.8842835,
      -0.17899807,
      -2.1009152,
      -0.28890195,
      -1.031494,
      -0.0010605833,
      -0.0006401316,
      -0.0031056546,
      -0.009637532,
      -0.35479024,
      -0.0009500853,
      -0.00024036579,
      -0.0016514121,
      -0.014360197,
      -0.7901061,
      -0.007268297,
      -0.0014606201,
      -0.48348552,
      -0.095120184,
      -0.049721867,
      -0.012147807,
      -0.111207314,
      -0.0010536597,
      -0.00050290365,
      -0.0012106603,
      -0.0017243724,
      -0.007755032,
      -0.4910251,
      -0.00052973966,
      -0.0004894227,
      -0.0014116121,
      -0.0017750652,
      -0.05834222,
      -0.068247095,
      -0.013187708,
      -0.0018287484,
      -2.057559,
      -0.010231345,
      -0.14694741,
      -0.5950229,
      -0.17654455,
      -0.008955241,
      -1.7738136,
      -0.0056179143,
      -0.0008973453,
      -0.47105604,
      -0.41657135,
      -0.0023915318,
      -0.0027984374,
      -0.39669302,
      -1.701814,
      -1.908556,
      -0.0005350468,
      -0.62121975,
      -0.0038962788,
      -0.049144454,
      -0.015002617,
      -0.011483514,
      -0.0036332058,
      -0.0015121934,
      -2.1240036,
      -0.99085593,
      -0.027245367,
      -0.13531418,
      -0.00154849,
      -0.0007526251,
      -0.00011726356,
      -0.0013840967,
      -0.0067951195,
      -0.009520788,
      -0.0020883575,
      -0.00049037737,
      -4.5448146,
      -1.8284266,
      -0.5140953,
      -2.4288201,
      -0.00010402765,
      -0.0017303432,
      -0.00076604687,
      -0.45206735,
      -0.00014074863,
      -0.004373597,
      -0.0049882536,
      -1.0499097,
      -0.0005200772,
      -0.0005064818,
      -0.019506011,
      -0.00017902305,
      -0.0023685894,
      -0.005478021,
      -2.430698,
      -0.0069554215,
      -0.0009624952,
      -2.3478978,
      -1.0091428,
      -1.2819026,
      -0.042590883,
      -0.0453391,
      -0.0010485902,
      -0.00060357206,
      -9.305951e-05,
      -0.00310129,
      -0.0020897898,
      -0.0068367086,
      -0.04337166,
      -0.004894986,
      -0.0008977048,
      -1.6015382,
      -0.7903365,
      -0.033062324,
      -0.39777333,
      -0.32963738,
      -0.022696927,
      -4.631912,
      -0.052930135,
      -0.0022708478,
      -0.7439547,
      -0.015399669,
      -0.0030335477,
      -0.0059736036,
      -0.00788856,
      -1.7030523,
      -0.0042618336,
      -0.0009300986,
      -2.0613759,
      -2.720708,
      -0.13257644,
      -1.3621637,
      -0.36461952,
      -0.11108782,
      -0.0004225786,
      -0.110578194,
      -0.010652174,
      -0.031641208,
      -0.0021100985,
      -0.00052568375,
      -1.3115721,
      -0.1685309,
      -0.14194657,
      -0.32932872,
      -0.013044035,
      -0.013582653,
      -0.8835711,
      -0.26521054,
      -0.0036565976,
      -0.030841773,
      -0.2891721,
      -1.7271421,
      -0.0014390715,
      -0.00010057153,
      -0.0017117729,
      -0.0024885677,
      -0.012085421,
      -0.007426211,
      -0.0027019095,
      -0.0008066679,
      -0.85249263,
      -0.048021764,
      -1.5278808,
      -0.007538749,
      -0.010510733,
      -0.01768455,
      -0.38614282,
      -0.0004869231,
      -0.0007863274,
      -0.00020477588,
      -0.0005581845,
      -0.0007666419,
      -0.001380635,
      -0.008564948,
      -0.004095855,
      -0.0051870323,
      -0.0011721682,
      -0.3686603,
      -0.3112354,
      -0.9222373,
      -0.033107053,
      -0.12080217,
      -0.030397007,
      -0.0383507,
      -0.106326655,
      -2.189717,
      -0.02128135,
      -0.008761128,
      -0.0012877658,
      -0.0013510891,
      -2.3647468,
      -0.0704192,
      -1.1697919,
      -1.5764413,
      -0.5182674,
      -0.0013757398,
      -0.009755135,
      -1.047875,
      -0.0027848694,
      -0.00012357882,
      -0.0015158944,
      -0.0029071704,
      -0.031102996,
      -0.00967605,
      -0.003578409,
      -0.0017804388,
      -1.5359765,
      -0.010483267,
      -0.6645838,
      -0.0037278496,
      -0.01769244,
      -0.07978096,
      -0.0024412447,
      -0.00085993914,
      -0.00016066022,
      -7.8634315e-05,
      -0.0012758881,
      -0.0067300093,
      -0.11074598,
      -0.0093040615,
      -0.007064364,
      -0.0024827695,
      -1.4468551,
      -0.07986669,
      -0.3825119,
      -0.023938235,
      -0.06170544,
      -0.4896134,
      -0.0018196115,
      -0.0006722194,
      -0.0018551423,
      -1.1367638,
      -1.1455908,
      -0.0038362634,
      -0.0043753954
     ],
     "top_logprobs": [
      {
       " #": -0.019156653
      },
      {
       " 0": -0.007353613
      },
      {
       ":": -0.0017770954
      },
      {
       " walk": -0.32672292
      },
      {
       " to": -0.2658616
      },
      {
       " home": -0.5502787
      },
      {
       " office": -0.051760383
      },
      {
       "\n": -0.024377264
      },
      {
       " walk": -0.0065464643
      },
      {
       "('": -0.0049224226
      },
      {
       "home": -0.011745886
      },
      {
       "_": -0.035694048
      },
      {
       "office": -0.00084359536
      },
      {
       "')": -0.0027038828
      },
      {
       "\n": -0.008393569
      },
      {
       " #": -0.0038240564
      },
      {
       " 1": -0.0031996493
      },
      {
       ":": -0.0006695977
      },
      {
       " find": -0.04140217
      },
      {
       " computer": -0.46253377
      },
      {
       "\n": -0.033348776
      },
      {
       " find": -0.25197604
      },
      {
       "('": -0.0013518042
      },
      {
       "computer": -0.0018452883
      },
      {
       "')": -0.0019748765
      },
      {
       "\n": -0.0057606413
      },
      {
       " #": -0.010223576
      },
      {
       " 2": -0.005035938
      },
      {
       ":": -0.00081692834
      },
      {
       " turn": -0.54653543
      },
      {
       " on": -0.0307642
      },
      {
       " computer": -0.629016
      },
      {
       " computer": -0.007965101
      },
      {
       "\n": -0.013786591
      },
      {
       " assert": -0.56756395
      },
      {
       "on": -0.0041572032
      },
      {
       "('": -0.0013508496
      },
      {
       "computer": -0.0017238945
      },
      {
       "')": -0.001890734
      },
      {
       "\n": -0.0046700398
      },
      {
       " #": -0.018768426
      },
      {
       " 3": -0.0038855677
      },
      {
       ":": -0.0006057206
      },
      {
       " find": -0.75336134
      },
      {
       " on": -0.80704993
      },
      {
       " chair": -0.7769377
      },
      {
       "\n": -0.07939339
      },
      {
       " find": -0.19586873
      },
      {
       "('": -0.0015088517
      },
      {
       "chair": -0.0020733671
      },
      {
       "')": -0.0017839035
      },
      {
       "\n": -0.004129672
      },
      {
       " sit": -0.6402921
      },
      {
       "('": -0.002121211
      },
      {
       "chair": -0.0011395275
      },
      {
       "')": -0.00055186276
      },
      {
       "\n": -0.0046159653
      },
      {
       " #": -0.006811502
      },
      {
       " 4": -0.0067261094
      },
      {
       ":": -0.0006182413
      },
      {
       " use": -1.1652181
      },
      {
       " the": -0.31607133
      },
      {
       " keyboard": -0.84972966
      },
      {
       "\n": -0.21448343
      },
      {
       "\n": -0.068931416
      },
      {
       " assert": -0.81980455
      },
      {
       "('": -0.001680728
      },
      {
       "mouse": -0.0013874401
      },
      {
       "pad": -0.0059351693
      },
      {
       "')": -0.0017637815
      },
      {
       "\n": -0.010275726
      },
      {
       " #": -0.0104777245
      },
      {
       " 5": -0.0053398875
      },
      {
       ":": -0.00087312347
      },
      {
       " use": -0.8842835
      },
      {
       " the": -0.17899807
      },
      {
       " keyboard": -0.7336371
      },
      {
       "\n": -0.28890195
      },
      {
       " grab": -0.8826778
      },
      {
       "('": -0.0010605833
      },
      {
       "mouse": -0.0006401316
      },
      {
       "')": -0.0031056546
      },
      {
       "\n": -0.009637532
      },
      {
       " grab": -0.35479024
      },
      {
       "('": -0.0009500853
      },
      {
       "mouse": -0.00024036579
      },
      {
       "')": -0.0016514121
      },
      {
       "\n": -0.014360197
      },
      {
       " #": -0.7901061
      },
      {
       " 6": -0.007268297
      },
      {
       ":": -0.0014606201
      },
      {
       " use": -0.48348552
      },
      {
       " the": -0.095120184
      },
      {
       " keyboard": -0.049721867
      },
      {
       "\n": -0.012147807
      },
      {
       " find": -0.111207314
      },
      {
       "('": -0.0010536597
      },
      {
       "key": -0.00050290365
      },
      {
       "board": -0.0012106603
      },
      {
       "')": -0.0017243724
      },
      {
       "\n": -0.007755032
      },
      {
       " grab": -0.4910251
      },
      {
       "('": -0.00052973966
      },
      {
       "key": -0.0004894227
      },
      {
       "board": -0.0014116121
      },
      {
       "')": -0.0017750652
      },
      {
       "\n": -0.05834222
      },
      {
       " #": -0.068247095
      },
      {
       " 7": -0.013187708
      },
      {
       ":": -0.0018287484
      },
      {
       " use": -1.2117367
      },
      {
       " at": -0.010231345
      },
      {
       " the": -0.14694741
      },
      {
       " computer": -0.5950229
      },
      {
       " screen": -0.17654455
      },
      {
       "\n": -0.008955241
      },
      {
       " tur": -0.23294292
      },
      {
       "at": -0.0056179143
      },
      {
       "('": -0.0008973453
      },
      {
       "computer": -0.47105604
      },
      {
       "_": -0.41657135
      },
      {
       "screen": -0.0023915318
      },
      {
       "')": -0.0027984374
      },
      {
       "\n": -0.39669302
      },
      {
       " #": -0.25877312
      },
      {
       " make": -1.2550486
      },
      {
       "_": -0.0005350468
      },
      {
       "d": -0.62121975
      },
      {
       "ishes": -0.0038962788
      },
      {
       "():": -0.049144454
      },
      {
       "\n": -0.015002617
      },
      {
       " #": -0.011483514
      },
      {
       " 0": -0.0036332058
      },
      {
       ":": -0.0015121934
      },
      {
       " walk": -0.18211494
      },
      {
       " sink": -0.99085593
      },
      {
       "\n": -0.027245367
      },
      {
       " find": -0.13531418
      },
      {
       "('": -0.00154849
      },
      {
       "s": -0.0007526251
      },
      {
       "ink": -0.00011726356
      },
      {
       "')": -0.0013840967
      },
      {
       "\n": -0.0067951195
      },
      {
       " #": -0.009520788
      },
      {
       " 1": -0.0020883575
      },
      {
       ":": -0.00049037737
      },
      {
       " find": -1.3179432
      },
      {
       " dish": -1.3954995
      },
      {
       "\n": -0.5140953
      },
      {
       " turn": -1.6698277
      },
      {
       "nt": -0.00010402765
      },
      {
       "o": -0.0017303432
      },
      {
       "('": -0.00076604687
      },
      {
       "s": -0.45206735
      },
      {
       "ink": -0.00014074863
      },
      {
       "')": -0.004373597
      },
      {
       "\n": -0.0049882536
      },
      {
       " look": -1.0499097
      },
      {
       "at": -0.0005200772
      },
      {
       "('": -0.0005064818
      },
      {
       "s": -0.019506011
      },
      {
       "ink": -0.00017902305
      },
      {
       "')": -0.0023685894
      },
      {
       "\n": -0.005478021
      },
      {
       " assert": -1.6554865
      },
      {
       " 2": -0.0069554215
      },
      {
       ":": -0.0009624952
      },
      {
       " get": -1.4219992
      },
      {
       " dish": -1.0091428
      },
      {
       " soap": -1.2278453
      },
      {
       "\n": -0.042590883
      },
      {
       " find": -0.0453391
      },
      {
       "('": -0.0010485902
      },
      {
       "d": -0.00060357206
      },
      {
       "ish": -9.305951e-05
      },
      {
       "washer": -0.00310129
      },
      {
       "')": -0.0020897898
      },
      {
       "\n": -0.0068367086
      },
      {
       " #": -0.04337166
      },
      {
       " 3": -0.004894986
      },
      {
       ":": -0.0008977048
      },
      {
       " open": -1.4955993
      },
      {
       " dish": -0.7903365
      },
      {
       "washer": -0.033062324
      },
      {
       " with": -0.39777333
      },
      {
       " water": -0.32963738
      },
      {
       "\n": -0.022696927
      },
      {
       " pour": -0.8411665
      },
      {
       "on": -0.052930135
      },
      {
       "('": -0.0022708478
      },
      {
       "d": -0.7439547
      },
      {
       "ish": -0.015399669
      },
      {
       "washer": -0.0030335477
      },
      {
       "')": -0.0059736036
      },
      {
       "\n": -0.00788856
      },
      {
       " pour": -0.9124294
      },
      {
       " 4": -0.0042618336
      },
      {
       ":": -0.0009300986
      },
      {
       " put": -1.1879387
      },
      {
       " deter": -0.31003207
      },
      {
       "\n": -0.13257644
      },
      {
       " add": -1.3621637
      },
      {
       "('": -0.36461952
      },
      {
       "so": -0.11108782
      },
      {
       "ap": -0.0004225786
      },
      {
       "')": -0.110578194
      },
      {
       "\n": -0.010652174
      },
      {
       " #": -0.031641208
      },
      {
       " 5": -0.0021100985
      },
      {
       ":": -0.00052568375
      },
      {
       " put": -1.3115721
      },
      {
       " dishes": -0.1685309
      },
      {
       " in": -0.14194657
      },
      {
       " dish": -0.32932872
      },
      {
       "washer": -0.013044035
      },
      {
       "\n": -0.013582653
      },
      {
       " put": -0.8835711
      },
      {
       "in": -0.26521054
      },
      {
       "('": -0.0036565976
      },
      {
       "d": -0.030841773
      },
      {
       "ishes": -0.2891721
      },
      {
       "',": -0.58552337
      },
      {
       "d": -0.0014390715
      },
      {
       "ish": -0.00010057153
      },
      {
       "washer": -0.0017117729
      },
      {
       "')": -0.0024885677
      },
      {
       "\n": -0.012085421
      },
      {
       " #": -0.007426211
      },
      {
       " 6": -0.0027019095
      },
      {
       ":": -0.0008066679
      },
      {
       " turn": -0.85249263
      },
      {
       " on": -0.048021764
      },
      {
       " dish": -0.26175898
      },
      {
       " dish": -0.007538749
      },
      {
       "washer": -0.010510733
      },
      {
       "\n": -0.01768455
      },
      {
       " turn": -0.38614282
      },
      {
       "on": -0.0004869231
      },
      {
       "('": -0.0007863274
      },
      {
       "d": -0.00020477588
      },
      {
       "ish": -0.0005581845
      },
      {
       "washer": -0.0007666419
      },
      {
       "')": -0.001380635
      },
      {
       "\n": -0.008564948
      },
      {
       " #": -0.004095855
      },
      {
       " 7": -0.0051870323
      },
      {
       ":": -0.0011721682
      },
      {
       " wait": -0.3686603
      },
      {
       " for": -0.3112354
      },
      {
       " dish": -0.9222373
      },
      {
       "washer": -0.033107053
      },
      {
       " to": -0.12080217
      },
      {
       " finish": -0.030397007
      },
      {
       "\n": -0.0383507
      },
      {
       " wait": -0.106326655
      },
      {
       "('": -0.28142232
      },
      {
       "\n": -0.02128135
      },
      {
       " #": -0.008761128
      },
      {
       " 8": -0.0012877658
      },
      {
       ":": -0.0013510891
      },
      {
       " take": -0.5507267
      },
      {
       " dishes": -0.0704192
      },
      {
       " from": -0.42181185
      },
      {
       " remove": -0.7758946
      },
      {
       "('": -0.5182674
      },
      {
       "d": -0.0013757398
      },
      {
       "ishes": -0.009755135
      },
      {
       "')": -0.49324667
      },
      {
       "d": -0.0027848694
      },
      {
       "ish": -0.00012357882
      },
      {
       "washer": -0.0015158944
      },
      {
       "')": -0.0029071704
      },
      {
       "\n": -0.031102996
      },
      {
       " #": -0.00967605
      },
      {
       " 9": -0.003578409
      },
      {
       ":": -0.0017804388
      },
      {
       " put": -1.3719885
      },
      {
       " off": -0.010483267
      },
      {
       " dish": -0.6645838
      },
      {
       "washer": -0.0037278496
      },
      {
       "\n": -0.01769244
      },
      {
       " turn": -0.07978096
      },
      {
       "off": -0.0024412447
      },
      {
       "('": -0.00085993914
      },
      {
       "d": -0.00016066022
      },
      {
       "ish": -7.8634315e-05
      },
      {
       "washer": -0.0012758881
      },
      {
       "')": -0.0067300093
      },
      {
       "\n": -0.11074598
      },
      {
       " #": -0.0093040615
      },
      {
       " 10": -0.007064364
      },
      {
       ":": -0.0024827695
      },
      {
       " put": -1.4468551
      },
      {
       " dishes": -0.07986669
      },
      {
       " away": -0.3825119
      },
      {
       "\n": -0.023938235
      },
      {
       " put": -0.06170544
      },
      {
       "back": -0.4896134
      },
      {
       "('": -0.0018196115
      },
      {
       "d": -0.0006722194
      },
      {
       "ishes": -0.0018551423
      },
      {
       "')": -0.47091228
      },
      {
       "c": -1.0747099
      },
      {
       "board": -0.0038362634
      },
      {
       "')": -0.0043753954
      }
     ],
     "text_offset": [
      3376,
      3378,
      3380,
      3381,
      3386,
      3389,
      3394,
      3401,
      3402,
      3407,
      3409,
      3413,
      3414,
      3420,
      3422,
      3423,
      3425,
      3427,
      3428,
      3433,
      3442,
      3443,
      3448,
      3450,
      3458,
      3460,
      3461,
      3463,
      3465,
      3466,
      3471,
      3474,
      3478,
      3487,
      3488,
      3495,
      3497,
      3499,
      3507,
      3509,
      3510,
      3512,
      3514,
      3515,
      3519,
      3522,
      3528,
      3529,
      3534,
      3536,
      3541,
      3543,
      3544,
      3548,
      3550,
      3555,
      3557,
      3558,
      3560,
      3562,
      3563,
      3569,
      3573,
      3579,
      3582,
      3583,
      3589,
      3591,
      3596,
      3599,
      3601,
      3602,
      3604,
      3606,
      3607,
      3611,
      3615,
      3621,
      3622,
      3627,
      3629,
      3634,
      3636,
      3637,
      3642,
      3644,
      3649,
      3651,
      3652,
      3654,
      3656,
      3657,
      3661,
      3665,
      3674,
      3675,
      3680,
      3682,
      3685,
      3690,
      3692,
      3693,
      3698,
      3700,
      3703,
      3708,
      3710,
      3711,
      3713,
      3715,
      3716,
      3721,
      3724,
      3728,
      3737,
      3744,
      3745,
      3750,
      3752,
      3754,
      3762,
      3763,
      3769,
      3771,
      3772,
      3775,
      3780,
      3781,
      3782,
      3787,
      3790,
      3791,
      3793,
      3795,
      3796,
      3801,
      3806,
      3807,
      3812,
      3814,
      3815,
      3818,
      3820,
      3821,
      3823,
      3825,
      3826,
      3830,
      3836,
      3837,
      3841,
      3843,
      3844,
      3846,
      3847,
      3850,
      3852,
      3853,
      3858,
      3860,
      3862,
      3863,
      3866,
      3868,
      3869,
      3871,
      3873,
      3874,
      3879,
      3884,
      3890,
      3891,
      3896,
      3898,
      3899,
      3902,
      3908,
      3910,
      3911,
      3913,
      3915,
      3916,
      3921,
      3926,
      3932,
      3937,
      3943,
      3944,
      3949,
      3951,
      3953,
      3954,
      3957,
      3963,
      3965,
      3966,
      3968,
      3970,
      3971,
      3975,
      3980,
      3981,
      3985,
      3987,
      3989,
      3991,
      3993,
      3994,
      3996,
      3998,
      3999,
      4003,
      4010,
      4013,
      4018,
      4024,
      4025,
      4029,
      4031,
      4033,
      4034,
      4039,
      4042,
      4043,
      4046,
      4052,
      4054,
      4055,
      4057,
      4059,
      4060,
      4065,
      4068,
      4072,
      4077,
      4083,
      4084,
      4089,
      4091,
      4093,
      4094,
      4097,
      4103,
      4105,
      4106,
      4108,
      4110,
      4111,
      4116,
      4120,
      4125,
      4131,
      4134,
      4141,
      4142,
      4147,
      4149,
      4150,
      4152,
      4154,
      4155,
      4162,
      4169,
      4170,
      4175,
      4177,
      4178,
      4183,
      4186,
      4187,
      4190,
      4196,
      4198,
      4199,
      4201,
      4203,
      4204,
      4209,
      4213,
      4218,
      4224,
      4225,
      4230,
      4233,
      4235,
      4236,
      4239,
      4245,
      4247,
      4248,
      4250,
      4253,
      4254,
      4258,
      4265,
      4270,
      4271,
      4275,
      4279,
      4281,
      4282,
      4287,
      4290,
      4293,
      4298
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Use computer",
   "task_description": "Sit at my desk and grade papers on my computer",
   "program": [
    "[Walk] <home_office> (1)",
    "[Walk] <chair> (1)",
    "[Find] <chair> (1)",
    "[Sit] <chair> (1)",
    "[Find] <computer> (1)",
    "[SwitchOn] <computer> (1)",
    "[TurnTo] <computer> (1)",
    "[LookAt] <computer> (1)",
    "[Find] <keyboard> (1)",
    "[Type] <keyboard> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upworknturk_second",
   "file_id": "split137_1",
   "goal_condition": [
    [
     [
      247,
      254,
      "ON",
      "character",
      "chair"
     ],
     [
      247,
      248,
      "INSIDE",
      "character",
      "home_office"
     ]
    ],
    [
     [
      247,
      "character",
      "SITTING"
     ],
     [
      273,
      "computer",
      "ON"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1181,
   "completion_tokens": 305,
   "total_tokens": 1486
  }
 },
 "15": {
  "plan": [
   [
    " # 0: walk in to bathroom\n walk('bathroom')\n # 1: find sink\n find('sink')\n # 2: turn on the faucet\n assert('close' to 'faucet')\n else: find('faucet')\n switchon('faucet')\n # 3: pour water on face\n assert('close' to 'faucet')\n else: find('faucet')\n pour('faucet')\n turnto('face')\n lookat('face')\n # 4: turn off the faucet\n switchoff('faucet')\n # 5: Done\ndef cook_food():\n # 0: walk to kitchen\n walk('kitchen')\n # 1: find stove\n find('stove')\n # 2: turn on stove\n switchon('stove')\n # 3: find pan\n find('pan')\n # 4: grab pan\n grab('pan')\n # 5: pour oil in pan\n pour('oil')\n # 6: turn off the stove\n switchoff('stove')\n # 7: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " in",
      " to",
      " bathroom",
      "\n",
      " walk",
      "('",
      "bath",
      "room",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " sink",
      "\n",
      " find",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " turn",
      " on",
      " the",
      " f",
      "auc",
      "et",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " switch",
      "on",
      "('",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " pour",
      " water",
      " on",
      " face",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " pour",
      "('",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "face",
      "')",
      "\n",
      " look",
      "at",
      "('",
      "face",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " turn",
      " off",
      " the",
      " f",
      "auc",
      "et",
      "\n",
      " switch",
      "off",
      "('",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " Done",
      "\n",
      "def",
      " cook",
      "_",
      "food",
      "():",
      "\n",
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " kitchen",
      "\n",
      " walk",
      "('",
      "kit",
      "chen",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " stove",
      "\n",
      " find",
      "('",
      "st",
      "ove",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " turn",
      " on",
      " stove",
      "\n",
      " switch",
      "on",
      "('",
      "st",
      "ove",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " find",
      " pan",
      "\n",
      " find",
      "('",
      "pan",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " grab",
      " pan",
      "\n",
      " grab",
      "('",
      "pan",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " pour",
      " oil",
      " in",
      " pan",
      "\n",
      " pour",
      "('",
      "oil",
      "')",
      "\n",
      " #",
      " 6",
      ":",
      " turn",
      " off",
      " the",
      " stove",
      "\n",
      " switch",
      "off",
      "('",
      "st",
      "ove",
      "')",
      "\n",
      " #",
      " 7",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.016689304,
      -0.006667844,
      -0.0016724875,
      -0.88601077,
      -1.754373,
      -0.09268367,
      -0.10253031,
      -0.014262726,
      -0.0049794475,
      -0.0053175963,
      -0.0027174498,
      -0.00018378951,
      -0.0017224613,
      -0.004493876,
      -0.0024972914,
      -0.003243899,
      -0.0007390241,
      -0.11421562,
      -0.42386258,
      -0.026152274,
      -0.4454648,
      -0.00086990296,
      -0.00075477175,
      -0.00014623316,
      -0.0017872469,
      -0.004586027,
      -0.028517984,
      -0.004886845,
      -0.0010828405,
      -0.39011863,
      -0.0720658,
      -0.8386109,
      -0.45559853,
      -0.0022399025,
      -0.0029171533,
      -0.034434535,
      -0.5537932,
      -0.0016852054,
      -0.011272511,
      -0.0029665888,
      -0.00060023234,
      -0.001352282,
      -0.18962449,
      -0.00047147667,
      -0.00039556794,
      -0.009026994,
      -0.005596216,
      -0.0013013734,
      -0.0013334837,
      -0.0052866763,
      -0.001499896,
      -0.0018464833,
      -0.002436405,
      -0.00018820119,
      -0.002478588,
      -0.005689126,
      -0.7848062,
      -0.0019023779,
      -0.0010903592,
      -0.0012618037,
      -0.0002934296,
      -7.326899e-05,
      -0.0018778943,
      -0.004325168,
      -0.040299695,
      -0.0061714384,
      -0.00053516414,
      -1.5995502,
      -0.18422854,
      -0.5523316,
      -0.21784575,
      -0.018204914,
      -0.8717397,
      -0.0014603807,
      -0.087301694,
      -0.0024080814,
      -0.00074522756,
      -0.0014282657,
      -0.15462741,
      -0.0003686146,
      -7.839496e-05,
      -0.006911067,
      -0.003561302,
      -0.001546102,
      -0.0014684964,
      -0.012913969,
      -0.001389707,
      -0.00059212145,
      -0.004355937,
      -0.000111420464,
      -0.0024134007,
      -0.005839899,
      -0.165511,
      -0.006189609,
      -0.5746425,
      -0.0008517091,
      -7.291136e-05,
      -0.04868445,
      -0.011892086,
      -1.2370563,
      -0.00012512946,
      -0.0008823119,
      -0.00068289746,
      -0.88767856,
      -0.0021477307,
      -0.008410698,
      -1.7974851,
      -0.0010419079,
      -0.0005617646,
      -0.003067508,
      -0.002035856,
      -0.024770847,
      -0.02606876,
      -0.009159501,
      -0.0018719216,
      -1.3251859,
      -0.04020494,
      -0.45306018,
      -0.013907522,
      -0.00070699357,
      -0.0011371415,
      -0.018451994,
      -0.6482407,
      -0.0040312796,
      -0.0010345085,
      -0.0012012316,
      -0.0005373127,
      -0.0002669587,
      -0.0027597651,
      -0.14130221,
      -0.037384354,
      -0.0053527122,
      -0.0024030632,
      -0.89765805,
      -0.5697371,
      -0.42287114,
      -2.745851,
      -0.023763165,
      -1.1959333,
      -0.028115503,
      -0.012320133,
      -0.004797601,
      -0.004125661,
      -0.0019040498,
      -0.10495992,
      -0.8282987,
      -0.047089387,
      -0.03239257,
      -0.0029481773,
      -0.0029169137,
      -0.0016847276,
      -0.0002698197,
      -0.006653503,
      -0.006599863,
      -0.0021392473,
      -0.0030354613,
      -0.0007262603,
      -0.052009497,
      -0.5448252,
      -0.04436175,
      -0.0474807,
      -0.0010169069,
      -0.0018700106,
      -0.00010581859,
      -0.0016822795,
      -0.005502535,
      -0.010357146,
      -0.004125423,
      -0.0011543272,
      -0.32272726,
      -0.027401509,
      -0.9074497,
      -0.030292377,
      -0.32870784,
      -0.00060774625,
      -0.0008550469,
      -0.0006259955,
      -9.305951e-05,
      -0.0014324456,
      -0.0034988539,
      -0.015704721,
      -0.0042029344,
      -0.0007204754,
      -0.19878668,
      -1.3056295,
      -0.040981553,
      -0.027447024,
      -0.0010226364,
      -0.0005088669,
      -0.0014289829,
      -0.004324029,
      -0.017484732,
      -0.0036125062,
      -0.0009701922,
      -1.1927568,
      -0.10953721,
      -0.054697692,
      -0.16774032,
      -0.0011981284,
      -0.00010939391,
      -0.00065265695,
      -0.0039983634,
      -0.31506488,
      -0.0032827093,
      -0.0012606097,
      -0.8592706,
      -0.15581216,
      -0.6236895,
      -0.19387433,
      -0.014395084,
      -0.51189965,
      -0.004913857,
      -0.0729957,
      -0.17275743,
      -0.010280001,
      -0.48344126,
      -0.00250512,
      -0.000923774,
      -3.030713,
      -0.8776027,
      -2.4161758,
      -0.036889225,
      -0.020567589,
      -0.01047881,
      -0.006682665,
      -0.00082039007,
      -0.0012317246,
      -0.00033355693,
      -0.0029647353,
      -0.0060465797,
      -0.003963478,
      -0.0066188206,
      -0.0019600056,
      -0.9936333
     ],
     "top_logprobs": [
      {
       " #": -0.016689304
      },
      {
       " 0": -0.006667844
      },
      {
       ":": -0.0016724875
      },
      {
       " find": -0.76330036
      },
      {
       " to": -0.2867789
      },
      {
       " to": -0.09268367
      },
      {
       " bathroom": -0.10253031
      },
      {
       "\n": -0.014262726
      },
      {
       " walk": -0.0049794475
      },
      {
       "('": -0.0053175963
      },
      {
       "bath": -0.0027174498
      },
      {
       "room": -0.00018378951
      },
      {
       "')": -0.0017224613
      },
      {
       "\n": -0.004493876
      },
      {
       " #": -0.0024972914
      },
      {
       " 1": -0.003243899
      },
      {
       ":": -0.0007390241
      },
      {
       " find": -0.11421562
      },
      {
       " sink": -0.42386258
      },
      {
       "\n": -0.026152274
      },
      {
       " find": -0.4454648
      },
      {
       "('": -0.00086990296
      },
      {
       "s": -0.00075477175
      },
      {
       "ink": -0.00014623316
      },
      {
       "')": -0.0017872469
      },
      {
       "\n": -0.004586027
      },
      {
       " #": -0.028517984
      },
      {
       " 2": -0.004886845
      },
      {
       ":": -0.0010828405
      },
      {
       " turn": -0.39011863
      },
      {
       " on": -0.0720658
      },
      {
       " the": -0.8386109
      },
      {
       " f": -0.45559853
      },
      {
       "auc": -0.0022399025
      },
      {
       "et": -0.0029171533
      },
      {
       "\n": -0.034434535
      },
      {
       " assert": -0.5537932
      },
      {
       "('": -0.0016852054
      },
      {
       "close": -0.011272511
      },
      {
       "'": -0.0029665888
      },
      {
       " to": -0.00060023234
      },
      {
       " '": -0.001352282
      },
      {
       "f": -0.18962449
      },
      {
       "auc": -0.00047147667
      },
      {
       "et": -0.00039556794
      },
      {
       "')": -0.009026994
      },
      {
       "\n": -0.005596216
      },
      {
       " else": -0.0013013734
      },
      {
       ":": -0.0013334837
      },
      {
       " find": -0.0052866763
      },
      {
       "('": -0.001499896
      },
      {
       "f": -0.0018464833
      },
      {
       "auc": -0.002436405
      },
      {
       "et": -0.00018820119
      },
      {
       "')": -0.002478588
      },
      {
       "\n": -0.005689126
      },
      {
       " switch": -0.7848062
      },
      {
       "on": -0.0019023779
      },
      {
       "('": -0.0010903592
      },
      {
       "f": -0.0012618037
      },
      {
       "auc": -0.0002934296
      },
      {
       "et": -7.326899e-05
      },
      {
       "')": -0.0018778943
      },
      {
       "\n": -0.004325168
      },
      {
       " #": -0.040299695
      },
      {
       " 3": -0.0061714384
      },
      {
       ":": -0.00053516414
      },
      {
       " wash": -1.4665346
      },
      {
       " water": -0.18422854
      },
      {
       " on": -0.5523316
      },
      {
       " face": -0.21784575
      },
      {
       "\n": -0.018204914
      },
      {
       " pour": -0.71904594
      },
      {
       "('": -0.0014603807
      },
      {
       "close": -0.087301694
      },
      {
       "'": -0.0024080814
      },
      {
       " to": -0.00074522756
      },
      {
       " '": -0.0014282657
      },
      {
       "f": -0.15462741
      },
      {
       "auc": -0.0003686146
      },
      {
       "et": -7.839496e-05
      },
      {
       "')": -0.006911067
      },
      {
       "\n": -0.003561302
      },
      {
       " else": -0.001546102
      },
      {
       ":": -0.0014684964
      },
      {
       " find": -0.012913969
      },
      {
       "('": -0.001389707
      },
      {
       "f": -0.00059212145
      },
      {
       "auc": -0.004355937
      },
      {
       "et": -0.000111420464
      },
      {
       "')": -0.0024134007
      },
      {
       "\n": -0.005839899
      },
      {
       " pour": -0.165511
      },
      {
       "('": -0.006189609
      },
      {
       "f": -0.5746425
      },
      {
       "auc": -0.0008517091
      },
      {
       "et": -7.291136e-05
      },
      {
       "')": -0.04868445
      },
      {
       "\n": -0.011892086
      },
      {
       " #": -0.49868813
      },
      {
       "nt": -0.00012512946
      },
      {
       "o": -0.0008823119
      },
      {
       "('": -0.00068289746
      },
      {
       "f": -0.83902574
      },
      {
       "')": -0.0021477307
      },
      {
       "\n": -0.008410698
      },
      {
       " #": -0.6595992
      },
      {
       "at": -0.0010419079
      },
      {
       "('": -0.0005617646
      },
      {
       "face": -0.003067508
      },
      {
       "')": -0.002035856
      },
      {
       "\n": -0.024770847
      },
      {
       " #": -0.02606876
      },
      {
       " 4": -0.009159501
      },
      {
       ":": -0.0018719216
      },
      {
       " wipe": -1.1274549
      },
      {
       " off": -0.04020494
      },
      {
       " the": -0.45306018
      },
      {
       " f": -0.013907522
      },
      {
       "auc": -0.00070699357
      },
      {
       "et": -0.0011371415
      },
      {
       "\n": -0.018451994
      },
      {
       " switch": -0.6482407
      },
      {
       "off": -0.0040312796
      },
      {
       "('": -0.0010345085
      },
      {
       "f": -0.0012012316
      },
      {
       "auc": -0.0005373127
      },
      {
       "et": -0.0002669587
      },
      {
       "')": -0.0027597651
      },
      {
       "\n": -0.14130221
      },
      {
       " #": -0.037384354
      },
      {
       " 5": -0.0053527122
      },
      {
       ":": -0.0024030632
      },
      {
       " Done": -0.89765805
      },
      {
       "\n": -0.5697371
      },
      {
       "def": -0.42287114
      },
      {
       " make": -1.170366
      },
      {
       "_": -0.023763165
      },
      {
       "food": -1.1959333
      },
      {
       "():": -0.028115503
      },
      {
       "\n": -0.012320133
      },
      {
       " #": -0.004797601
      },
      {
       " 0": -0.004125661
      },
      {
       ":": -0.0019040498
      },
      {
       " walk": -0.10495992
      },
      {
       " in": -0.7087595
      },
      {
       " kitchen": -0.047089387
      },
      {
       "\n": -0.03239257
      },
      {
       " walk": -0.0029481773
      },
      {
       "('": -0.0029169137
      },
      {
       "kit": -0.0016847276
      },
      {
       "chen": -0.0002698197
      },
      {
       "')": -0.006653503
      },
      {
       "\n": -0.006599863
      },
      {
       " #": -0.0021392473
      },
      {
       " 1": -0.0030354613
      },
      {
       ":": -0.0007262603
      },
      {
       " find": -0.052009497
      },
      {
       " stove": -0.5448252
      },
      {
       "\n": -0.04436175
      },
      {
       " find": -0.0474807
      },
      {
       "('": -0.0010169069
      },
      {
       "st": -0.0018700106
      },
      {
       "ove": -0.00010581859
      },
      {
       "')": -0.0016822795
      },
      {
       "\n": -0.005502535
      },
      {
       " #": -0.010357146
      },
      {
       " 2": -0.004125423
      },
      {
       ":": -0.0011543272
      },
      {
       " turn": -0.32272726
      },
      {
       " on": -0.027401509
      },
      {
       " the": -0.5414934
      },
      {
       "\n": -0.030292377
      },
      {
       " switch": -0.32870784
      },
      {
       "on": -0.00060774625
      },
      {
       "('": -0.0008550469
      },
      {
       "st": -0.0006259955
      },
      {
       "ove": -9.305951e-05
      },
      {
       "')": -0.0014324456
      },
      {
       "\n": -0.0034988539
      },
      {
       " #": -0.015704721
      },
      {
       " 3": -0.0042029344
      },
      {
       ":": -0.0007204754
      },
      {
       " find": -0.19878668
      },
      {
       " pot": -1.0072163
      },
      {
       "\n": -0.040981553
      },
      {
       " find": -0.027447024
      },
      {
       "('": -0.0010226364
      },
      {
       "pan": -0.0005088669
      },
      {
       "')": -0.0014289829
      },
      {
       "\n": -0.004324029
      },
      {
       " #": -0.017484732
      },
      {
       " 4": -0.0036125062
      },
      {
       ":": -0.0009701922
      },
      {
       " put": -1.0386813
      },
      {
       " pan": -0.10953721
      },
      {
       "\n": -0.054697692
      },
      {
       " grab": -0.16774032
      },
      {
       "('": -0.0011981284
      },
      {
       "pan": -0.00010939391
      },
      {
       "')": -0.00065265695
      },
      {
       "\n": -0.0039983634
      },
      {
       " #": -0.31506488
      },
      {
       " 5": -0.0032827093
      },
      {
       ":": -0.0012606097
      },
      {
       " pour": -0.8592706
      },
      {
       " oil": -0.15581216
      },
      {
       " in": -0.6236895
      },
      {
       " pan": -0.19387433
      },
      {
       "\n": -0.014395084
      },
      {
       " pour": -0.51189965
      },
      {
       "('": -0.004913857
      },
      {
       "oil": -0.0729957
      },
      {
       "')": -0.17275743
      },
      {
       "\n": -0.010280001
      },
      {
       " #": -0.48344126
      },
      {
       " 6": -0.00250512
      },
      {
       ":": -0.000923774
      },
      {
       " find": -1.0328227
      },
      {
       " off": -0.8776027
      },
      {
       " stove": -0.12441078
      },
      {
       " stove": -0.036889225
      },
      {
       "\n": -0.020567589
      },
      {
       " switch": -0.01047881
      },
      {
       "off": -0.006682665
      },
      {
       "('": -0.00082039007
      },
      {
       "st": -0.0012317246
      },
      {
       "ove": -0.00033355693
      },
      {
       "')": -0.0029647353
      },
      {
       "\n": -0.0060465797
      },
      {
       " #": -0.003963478
      },
      {
       " 7": -0.0066188206
      },
      {
       ":": -0.0019600056
      },
      {
       " Done": -0.9936333
      }
     ],
     "text_offset": [
      3373,
      3375,
      3377,
      3378,
      3383,
      3386,
      3389,
      3398,
      3399,
      3404,
      3406,
      3410,
      3414,
      3416,
      3417,
      3419,
      3421,
      3422,
      3427,
      3432,
      3433,
      3438,
      3440,
      3441,
      3444,
      3446,
      3447,
      3449,
      3451,
      3452,
      3457,
      3460,
      3464,
      3466,
      3469,
      3471,
      3472,
      3479,
      3481,
      3486,
      3487,
      3490,
      3492,
      3493,
      3496,
      3498,
      3500,
      3501,
      3506,
      3507,
      3512,
      3514,
      3515,
      3518,
      3520,
      3522,
      3523,
      3530,
      3532,
      3534,
      3535,
      3538,
      3540,
      3542,
      3543,
      3545,
      3547,
      3548,
      3553,
      3559,
      3562,
      3567,
      3568,
      3575,
      3577,
      3582,
      3583,
      3586,
      3588,
      3589,
      3592,
      3594,
      3596,
      3597,
      3602,
      3603,
      3608,
      3610,
      3611,
      3614,
      3616,
      3618,
      3619,
      3624,
      3626,
      3627,
      3630,
      3632,
      3634,
      3635,
      3639,
      3641,
      3642,
      3644,
      3648,
      3650,
      3651,
      3656,
      3658,
      3660,
      3664,
      3666,
      3667,
      3669,
      3671,
      3672,
      3677,
      3681,
      3685,
      3687,
      3690,
      3692,
      3693,
      3700,
      3703,
      3705,
      3706,
      3709,
      3711,
      3713,
      3714,
      3716,
      3718,
      3719,
      3724,
      3725,
      3728,
      3733,
      3734,
      3738,
      3741,
      3742,
      3744,
      3746,
      3747,
      3752,
      3755,
      3763,
      3764,
      3769,
      3771,
      3774,
      3778,
      3780,
      3781,
      3783,
      3785,
      3786,
      3791,
      3797,
      3798,
      3803,
      3805,
      3807,
      3810,
      3812,
      3813,
      3815,
      3817,
      3818,
      3823,
      3826,
      3832,
      3833,
      3840,
      3842,
      3844,
      3846,
      3849,
      3851,
      3852,
      3854,
      3856,
      3857,
      3862,
      3866,
      3867,
      3872,
      3874,
      3877,
      3879,
      3880,
      3882,
      3884,
      3885,
      3890,
      3894,
      3895,
      3900,
      3902,
      3905,
      3907,
      3908,
      3910,
      3912,
      3913,
      3918,
      3922,
      3925,
      3929,
      3930,
      3935,
      3937,
      3940,
      3942,
      3943,
      3945,
      3947,
      3948,
      3953,
      3957,
      3961,
      3967,
      3968,
      3975,
      3978,
      3980,
      3982,
      3985,
      3987,
      3988,
      3990,
      3992,
      3993
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Wash face",
   "task_description": "Turn the faucet on. Wet the face. Take facial cleanser out of packaging. Lather on face. Rinse face with water. Turn off the faucet. Dry face with towel.",
   "program": [
    "[Walk] <bathroom> (1)",
    "[Walk] <sink> (1)",
    "[Find] <faucet> (1)",
    "[SwitchOn] <faucet> (1)",
    "[Find] <face> (1)",
    "[Wash] <face> (1)",
    "[Find] <rag> (1)",
    "[Grab] <rag> (1)",
    "[Rinse] <rag> (1)",
    "[Find] <facial_cleanser> (1)",
    "[Grab] <facial_cleanser> (1)",
    "[Pour] <facial_cleanser> (1) <rag> (1)",
    "[PutObjBack] <facial_cleanser> (1)",
    "[Scrub] <face> (1)",
    "[Rinse] <rag> (1)",
    "[PutObjBack] <rag> (1)",
    "[Rinse] <face> (1)",
    "[SwitchOff] <faucet> (1)",
    "[Find] <towel> (1)",
    "[Grab] <towel> (1)",
    "[Wipe] <face> (1)",
    "[PutObjBack] <towel> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upworknturk_second",
   "file_id": "split96_2",
   "goal_condition": [
    [
     [
      247,
      149,
      "INSIDE",
      "character",
      "bathroom"
     ],
     [
      1002,
      1001,
      "INSIDE",
      "facial_cleanser",
      "rag"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1181,
   "completion_tokens": 234,
   "total_tokens": 1415
  }
 },
 "16": {
  "plan": [
   [
    " # 0: walk to living room\n walk('livingroom')\n # 1: find newspaper\n find('newspaper')\n # 2: sit on couch\n find('couch')\n sit('couch')\n # 3: read the newspaper\n assert('close' to 'newspaper')\n else: find('newspaper')\n read('newspaper')\n # 4: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " living",
      " room",
      "\n",
      " walk",
      "('",
      "living",
      "room",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " newspaper",
      "\n",
      " find",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " sit",
      " on",
      " couch",
      "\n",
      " find",
      "('",
      "c",
      "ouch",
      "')",
      "\n",
      " sit",
      "('",
      "c",
      "ouch",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " read",
      " the",
      " newspaper",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " read",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.017846791,
      -0.00921232,
      -0.001946213,
      -1.1728919,
      -0.18958536,
      -0.91629666,
      -0.09779332,
      -0.022659183,
      -0.005282841,
      -0.0041259015,
      -0.013220987,
      -1.3112433,
      -0.0018426611,
      -0.008818313,
      -0.002132261,
      -0.003682021,
      -0.00050719705,
      -0.033134162,
      -0.25249735,
      -0.023220142,
      -0.11876088,
      -0.0011751521,
      -0.0018159105,
      -0.001084271,
      -0.00074892404,
      -0.0019502153,
      -0.0057074092,
      -0.013989604,
      -0.005405206,
      -0.00048155588,
      -2.5148442,
      -0.2451966,
      -0.4047511,
      -0.074227236,
      -0.3223608,
      -0.0015929041,
      -0.0006149016,
      -0.00022671591,
      -0.0010718011,
      -0.004160074,
      -0.6297592,
      -0.0017080727,
      -0.00018689176,
      -0.00054995355,
      -0.001002707,
      -0.004664711,
      -0.014304265,
      -0.008334427,
      -0.0008094125,
      -0.52885026,
      -1.1904824,
      -0.02454847,
      -0.010610065,
      -0.86997896,
      -0.0017161911,
      -0.21327797,
      -0.0038140644,
      -0.0009049231,
      -0.0020021105,
      -0.019285832,
      -0.0018718033,
      -0.00094507297,
      -0.0069123274,
      -0.005049596,
      -0.0018437349,
      -0.0016353527,
      -0.0075099827,
      -0.0015659799,
      -0.0014228948,
      -0.002275448,
      -0.0023066357,
      -0.0035469437,
      -0.0060179164,
      -0.7490984,
      -0.0011857749,
      -0.0010688162,
      -0.00048882765,
      -0.0005552024,
      -0.0019034519,
      -1.1408457,
      -0.7809071,
      -0.011263468,
      -0.0016778623,
      -0.57147735
     ],
     "top_logprobs": [
      {
       " #": -0.017846791
      },
      {
       " 0": -0.00921232
      },
      {
       ":": -0.001946213
      },
      {
       " find": -0.47673824
      },
      {
       " to": -0.18958536
      },
      {
       " living": -0.91629666
      },
      {
       " room": -0.09779332
      },
      {
       "\n": -0.022659183
      },
      {
       " walk": -0.005282841
      },
      {
       "('": -0.0041259015
      },
      {
       "living": -0.013220987
      },
      {
       "_": -0.36991328
      },
      {
       "')": -0.0018426611
      },
      {
       "\n": -0.008818313
      },
      {
       " #": -0.002132261
      },
      {
       " 1": -0.003682021
      },
      {
       ":": -0.00050719705
      },
      {
       " find": -0.033134162
      },
      {
       " newspaper": -0.25249735
      },
      {
       "\n": -0.023220142
      },
      {
       " find": -0.11876088
      },
      {
       "('": -0.0011751521
      },
      {
       "new": -0.0018159105
      },
      {
       "sp": -0.001084271
      },
      {
       "aper": -0.00074892404
      },
      {
       "')": -0.0019502153
      },
      {
       "\n": -0.0057074092
      },
      {
       " #": -0.013989604
      },
      {
       " 2": -0.005405206
      },
      {
       ":": -0.00048155588
      },
      {
       " grab": -0.3854507
      },
      {
       " on": -0.2451966
      },
      {
       " couch": -0.4047511
      },
      {
       "\n": -0.074227236
      },
      {
       " find": -0.3223608
      },
      {
       "('": -0.0015929041
      },
      {
       "c": -0.0006149016
      },
      {
       "ouch": -0.00022671591
      },
      {
       "')": -0.0010718011
      },
      {
       "\n": -0.004160074
      },
      {
       " sit": -0.6297592
      },
      {
       "('": -0.0017080727
      },
      {
       "c": -0.00018689176
      },
      {
       "ouch": -0.00054995355
      },
      {
       "')": -0.001002707
      },
      {
       "\n": -0.004664711
      },
      {
       " #": -0.014304265
      },
      {
       " 3": -0.008334427
      },
      {
       ":": -0.0008094125
      },
      {
       " read": -0.52885026
      },
      {
       " newspaper": -0.39898038
      },
      {
       " newspaper": -0.02454847
      },
      {
       "\n": -0.010610065
      },
      {
       " assert": -0.86997896
      },
      {
       "('": -0.0017161911
      },
      {
       "close": -0.21327797
      },
      {
       "'": -0.0038140644
      },
      {
       " to": -0.0009049231
      },
      {
       " '": -0.0020021105
      },
      {
       "new": -0.019285832
      },
      {
       "sp": -0.0018718033
      },
      {
       "aper": -0.00094507297
      },
      {
       "')": -0.0069123274
      },
      {
       "\n": -0.005049596
      },
      {
       " else": -0.0018437349
      },
      {
       ":": -0.0016353527
      },
      {
       " find": -0.0075099827
      },
      {
       "('": -0.0015659799
      },
      {
       "new": -0.0014228948
      },
      {
       "sp": -0.002275448
      },
      {
       "aper": -0.0023066357
      },
      {
       "')": -0.0035469437
      },
      {
       "\n": -0.0060179164
      },
      {
       " read": -0.7490984
      },
      {
       "('": -0.0011857749
      },
      {
       "new": -0.0010688162
      },
      {
       "sp": -0.00048882765
      },
      {
       "aper": -0.0005552024
      },
      {
       "')": -0.0019034519
      },
      {
       "<|endoftext|>": -0.40157345
      },
      {
       " #": -0.7809071
      },
      {
       " 4": -0.011263468
      },
      {
       ":": -0.0016778623
      },
      {
       " Done": -0.57147735
      }
     ],
     "text_offset": [
      3378,
      3380,
      3382,
      3383,
      3388,
      3391,
      3398,
      3403,
      3404,
      3409,
      3411,
      3417,
      3421,
      3423,
      3424,
      3426,
      3428,
      3429,
      3434,
      3444,
      3445,
      3450,
      3452,
      3455,
      3457,
      3461,
      3463,
      3464,
      3466,
      3468,
      3469,
      3473,
      3476,
      3482,
      3483,
      3488,
      3490,
      3491,
      3495,
      3497,
      3498,
      3502,
      3504,
      3505,
      3509,
      3511,
      3512,
      3514,
      3516,
      3517,
      3522,
      3526,
      3536,
      3537,
      3544,
      3546,
      3551,
      3552,
      3555,
      3557,
      3560,
      3562,
      3566,
      3568,
      3569,
      3574,
      3575,
      3580,
      3582,
      3585,
      3587,
      3591,
      3593,
      3594,
      3599,
      3601,
      3604,
      3606,
      3610,
      3612,
      3613,
      3615,
      3617,
      3618
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Read newspaper",
   "task_description": "Sit in my chair at my desk. Open up newspaper. Read about current events.",
   "program": [
    "[Walk] <home_office> (1)",
    "[Walk] <chair> (1)",
    "[Find] <chair> (1)",
    "[Sit] <chair> (1)",
    "[Find] <newspaper> (1)",
    "[Grab] <newspaper> (1)",
    "[Open] <newspaper> (1)",
    "[Read] <newspaper> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_july",
   "file_id": "split17_4",
   "goal_condition": [
    [
     [
      247,
      1000,
      "HOLDS_RH",
      "character",
      "newspaper"
     ],
     [
      247,
      254,
      "ON",
      "character",
      "chair"
     ],
     [
      247,
      248,
      "INSIDE",
      "character",
      "home_office"
     ]
    ],
    [
     [
      247,
      "character",
      "SITTING"
     ],
     [
      1000,
      "newspaper",
      "OPEN"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1183,
   "completion_tokens": 84,
   "total_tokens": 1267
  }
 },
 "17": {
  "plan": [
   [
    " # 0: find drink\n find('drink')\n # 1: grab drink\n grab('drink')\n # 2: turnto drink\n turnto('drink')\n # 3: pointat drink\n pointat('drink')\n # 4: drink drink\n drink('drink')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " drink",
      "\n",
      " find",
      "('",
      "dr",
      "ink",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " grab",
      " drink",
      "\n",
      " grab",
      "('",
      "dr",
      "ink",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " tur",
      "nt",
      "o",
      " drink",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "dr",
      "ink",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " point",
      "at",
      " drink",
      "\n",
      " point",
      "at",
      "('",
      "dr",
      "ink",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " drink",
      " drink",
      "\n",
      " drink",
      "('",
      "dr",
      "ink",
      "')"
     ],
     "token_logprobs": [
      -0.10593117,
      -0.040400106,
      -0.004987535,
      -0.18844602,
      -1.4253602,
      -0.055528987,
      -0.019783989,
      -0.0058463146,
      -0.017796911,
      -0.00071033416,
      -0.0028362144,
      -0.012616102,
      -0.0057216175,
      -0.0037290463,
      -0.00104143,
      -0.04915942,
      -0.07707069,
      -0.014357475,
      -0.9508874,
      -0.0017429409,
      -0.00026802876,
      -5.693833e-05,
      -0.0021608127,
      -0.004790473,
      -0.5804958,
      -0.0066641835,
      -0.000869306,
      -2.5911856,
      -0.0006852826,
      -0.0029145833,
      -0.052066635,
      -0.030875457,
      -0.05463065,
      -4.2870764e-05,
      -0.00035072953,
      -0.0012302923,
      -0.00031906605,
      -0.00022963606,
      -0.0014560234,
      -0.0056050876,
      -0.11427369,
      -0.0072867293,
      -0.0012215778,
      -2.3599334,
      -0.17224592,
      -0.010035234,
      -0.016611185,
      -0.016798768,
      -0.0008271887,
      -0.0012234879,
      -0.00031715777,
      -0.00020942597,
      -0.0017649747,
      -0.005484196,
      -0.002527946,
      -0.006637542,
      -0.000980093,
      -0.11297739,
      -1.1534646,
      -0.011716334,
      -0.1859151,
      -0.018751116,
      -0.00042889945,
      -7.529741e-05,
      -0.0022241923
     ],
     "top_logprobs": [
      {
       " #": -0.10593117
      },
      {
       " 0": -0.040400106
      },
      {
       ":": -0.004987535
      },
      {
       " find": -0.18844602
      },
      {
       " cup": -0.8329442
      },
      {
       "\n": -0.055528987
      },
      {
       " find": -0.019783989
      },
      {
       "('": -0.0058463146
      },
      {
       "dr": -0.017796911
      },
      {
       "ink": -0.00071033416
      },
      {
       "')": -0.0028362144
      },
      {
       "\n": -0.012616102
      },
      {
       " #": -0.0057216175
      },
      {
       " 1": -0.0037290463
      },
      {
       ":": -0.00104143
      },
      {
       " grab": -0.04915942
      },
      {
       " drink": -0.07707069
      },
      {
       "\n": -0.014357475
      },
      {
       " assert": -0.5029247
      },
      {
       "('": -0.0017429409
      },
      {
       "dr": -0.00026802876
      },
      {
       "ink": -5.693833e-05
      },
      {
       "')": -0.0021608127
      },
      {
       "\n": -0.004790473
      },
      {
       " #": -0.5804958
      },
      {
       " 2": -0.0066641835
      },
      {
       ":": -0.000869306
      },
      {
       " drink": -0.5011683
      },
      {
       "nt": -0.0006852826
      },
      {
       "o": -0.0029145833
      },
      {
       " drink": -0.052066635
      },
      {
       "\n": -0.030875457
      },
      {
       " tur": -0.05463065
      },
      {
       "nt": -4.2870764e-05
      },
      {
       "o": -0.00035072953
      },
      {
       "('": -0.0012302923
      },
      {
       "dr": -0.00031906605
      },
      {
       "ink": -0.00022963606
      },
      {
       "')": -0.0014560234
      },
      {
       "\n": -0.0056050876
      },
      {
       " #": -0.11427369
      },
      {
       " 3": -0.0072867293
      },
      {
       ":": -0.0012215778
      },
      {
       " drink": -0.25316668
      },
      {
       "at": -0.17224592
      },
      {
       " drink": -0.010035234
      },
      {
       "\n": -0.016611185
      },
      {
       " point": -0.016798768
      },
      {
       "at": -0.0008271887
      },
      {
       "('": -0.0012234879
      },
      {
       "dr": -0.00031715777
      },
      {
       "ink": -0.00020942597
      },
      {
       "')": -0.0017649747
      },
      {
       "\n": -0.005484196
      },
      {
       " #": -0.002527946
      },
      {
       " 4": -0.006637542
      },
      {
       ":": -0.000980093
      },
      {
       " drink": -0.11297739
      },
      {
       "\n": -0.7537596
      },
      {
       "\n": -0.011716334
      },
      {
       " drink": -0.1859151
      },
      {
       "('": -0.018751116
      },
      {
       "dr": -0.00042889945
      },
      {
       "ink": -7.529741e-05
      },
      {
       "')": -0.0022241923
      }
     ],
     "text_offset": [
      3369,
      3371,
      3373,
      3374,
      3379,
      3385,
      3386,
      3391,
      3393,
      3395,
      3398,
      3400,
      3401,
      3403,
      3405,
      3406,
      3411,
      3417,
      3418,
      3423,
      3425,
      3427,
      3430,
      3432,
      3433,
      3435,
      3437,
      3438,
      3442,
      3444,
      3445,
      3451,
      3452,
      3456,
      3458,
      3459,
      3461,
      3463,
      3466,
      3468,
      3469,
      3471,
      3473,
      3474,
      3480,
      3482,
      3488,
      3489,
      3495,
      3497,
      3499,
      3501,
      3504,
      3506,
      3507,
      3509,
      3511,
      3512,
      3518,
      3524,
      3525,
      3531,
      3533,
      3535,
      3538
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Drink",
   "task_description": "I bring the cup filled with water to my lips. I tilt the cup upwards slowly, so that the water falls into my mouth.",
   "program": [
    "[Find] <water_glass> (1)",
    "[Grab] <water_glass> (1)",
    "[Drink] <water_glass> (1)"
   ],
   "batch": "results_intentions_march-13-18",
   "file_id": "file146_1",
   "goal_condition": [
    [
     [
      247,
      1000,
      "HOLDS_RH",
      "character",
      "water_glass"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1179,
   "completion_tokens": 65,
   "total_tokens": 1244
  }
 },
 "18": {
  "plan": [
   [
    " # 0: walk to bathroom\n walk('bathroom')\n # 1: find bathroom sink\n find('bathroom_sink')\n # 2: run water\n assert('close' to 'bathroom_sink')\n else: find('bathroom_sink')\n turnon('faucet')\n # 3: grab soap\n grab('soap')\n # 4: wash\n wash('soap')\n # 5: pour out water\n turnoff('faucet')\n # 6: wipe the sink\n wipe('bathroom_sink')\n # 7: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " bathroom",
      "\n",
      " walk",
      "('",
      "bath",
      "room",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " bathroom",
      " sink",
      "\n",
      " find",
      "('",
      "bath",
      "room",
      "_",
      "s",
      "ink",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " run",
      " water",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "bath",
      "room",
      "_",
      "s",
      "ink",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "bath",
      "room",
      "_",
      "s",
      "ink",
      "')",
      "\n",
      " turn",
      "on",
      "('",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " grab",
      " soap",
      "\n",
      " grab",
      "('",
      "so",
      "ap",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " wash",
      "\n",
      " wash",
      "('",
      "so",
      "ap",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " pour",
      " out",
      " water",
      "\n",
      " turn",
      "off",
      "('",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " #",
      " 6",
      ":",
      " wipe",
      " the",
      " sink",
      "\n",
      " wipe",
      "('",
      "bath",
      "room",
      "_",
      "s",
      "ink",
      "')",
      "\n",
      " #",
      " 7",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.01710255,
      -0.007321193,
      -0.0023911726,
      -0.14082493,
      -0.3158641,
      -0.16434653,
      -0.021144304,
      -0.005278466,
      -0.0044906423,
      -0.001627651,
      -0.0001319253,
      -0.0015677718,
      -0.007464344,
      -0.003660964,
      -0.0037791824,
      -0.0010352256,
      -0.156251,
      -2.3625784,
      -2.7288437,
      -0.029749356,
      -0.15326044,
      -0.0015018062,
      -0.2674857,
      -0.002116072,
      -0.020883657,
      -0.0015021657,
      -9.091469e-05,
      -0.0029710147,
      -0.006183791,
      -0.01405531,
      -0.003865402,
      -0.001155999,
      -5.1413107,
      -0.4081929,
      -0.6847094,
      -0.8734577,
      -0.002311832,
      -0.010056486,
      -0.004216102,
      -0.0011688266,
      -0.0018662483,
      -0.12712517,
      -0.00056450826,
      -0.003191217,
      -0.0007449901,
      -0.00022814641,
      -0.010383828,
      -0.005771313,
      -0.0013885148,
      -0.0020293463,
      -0.007493948,
      -0.002406529,
      -0.0019305066,
      -0.00034786668,
      -0.00076425495,
      -0.0007748749,
      -0.000101643476,
      -0.005334554,
      -0.008281956,
      -2.0904646,
      -0.024854677,
      -0.0053042937,
      -1.1651777,
      -0.00092365383,
      -0.0012244435,
      -0.006510106,
      -0.0076917214,
      -0.33657116,
      -0.006001785,
      -0.0010173838,
      -1.0180887,
      -1.7383096,
      -0.16310553,
      -1.2560225,
      -0.0018735944,
      -0.0013974067,
      -0.0002640958,
      -0.0019535597,
      -0.0048303637,
      -0.15792225,
      -0.0050619985,
      -0.000723756,
      -0.354323,
      -4.0792236,
      -0.5423209,
      -0.0034583595,
      -0.34934548,
      -0.00023655016,
      -0.004531715,
      -0.008486378,
      -0.13955054,
      -0.004349052,
      -0.0016821612,
      -3.2010984,
      -1.609317,
      -0.40662184,
      -0.030556774,
      -1.1010803,
      -0.012605236,
      -0.0011359475,
      -0.0023539513,
      -0.0003290824,
      -0.00013991416,
      -0.0020827423,
      -0.03502394,
      -0.034965236,
      -0.0039241607,
      -0.0019378514,
      -1.6615192,
      -2.7781706,
      -0.11233229,
      -0.033626013,
      -0.3580634,
      -0.0011562373,
      -0.50059056,
      -0.0004210298,
      -0.0010503792,
      -0.00047940828,
      -0.00018533925,
      -0.0030302005,
      -0.028428202,
      -0.015119217,
      -0.008821259,
      -0.0020426668,
      -0.820112
     ],
     "top_logprobs": [
      {
       " #": -0.01710255
      },
      {
       " 0": -0.007321193
      },
      {
       ":": -0.0023911726
      },
      {
       " walk": -0.14082493
      },
      {
       " to": -0.3158641
      },
      {
       " bathroom": -0.16434653
      },
      {
       "\n": -0.021144304
      },
      {
       " walk": -0.005278466
      },
      {
       "('": -0.0044906423
      },
      {
       "bath": -0.001627651
      },
      {
       "room": -0.0001319253
      },
      {
       "')": -0.0015677718
      },
      {
       "\n": -0.007464344
      },
      {
       " #": -0.003660964
      },
      {
       " 1": -0.0037791824
      },
      {
       ":": -0.0010352256
      },
      {
       " find": -0.156251
      },
      {
       " cleaning": -1.4481449
      },
      {
       " cleaner": -1.1440697
      },
      {
       "\n": -0.029749356
      },
      {
       " find": -0.15326044
      },
      {
       "('": -0.0015018062
      },
      {
       "bath": -0.2674857
      },
      {
       "room": -0.002116072
      },
      {
       "_": -0.020883657
      },
      {
       "s": -0.0015021657
      },
      {
       "ink": -9.091469e-05
      },
      {
       "')": -0.0029710147
      },
      {
       "\n": -0.006183791
      },
      {
       " #": -0.01405531
      },
      {
       " 2": -0.003865402
      },
      {
       ":": -0.001155999
      },
      {
       " turn": -1.1091814
      },
      {
       " water": -0.4081929
      },
      {
       "\n": -0.6847094
      },
      {
       " assert": -0.8734577
      },
      {
       "('": -0.002311832
      },
      {
       "close": -0.010056486
      },
      {
       "'": -0.004216102
      },
      {
       " to": -0.0011688266
      },
      {
       " '": -0.0018662483
      },
      {
       "bath": -0.12712517
      },
      {
       "room": -0.00056450826
      },
      {
       "_": -0.003191217
      },
      {
       "s": -0.0007449901
      },
      {
       "ink": -0.00022814641
      },
      {
       "')": -0.010383828
      },
      {
       "\n": -0.005771313
      },
      {
       " else": -0.0013885148
      },
      {
       ":": -0.0020293463
      },
      {
       " find": -0.007493948
      },
      {
       "('": -0.002406529
      },
      {
       "bath": -0.0019305066
      },
      {
       "room": -0.00034786668
      },
      {
       "_": -0.00076425495
      },
      {
       "s": -0.0007748749
      },
      {
       "ink": -0.000101643476
      },
      {
       "')": -0.005334554
      },
      {
       "\n": -0.008281956
      },
      {
       " run": -0.5056326
      },
      {
       "on": -0.024854677
      },
      {
       "('": -0.0053042937
      },
      {
       "bath": -0.85340816
      },
      {
       "auc": -0.00092365383
      },
      {
       "et": -0.0012244435
      },
      {
       "')": -0.006510106
      },
      {
       "\n": -0.0076917214
      },
      {
       " #": -0.33657116
      },
      {
       " 3": -0.006001785
      },
      {
       ":": -0.0010173838
      },
      {
       " grab": -1.0180887
      },
      {
       " sponge": -1.4213493
      },
      {
       "\n": -0.16310553
      },
      {
       " find": -0.58143425
      },
      {
       "('": -0.0018735944
      },
      {
       "so": -0.0013974067
      },
      {
       "ap": -0.0002640958
      },
      {
       "')": -0.0019535597
      },
      {
       "\n": -0.0048303637
      },
      {
       " #": -0.15792225
      },
      {
       " 4": -0.0050619985
      },
      {
       ":": -0.000723756
      },
      {
       " wash": -0.354323
      },
      {
       " sink": -0.60621816
      },
      {
       " wash": -0.5423209
      },
      {
       "('": -0.0034583595
      },
      {
       "so": -0.34934548
      },
      {
       "ap": -0.00023655016
      },
      {
       "')": -0.004531715
      },
      {
       "\n": -0.008486378
      },
      {
       " #": -0.13955054
      },
      {
       " 5": -0.004349052
      },
      {
       ":": -0.0016821612
      },
      {
       " turn": -1.3717129
      },
      {
       " water": -0.589242
      },
      {
       " water": -0.40662184
      },
      {
       "\n": -0.030556774
      },
      {
       " pour": -0.71182764
      },
      {
       "off": -0.012605236
      },
      {
       "('": -0.0011359475
      },
      {
       "f": -0.0023539513
      },
      {
       "auc": -0.0003290824
      },
      {
       "et": -0.00013991416
      },
      {
       "')": -0.0020827423
      },
      {
       "\n": -0.03502394
      },
      {
       " #": -0.034965236
      },
      {
       " 6": -0.0039241607
      },
      {
       ":": -0.0019378514
      },
      {
       " grab": -1.0204736
      },
      {
       " sink": -0.91885644
      },
      {
       " sink": -0.11233229
      },
      {
       "\n": -0.033626013
      },
      {
       " wipe": -0.3580634
      },
      {
       "('": -0.0011562373
      },
      {
       "bath": -0.50059056
      },
      {
       "room": -0.0004210298
      },
      {
       "_": -0.0010503792
      },
      {
       "s": -0.00047940828
      },
      {
       "ink": -0.00018533925
      },
      {
       "')": -0.0030302005
      },
      {
       "\n": -0.028428202
      },
      {
       " #": -0.015119217
      },
      {
       " 7": -0.008821259
      },
      {
       ":": -0.0020426668
      },
      {
       " Done": -0.820112
      }
     ],
     "text_offset": [
      3378,
      3380,
      3382,
      3383,
      3388,
      3391,
      3400,
      3401,
      3406,
      3408,
      3412,
      3416,
      3418,
      3419,
      3421,
      3423,
      3424,
      3429,
      3438,
      3443,
      3444,
      3449,
      3451,
      3455,
      3459,
      3460,
      3461,
      3464,
      3466,
      3467,
      3469,
      3471,
      3472,
      3476,
      3482,
      3483,
      3490,
      3492,
      3497,
      3498,
      3501,
      3503,
      3507,
      3511,
      3512,
      3513,
      3516,
      3518,
      3519,
      3524,
      3525,
      3530,
      3532,
      3536,
      3540,
      3541,
      3542,
      3545,
      3547,
      3548,
      3553,
      3555,
      3557,
      3558,
      3561,
      3563,
      3565,
      3566,
      3568,
      3570,
      3571,
      3576,
      3581,
      3582,
      3587,
      3589,
      3591,
      3593,
      3595,
      3596,
      3598,
      3600,
      3601,
      3606,
      3607,
      3612,
      3614,
      3616,
      3618,
      3620,
      3621,
      3623,
      3625,
      3626,
      3631,
      3635,
      3641,
      3642,
      3647,
      3650,
      3652,
      3653,
      3656,
      3658,
      3660,
      3661,
      3663,
      3665,
      3666,
      3671,
      3675,
      3680,
      3681,
      3686,
      3688,
      3692,
      3696,
      3697,
      3698,
      3701,
      3703,
      3704,
      3706,
      3708,
      3709
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Clean bathroom",
   "task_description": "I'm going to clean the bathroom, take the brush, wash and rinse the toilet and shower",
   "program": [
    "[Walk] <bathroom> (1)",
    "[Walk] <brush> (1)",
    "[Find] <brush> (1)",
    "[Grab] <brush> (1)",
    "[Find] <detergent> (1)",
    "[Grab] <detergent> (1)",
    "[Find] <toilet> (1)",
    "[PutBack] <detergent> (1) <toilet> (1)",
    "[Find] <toilet> (1)",
    "[Scrub] <toilet> (1)",
    "[Rinse] <toilet> (1)",
    "[Find] <shower> (1)",
    "[Scrub] <shower> (1)",
    "[Rinse] <shower> (1)"
   ],
   "batch": "results_intentions_march-13-18",
   "file_id": "file367_1",
   "goal_condition": [
    [
     [
      247,
      149,
      "INSIDE",
      "character",
      "bathroom"
     ],
     [
      1001,
      166,
      "ON",
      "detergent",
      "toilet"
     ],
     [
      247,
      1000,
      "HOLDS_RH",
      "character",
      "brush"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1182,
   "completion_tokens": 125,
   "total_tokens": 1307
  }
 },
 "19": {
  "plan": [
   [
    " # 0: find the phone\n find('phone')\n # 1: grab the phone\n grab('phone')\n # 2: turn to phone\n turnto('phone')\n # 3: point at phone\n pointat('phone')\n # 4: watch the phone\n watch('phone')\n # 5: done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " the",
      " phone",
      "\n",
      " find",
      "('",
      "phone",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " grab",
      " the",
      " phone",
      "\n",
      " grab",
      "('",
      "phone",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " turn",
      " to",
      " phone",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "phone",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " point",
      " at",
      " phone",
      "\n",
      " point",
      "at",
      "('",
      "phone",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " watch",
      " the",
      " phone",
      "\n",
      " watch",
      "('",
      "phone",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " done"
     ],
     "token_logprobs": [
      -0.018725915,
      -0.008917356,
      -0.0020015135,
      -0.7267987,
      -1.799538,
      -0.030912528,
      -0.04074784,
      -0.04130861,
      -0.0026688606,
      -0.0012243233,
      -0.0023891414,
      -0.010217072,
      -0.005368472,
      -0.002677885,
      -0.00096356997,
      -0.21284558,
      -0.11094969,
      -0.0012504057,
      -0.020415064,
      -0.68839175,
      -0.0012480187,
      -0.00019869342,
      -0.00080189493,
      -0.008633484,
      -0.5468443,
      -0.005709627,
      -0.001084271,
      -1.5347368,
      -0.3030217,
      -1.5600531,
      -0.053081725,
      -0.088365376,
      -4.072407e-05,
      -0.00017592176,
      -0.00073437026,
      -0.00027995434,
      -0.0018946736,
      -0.009700123,
      -0.30930343,
      -0.0065644626,
      -0.0013778893,
      -1.8414674,
      -0.39081144,
      -0.2523209,
      -0.019360574,
      -0.026515892,
      -0.0022902056,
      -0.0007636599,
      -0.00018116974,
      -0.00228913,
      -0.01684926,
      -0.01750159,
      -0.0071484055,
      -0.001941913,
      -3.743367,
      -0.3601334,
      -0.008670519,
      -0.014742843,
      -0.030270934,
      -0.00096380746,
      -0.00018593716,
      -0.0019533203,
      -0.08188232,
      -0.046521813,
      -0.0046183616,
      -0.0017581686,
      -2.117105
     ],
     "top_logprobs": [
      {
       " #": -0.018725915
      },
      {
       " 0": -0.008917356
      },
      {
       ":": -0.0020015135
      },
      {
       " find": -0.7267987
      },
      {
       " phone": -0.24503939
      },
      {
       " phone": -0.030912528
      },
      {
       "\n": -0.04074784
      },
      {
       " find": -0.04130861
      },
      {
       "('": -0.0026688606
      },
      {
       "phone": -0.0012243233
      },
      {
       "')": -0.0023891414
      },
      {
       "\n": -0.010217072
      },
      {
       " #": -0.005368472
      },
      {
       " 1": -0.002677885
      },
      {
       ":": -0.00096356997
      },
      {
       " grab": -0.21284558
      },
      {
       " the": -0.11094969
      },
      {
       " phone": -0.0012504057
      },
      {
       "\n": -0.020415064
      },
      {
       " grab": -0.68839175
      },
      {
       "('": -0.0012480187
      },
      {
       "phone": -0.00019869342
      },
      {
       "')": -0.00080189493
      },
      {
       "\n": -0.008633484
      },
      {
       " #": -0.5468443
      },
      {
       " 2": -0.005709627
      },
      {
       ":": -0.001084271
      },
      {
       " turn": -1.5347368
      },
      {
       " to": -0.3030217
      },
      {
       " the": -0.31226382
      },
      {
       "\n": -0.053081725
      },
      {
       " tur": -0.088365376
      },
      {
       "nt": -4.072407e-05
      },
      {
       "o": -0.00017592176
      },
      {
       "('": -0.00073437026
      },
      {
       "phone": -0.00027995434
      },
      {
       "')": -0.0018946736
      },
      {
       "\n": -0.009700123
      },
      {
       " #": -0.30930343
      },
      {
       " 3": -0.0065644626
      },
      {
       ":": -0.0013778893
      },
      {
       " look": -0.67613745
      },
      {
       " at": -0.39081144
      },
      {
       " phone": -0.2523209
      },
      {
       "\n": -0.019360574
      },
      {
       " point": -0.026515892
      },
      {
       "at": -0.0022902056
      },
      {
       "('": -0.0007636599
      },
      {
       "phone": -0.00018116974
      },
      {
       "')": -0.00228913
      },
      {
       "\n": -0.01684926
      },
      {
       " #": -0.01750159
      },
      {
       " 4": -0.0071484055
      },
      {
       ":": -0.001941913
      },
      {
       " Done": -0.9506881
      },
      {
       " the": -0.3601334
      },
      {
       " phone": -0.008670519
      },
      {
       "\n": -0.014742843
      },
      {
       " watch": -0.030270934
      },
      {
       "('": -0.00096380746
      },
      {
       "phone": -0.00018593716
      },
      {
       "')": -0.0019533203
      },
      {
       "\n": -0.08188232
      },
      {
       " #": -0.046521813
      },
      {
       " 5": -0.0046183616
      },
      {
       ":": -0.0017581686
      },
      {
       " Done": -0.763597
      }
     ],
     "text_offset": [
      3377,
      3379,
      3381,
      3382,
      3387,
      3391,
      3397,
      3398,
      3403,
      3405,
      3410,
      3412,
      3413,
      3415,
      3417,
      3418,
      3423,
      3427,
      3433,
      3434,
      3439,
      3441,
      3446,
      3448,
      3449,
      3451,
      3453,
      3454,
      3459,
      3462,
      3468,
      3469,
      3473,
      3475,
      3476,
      3478,
      3483,
      3485,
      3486,
      3488,
      3490,
      3491,
      3497,
      3500,
      3506,
      3507,
      3513,
      3515,
      3517,
      3522,
      3524,
      3525,
      3527,
      3529,
      3530,
      3536,
      3540,
      3546,
      3547,
      3553,
      3555,
      3560,
      3562,
      3563,
      3565,
      3567,
      3568
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Pick up phone",
   "task_description": "I go to my home office. I walk towards my desk. I see the phone. I pick it up.",
   "program": [
    "[Walk] <home_office> (1)",
    "[Walk] <desk> (1)",
    "[Find] <phone> (1)",
    "[TurnTo] <phone> (1)",
    "[LookAt] <phone> (1)",
    "[Grab] <phone> (1)"
   ],
   "batch": "results_intentions_march-13-18",
   "file_id": "file870_1",
   "goal_condition": [
    [
     [
      247,
      1000,
      "HOLDS_RH",
      "character",
      "phone"
     ],
     [
      247,
      248,
      "INSIDE",
      "character",
      "home_office"
     ],
     [
      247,
      1000,
      "FACING",
      "character",
      "phone"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1183,
   "completion_tokens": 67,
   "total_tokens": 1250
  }
 },
 "20": {
  "plan": [
   [
    " # 0: walk in to bathroom\n walk('bathroom')\n # 1: find toilet\n walk('toilet')\n find('toilet')\n # 2: sit on the toilet\n assert('close' to 'toilet')\n else: find('toilet')\n sit('toilet')\n # 3: flush the toilet\n flush('toilet')\n # 4: stand up\n standup()",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " in",
      " to",
      " bathroom",
      "\n",
      " walk",
      "('",
      "bath",
      "room",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " toilet",
      "\n",
      " walk",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " find",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " sit",
      " on",
      " the",
      " toilet",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "to",
      "ilet",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " sit",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " flush",
      " the",
      " toilet",
      "\n",
      " flush",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " stand",
      " up",
      "\n",
      " stand",
      "up",
      "()"
     ],
     "token_logprobs": [
      -0.01638419,
      -0.008640817,
      -0.00279001,
      -0.14101297,
      -1.6661125,
      -0.05194947,
      -0.16782174,
      -0.016809434,
      -0.003795096,
      -0.0045162705,
      -0.0026300729,
      -0.00018402888,
      -0.0014403837,
      -0.004836172,
      -0.0022294496,
      -0.002905316,
      -0.0007429607,
      -0.09317915,
      -0.060566876,
      -0.021995984,
      -0.99558395,
      -0.0018417056,
      -0.0018104156,
      -0.00029199722,
      -0.0027464982,
      -0.004340613,
      -0.017001541,
      -0.0006642277,
      -0.00046968853,
      -0.0007789308,
      -0.00083989615,
      -0.0034187674,
      -0.005631758,
      -0.0050703255,
      -0.00063583726,
      -0.5573854,
      -0.07700053,
      -1.0162563,
      -0.0036333257,
      -0.021660075,
      -1.4695156,
      -0.001012133,
      -0.001479899,
      -0.0025130664,
      -0.00034726874,
      -0.0010303333,
      -0.0014396667,
      -4.394177e-05,
      -0.0040048882,
      -0.004335763,
      -0.0015145822,
      -0.0010391604,
      -0.005970006,
      -0.0012414537,
      -0.00047678567,
      -0.00012799047,
      -0.0010821836,
      -0.0051534814,
      -0.27666894,
      -0.00094137463,
      -0.0003272952,
      -3.5357807e-05,
      -0.001748078,
      -0.027660612,
      -0.041905504,
      -0.008015569,
      -0.0014108961,
      -1.7672486,
      -0.34375656,
      -0.0035488587,
      -0.04953445,
      -0.46054155,
      -0.009185129,
      -0.00081466336,
      -0.00012882493,
      -0.0024700435,
      -0.05103952,
      -0.026862742,
      -0.0051864325,
      -0.0015621595,
      -1.033857,
      -0.09704542,
      -0.5894934,
      -0.047163304,
      -0.005005807,
      -0.10897281
     ],
     "top_logprobs": [
      {
       " #": -0.01638419
      },
      {
       " 0": -0.008640817
      },
      {
       ":": -0.00279001
      },
      {
       " walk": -0.14101297
      },
      {
       " to": -0.2602765
      },
      {
       " to": -0.05194947
      },
      {
       " bathroom": -0.16782174
      },
      {
       "\n": -0.016809434
      },
      {
       " walk": -0.003795096
      },
      {
       "('": -0.0045162705
      },
      {
       "bath": -0.0026300729
      },
      {
       "room": -0.00018402888
      },
      {
       "')": -0.0014403837
      },
      {
       "\n": -0.004836172
      },
      {
       " #": -0.0022294496
      },
      {
       " 1": -0.002905316
      },
      {
       ":": -0.0007429607
      },
      {
       " find": -0.09317915
      },
      {
       " toilet": -0.060566876
      },
      {
       "\n": -0.021995984
      },
      {
       " find": -0.4953427
      },
      {
       "('": -0.0018417056
      },
      {
       "to": -0.0018104156
      },
      {
       "ilet": -0.00029199722
      },
      {
       "')": -0.0027464982
      },
      {
       "\n": -0.004340613
      },
      {
       " find": -0.017001541
      },
      {
       "('": -0.0006642277
      },
      {
       "to": -0.00046968853
      },
      {
       "ilet": -0.0007789308
      },
      {
       "')": -0.00083989615
      },
      {
       "\n": -0.0034187674
      },
      {
       " #": -0.005631758
      },
      {
       " 2": -0.0050703255
      },
      {
       ":": -0.00063583726
      },
      {
       " sit": -0.5573854
      },
      {
       " on": -0.07700053
      },
      {
       " toilet": -0.47525987
      },
      {
       " toilet": -0.0036333257
      },
      {
       "\n": -0.021660075
      },
      {
       " tur": -0.51875746
      },
      {
       "('": -0.001012133
      },
      {
       "close": -0.001479899
      },
      {
       "'": -0.0025130664
      },
      {
       " to": -0.00034726874
      },
      {
       " '": -0.0010303333
      },
      {
       "to": -0.0014396667
      },
      {
       "ilet": -4.394177e-05
      },
      {
       "')": -0.0040048882
      },
      {
       "\n": -0.004335763
      },
      {
       " else": -0.0015145822
      },
      {
       ":": -0.0010391604
      },
      {
       " find": -0.005970006
      },
      {
       "('": -0.0012414537
      },
      {
       "to": -0.00047678567
      },
      {
       "ilet": -0.00012799047
      },
      {
       "')": -0.0010821836
      },
      {
       "\n": -0.0051534814
      },
      {
       " sit": -0.27666894
      },
      {
       "('": -0.00094137463
      },
      {
       "to": -0.0003272952
      },
      {
       "ilet": -3.5357807e-05
      },
      {
       "')": -0.001748078
      },
      {
       "\n": -0.027660612
      },
      {
       " #": -0.041905504
      },
      {
       " 3": -0.008015569
      },
      {
       ":": -0.0014108961
      },
      {
       " do": -0.9234232
      },
      {
       " the": -0.34375656
      },
      {
       " toilet": -0.0035488587
      },
      {
       "\n": -0.04953445
      },
      {
       " flush": -0.46054155
      },
      {
       "('": -0.009185129
      },
      {
       "to": -0.00081466336
      },
      {
       "ilet": -0.00012882493
      },
      {
       "')": -0.0024700435
      },
      {
       "\n": -0.05103952
      },
      {
       " #": -0.026862742
      },
      {
       " 4": -0.0051864325
      },
      {
       ":": -0.0015621595
      },
      {
       " stand": -1.033857
      },
      {
       " up": -0.09704542
      },
      {
       "\n": -0.5894934
      },
      {
       " stand": -0.047163304
      },
      {
       "up": -0.005005807
      },
      {
       "()": -0.10897281
      }
     ],
     "text_offset": [
      3376,
      3378,
      3380,
      3381,
      3386,
      3389,
      3392,
      3401,
      3402,
      3407,
      3409,
      3413,
      3417,
      3419,
      3420,
      3422,
      3424,
      3425,
      3430,
      3437,
      3438,
      3443,
      3445,
      3447,
      3451,
      3453,
      3454,
      3459,
      3461,
      3463,
      3467,
      3469,
      3470,
      3472,
      3474,
      3475,
      3479,
      3482,
      3486,
      3493,
      3494,
      3501,
      3503,
      3508,
      3509,
      3512,
      3514,
      3516,
      3520,
      3522,
      3523,
      3528,
      3529,
      3534,
      3536,
      3538,
      3542,
      3544,
      3545,
      3549,
      3551,
      3553,
      3557,
      3559,
      3560,
      3562,
      3564,
      3565,
      3571,
      3575,
      3582,
      3583,
      3589,
      3591,
      3593,
      3597,
      3599,
      3600,
      3602,
      3604,
      3605,
      3611,
      3614,
      3615,
      3621,
      3623
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Go to toilet",
   "task_description": "I walk to the entrance of the bathroom. I turn to the door. I open the door to the bathroom. I walk inside of the bathroom. I find the toilet inside of the bathroom and walk over to it. I turn and look at the toilet.",
   "program": [
    "[Walk] <bathroom> (1)",
    "[Walk] <toilet> (1)",
    "[Find] <toilet> (1)",
    "[TurnTo] <toilet> (1)",
    "[LookAt] <toilet> (1)",
    "[Walk] <toilet> (1)",
    "[TurnTo] <toilet> (1)"
   ],
   "batch": "results_intentions_march-13-18",
   "file_id": "file496_1",
   "goal_condition": [
    [
     [
      247,
      166,
      "FACING",
      "character",
      "toilet"
     ],
     [
      247,
      149,
      "INSIDE",
      "character",
      "bathroom"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1184,
   "completion_tokens": 86,
   "total_tokens": 1270
  }
 }
}