{
 "0": {
  "plan": [
   [
    " # 0: find laptop\n find('laptop')\n # 1: find power socket\n find('powersocket')\n # 2: connect laptop to power socket\n plug('laptop', 'powersocket')\n # 3: open laptop\n assert('close' to 'laptop')\n else: find('laptop')\n open('laptop')\n # 4: press the power button\n press('power_button')\n # 5: Done\n",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " laptop",
      "\n",
      " find",
      "('",
      "l",
      "aptop",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " power",
      " socket",
      "\n",
      " find",
      "('",
      "powers",
      "ocket",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " connect",
      " laptop",
      " to",
      " power",
      " socket",
      "\n",
      " plug",
      "('",
      "l",
      "aptop",
      "',",
      " '",
      "powers",
      "ocket",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " open",
      " laptop",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "l",
      "aptop",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "l",
      "aptop",
      "')",
      "\n",
      " open",
      "('",
      "l",
      "aptop",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " press",
      " the",
      " power",
      " button",
      "\n",
      " press",
      "('",
      "power",
      "_",
      "button",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " Done",
      "\n"
     ],
     "token_logprobs": [
      -0.0156001635,
      -0.007446148,
      -0.0016680702,
      -1.4024136,
      -1.5249814,
      -0.037688274,
      -0.046062026,
      -0.0022593795,
      -0.002514021,
      -0.0005219864,
      -0.0025038049,
      -0.008594705,
      -0.006021935,
      -0.0036488802,
      -0.0006959005,
      -2.4777925,
      -0.4239552,
      -0.06759582,
      -0.031091066,
      -0.0827199,
      -0.0012263537,
      -0.53499967,
      -0.0007842989,
      -0.0014023026,
      -0.0062737004,
      -0.010290239,
      -0.0046881246,
      -0.000670909,
      -3.0705245,
      -0.55708414,
      -0.07661956,
      -0.19707559,
      -0.025988005,
      -0.01624945,
      -1.4625993,
      -0.26733053,
      -0.23323135,
      -0.0002429912,
      -0.7523924,
      -0.0051323334,
      -0.0340465,
      -0.0007983168,
      -0.002546351,
      -0.012207537,
      -0.011679668,
      -0.004665906,
      -0.0012252779,
      -1.9081435,
      -0.19302411,
      -0.1394692,
      -1.6196667,
      -0.0023654837,
      -0.13334362,
      -0.003315421,
      -0.0013544315,
      -0.004543691,
      -0.0036370945,
      -0.00010522067,
      -0.008309482,
      -0.0048891804,
      -0.003234152,
      -0.0021951608,
      -0.0066919047,
      -0.0020252839,
      -0.0016632335,
      -4.9069615e-05,
      -0.0022519117,
      -0.0067697945,
      -0.038599774,
      -0.0026929446,
      -0.0007991522,
      -3.058758e-05,
      -0.0013534761,
      -0.009901887,
      -0.010827076,
      -0.007348273,
      -0.001744374,
      -1.6190026,
      -1.4129514,
      -0.059630837,
      -0.025507055,
      -0.07367864,
      -0.74341404,
      -0.033601783,
      -0.23427472,
      -0.4088885,
      -0.002707946,
      -0.01872877,
      -0.193226,
      -0.030861197,
      -0.0049520745,
      -0.0018105349,
      -0.46729276,
      -0.43163112
     ],
     "top_logprobs": [
      {
       " #": -0.0156001635
      },
      {
       " 0": -0.007446148
      },
      {
       ":": -0.0016680702
      },
      {
       " walk": -0.35566637
      },
      {
       " computer": -0.6648176
      },
      {
       "\n": -0.037688274
      },
      {
       " find": -0.046062026
      },
      {
       "('": -0.0022593795
      },
      {
       "l": -0.002514021
      },
      {
       "aptop": -0.0005219864
      },
      {
       "')": -0.0025038049
      },
      {
       "\n": -0.008594705
      },
      {
       " #": -0.006021935
      },
      {
       " 1": -0.0036488802
      },
      {
       ":": -0.0006959005
      },
      {
       " open": -0.6007803
      },
      {
       " power": -0.4239552
      },
      {
       " socket": -0.06759582
      },
      {
       "\n": -0.031091066
      },
      {
       " find": -0.0827199
      },
      {
       "('": -0.0012263537
      },
      {
       "powers": -0.53499967
      },
      {
       "ocket": -0.0007842989
      },
      {
       "')": -0.0014023026
      },
      {
       "\n": -0.0062737004
      },
      {
       " #": -0.010290239
      },
      {
       " 2": -0.0046881246
      },
      {
       ":": -0.000670909
      },
      {
       " plug": -0.3667608
      },
      {
       " laptop": -0.55708414
      },
      {
       " to": -0.07661956
      },
      {
       " power": -0.19707559
      },
      {
       " socket": -0.025988005
      },
      {
       "\n": -0.01624945
      },
      {
       " assert": -0.792111
      },
      {
       "('": -0.26733053
      },
      {
       "l": -0.23323135
      },
      {
       "aptop": -0.0002429912
      },
      {
       "',": -0.7523924
      },
      {
       " '": -0.0051323334
      },
      {
       "powers": -0.0340465
      },
      {
       "ocket": -0.0007983168
      },
      {
       "')": -0.002546351
      },
      {
       "\n": -0.012207537
      },
      {
       " #": -0.011679668
      },
      {
       " 3": -0.004665906
      },
      {
       ":": -0.0012252779
      },
      {
       " turn": -0.65336084
      },
      {
       " laptop": -0.19302411
      },
      {
       "\n": -0.1394692
      },
      {
       " open": -0.28540286
      },
      {
       "('": -0.0023654837
      },
      {
       "close": -0.13334362
      },
      {
       "'": -0.003315421
      },
      {
       " to": -0.0013544315
      },
      {
       " '": -0.004543691
      },
      {
       "l": -0.0036370945
      },
      {
       "aptop": -0.00010522067
      },
      {
       "')": -0.008309482
      },
      {
       "\n": -0.0048891804
      },
      {
       " else": -0.003234152
      },
      {
       ":": -0.0021951608
      },
      {
       " find": -0.0066919047
      },
      {
       "('": -0.0020252839
      },
      {
       "l": -0.0016632335
      },
      {
       "aptop": -4.9069615e-05
      },
      {
       "')": -0.0022519117
      },
      {
       "\n": -0.0067697945
      },
      {
       " open": -0.038599774
      },
      {
       "('": -0.0026929446
      },
      {
       "l": -0.0007991522
      },
      {
       "aptop": -3.058758e-05
      },
      {
       "')": -0.0013534761
      },
      {
       "\n": -0.009901887
      },
      {
       " #": -0.010827076
      },
      {
       " 4": -0.007348273
      },
      {
       ":": -0.001744374
      },
      {
       " turn": -0.66762084
      },
      {
       " power": -0.35706788
      },
      {
       " power": -0.059630837
      },
      {
       " button": -0.025507055
      },
      {
       "\n": -0.07367864
      },
      {
       " press": -0.74341404
      },
      {
       "('": -0.033601783
      },
      {
       "power": -0.23427472
      },
      {
       "_": -0.4088885
      },
      {
       "button": -0.002707946
      },
      {
       "')": -0.01872877
      },
      {
       "\n": -0.193226
      },
      {
       " #": -0.030861197
      },
      {
       " 5": -0.0049520745
      },
      {
       ":": -0.0018105349
      },
      {
       " Done": -0.46729276
      },
      {
       "\n": -0.43163112
      }
     ],
     "text_offset": [
      3380,
      3382,
      3384,
      3385,
      3390,
      3397,
      3398,
      3403,
      3405,
      3406,
      3411,
      3413,
      3414,
      3416,
      3418,
      3419,
      3424,
      3430,
      3437,
      3438,
      3443,
      3445,
      3451,
      3456,
      3458,
      3459,
      3461,
      3463,
      3464,
      3472,
      3479,
      3482,
      3488,
      3495,
      3496,
      3501,
      3503,
      3504,
      3509,
      3511,
      3513,
      3519,
      3524,
      3526,
      3527,
      3529,
      3531,
      3532,
      3537,
      3544,
      3545,
      3552,
      3554,
      3559,
      3560,
      3563,
      3565,
      3566,
      3571,
      3573,
      3574,
      3579,
      3580,
      3585,
      3587,
      3588,
      3593,
      3595,
      3596,
      3601,
      3603,
      3604,
      3609,
      3611,
      3612,
      3614,
      3616,
      3617,
      3623,
      3627,
      3633,
      3640,
      3641,
      3647,
      3649,
      3654,
      3655,
      3661,
      3663,
      3664,
      3666,
      3668,
      3669,
      3674
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Turn on computer",
   "task_description": "Press the power button on the computer to turn it on",
   "program": [
    "[Walk] <home_office> (1)",
    "[Walk] <computer> (1)",
    "[SwitchOn] <computer> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_kellensecond",
   "file_id": "split1_4",
   "goal_condition": [
    [
     [
      247,
      248,
      "INSIDE",
      "character",
      "home_office"
     ]
    ],
    [
     [
      273,
      "computer",
      "ON"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1183,
   "completion_tokens": 94,
   "total_tokens": 1277
  }
 },
 "1": {
  "plan": [
   [
    " # 0: walk to bathroom\n walk('bathroom')\n # 1: find toilet\n find('toilet')\n # 2: grab toilet brush\n grab('toilet_brush')\n # 3: wash the toilet\n assert('close' to 'toilet')\n else: find('toilet')\n assert('toilet_brush' in 'hands')\n else: grab('toilet_brush')\n wash('toilet')\n # 4: put the brush back\n putobjback('toilet_brush')\n # 5: flush the toilet\n flush('toilet')\n # 6: done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " bathroom",
      "\n",
      " walk",
      "('",
      "bath",
      "room",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " toilet",
      "\n",
      " find",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " grab",
      " toilet",
      " brush",
      "\n",
      " grab",
      "('",
      "to",
      "ilet",
      "_",
      "brush",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " wash",
      " the",
      " toilet",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "to",
      "ilet",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " assert",
      "('",
      "to",
      "ilet",
      "_",
      "brush",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "to",
      "ilet",
      "_",
      "brush",
      "')",
      "\n",
      " wash",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " put",
      " the",
      " brush",
      " back",
      "\n",
      " put",
      "obj",
      "back",
      "('",
      "to",
      "ilet",
      "_",
      "brush",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " flush",
      " the",
      " toilet",
      "\n",
      " flush",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 6",
      ":",
      " done"
     ],
     "token_logprobs": [
      -0.018675873,
      -0.007980659,
      -0.0021326195,
      -0.27917653,
      -0.2492501,
      -0.28581053,
      -0.020890534,
      -0.005397175,
      -0.004152955,
      -0.0021301105,
      -0.00013061494,
      -0.0019597672,
      -0.007417023,
      -0.003262318,
      -0.003404771,
      -0.0008145432,
      -0.09989954,
      -0.13681039,
      -0.05313591,
      -0.27798226,
      -0.001029498,
      -0.00077236874,
      -0.000319663,
      -0.0026166267,
      -0.005522493,
      -0.011840393,
      -0.005150364,
      -0.0012443194,
      -1.1446289,
      -0.50934154,
      -0.5753067,
      -0.029876962,
      -0.5588017,
      -0.0012943298,
      -0.01595229,
      -0.0014907621,
      -0.08967241,
      -0.00041661627,
      -0.0027901295,
      -0.0049696234,
      -0.09785202,
      -0.0074357,
      -0.0009358863,
      -0.7934583,
      -0.8613557,
      -0.012258645,
      -0.11776997,
      -0.840445,
      -0.0018940766,
      -0.77867806,
      -0.004612373,
      -0.0011240707,
      -0.0020920613,
      -0.0050605005,
      -0.00045024627,
      -0.08792343,
      -0.0038341691,
      -0.0016086057,
      -0.0018566939,
      -0.008318618,
      -0.001717386,
      -0.00090504135,
      -0.00012107918,
      -0.0027382486,
      -0.0060105417,
      -1.0853858,
      -0.0018207474,
      -0.1356949,
      -0.0009136328,
      -0.014600459,
      -0.0003881742,
      -0.0024834876,
      -0.017256508,
      -0.005779708,
      -0.009650051,
      -0.10504195,
      -0.003891612,
      -0.0011736015,
      -0.002586328,
      -0.023207761,
      -0.0016963114,
      -0.0014163271,
      -2.6060465e-05,
      -0.0018809984,
      -0.00079420075,
      -0.003957073,
      -0.007588117,
      -0.051368512,
      -0.0011320681,
      -0.00030404294,
      -0.00011905076,
      -0.11944641,
      -0.0069298507,
      -0.6630525,
      -0.0077078193,
      -0.0011800453,
      -0.30113515,
      -1.3194661,
      -0.5613522,
      -0.016369287,
      -0.036268253,
      -0.60624725,
      -0.6780985,
      -0.0037527978,
      -0.001084271,
      -0.024534972,
      -0.00030130113,
      -0.0037471126,
      -0.0001283481,
      -0.0046492014,
      -0.22438152,
      -0.009841931,
      -0.004331154,
      -0.0019398826,
      -2.1263478,
      -0.20655414,
      -0.0019454958,
      -0.016321002,
      -0.13219705,
      -0.007155609,
      -0.00041083325,
      -0.00048000526,
      -0.0025783796,
      -0.16950822,
      -0.011481826,
      -0.004581655,
      -0.002073843,
      -1.7445788
     ],
     "top_logprobs": [
      {
       " #": -0.018675873
      },
      {
       " 0": -0.007980659
      },
      {
       ":": -0.0021326195
      },
      {
       " walk": -0.27917653
      },
      {
       " to": -0.2492501
      },
      {
       " bathroom": -0.28581053
      },
      {
       "\n": -0.020890534
      },
      {
       " walk": -0.005397175
      },
      {
       "('": -0.004152955
      },
      {
       "bath": -0.0021301105
      },
      {
       "room": -0.00013061494
      },
      {
       "')": -0.0019597672
      },
      {
       "\n": -0.007417023
      },
      {
       " #": -0.003262318
      },
      {
       " 1": -0.003404771
      },
      {
       ":": -0.0008145432
      },
      {
       " find": -0.09989954
      },
      {
       " toilet": -0.13681039
      },
      {
       "\n": -0.05313591
      },
      {
       " find": -0.27798226
      },
      {
       "('": -0.001029498
      },
      {
       "to": -0.00077236874
      },
      {
       "ilet": -0.000319663
      },
      {
       "')": -0.0026166267
      },
      {
       "\n": -0.005522493
      },
      {
       " #": -0.011840393
      },
      {
       " 2": -0.005150364
      },
      {
       ":": -0.0012443194
      },
      {
       " grab": -1.1446289
      },
      {
       " toilet": -0.50934154
      },
      {
       " brush": -0.5753067
      },
      {
       "\n": -0.029876962
      },
      {
       " grab": -0.5588017
      },
      {
       "('": -0.0012943298
      },
      {
       "to": -0.01595229
      },
      {
       "ilet": -0.0014907621
      },
      {
       "_": -0.08967241
      },
      {
       "brush": -0.00041661627
      },
      {
       "')": -0.0027901295
      },
      {
       "\n": -0.0049696234
      },
      {
       " #": -0.09785202
      },
      {
       " 3": -0.0074357
      },
      {
       ":": -0.0009358863
      },
      {
       " wash": -0.7934583
      },
      {
       " toilet": -0.61530286
      },
      {
       " toilet": -0.012258645
      },
      {
       "\n": -0.11776997
      },
      {
       " assert": -0.840445
      },
      {
       "('": -0.0018940766
      },
      {
       "to": -0.70646584
      },
      {
       "'": -0.004612373
      },
      {
       " to": -0.0011240707
      },
      {
       " '": -0.0020920613
      },
      {
       "to": -0.0050605005
      },
      {
       "ilet": -0.00045024627
      },
      {
       "')": -0.08792343
      },
      {
       "\n": -0.0038341691
      },
      {
       " else": -0.0016086057
      },
      {
       ":": -0.0018566939
      },
      {
       " find": -0.008318618
      },
      {
       "('": -0.001717386
      },
      {
       "to": -0.00090504135
      },
      {
       "ilet": -0.00012107918
      },
      {
       "')": -0.0027382486
      },
      {
       "\n": -0.0060105417
      },
      {
       " wash": -0.5134043
      },
      {
       "('": -0.0018207474
      },
      {
       "to": -0.1356949
      },
      {
       "ilet": -0.0009136328
      },
      {
       "_": -0.014600459
      },
      {
       "brush": -0.0003881742
      },
      {
       "'": -0.0024834876
      },
      {
       " in": -0.017256508
      },
      {
       " '": -0.005779708
      },
      {
       "hands": -0.009650051
      },
      {
       "')": -0.10504195
      },
      {
       "\n": -0.003891612
      },
      {
       " else": -0.0011736015
      },
      {
       ":": -0.002586328
      },
      {
       " grab": -0.023207761
      },
      {
       "('": -0.0016963114
      },
      {
       "to": -0.0014163271
      },
      {
       "ilet": -2.6060465e-05
      },
      {
       "_": -0.0018809984
      },
      {
       "brush": -0.00079420075
      },
      {
       "')": -0.003957073
      },
      {
       "\n": -0.007588117
      },
      {
       " wash": -0.051368512
      },
      {
       "('": -0.0011320681
      },
      {
       "to": -0.00030404294
      },
      {
       "ilet": -0.00011905076
      },
      {
       "')": -0.11944641
      },
      {
       "\n": -0.0069298507
      },
      {
       " #": -0.6630525
      },
      {
       " 4": -0.0077078193
      },
      {
       ":": -0.0011800453
      },
      {
       " put": -0.30113515
      },
      {
       " toilet": -1.2732539
      },
      {
       " brush": -0.5613522
      },
      {
       " back": -0.016369287
      },
      {
       "\n": -0.036268253
      },
      {
       " put": -0.60624725
      },
      {
       "obj": -0.6780985
      },
      {
       "back": -0.0037527978
      },
      {
       "('": -0.001084271
      },
      {
       "to": -0.024534972
      },
      {
       "ilet": -0.00030130113
      },
      {
       "_": -0.0037471126
      },
      {
       "brush": -0.0001283481
      },
      {
       "')": -0.0046492014
      },
      {
       "\n": -0.22438152
      },
      {
       " #": -0.009841931
      },
      {
       " 5": -0.004331154
      },
      {
       ":": -0.0019398826
      },
      {
       " Done": -0.6453
      },
      {
       " the": -0.20655414
      },
      {
       " toilet": -0.0019454958
      },
      {
       "\n": -0.016321002
      },
      {
       " flush": -0.13219705
      },
      {
       "('": -0.007155609
      },
      {
       "to": -0.00041083325
      },
      {
       "ilet": -0.00048000526
      },
      {
       "')": -0.0025783796
      },
      {
       "\n": -0.16950822
      },
      {
       " #": -0.011481826
      },
      {
       " 6": -0.004581655
      },
      {
       ":": -0.002073843
      },
      {
       " Done": -0.49456742
      }
     ],
     "text_offset": [
      3376,
      3378,
      3380,
      3381,
      3386,
      3389,
      3398,
      3399,
      3404,
      3406,
      3410,
      3414,
      3416,
      3417,
      3419,
      3421,
      3422,
      3427,
      3434,
      3435,
      3440,
      3442,
      3444,
      3448,
      3450,
      3451,
      3453,
      3455,
      3456,
      3461,
      3468,
      3474,
      3475,
      3480,
      3482,
      3484,
      3488,
      3489,
      3494,
      3496,
      3497,
      3499,
      3501,
      3502,
      3507,
      3511,
      3518,
      3519,
      3526,
      3528,
      3533,
      3534,
      3537,
      3539,
      3541,
      3545,
      3547,
      3548,
      3553,
      3554,
      3559,
      3561,
      3563,
      3567,
      3569,
      3570,
      3577,
      3579,
      3581,
      3585,
      3586,
      3591,
      3592,
      3595,
      3597,
      3602,
      3604,
      3605,
      3610,
      3611,
      3616,
      3618,
      3620,
      3624,
      3625,
      3630,
      3632,
      3633,
      3638,
      3640,
      3642,
      3646,
      3648,
      3649,
      3651,
      3653,
      3654,
      3658,
      3662,
      3668,
      3673,
      3674,
      3678,
      3681,
      3685,
      3687,
      3689,
      3693,
      3694,
      3699,
      3701,
      3702,
      3704,
      3706,
      3707,
      3713,
      3717,
      3724,
      3725,
      3731,
      3733,
      3735,
      3739,
      3741,
      3742,
      3744,
      3746,
      3747
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Clean toilet",
   "task_description": "Use the toilet bowl cleaner and squeeze it around the inside of toilet bowl. Let it sit in there while you clean the rest of the toilet. Spray the all purpose cleaner on top of toilet, sides, bottom, and on and under the seat and lid. Wipe down toilet with paper towels on all the areas you sprayed the cleaner. Now using the toilet brush, scrub the inside bowl around completely in all areas.",
   "program": [
    "[Find] <brush> (1)",
    "[TurnTo] <brush> (1)",
    "[PointAt] <brush> (1)",
    "[Wash] <brush> (1)",
    "[TurnTo] <brush> (1)",
    "[LookAt] <brush> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_turk_robot",
   "file_id": "split67_2",
   "goal_condition": [
    [
     [
      247,
      1000,
      "FACING",
      "character",
      "brush"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1182,
   "completion_tokens": 128,
   "total_tokens": 1310
  }
 },
 "2": {
  "plan": [
   [
    " # 0: walk in to bedroom\n walk('bedroom')\n # 1: find dresser\n find('dresser')\n # 2: open dresser\n assert('close' to 'dresser')\n else: find('dresser')\n open('dresser')\n # 3: look for spare change\n turnto('dresser')\n lookat('dresser')\n # 4: grab spare change\n assert('close' to 'spare_change')\n else: find('spare_change')\n grab('spare_change')\n # 5: close dresser\n assert('close' to 'dresser')\n else: find('dresser')\n close('dresser')\n # 6: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " in",
      " to",
      " bedroom",
      "\n",
      " walk",
      "('",
      "bedroom",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " dress",
      "er",
      "\n",
      " find",
      "('",
      "dress",
      "er",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " open",
      " dress",
      "er",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "dress",
      "er",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "dress",
      "er",
      "')",
      "\n",
      " open",
      "('",
      "dress",
      "er",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " look",
      " for",
      " spare",
      " change",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "dress",
      "er",
      "')",
      "\n",
      " look",
      "at",
      "('",
      "dress",
      "er",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " grab",
      " spare",
      " change",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "sp",
      "are",
      "_",
      "change",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "sp",
      "are",
      "_",
      "change",
      "')",
      "\n",
      " grab",
      "('",
      "sp",
      "are",
      "_",
      "change",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " close",
      " dress",
      "er",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "dress",
      "er",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "dress",
      "er",
      "')",
      "\n",
      " close",
      "('",
      "dress",
      "er",
      "')",
      "\n",
      " #",
      " 6",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.02229538,
      -0.011193063,
      -0.002570969,
      -0.25144368,
      -2.1043751,
      -0.05667824,
      -0.20730634,
      -0.027398078,
      -0.00556277,
      -0.006687285,
      -0.0028654449,
      -0.001632488,
      -0.007539109,
      -0.0020673936,
      -0.003061109,
      -0.0007465398,
      -0.04380692,
      -0.03696202,
      -0.0007044901,
      -0.01840658,
      -0.6760564,
      -0.00085540453,
      -0.0011145219,
      -0.00016709937,
      -0.0012785153,
      -0.00467459,
      -0.03831707,
      -0.0046616555,
      -0.0009161371,
      -0.54704005,
      -0.6422304,
      -0.0013211282,
      -0.24895625,
      -0.787604,
      -0.0018676817,
      -0.01488379,
      -0.0024895242,
      -0.00083834643,
      -0.0026474642,
      -0.0023198389,
      -0.00019750134,
      -0.0054553663,
      -0.006410522,
      -0.0016412033,
      -0.0018177005,
      -0.0057645394,
      -0.0019402403,
      -0.0015130286,
      -0.00019893186,
      -0.0025390014,
      -0.0077189323,
      -0.029664624,
      -0.0017255673,
      -0.0028221665,
      -0.0001419407,
      -0.0014994182,
      -0.008283637,
      -0.030549955,
      -0.0076995306,
      -0.0012138217,
      -2.0246053,
      -0.3765996,
      -0.32927677,
      -0.013932004,
      -0.07506394,
      -1.840392,
      -6.587617e-05,
      -0.00035860104,
      -0.0007363996,
      -0.01001693,
      -0.00026779127,
      -0.0015222819,
      -0.005359783,
      -0.044932786,
      -0.04648566,
      -0.00075059576,
      -0.022026515,
      -0.0003910371,
      -0.0019577357,
      -0.0066155205,
      -0.20655099,
      -0.0070843534,
      -0.0022657097,
      -0.6269985,
      -0.48090145,
      -0.0037566265,
      -0.03170636,
      -1.8602444,
      -0.00150109,
      -0.26499033,
      -0.0030612282,
      -0.00051447254,
      -0.003010113,
      -0.09602049,
      -0.00015386345,
      -0.060384,
      -0.00138374,
      -0.009655649,
      -0.0047839456,
      -0.0020305403,
      -0.0015188211,
      -0.09685839,
      -0.0014311315,
      -0.0014987021,
      -0.00030213463,
      -0.0021705495,
      -0.00032765282,
      -0.0031185076,
      -0.0058586053,
      -0.00938047,
      -0.001120134,
      -0.0009920279,
      -0.0003176346,
      -0.0051485063,
      -0.00018081025,
      -0.0013447015,
      -0.07547805,
      -0.059493553,
      -0.005035938,
      -0.0013285887,
      -1.1122617,
      -0.19630876,
      -0.00031346135,
      -0.034355137,
      -2.159458,
      -0.001097997,
      -0.23821473,
      -0.0015130286,
      -0.00031286344,
      -0.0010333165,
      -0.007778459,
      -0.00015565252,
      -0.0028943769,
      -0.0032455134,
      -0.0028697497,
      -0.0009205525,
      -0.0054823975,
      -0.0006661369,
      -0.00094232924,
      -0.00011535529,
      -0.002212184,
      -0.007306242,
      -0.009278913,
      -0.0006698352,
      -0.0010697717,
      -0.0001779483,
      -0.001986284,
      -0.23820625,
      -0.02005779,
      -0.005224061,
      -0.0019229823,
      -0.26080105
     ],
     "top_logprobs": [
      {
       " #": -0.02229538
      },
      {
       " 0": -0.011193063
      },
      {
       ":": -0.002570969
      },
      {
       " walk": -0.25144368
      },
      {
       " to": -0.1959861
      },
      {
       " to": -0.05667824
      },
      {
       " bedroom": -0.20730634
      },
      {
       "\n": -0.027398078
      },
      {
       " walk": -0.00556277
      },
      {
       "('": -0.006687285
      },
      {
       "bedroom": -0.0028654449
      },
      {
       "')": -0.001632488
      },
      {
       "\n": -0.007539109
      },
      {
       " #": -0.0020673936
      },
      {
       " 1": -0.003061109
      },
      {
       ":": -0.0007465398
      },
      {
       " find": -0.04380692
      },
      {
       " dress": -0.03696202
      },
      {
       "er": -0.0007044901
      },
      {
       "\n": -0.01840658
      },
      {
       " find": -0.6760564
      },
      {
       "('": -0.00085540453
      },
      {
       "dress": -0.0011145219
      },
      {
       "er": -0.00016709937
      },
      {
       "')": -0.0012785153
      },
      {
       "\n": -0.00467459
      },
      {
       " #": -0.03831707
      },
      {
       " 2": -0.0046616555
      },
      {
       ":": -0.0009161371
      },
      {
       " open": -0.54704005
      },
      {
       " dress": -0.6422304
      },
      {
       "er": -0.0013211282
      },
      {
       "\n": -0.24895625
      },
      {
       " assert": -0.787604
      },
      {
       "('": -0.0018676817
      },
      {
       "close": -0.01488379
      },
      {
       "'": -0.0024895242
      },
      {
       " to": -0.00083834643
      },
      {
       " '": -0.0026474642
      },
      {
       "dress": -0.0023198389
      },
      {
       "er": -0.00019750134
      },
      {
       "')": -0.0054553663
      },
      {
       "\n": -0.006410522
      },
      {
       " else": -0.0016412033
      },
      {
       ":": -0.0018177005
      },
      {
       " find": -0.0057645394
      },
      {
       "('": -0.0019402403
      },
      {
       "dress": -0.0015130286
      },
      {
       "er": -0.00019893186
      },
      {
       "')": -0.0025390014
      },
      {
       "\n": -0.0077189323
      },
      {
       " open": -0.029664624
      },
      {
       "('": -0.0017255673
      },
      {
       "dress": -0.0028221665
      },
      {
       "er": -0.0001419407
      },
      {
       "')": -0.0014994182
      },
      {
       "\n": -0.008283637
      },
      {
       " #": -0.030549955
      },
      {
       " 3": -0.0076995306
      },
      {
       ":": -0.0012138217
      },
      {
       " find": -0.90597105
      },
      {
       " for": -0.3765996
      },
      {
       " spare": -0.32927677
      },
      {
       " change": -0.013932004
      },
      {
       "\n": -0.07506394
      },
      {
       " look": -0.30063513
      },
      {
       "nt": -6.587617e-05
      },
      {
       "o": -0.00035860104
      },
      {
       "('": -0.0007363996
      },
      {
       "dress": -0.01001693
      },
      {
       "er": -0.00026779127
      },
      {
       "')": -0.0015222819
      },
      {
       "\n": -0.005359783
      },
      {
       " look": -0.044932786
      },
      {
       "at": -0.04648566
      },
      {
       "('": -0.00075059576
      },
      {
       "dress": -0.022026515
      },
      {
       "er": -0.0003910371
      },
      {
       "')": -0.0019577357
      },
      {
       "\n": -0.0066155205
      },
      {
       " #": -0.20655099
      },
      {
       " 4": -0.0070843534
      },
      {
       ":": -0.0022657097
      },
      {
       " grab": -0.6269985
      },
      {
       " spare": -0.48090145
      },
      {
       " change": -0.0037566265
      },
      {
       "\n": -0.03170636
      },
      {
       " grab": -0.31709552
      },
      {
       "('": -0.00150109
      },
      {
       "close": -0.26499033
      },
      {
       "'": -0.0030612282
      },
      {
       " to": -0.00051447254
      },
      {
       " '": -0.003010113
      },
      {
       "sp": -0.09602049
      },
      {
       "are": -0.00015386345
      },
      {
       "_": -0.060384
      },
      {
       "change": -0.00138374
      },
      {
       "')": -0.009655649
      },
      {
       "\n": -0.0047839456
      },
      {
       " else": -0.0020305403
      },
      {
       ":": -0.0015188211
      },
      {
       " find": -0.09685839
      },
      {
       "('": -0.0014311315
      },
      {
       "sp": -0.0014987021
      },
      {
       "are": -0.00030213463
      },
      {
       "_": -0.0021705495
      },
      {
       "change": -0.00032765282
      },
      {
       "')": -0.0031185076
      },
      {
       "\n": -0.0058586053
      },
      {
       " grab": -0.00938047
      },
      {
       "('": -0.001120134
      },
      {
       "sp": -0.0009920279
      },
      {
       "are": -0.0003176346
      },
      {
       "_": -0.0051485063
      },
      {
       "change": -0.00018081025
      },
      {
       "')": -0.0013447015
      },
      {
       "\n": -0.07547805
      },
      {
       " #": -0.059493553
      },
      {
       " 5": -0.005035938
      },
      {
       ":": -0.0013285887
      },
      {
       " put": -0.6533477
      },
      {
       " dress": -0.19630876
      },
      {
       "er": -0.00031346135
      },
      {
       "\n": -0.034355137
      },
      {
       " close": -0.17190893
      },
      {
       "('": -0.001097997
      },
      {
       "close": -0.23821473
      },
      {
       "'": -0.0015130286
      },
      {
       " to": -0.00031286344
      },
      {
       " '": -0.0010333165
      },
      {
       "dress": -0.007778459
      },
      {
       "er": -0.00015565252
      },
      {
       "')": -0.0028943769
      },
      {
       "\n": -0.0032455134
      },
      {
       " else": -0.0028697497
      },
      {
       ":": -0.0009205525
      },
      {
       " find": -0.0054823975
      },
      {
       "('": -0.0006661369
      },
      {
       "dress": -0.00094232924
      },
      {
       "er": -0.00011535529
      },
      {
       "')": -0.002212184
      },
      {
       "\n": -0.007306242
      },
      {
       " close": -0.009278913
      },
      {
       "('": -0.0006698352
      },
      {
       "dress": -0.0010697717
      },
      {
       "er": -0.0001779483
      },
      {
       "')": -0.001986284
      },
      {
       "\n": -0.23820625
      },
      {
       " #": -0.02005779
      },
      {
       " 6": -0.005224061
      },
      {
       ":": -0.0019229823
      },
      {
       " Done": -0.26080105
      }
     ],
     "text_offset": [
      3395,
      3397,
      3399,
      3400,
      3405,
      3408,
      3411,
      3419,
      3420,
      3425,
      3427,
      3434,
      3436,
      3437,
      3439,
      3441,
      3442,
      3447,
      3453,
      3455,
      3456,
      3461,
      3463,
      3468,
      3470,
      3472,
      3473,
      3475,
      3477,
      3478,
      3483,
      3489,
      3491,
      3492,
      3499,
      3501,
      3506,
      3507,
      3510,
      3512,
      3517,
      3519,
      3521,
      3522,
      3527,
      3528,
      3533,
      3535,
      3540,
      3542,
      3544,
      3545,
      3550,
      3552,
      3557,
      3559,
      3561,
      3562,
      3564,
      3566,
      3567,
      3572,
      3576,
      3582,
      3589,
      3590,
      3594,
      3596,
      3597,
      3599,
      3604,
      3606,
      3608,
      3609,
      3614,
      3616,
      3618,
      3623,
      3625,
      3627,
      3628,
      3630,
      3632,
      3633,
      3638,
      3644,
      3651,
      3652,
      3659,
      3661,
      3666,
      3667,
      3670,
      3672,
      3674,
      3677,
      3678,
      3684,
      3686,
      3687,
      3692,
      3693,
      3698,
      3700,
      3702,
      3705,
      3706,
      3712,
      3714,
      3715,
      3720,
      3722,
      3724,
      3727,
      3728,
      3734,
      3736,
      3737,
      3739,
      3741,
      3742,
      3748,
      3754,
      3756,
      3757,
      3764,
      3766,
      3771,
      3772,
      3775,
      3777,
      3782,
      3784,
      3786,
      3787,
      3792,
      3793,
      3798,
      3800,
      3805,
      3807,
      3809,
      3810,
      3816,
      3818,
      3823,
      3825,
      3827,
      3828,
      3830,
      3832,
      3833
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Pick up spare change on dresser",
   "task_description": "Locate all the coins on the dresser top. Pick them up.",
   "program": [
    "[Walk] <bedroom> (1)",
    "[Walk] <dresser> (1)",
    "[Find] <coin> (1)",
    "[Grab] <coin> (1)",
    "[Walk] <cup> (1)",
    "[PutBack] <coin> (1) <cup> (1)",
    "[Walk] <dresser> (1)",
    "[Find] <coin> (2)",
    "[Grab] <coin> (2)",
    "[Walk] <cup> (1)",
    "[PutBack] <coin> (2) <cup> (1)",
    "[Walk] <dresser> (1)",
    "[Find] <coin> (3)",
    "[Grab] <coin> (3)",
    "[Walk] <cup> (1)",
    "[PutBack] <coin> (3) <cup> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_turk_robot",
   "file_id": "split6_1",
   "goal_condition": [
    [
     [
      1003,
      1002,
      "ON",
      "coin",
      "cup"
     ],
     [
      247,
      189,
      "INSIDE",
      "character",
      "bedroom"
     ],
     [
      1001,
      1002,
      "ON",
      "coin",
      "cup"
     ],
     [
      1004,
      1002,
      "ON",
      "coin",
      "cup"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1191,
   "completion_tokens": 152,
   "total_tokens": 1343
  }
 },
 "3": {
  "plan": [
   [
    " # 0: walk to living room\n walk('living_room')\n # 1: find television\n find('television')\n # 2: turn on the television\n assert('close' to 'television')\n else: find('television')\n switchon('television')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " living",
      " room",
      "\n",
      " walk",
      "('",
      "living",
      "_",
      "room",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " television",
      "\n",
      " find",
      "('",
      "te",
      "levision",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " turn",
      " on",
      " the",
      " television",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "te",
      "levision",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "te",
      "levision",
      "')",
      "\n",
      " switch",
      "on",
      "('",
      "te",
      "levision",
      "')"
     ],
     "token_logprobs": [
      -0.0156212915,
      -0.007577907,
      -0.0015001354,
      -0.44109687,
      -0.33705005,
      -0.7046777,
      -0.050990406,
      -0.01751603,
      -0.0043478543,
      -0.0036015008,
      -0.015292962,
      -0.27173346,
      -0.00016900577,
      -0.0021878139,
      -0.0068660527,
      -0.001469571,
      -0.002629595,
      -0.00045525676,
      -0.01885625,
      -1.0932535,
      -0.015845161,
      -0.31906348,
      -0.0006149016,
      -0.004440111,
      -0.00048537247,
      -0.0013451793,
      -0.0054373294,
      -0.003165566,
      -0.004535369,
      -0.00047195444,
      -0.14830136,
      -0.010351968,
      -1.107422,
      -0.5130532,
      -0.018860381,
      -0.25286907,
      -0.00093779556,
      -0.008248121,
      -0.0022592593,
      -0.00081585546,
      -0.0013242323,
      -0.14253367,
      -0.00060428825,
      -0.0042416,
      -0.005976661,
      -0.0013780096,
      -0.0012511218,
      -0.003996092,
      -0.001421223,
      -0.001612367,
      -0.0006981674,
      -0.0030354613,
      -0.006145889,
      -0.1362679,
      -0.0022382298,
      -0.0005045725,
      -0.002469087,
      -0.00042580004,
      -0.0016708159
     ],
     "top_logprobs": [
      {
       " #": -0.0156212915
      },
      {
       " 0": -0.007577907
      },
      {
       ":": -0.0015001354
      },
      {
       " walk": -0.44109687
      },
      {
       " to": -0.33705005
      },
      {
       " living": -0.7046777
      },
      {
       " room": -0.050990406
      },
      {
       "\n": -0.01751603
      },
      {
       " walk": -0.0043478543
      },
      {
       "('": -0.0036015008
      },
      {
       "living": -0.015292962
      },
      {
       "_": -0.27173346
      },
      {
       "room": -0.00016900577
      },
      {
       "')": -0.0021878139
      },
      {
       "\n": -0.0068660527
      },
      {
       " #": -0.001469571
      },
      {
       " 1": -0.002629595
      },
      {
       ":": -0.00045525676
      },
      {
       " find": -0.01885625
      },
      {
       " tv": -0.6745153
      },
      {
       "\n": -0.015845161
      },
      {
       " find": -0.31906348
      },
      {
       "('": -0.0006149016
      },
      {
       "te": -0.004440111
      },
      {
       "levision": -0.00048537247
      },
      {
       "')": -0.0013451793
      },
      {
       "\n": -0.0054373294
      },
      {
       " #": -0.003165566
      },
      {
       " 2": -0.004535369
      },
      {
       ":": -0.00047195444
      },
      {
       " turn": -0.14830136
      },
      {
       " on": -0.010351968
      },
      {
       " tv": -0.63340867
      },
      {
       " television": -0.5130532
      },
      {
       "\n": -0.018860381
      },
      {
       " assert": -0.25286907
      },
      {
       "('": -0.00093779556
      },
      {
       "close": -0.008248121
      },
      {
       "'": -0.0022592593
      },
      {
       " to": -0.00081585546
      },
      {
       " '": -0.0013242323
      },
      {
       "te": -0.14253367
      },
      {
       "levision": -0.00060428825
      },
      {
       "')": -0.0042416
      },
      {
       "\n": -0.005976661
      },
      {
       " else": -0.0013780096
      },
      {
       ":": -0.0012511218
      },
      {
       " find": -0.003996092
      },
      {
       "('": -0.001421223
      },
      {
       "te": -0.001612367
      },
      {
       "levision": -0.0006981674
      },
      {
       "')": -0.0030354613
      },
      {
       "\n": -0.006145889
      },
      {
       " switch": -0.1362679
      },
      {
       "on": -0.0022382298
      },
      {
       "('": -0.0005045725
      },
      {
       "te": -0.002469087
      },
      {
       "levision": -0.00042580004
      },
      {
       "')": -0.0016708159
      }
     ],
     "text_offset": [
      3374,
      3376,
      3378,
      3379,
      3384,
      3387,
      3394,
      3399,
      3400,
      3405,
      3407,
      3413,
      3414,
      3418,
      3420,
      3421,
      3423,
      3425,
      3426,
      3431,
      3442,
      3443,
      3448,
      3450,
      3452,
      3460,
      3462,
      3463,
      3465,
      3467,
      3468,
      3473,
      3476,
      3480,
      3491,
      3492,
      3499,
      3501,
      3506,
      3507,
      3510,
      3512,
      3514,
      3522,
      3524,
      3525,
      3530,
      3531,
      3536,
      3538,
      3540,
      3548,
      3550,
      3551,
      3558,
      3560,
      3562,
      3564,
      3572
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Turn on TV",
   "task_description": "Sit in a chair.  Grab the remote control.  Point the remote at the television.  Press the power button.",
   "program": [
    "[Walk] <home_office> (1)",
    "[Walk] <chair> (1)",
    "[Find] <chair> (1)",
    "[Sit] <chair> (1)",
    "[Find] <remote_control> (1)",
    "[Grab] <remote_control> (1)",
    "[Find] <television> (1)",
    "[TurnTo] <television> (1)",
    "[PointAt] <television> (1)",
    "[SwitchOn] <television> (1)",
    "[PutObjBack] <remote_control> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_kellensecond",
   "file_id": "split5_9",
   "goal_condition": [
    [
     [
      247,
      254,
      "ON",
      "character",
      "chair"
     ],
     [
      247,
      248,
      "INSIDE",
      "character",
      "home_office"
     ],
     [
      247,
      278,
      "FACING",
      "character",
      "television"
     ]
    ],
    [
     [
      247,
      "character",
      "SITTING"
     ],
     [
      278,
      "television",
      "ON"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1183,
   "completion_tokens": 59,
   "total_tokens": 1242
  }
 },
 "4": {
  "plan": [
   [
    " # 0: walk to closet\n walk('closet')\n # 1: find hanger\n find('hanger')\n # 2: hang up jacket\n grab('hanger')\n assert('hanger' in 'hands')\n else: grab('hanger')\n grab('clothes_jacket')\n assert('clothes_jacket' in 'hands')\n else: grab('clothes_jacket')\n puton('clothes_jacket', 'hanger')\n # 3: put back hanger\n putback('hanger', 'closet')\n # 4: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " closet",
      "\n",
      " walk",
      "('",
      "cl",
      "os",
      "et",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " h",
      "anger",
      "\n",
      " find",
      "('",
      "h",
      "anger",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " hang",
      " up",
      " jacket",
      "\n",
      " grab",
      "('",
      "h",
      "anger",
      "')",
      "\n",
      " assert",
      "('",
      "h",
      "anger",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "h",
      "anger",
      "')",
      "\n",
      " grab",
      "('",
      "cl",
      "othes",
      "_",
      "j",
      "acket",
      "')",
      "\n",
      " assert",
      "('",
      "cl",
      "othes",
      "_",
      "j",
      "acket",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "cl",
      "othes",
      "_",
      "j",
      "acket",
      "')",
      "\n",
      " put",
      "on",
      "('",
      "cl",
      "othes",
      "_",
      "j",
      "acket",
      "',",
      " '",
      "h",
      "anger",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " put",
      " back",
      " h",
      "anger",
      "\n",
      " put",
      "back",
      "('",
      "h",
      "anger",
      "',",
      " '",
      "cl",
      "os",
      "et",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.01678749,
      -0.0072549083,
      -0.0019094244,
      -0.9735024,
      -0.30452356,
      -0.6352879,
      -0.052329388,
      -0.010505431,
      -0.0036327266,
      -0.002695096,
      -0.004541058,
      -0.0007722504,
      -0.0063550957,
      -0.007231252,
      -0.004794666,
      -0.0029484169,
      -0.0007928895,
      -0.10682072,
      -0.23343112,
      -0.011350999,
      -0.030361619,
      -0.1793632,
      -0.0010410706,
      -0.00045454057,
      -0.0005258039,
      -0.0016322485,
      -0.005007124,
      -0.016061185,
      -0.004295654,
      -0.0005628365,
      -3.5835505,
      -0.30918136,
      -0.38246027,
      -0.14449774,
      -1.094376,
      -0.0013492389,
      -1.4478573,
      -0.0030971037,
      -0.0025341008,
      -0.006748131,
      -0.56689817,
      -0.0022758078,
      -1.098666,
      -0.0026820085,
      -0.002543304,
      -0.02933724,
      -0.005543949,
      -0.015382539,
      -0.028390983,
      -0.0064543136,
      -0.007728781,
      -0.0053730872,
      -0.07190887,
      -0.0016823997,
      -0.0006906526,
      -0.00033820607,
      -0.0034156574,
      -0.0064665535,
      -1.7729508,
      -0.0013182644,
      -0.998453,
      -0.0065195863,
      -0.01036835,
      -0.0014034958,
      -0.0004746981,
      -0.0021537654,
      -0.0064616934,
      -0.20425865,
      -0.0011626201,
      -0.11953992,
      -0.004396409,
      -0.0027940155,
      -0.00070974004,
      -4.1200903e-05,
      -0.0024436344,
      -0.0073707267,
      -0.002644715,
      -0.0024915535,
      -0.008273785,
      -0.0046727937,
      -0.0024574355,
      -0.0042938585,
      -0.030415075,
      -0.0015640707,
      -0.0009400614,
      -0.0009533068,
      -0.0013338423,
      -0.0007266188,
      -0.00019881358,
      -0.0069165886,
      -0.006333022,
      -0.99756,
      -0.030587563,
      -0.0016686664,
      -0.42537454,
      -0.0010462021,
      -0.00057369197,
      -0.00047255142,
      -1.8310955e-05,
      -0.83493114,
      -0.008222578,
      -0.0014349518,
      -0.0004291388,
      -0.0025378054,
      -0.16404161,
      -0.6778645,
      -0.011085056,
      -0.0017628261,
      -1.0609272,
      -1.5579389,
      -0.11354594,
      -0.0012650279,
      -0.059687965,
      -0.41461277,
      -0.21332332,
      -0.0028287428,
      -0.005152641,
      -0.00032478993,
      -1.1424625,
      -0.0028608418,
      -0.0055729593,
      -0.02304904,
      -0.00073675625,
      -0.005558514,
      -0.6435577,
      -0.07219136,
      -0.0081480015,
      -0.0024670565,
      -0.26952663
     ],
     "top_logprobs": [
      {
       " #": -0.01678749
      },
      {
       " 0": -0.0072549083
      },
      {
       ":": -0.0019094244
      },
      {
       " find": -0.6398118
      },
      {
       " to": -0.30452356
      },
      {
       " closet": -0.6352879
      },
      {
       "\n": -0.052329388
      },
      {
       " walk": -0.010505431
      },
      {
       "('": -0.0036327266
      },
      {
       "cl": -0.002695096
      },
      {
       "os": -0.004541058
      },
      {
       "et": -0.0007722504
      },
      {
       "')": -0.0063550957
      },
      {
       "\n": -0.007231252
      },
      {
       " #": -0.004794666
      },
      {
       " 1": -0.0029484169
      },
      {
       ":": -0.0007928895
      },
      {
       " find": -0.10682072
      },
      {
       " h": -0.23343112
      },
      {
       "anger": -0.011350999
      },
      {
       "\n": -0.030361619
      },
      {
       " find": -0.1793632
      },
      {
       "('": -0.0010410706
      },
      {
       "h": -0.00045454057
      },
      {
       "anger": -0.0005258039
      },
      {
       "')": -0.0016322485
      },
      {
       "\n": -0.005007124
      },
      {
       " #": -0.016061185
      },
      {
       " 2": -0.004295654
      },
      {
       ":": -0.0005628365
      },
      {
       " grab": -0.25339013
      },
      {
       " up": -0.30918136
      },
      {
       " jacket": -0.38246027
      },
      {
       "\n": -0.14449774
      },
      {
       " assert": -0.51499486
      },
      {
       "('": -0.0013492389
      },
      {
       "j": -0.35527828
      },
      {
       "anger": -0.0030971037
      },
      {
       "')": -0.0025341008
      },
      {
       "\n": -0.006748131
      },
      {
       " assert": -0.56689817
      },
      {
       "('": -0.0022758078
      },
      {
       "close": -0.74763757
      },
      {
       "anger": -0.0026820085
      },
      {
       "'": -0.002543304
      },
      {
       " in": -0.02933724
      },
      {
       " '": -0.005543949
      },
      {
       "hands": -0.015382539
      },
      {
       "')": -0.028390983
      },
      {
       "\n": -0.0064543136
      },
      {
       " else": -0.007728781
      },
      {
       ":": -0.0053730872
      },
      {
       " grab": -0.07190887
      },
      {
       "('": -0.0016823997
      },
      {
       "h": -0.0006906526
      },
      {
       "anger": -0.00033820607
      },
      {
       "')": -0.0034156574
      },
      {
       "\n": -0.0064665535
      },
      {
       " tur": -1.2372892
      },
      {
       "('": -0.0013182644
      },
      {
       "j": -0.4701479
      },
      {
       "othes": -0.0065195863
      },
      {
       "_": -0.01036835
      },
      {
       "j": -0.0014034958
      },
      {
       "acket": -0.0004746981
      },
      {
       "')": -0.0021537654
      },
      {
       "\n": -0.0064616934
      },
      {
       " assert": -0.20425865
      },
      {
       "('": -0.0011626201
      },
      {
       "cl": -0.11953992
      },
      {
       "othes": -0.004396409
      },
      {
       "_": -0.0027940155
      },
      {
       "j": -0.00070974004
      },
      {
       "acket": -4.1200903e-05
      },
      {
       "'": -0.0024436344
      },
      {
       " in": -0.0073707267
      },
      {
       " '": -0.002644715
      },
      {
       "hands": -0.0024915535
      },
      {
       "')": -0.008273785
      },
      {
       "\n": -0.0046727937
      },
      {
       " else": -0.0024574355
      },
      {
       ":": -0.0042938585
      },
      {
       " grab": -0.030415075
      },
      {
       "('": -0.0015640707
      },
      {
       "cl": -0.0009400614
      },
      {
       "othes": -0.0009533068
      },
      {
       "_": -0.0013338423
      },
      {
       "j": -0.0007266188
      },
      {
       "acket": -0.00019881358
      },
      {
       "')": -0.0069165886
      },
      {
       "\n": -0.006333022
      },
      {
       " put": -0.99756
      },
      {
       "on": -0.030587563
      },
      {
       "('": -0.0016686664
      },
      {
       "cl": -0.42537454
      },
      {
       "othes": -0.0010462021
      },
      {
       "_": -0.00057369197
      },
      {
       "j": -0.00047255142
      },
      {
       "acket": -1.8310955e-05
      },
      {
       "',": -0.83493114
      },
      {
       " '": -0.008222578
      },
      {
       "h": -0.0014349518
      },
      {
       "anger": -0.0004291388
      },
      {
       "')": -0.0025378054
      },
      {
       "\n": -0.16404161
      },
      {
       " #": -0.6778645
      },
      {
       " 3": -0.011085056
      },
      {
       ":": -0.0017628261
      },
      {
       " Done": -0.84693396
      },
      {
       " h": -0.34847873
      },
      {
       " h": -0.11354594
      },
      {
       "anger": -0.0012650279
      },
      {
       "\n": -0.059687965
      },
      {
       " put": -0.41461277
      },
      {
       "back": -0.21332332
      },
      {
       "('": -0.0028287428
      },
      {
       "h": -0.005152641
      },
      {
       "anger": -0.00032478993
      },
      {
       "')": -0.41186965
      },
      {
       " '": -0.0028608418
      },
      {
       "cl": -0.0055729593
      },
      {
       "os": -0.02304904
      },
      {
       "et": -0.00073675625
      },
      {
       "')": -0.005558514
      },
      {
       "\n": -0.6435577
      },
      {
       " #": -0.07219136
      },
      {
       " 4": -0.0081480015
      },
      {
       ":": -0.0024670565
      },
      {
       " Done": -0.26952663
      }
     ],
     "text_offset": [
      3378,
      3380,
      3382,
      3383,
      3388,
      3391,
      3398,
      3399,
      3404,
      3406,
      3408,
      3410,
      3412,
      3414,
      3415,
      3417,
      3419,
      3420,
      3425,
      3427,
      3432,
      3433,
      3438,
      3440,
      3441,
      3446,
      3448,
      3449,
      3451,
      3453,
      3454,
      3459,
      3462,
      3469,
      3470,
      3475,
      3477,
      3478,
      3483,
      3485,
      3486,
      3493,
      3495,
      3496,
      3501,
      3502,
      3505,
      3507,
      3512,
      3514,
      3515,
      3520,
      3521,
      3526,
      3528,
      3529,
      3534,
      3536,
      3537,
      3542,
      3544,
      3546,
      3551,
      3552,
      3553,
      3558,
      3560,
      3561,
      3568,
      3570,
      3572,
      3577,
      3578,
      3579,
      3584,
      3585,
      3588,
      3590,
      3595,
      3597,
      3598,
      3603,
      3604,
      3609,
      3611,
      3613,
      3618,
      3619,
      3620,
      3625,
      3627,
      3628,
      3632,
      3634,
      3636,
      3638,
      3643,
      3644,
      3645,
      3650,
      3652,
      3654,
      3655,
      3660,
      3662,
      3663,
      3665,
      3667,
      3668,
      3672,
      3677,
      3679,
      3684,
      3685,
      3689,
      3693,
      3695,
      3696,
      3701,
      3703,
      3705,
      3707,
      3709,
      3711,
      3713,
      3714,
      3716,
      3718,
      3719
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Hang up jacket",
   "task_description": "Setting the coat on the proper hook",
   "program": [
    "[Find] <dresser> (1)",
    "[TurnTo] <dresser> (1)",
    "[PointAt] <dresser> (1)",
    "[Wash] <dresser> (1)",
    "[TurnTo] <dresser> (1)",
    "[LookAt] <dresser> (1)",
    "[Open] <dresser> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_turk_third",
   "file_id": "split13_1",
   "goal_condition": [
    [
     [
      247,
      258,
      "FACING",
      "character",
      "dresser"
     ]
    ],
    [
     [
      258,
      "dresser",
      "OPEN"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1184,
   "completion_tokens": 129,
   "total_tokens": 1313
  }
 },
 "5": {
  "plan": [
   [
    " # 0: find chair\n find('chair')\n # 1: move to chair\n assert('close' to 'chair')\n else: find('chair')\n walk('chair')\n # 2: sit on chair\n sit('chair')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " chair",
      "\n",
      " find",
      "('",
      "chair",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " move",
      " to",
      " chair",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "chair",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "chair",
      "')",
      "\n",
      " walk",
      "('",
      "chair",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " sit",
      " on",
      " chair",
      "\n",
      " sit",
      "('",
      "chair",
      "')"
     ],
     "token_logprobs": [
      -0.1634517,
      -0.03467819,
      -0.004197128,
      -0.28112385,
      -0.6863156,
      -0.053935025,
      -0.0292731,
      -0.0049838815,
      -0.0017430609,
      -0.002606169,
      -0.011434918,
      -0.003836742,
      -0.0041179396,
      -0.0007728455,
      -2.4772937,
      -1.0335076,
      -0.3054139,
      -0.04114364,
      -0.31051517,
      -0.0027615589,
      -0.00393116,
      -0.003558969,
      -0.0007842989,
      -0.0028885189,
      -0.0008010614,
      -0.005363019,
      -0.008631018,
      -0.001938211,
      -0.0020765925,
      -0.008271801,
      -0.0020238487,
      -0.0008511112,
      -0.0016396517,
      -0.006694365,
      -0.4144892,
      -0.009098809,
      -0.0015367877,
      -0.0014477851,
      -0.0092349965,
      -0.043201864,
      -0.0074657854,
      -0.0014002724,
      -0.031033764,
      -0.23686036,
      -0.19702137,
      -0.012920369,
      -1.115905,
      -0.0026972473,
      -0.0008892307,
      -0.0020783804
     ],
     "top_logprobs": [
      {
       " #": -0.1634517
      },
      {
       " 0": -0.03467819
      },
      {
       ":": -0.004197128
      },
      {
       " find": -0.28112385
      },
      {
       " chair": -0.6863156
      },
      {
       "\n": -0.053935025
      },
      {
       " find": -0.0292731
      },
      {
       "('": -0.0049838815
      },
      {
       "chair": -0.0017430609
      },
      {
       "')": -0.002606169
      },
      {
       "\n": -0.011434918
      },
      {
       " #": -0.003836742
      },
      {
       " 1": -0.0041179396
      },
      {
       ":": -0.0007728455
      },
      {
       " grab": -0.9809071
      },
      {
       " close": -0.9650615
      },
      {
       " chair": -0.3054139
      },
      {
       "\n": -0.04114364
      },
      {
       " assert": -0.31051517
      },
      {
       "('": -0.0027615589
      },
      {
       "close": -0.00393116
      },
      {
       "'": -0.003558969
      },
      {
       " to": -0.0007842989
      },
      {
       " '": -0.0028885189
      },
      {
       "chair": -0.0008010614
      },
      {
       "')": -0.005363019
      },
      {
       "\n": -0.008631018
      },
      {
       " else": -0.001938211
      },
      {
       ":": -0.0020765925
      },
      {
       " find": -0.008271801
      },
      {
       "('": -0.0020238487
      },
      {
       "chair": -0.0008511112
      },
      {
       "')": -0.0016396517
      },
      {
       "\n": -0.006694365
      },
      {
       " walk": -0.4144892
      },
      {
       "('": -0.009098809
      },
      {
       "chair": -0.0015367877
      },
      {
       "')": -0.0014477851
      },
      {
       "\n": -0.0092349965
      },
      {
       " #": -0.043201864
      },
      {
       " 2": -0.0074657854
      },
      {
       ":": -0.0014002724
      },
      {
       " sit": -0.031033764
      },
      {
       " on": -0.23686036
      },
      {
       " chair": -0.19702137
      },
      {
       "\n": -0.012920369
      },
      {
       " tur": -0.75702405
      },
      {
       "('": -0.0026972473
      },
      {
       "chair": -0.0008892307
      },
      {
       "')": -0.0020783804
      }
     ],
     "text_offset": [
      3367,
      3369,
      3371,
      3372,
      3377,
      3383,
      3384,
      3389,
      3391,
      3396,
      3398,
      3399,
      3401,
      3403,
      3404,
      3409,
      3412,
      3418,
      3419,
      3426,
      3428,
      3433,
      3434,
      3437,
      3439,
      3444,
      3446,
      3447,
      3452,
      3453,
      3458,
      3460,
      3465,
      3467,
      3468,
      3473,
      3475,
      3480,
      3482,
      3483,
      3485,
      3487,
      3488,
      3492,
      3495,
      3501,
      3502,
      3506,
      3508,
      3513
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Sit",
   "task_description": "We sit at the dining room table",
   "program": [
    "[Walk] <dining_room> (1)",
    "[Walk] <chair> (1)",
    "[Find] <chair> (1)",
    "[Pull] <chair> (1)",
    "[Sit] <chair> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_turk_third",
   "file_id": "split41_2",
   "goal_condition": [
    [
     [
      247,
      1,
      "INSIDE",
      "character",
      "dining_room"
     ],
     [
      247,
      61,
      "ON",
      "character",
      "chair"
     ]
    ],
    [
     [
      247,
      "character",
      "SITTING"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1179,
   "completion_tokens": 50,
   "total_tokens": 1229
  }
 },
 "6": {
  "plan": [
   [
    " # 0: walk to the bathroom\n walk('bathroom')\n # 1: find sink\n find('sink')\n # 2: turn on faucet\n turnon('faucet')\n # 3: pour detergent\n assert('detergent' in 'hands')\n else: find('detergent')\n pour('detergent')\n # 4: wash sink\n wash('sink')\n # 5: turn off faucet\n turnoff('faucet')\n # 6: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " the",
      " bathroom",
      "\n",
      " walk",
      "('",
      "bath",
      "room",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " sink",
      "\n",
      " find",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " turn",
      " on",
      " f",
      "auc",
      "et",
      "\n",
      " turn",
      "on",
      "('",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " pour",
      " deter",
      "gent",
      "\n",
      " assert",
      "('",
      "d",
      "eter",
      "gent",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "d",
      "eter",
      "gent",
      "')",
      "\n",
      " pour",
      "('",
      "d",
      "eter",
      "gent",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " wash",
      " sink",
      "\n",
      " wash",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " turn",
      " off",
      " f",
      "auc",
      "et",
      "\n",
      " turn",
      "off",
      "('",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " #",
      " 6",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.021236172,
      -0.0069880118,
      -0.0018999892,
      -0.62025833,
      -0.22091798,
      -1.7991111,
      -0.39435893,
      -0.024534972,
      -0.0062886346,
      -0.0044774706,
      -0.0026037793,
      -0.00017270124,
      -0.002117984,
      -0.007390723,
      -0.0022826176,
      -0.0031139646,
      -0.00084717636,
      -0.057157945,
      -0.53443027,
      -0.026214011,
      -0.17296419,
      -0.0008147807,
      -0.0005820413,
      -5.312365e-05,
      -0.001413284,
      -0.0050716423,
      -0.017530346,
      -0.0053636185,
      -0.0010089115,
      -0.5430254,
      -0.0528573,
      -1.4188448,
      -0.0020214617,
      -0.0032444957,
      -0.05384608,
      -1.9804083,
      -0.07068937,
      -0.006917188,
      -0.0039592893,
      -0.0006190786,
      -0.00048072237,
      -0.0019957812,
      -0.0050030504,
      -0.04074865,
      -0.006640363,
      -0.0007300778,
      -1.0510559,
      -1.6038233,
      -0.0018405108,
      -0.58947235,
      -0.9261579,
      -0.0024775122,
      -0.87250805,
      -0.0009496076,
      -0.0013718604,
      -0.006355996,
      -0.09271041,
      -0.016701367,
      -0.037877567,
      -0.04222603,
      -0.009532221,
      -0.004446159,
      -0.003664075,
      -0.93575865,
      -0.0028957513,
      -0.00077761855,
      -0.00037588822,
      -0.00076556916,
      -0.0047042337,
      -0.008346385,
      -0.55236375,
      -0.0036938668,
      -0.0014359064,
      -0.0002844852,
      -0.00040916432,
      -0.028012274,
      -0.008309062,
      -0.0518472,
      -0.007320112,
      -0.0009876108,
      -0.848468,
      -0.47092095,
      -0.12911697,
      -0.26199344,
      -0.0010428615,
      -0.0017739894,
      -0.00013371343,
      -0.0015382211,
      -0.007300478,
      -0.03239811,
      -0.0039767604,
      -0.0020041426,
      -0.20635925,
      -0.030858556,
      -0.076813206,
      -0.0018632645,
      -0.00048429958,
      -0.01745968,
      -0.0883715,
      -0.0032860574,
      -0.00086590525,
      -0.0007638983,
      -0.00033904242,
      -0.00027506487,
      -0.0016592939,
      -0.24411644,
      -0.03148484,
      -0.0033756448,
      -0.002090628,
      -0.7417705
     ],
     "top_logprobs": [
      {
       " #": -0.021236172
      },
      {
       " 0": -0.0069880118
      },
      {
       ":": -0.0018999892
      },
      {
       " walk": -0.62025833
      },
      {
       " to": -0.22091798
      },
      {
       " bathroom": -0.3685787
      },
      {
       " bathroom": -0.39435893
      },
      {
       "\n": -0.024534972
      },
      {
       " walk": -0.0062886346
      },
      {
       "('": -0.0044774706
      },
      {
       "bath": -0.0026037793
      },
      {
       "room": -0.00017270124
      },
      {
       "')": -0.002117984
      },
      {
       "\n": -0.007390723
      },
      {
       " #": -0.0022826176
      },
      {
       " 1": -0.0031139646
      },
      {
       ":": -0.00084717636
      },
      {
       " find": -0.057157945
      },
      {
       " sink": -0.53443027
      },
      {
       "\n": -0.026214011
      },
      {
       " find": -0.17296419
      },
      {
       "('": -0.0008147807
      },
      {
       "s": -0.0005820413
      },
      {
       "ink": -5.312365e-05
      },
      {
       "')": -0.001413284
      },
      {
       "\n": -0.0050716423
      },
      {
       " #": -0.017530346
      },
      {
       " 2": -0.0053636185
      },
      {
       ":": -0.0010089115
      },
      {
       " turn": -0.5430254
      },
      {
       " on": -0.0528573
      },
      {
       " the": -0.4424016
      },
      {
       "auc": -0.0020214617
      },
      {
       "et": -0.0032444957
      },
      {
       "\n": -0.05384608
      },
      {
       " assert": -0.6954533
      },
      {
       "on": -0.07068937
      },
      {
       "('": -0.006917188
      },
      {
       "f": -0.0039592893
      },
      {
       "auc": -0.0006190786
      },
      {
       "et": -0.00048072237
      },
      {
       "')": -0.0019957812
      },
      {
       "\n": -0.0050030504
      },
      {
       " #": -0.04074865
      },
      {
       " 3": -0.006640363
      },
      {
       ":": -0.0007300778
      },
      {
       " pour": -1.0510559
      },
      {
       " water": -1.1133934
      },
      {
       "gent": -0.0018405108
      },
      {
       "\n": -0.58947235
      },
      {
       " assert": -0.9261579
      },
      {
       "('": -0.0024775122
      },
      {
       "close": -0.56231403
      },
      {
       "eter": -0.0009496076
      },
      {
       "gent": -0.0013718604
      },
      {
       "'": -0.006355996
      },
      {
       " in": -0.09271041
      },
      {
       " '": -0.016701367
      },
      {
       "hands": -0.037877567
      },
      {
       "')": -0.04222603
      },
      {
       "\n": -0.009532221
      },
      {
       " else": -0.004446159
      },
      {
       ":": -0.003664075
      },
      {
       " grab": -0.520464
      },
      {
       "('": -0.0028957513
      },
      {
       "d": -0.00077761855
      },
      {
       "eter": -0.00037588822
      },
      {
       "gent": -0.00076556916
      },
      {
       "')": -0.0047042337
      },
      {
       "\n": -0.008346385
      },
      {
       " pour": -0.55236375
      },
      {
       "('": -0.0036938668
      },
      {
       "d": -0.0014359064
      },
      {
       "eter": -0.0002844852
      },
      {
       "gent": -0.00040916432
      },
      {
       "')": -0.028012274
      },
      {
       "\n": -0.008309062
      },
      {
       " #": -0.0518472
      },
      {
       " 4": -0.007320112
      },
      {
       ":": -0.0009876108
      },
      {
       " wash": -0.848468
      },
      {
       " sink": -0.47092095
      },
      {
       "\n": -0.12911697
      },
      {
       " wash": -0.26199344
      },
      {
       "('": -0.0010428615
      },
      {
       "s": -0.0017739894
      },
      {
       "ink": -0.00013371343
      },
      {
       "')": -0.0015382211
      },
      {
       "\n": -0.007300478
      },
      {
       " #": -0.03239811
      },
      {
       " 5": -0.0039767604
      },
      {
       ":": -0.0020041426
      },
      {
       " turn": -0.20635925
      },
      {
       " off": -0.030858556
      },
      {
       " f": -0.076813206
      },
      {
       "auc": -0.0018632645
      },
      {
       "et": -0.00048429958
      },
      {
       "\n": -0.01745968
      },
      {
       " turn": -0.0883715
      },
      {
       "off": -0.0032860574
      },
      {
       "('": -0.00086590525
      },
      {
       "f": -0.0007638983
      },
      {
       "auc": -0.00033904242
      },
      {
       "et": -0.00027506487
      },
      {
       "')": -0.0016592939
      },
      {
       "\n": -0.24411644
      },
      {
       " #": -0.03148484
      },
      {
       " 6": -0.0033756448
      },
      {
       ":": -0.002090628
      },
      {
       " Done": -0.7417705
      }
     ],
     "text_offset": [
      3373,
      3375,
      3377,
      3378,
      3383,
      3386,
      3390,
      3399,
      3400,
      3405,
      3407,
      3411,
      3415,
      3417,
      3418,
      3420,
      3422,
      3423,
      3428,
      3433,
      3434,
      3439,
      3441,
      3442,
      3445,
      3447,
      3448,
      3450,
      3452,
      3453,
      3458,
      3461,
      3463,
      3466,
      3468,
      3469,
      3474,
      3476,
      3478,
      3479,
      3482,
      3484,
      3486,
      3487,
      3489,
      3491,
      3492,
      3497,
      3503,
      3507,
      3508,
      3515,
      3517,
      3518,
      3522,
      3526,
      3527,
      3530,
      3532,
      3537,
      3539,
      3540,
      3545,
      3546,
      3551,
      3553,
      3554,
      3558,
      3562,
      3564,
      3565,
      3570,
      3572,
      3573,
      3577,
      3581,
      3583,
      3584,
      3586,
      3588,
      3589,
      3594,
      3599,
      3600,
      3605,
      3607,
      3608,
      3611,
      3613,
      3614,
      3616,
      3618,
      3619,
      3624,
      3628,
      3630,
      3633,
      3635,
      3636,
      3641,
      3644,
      3646,
      3647,
      3650,
      3652,
      3654,
      3655,
      3657,
      3659,
      3660
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Wash sink",
   "task_description": "I spray some cleaner and wait a minte or so then wipe it out.",
   "program": [
    "[Walk] <bathroom> (1)",
    "[Walk] <cleaning_solution> (1)",
    "[Find] <cleaning_solution> (1)",
    "[Grab] <cleaning_solution> (1)",
    "[Walk] <sink> (1)",
    "[Pour] <cleaning_solution> (1) <sink> (1)",
    "[PutObjBack] <cleaning_solution> (1)",
    "[Find] <rag> (1)",
    "[Grab] <rag> (1)",
    "[Walk] <sink> (1)",
    "[Wipe] <sink> (1)",
    "[Wipe] <sink> (1)",
    "[Wipe] <sink> (1)",
    "[PutObjBack] <rag> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_turk_third",
   "file_id": "split87_3",
   "goal_condition": [
    [
     [
      247,
      149,
      "INSIDE",
      "character",
      "bathroom"
     ],
     [
      1000,
      173,
      "INSIDE",
      "cleaning_solution",
      "sink"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1182,
   "completion_tokens": 110,
   "total_tokens": 1292
  }
 },
 "7": {
  "plan": [
   [
    " # 0: Close eyes\n close('eyes')\n # 1: Relax\n relax()\n # 2: Take deep breaths\n deepbreaths()\n # 3: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " Close",
      " eyes",
      "\n",
      " close",
      "('",
      "eyes",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " Relax",
      "\n",
      " relax",
      "()",
      "\n",
      " #",
      " 2",
      ":",
      " Take",
      " deep",
      " breaths",
      "\n",
      " deep",
      "b",
      "reat",
      "hs",
      "()",
      "\n",
      " #",
      " 3",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.2651128,
      -0.057295535,
      -0.0027454214,
      -4.814769,
      -0.69443,
      -0.1071727,
      -0.23126379,
      -0.37439066,
      -0.023771163,
      -0.003097463,
      -0.022707963,
      -0.0072216475,
      -0.004218495,
      -0.0004698068,
      -0.9096074,
      -1.469903,
      -0.07973397,
      -0.046588752,
      -0.028314762,
      -0.0038415284,
      -0.004100464,
      -0.00046575186,
      -2.7139683,
      -0.46398073,
      -0.23374319,
      -0.011904025,
      -1.3209199,
      -1.4548966,
      -0.50030136,
      -0.2142561,
      -0.007328758,
      -0.102091886,
      -0.005912805,
      -0.0055040936,
      -0.0007797653,
      -1.4990298
     ],
     "top_logprobs": [
      {
       " #": -0.2651128
      },
      {
       " 0": -0.057295535
      },
      {
       ":": -0.0027454214
      },
      {
       " find": -0.95641327
      },
      {
       " eyes": -0.69443
      },
      {
       "\n": -0.1071727
      },
      {
       " close": -0.23126379
      },
      {
       "('": -0.37439066
      },
      {
       "eyes": -0.023771163
      },
      {
       "')": -0.003097463
      },
      {
       "\n": -0.022707963
      },
      {
       " #": -0.0072216475
      },
      {
       " 1": -0.004218495
      },
      {
       ":": -0.0004698068
      },
      {
       " Relax": -0.9096074
      },
      {
       " body": -0.6215258
      },
      {
       " relax": -0.07973397
      },
      {
       "()": -0.046588752
      },
      {
       "\n": -0.028314762
      },
      {
       " #": -0.0038415284
      },
      {
       " 2": -0.004100464
      },
      {
       ":": -0.00046575186
      },
      {
       " Stop": -2.0080872
      },
      {
       " deep": -0.46398073
      },
      {
       " breaths": -0.23374319
      },
      {
       "\n": -0.011904025
      },
      {
       " take": -0.54524785
      },
      {
       "_": -0.46563601
      },
      {
       "reat": -0.50030136
      },
      {
       "hs": -0.2142561
      },
      {
       "()": -0.007328758
      },
      {
       "\n": -0.102091886
      },
      {
       " #": -0.005912805
      },
      {
       " 3": -0.0055040936
      },
      {
       ":": -0.0007797653
      },
      {
       " Done": -1.4990298
      }
     ],
     "text_offset": [
      3369,
      3371,
      3373,
      3374,
      3380,
      3385,
      3386,
      3392,
      3394,
      3398,
      3400,
      3401,
      3403,
      3405,
      3406,
      3412,
      3413,
      3419,
      3421,
      3422,
      3424,
      3426,
      3427,
      3432,
      3437,
      3445,
      3446,
      3451,
      3452,
      3456,
      3458,
      3460,
      3461,
      3463,
      3465,
      3466
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Sleep",
   "task_description": "Lie down in a bed at night and fall asleep",
   "program": [
    "[Walk] <bedroom> (1)",
    "[Walk] <bed> (1)",
    "[Find] <bed> (1)",
    "[Lie] <bed> (1)",
    "[Sleep]"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_july",
   "file_id": "split22_2",
   "goal_condition": [
    [
     [
      247,
      194,
      "ON",
      "character",
      "bed"
     ],
     [
      247,
      189,
      "INSIDE",
      "character",
      "bedroom"
     ]
    ],
    [
     [
      247,
      "character",
      "LYING"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1179,
   "completion_tokens": 36,
   "total_tokens": 1215
  }
 },
 "8": {
  "plan": [
   [
    " # 0: find glasses\n find('glasses')\n # 1: grab glasses\n grab('glasses')\n # 2: put on glasses\n puton('glasses')\n # 3: look through glasses\n turnto('glasses')\n lookat('glasses')\n # 4: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " glasses",
      "\n",
      " find",
      "('",
      "gl",
      "asses",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " grab",
      " glasses",
      "\n",
      " grab",
      "('",
      "gl",
      "asses",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " put",
      " on",
      " glasses",
      "\n",
      " put",
      "on",
      "('",
      "gl",
      "asses",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " look",
      " through",
      " glasses",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "gl",
      "asses",
      "')",
      "\n",
      " look",
      "at",
      "('",
      "gl",
      "asses",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.017204965,
      -0.008009922,
      -0.0019269227,
      -0.18419938,
      -0.46079206,
      -0.030366225,
      -0.022903888,
      -0.0020743217,
      -0.13957801,
      -0.0023785674,
      -0.0032685965,
      -0.008125649,
      -0.0048497096,
      -0.002357058,
      -0.0006728154,
      -0.09830152,
      -0.07906021,
      -0.018036244,
      -0.94221926,
      -0.0013082369,
      -0.0008122764,
      -0.0020330495,
      -0.0014418162,
      -0.0051168157,
      -0.52669334,
      -0.0056547774,
      -0.0007318678,
      -0.08376996,
      -0.24644376,
      -0.052676965,
      -0.01571877,
      -0.7586946,
      -0.009013158,
      -0.0009811659,
      -0.0009471023,
      -0.004336123,
      -0.0021681597,
      -0.15052634,
      -0.075554155,
      -0.0076413294,
      -0.0012290973,
      -1.8536369,
      -1.0680875,
      -0.17466916,
      -0.019697968,
      -0.8346685,
      -4.5135734e-05,
      -0.0002915213,
      -0.0006076289,
      -0.0045065703,
      -0.00085397495,
      -0.0010374935,
      -0.012481624,
      -0.08155925,
      -0.0736676,
      -0.0009783021,
      -0.0011997992,
      -0.00059021317,
      -0.0019872403,
      -0.84820455,
      -0.16837889,
      -0.012505344,
      -0.0020826224,
      -0.34247908
     ],
     "top_logprobs": [
      {
       " #": -0.017204965
      },
      {
       " 0": -0.008009922
      },
      {
       ":": -0.0019269227
      },
      {
       " find": -0.18419938
      },
      {
       " glasses": -0.46079206
      },
      {
       "\n": -0.030366225
      },
      {
       " find": -0.022903888
      },
      {
       "('": -0.0020743217
      },
      {
       "gl": -0.13957801
      },
      {
       "asses": -0.0023785674
      },
      {
       "')": -0.0032685965
      },
      {
       "\n": -0.008125649
      },
      {
       " #": -0.0048497096
      },
      {
       " 1": -0.002357058
      },
      {
       ":": -0.0006728154
      },
      {
       " grab": -0.09830152
      },
      {
       " glasses": -0.07906021
      },
      {
       "\n": -0.018036244
      },
      {
       " assert": -0.509604
      },
      {
       "('": -0.0013082369
      },
      {
       "gl": -0.0008122764
      },
      {
       "asses": -0.0020330495
      },
      {
       "')": -0.0014418162
      },
      {
       "\n": -0.0051168157
      },
      {
       " #": -0.52669334
      },
      {
       " 2": -0.0056547774
      },
      {
       ":": -0.0007318678
      },
      {
       " put": -0.08376996
      },
      {
       " on": -0.24644376
      },
      {
       " glasses": -0.052676965
      },
      {
       "\n": -0.01571877
      },
      {
       " put": -0.7586946
      },
      {
       "on": -0.009013158
      },
      {
       "('": -0.0009811659
      },
      {
       "gl": -0.0009471023
      },
      {
       "asses": -0.004336123
      },
      {
       "')": -0.0021681597
      },
      {
       "\n": -0.15052634
      },
      {
       " #": -0.075554155
      },
      {
       " 3": -0.0076413294
      },
      {
       ":": -0.0012290973
      },
      {
       " Done": -0.7733679
      },
      {
       " at": -0.7967089
      },
      {
       " glasses": -0.17466916
      },
      {
       "\n": -0.019697968
      },
      {
       " tur": -0.8346685
      },
      {
       "nt": -4.5135734e-05
      },
      {
       "o": -0.0002915213
      },
      {
       "('": -0.0006076289
      },
      {
       "gl": -0.0045065703
      },
      {
       "asses": -0.00085397495
      },
      {
       "')": -0.0010374935
      },
      {
       "\n": -0.012481624
      },
      {
       " look": -0.08155925
      },
      {
       "at": -0.0736676
      },
      {
       "('": -0.0009783021
      },
      {
       "gl": -0.0011997992
      },
      {
       "asses": -0.00059021317
      },
      {
       "')": -0.0019872403
      },
      {
       "<|endoftext|>": -0.5768738
      },
      {
       " #": -0.16837889
      },
      {
       " 4": -0.012505344
      },
      {
       ":": -0.0020826224
      },
      {
       " Done": -0.34247908
      }
     ],
     "text_offset": [
      3378,
      3380,
      3382,
      3383,
      3388,
      3396,
      3397,
      3402,
      3404,
      3406,
      3411,
      3413,
      3414,
      3416,
      3418,
      3419,
      3424,
      3432,
      3433,
      3438,
      3440,
      3442,
      3447,
      3449,
      3450,
      3452,
      3454,
      3455,
      3459,
      3462,
      3470,
      3471,
      3475,
      3477,
      3479,
      3481,
      3486,
      3488,
      3489,
      3491,
      3493,
      3494,
      3499,
      3507,
      3515,
      3516,
      3520,
      3522,
      3523,
      3525,
      3527,
      3532,
      3534,
      3535,
      3540,
      3542,
      3544,
      3546,
      3551,
      3553,
      3554,
      3556,
      3558,
      3559
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Put on glasses",
   "task_description": "Put on glasses.",
   "program": [
    "[Walk] <bedroom> (1)",
    "[Walk] <dresser> (1)",
    "[Find] <dresser> (1)",
    "[Find] <spectacles> (1)",
    "[Grab] <spectacles> (1)",
    "[PutOn] <spectacles> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_turk_third",
   "file_id": "split112_2",
   "goal_condition": [
    [
     [
      247,
      189,
      "INSIDE",
      "character",
      "bedroom"
     ],
     [
      1001,
      247,
      "ON",
      "spectacles",
      "character"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1184,
   "completion_tokens": 64,
   "total_tokens": 1248
  }
 },
 "9": {
  "plan": [
   [
    " # 0: find laptop\n find('laptop')\n # 1: open laptop\n assert('close' to 'laptop')\n else: find('laptop')\n open('laptop')\n # 2: find power socket\n find('powersocket')\n # 3: plug in laptop\n assert('close' to 'powersocket')\n else: find('powersocket')\n plugin('laptop')\n # 4: turn on laptop\n turnto('laptop')\n switchon('laptop')\n # 5: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " laptop",
      "\n",
      " find",
      "('",
      "l",
      "aptop",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " open",
      " laptop",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "l",
      "aptop",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "l",
      "aptop",
      "')",
      "\n",
      " open",
      "('",
      "l",
      "aptop",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " find",
      " power",
      " socket",
      "\n",
      " find",
      "('",
      "powers",
      "ocket",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " plug",
      " in",
      " laptop",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "powers",
      "ocket",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "powers",
      "ocket",
      "')",
      "\n",
      " plugin",
      "('",
      "l",
      "aptop",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " turn",
      " on",
      " laptop",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "l",
      "aptop",
      "')",
      "\n",
      " switch",
      "on",
      "('",
      "l",
      "aptop",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.021074418,
      -0.00849263,
      -0.0018745499,
      -0.9800595,
      -1.1982565,
      -0.04112606,
      -0.05937192,
      -0.0025441386,
      -0.0020647054,
      -0.00026194818,
      -0.0022533438,
      -0.009844516,
      -0.007170976,
      -0.0037172586,
      -0.00096488127,
      -0.3330213,
      -0.3004578,
      -0.062397048,
      -0.6531287,
      -0.0023132663,
      -0.02595467,
      -0.003322059,
      -0.0006404911,
      -0.0046203374,
      -0.0030278086,
      -0.0003033258,
      -0.009478063,
      -0.006901104,
      -0.0024629922,
      -0.0020320928,
      -0.0051908074,
      -0.0017837832,
      -0.0014233725,
      -0.00023989083,
      -0.0023742055,
      -0.0083231265,
      -0.03863645,
      -0.0029973767,
      -0.000845744,
      -6.1516675e-06,
      -0.0020171017,
      -0.0070507377,
      -0.048733138,
      -0.006508607,
      -0.0008276665,
      -1.2362158,
      -0.2984853,
      -0.14319277,
      -0.050853927,
      -0.0767538,
      -0.0010471578,
      -0.44447806,
      -0.0008815948,
      -0.0014765556,
      -0.007137119,
      -0.025866158,
      -0.0059641902,
      -0.00085981993,
      -0.38495854,
      -0.17225039,
      -0.62531793,
      -0.19127198,
      -0.7279573,
      -0.0012831083,
      -0.031054238,
      -0.0022373954,
      -0.00046324843,
      -0.0017766177,
      -0.058428284,
      -0.0007693875,
      -0.007997843,
      -0.006031649,
      -0.0014933893,
      -0.0004576428,
      -0.003696021,
      -0.0011902513,
      -0.0047229785,
      -0.0005653418,
      -0.002849425,
      -0.006139472,
      -0.33006072,
      -0.0012877658,
      -0.5078773,
      -0.00057679333,
      -0.012086568,
      -0.017311027,
      -0.029812852,
      -0.0077964193,
      -0.0010945352,
      -0.97457165,
      -0.02171782,
      -0.14341144,
      -0.0170013,
      -2.968696,
      -7.601266e-05,
      -0.00026087437,
      -0.0006517033,
      -0.007827417,
      -0.00018295787,
      -0.0017007297,
      -0.004481122,
      -0.84707683,
      -0.0012677707,
      -0.00088493637,
      -0.0015674131,
      -4.3108244e-05,
      -0.0012174046,
      -0.14351553,
      -0.09179204,
      -0.0046643508,
      -0.0011679893,
      -0.75528973
     ],
     "top_logprobs": [
      {
       " #": -0.021074418
      },
      {
       " 0": -0.00849263
      },
      {
       ":": -0.0018745499
      },
      {
       " walk": -0.61597896
      },
      {
       " computer": -0.88727385
      },
      {
       "\n": -0.04112606
      },
      {
       " find": -0.05937192
      },
      {
       "('": -0.0025441386
      },
      {
       "l": -0.0020647054
      },
      {
       "aptop": -0.00026194818
      },
      {
       "')": -0.0022533438
      },
      {
       "\n": -0.009844516
      },
      {
       " #": -0.007170976
      },
      {
       " 1": -0.0037172586
      },
      {
       ":": -0.00096488127
      },
      {
       " open": -0.3330213
      },
      {
       " laptop": -0.3004578
      },
      {
       "\n": -0.062397048
      },
      {
       " assert": -0.6531287
      },
      {
       "('": -0.0023132663
      },
      {
       "close": -0.02595467
      },
      {
       "'": -0.003322059
      },
      {
       " to": -0.0006404911
      },
      {
       " '": -0.0046203374
      },
      {
       "l": -0.0030278086
      },
      {
       "aptop": -0.0003033258
      },
      {
       "')": -0.009478063
      },
      {
       "\n": -0.006901104
      },
      {
       " else": -0.0024629922
      },
      {
       ":": -0.0020320928
      },
      {
       " find": -0.0051908074
      },
      {
       "('": -0.0017837832
      },
      {
       "l": -0.0014233725
      },
      {
       "aptop": -0.00023989083
      },
      {
       "')": -0.0023742055
      },
      {
       "\n": -0.0083231265
      },
      {
       " open": -0.03863645
      },
      {
       "('": -0.0029973767
      },
      {
       "l": -0.000845744
      },
      {
       "aptop": -6.1516675e-06
      },
      {
       "')": -0.0020171017
      },
      {
       "\n": -0.0070507377
      },
      {
       " #": -0.048733138
      },
      {
       " 2": -0.006508607
      },
      {
       ":": -0.0008276665
      },
      {
       " find": -1.2362158
      },
      {
       " power": -0.2984853
      },
      {
       " socket": -0.14319277
      },
      {
       "\n": -0.050853927
      },
      {
       " find": -0.0767538
      },
      {
       "('": -0.0010471578
      },
      {
       "powers": -0.44447806
      },
      {
       "ocket": -0.0008815948
      },
      {
       "')": -0.0014765556
      },
      {
       "\n": -0.007137119
      },
      {
       " #": -0.025866158
      },
      {
       " 3": -0.0059641902
      },
      {
       ":": -0.00085981993
      },
      {
       " plug": -0.38495854
      },
      {
       " in": -0.17225039
      },
      {
       " laptop": -0.62531793
      },
      {
       "\n": -0.19127198
      },
      {
       " assert": -0.7279573
      },
      {
       "('": -0.0012831083
      },
      {
       "close": -0.031054238
      },
      {
       "'": -0.0022373954
      },
      {
       " to": -0.00046324843
      },
      {
       " '": -0.0017766177
      },
      {
       "powers": -0.058428284
      },
      {
       "ocket": -0.0007693875
      },
      {
       "')": -0.007997843
      },
      {
       "\n": -0.006031649
      },
      {
       " else": -0.0014933893
      },
      {
       ":": -0.0004576428
      },
      {
       " find": -0.003696021
      },
      {
       "('": -0.0011902513
      },
      {
       "powers": -0.0047229785
      },
      {
       "ocket": -0.0005653418
      },
      {
       "')": -0.002849425
      },
      {
       "\n": -0.006139472
      },
      {
       " plugin": -0.33006072
      },
      {
       "('": -0.0012877658
      },
      {
       "l": -0.5078773
      },
      {
       "aptop": -0.00057679333
      },
      {
       "')": -0.012086568
      },
      {
       "\n": -0.017311027
      },
      {
       " #": -0.029812852
      },
      {
       " 4": -0.0077964193
      },
      {
       ":": -0.0010945352
      },
      {
       " turn": -0.97457165
      },
      {
       " on": -0.02171782
      },
      {
       " laptop": -0.14341144
      },
      {
       "\n": -0.0170013
      },
      {
       " switch": -0.4533194
      },
      {
       "nt": -7.601266e-05
      },
      {
       "o": -0.00026087437
      },
      {
       "('": -0.0006517033
      },
      {
       "l": -0.007827417
      },
      {
       "aptop": -0.00018295787
      },
      {
       "')": -0.0017007297
      },
      {
       "\n": -0.004481122
      },
      {
       " switch": -0.84707683
      },
      {
       "on": -0.0012677707
      },
      {
       "('": -0.00088493637
      },
      {
       "l": -0.0015674131
      },
      {
       "aptop": -4.3108244e-05
      },
      {
       "')": -0.0012174046
      },
      {
       "\n": -0.14351553
      },
      {
       " #": -0.09179204
      },
      {
       " 5": -0.0046643508
      },
      {
       ":": -0.0011679893
      },
      {
       " Done": -0.75528973
      }
     ],
     "text_offset": [
      3378,
      3380,
      3382,
      3383,
      3388,
      3395,
      3396,
      3401,
      3403,
      3404,
      3409,
      3411,
      3412,
      3414,
      3416,
      3417,
      3422,
      3429,
      3430,
      3437,
      3439,
      3444,
      3445,
      3448,
      3450,
      3451,
      3456,
      3458,
      3459,
      3464,
      3465,
      3470,
      3472,
      3473,
      3478,
      3480,
      3481,
      3486,
      3488,
      3489,
      3494,
      3496,
      3497,
      3499,
      3501,
      3502,
      3507,
      3513,
      3520,
      3521,
      3526,
      3528,
      3534,
      3539,
      3541,
      3542,
      3544,
      3546,
      3547,
      3552,
      3555,
      3562,
      3563,
      3570,
      3572,
      3577,
      3578,
      3581,
      3583,
      3589,
      3594,
      3596,
      3597,
      3602,
      3603,
      3608,
      3610,
      3616,
      3621,
      3623,
      3624,
      3631,
      3633,
      3634,
      3639,
      3641,
      3642,
      3644,
      3646,
      3647,
      3652,
      3655,
      3662,
      3663,
      3667,
      3669,
      3670,
      3672,
      3673,
      3678,
      3680,
      3681,
      3688,
      3690,
      3692,
      3693,
      3698,
      3700,
      3701,
      3703,
      3705,
      3706
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Start computer",
   "task_description": "Sit in desk chair, press power button, let computer power on",
   "program": [
    "[Walk] <home_office> (1)",
    "[Walk] <chair> (1)",
    "[Find] <chair> (1)",
    "[Sit] <chair> (1)",
    "[Find] <computer> (1)",
    "[TurnTo] <computer> (1)",
    "[LookAt] <computer> (1)",
    "[SwitchOn] <computer> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_kellensecond",
   "file_id": "split11_9",
   "goal_condition": [
    [
     [
      247,
      254,
      "ON",
      "character",
      "chair"
     ],
     [
      247,
      273,
      "FACING",
      "character",
      "computer"
     ],
     [
      247,
      248,
      "INSIDE",
      "character",
      "home_office"
     ]
    ],
    [
     [
      247,
      "character",
      "SITTING"
     ],
     [
      273,
      "computer",
      "ON"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1181,
   "completion_tokens": 112,
   "total_tokens": 1293
  }
 },
 "10": {
  "plan": [
   [
    " # 0: find alarm clock\n find('alarm_clock')\n # 1: walk to bedroom\n walk('bedroom')\n # 2: put alarm clock in bedroom\n assert('close' to 'alarm_clock')\n else: find('alarm_clock')\n putin('alarm_clock', 'bedroom')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " alarm",
      " clock",
      "\n",
      " find",
      "('",
      "al",
      "arm",
      "_",
      "clock",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " walk",
      " to",
      " bedroom",
      "\n",
      " walk",
      "('",
      "bedroom",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " put",
      " alarm",
      " clock",
      " in",
      " bedroom",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "al",
      "arm",
      "_",
      "clock",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "al",
      "arm",
      "_",
      "clock",
      "')",
      "\n",
      " put",
      "in",
      "('",
      "al",
      "arm",
      "_",
      "clock",
      "',",
      " '",
      "bedroom",
      "')"
     ],
     "token_logprobs": [
      -0.020086797,
      -0.008219754,
      -0.0020866848,
      -0.5962538,
      -0.16760492,
      -0.07595929,
      -0.031766087,
      -0.018033998,
      -0.0021451025,
      -0.004043848,
      -0.00023047146,
      -0.014513369,
      -0.00041792757,
      -0.0033398804,
      -0.008302991,
      -0.007284267,
      -0.0022466532,
      -0.00075119274,
      -0.976361,
      -0.1599493,
      -0.0721847,
      -0.021767037,
      -0.025190013,
      -0.0029038815,
      -0.0022311213,
      -0.0013833805,
      -0.006959441,
      -0.010566452,
      -0.0038012594,
      -0.00066947757,
      -1.0675098,
      -0.16324805,
      -0.013498011,
      -0.46389595,
      -0.07085527,
      -0.020186052,
      -0.27684006,
      -0.0016906993,
      -0.10339694,
      -0.003600902,
      -0.0016692643,
      -0.003003954,
      -0.6921121,
      -0.000116426294,
      -0.0048943916,
      -0.0005967725,
      -0.0075168894,
      -0.005936369,
      -0.0013952572,
      -0.0016049029,
      -0.0068007,
      -0.0013718604,
      -0.00069768965,
      -0.00011416413,
      -0.0011518201,
      -0.00032252402,
      -0.004440649,
      -0.006436317,
      -0.89292353,
      -0.23927866,
      -0.010304392,
      -0.050696522,
      -0.00010581859,
      -0.0019704555,
      -0.0009364814,
      -0.30708736,
      -0.002956189,
      -0.0075148474,
      -0.0018319736
     ],
     "top_logprobs": [
      {
       " #": -0.020086797
      },
      {
       " 0": -0.008219754
      },
      {
       ":": -0.0020866848
      },
      {
       " find": -0.5962538
      },
      {
       " alarm": -0.16760492
      },
      {
       " clock": -0.07595929
      },
      {
       "\n": -0.031766087
      },
      {
       " find": -0.018033998
      },
      {
       "('": -0.0021451025
      },
      {
       "al": -0.004043848
      },
      {
       "arm": -0.00023047146
      },
      {
       "_": -0.014513369
      },
      {
       "clock": -0.00041792757
      },
      {
       "')": -0.0033398804
      },
      {
       "\n": -0.008302991
      },
      {
       " #": -0.007284267
      },
      {
       " 1": -0.0022466532
      },
      {
       ":": -0.00075119274
      },
      {
       " grab": -0.66183734
      },
      {
       " to": -0.1599493
      },
      {
       " bedroom": -0.0721847
      },
      {
       "\n": -0.021767037
      },
      {
       " walk": -0.025190013
      },
      {
       "('": -0.0029038815
      },
      {
       "bedroom": -0.0022311213
      },
      {
       "')": -0.0013833805
      },
      {
       "\n": -0.006959441
      },
      {
       " #": -0.010566452
      },
      {
       " 2": -0.0038012594
      },
      {
       ":": -0.00066947757
      },
      {
       " find": -0.8147661
      },
      {
       " alarm": -0.16324805
      },
      {
       " clock": -0.013498011
      },
      {
       " in": -0.46389595
      },
      {
       " bedroom": -0.07085527
      },
      {
       "\n": -0.020186052
      },
      {
       " assert": -0.27684006
      },
      {
       "('": -0.0016906993
      },
      {
       "close": -0.10339694
      },
      {
       "'": -0.003600902
      },
      {
       " to": -0.0016692643
      },
      {
       " '": -0.003003954
      },
      {
       "al": -0.6921121
      },
      {
       "arm": -0.000116426294
      },
      {
       "_": -0.0048943916
      },
      {
       "clock": -0.0005967725
      },
      {
       "')": -0.0075168894
      },
      {
       "\n": -0.005936369
      },
      {
       " else": -0.0013952572
      },
      {
       ":": -0.0016049029
      },
      {
       " find": -0.0068007
      },
      {
       "('": -0.0013718604
      },
      {
       "al": -0.00069768965
      },
      {
       "arm": -0.00011416413
      },
      {
       "_": -0.0011518201
      },
      {
       "clock": -0.00032252402
      },
      {
       "')": -0.004440649
      },
      {
       "\n": -0.006436317
      },
      {
       " put": -0.89292353
      },
      {
       "in": -0.23927866
      },
      {
       "('": -0.010304392
      },
      {
       "al": -0.050696522
      },
      {
       "arm": -0.00010581859
      },
      {
       "_": -0.0019704555
      },
      {
       "clock": -0.0009364814
      },
      {
       "',": -0.30708736
      },
      {
       " '": -0.002956189
      },
      {
       "bedroom": -0.0075148474
      },
      {
       "')": -0.0018319736
      }
     ],
     "text_offset": [
      3390,
      3392,
      3394,
      3395,
      3400,
      3406,
      3412,
      3413,
      3418,
      3420,
      3422,
      3425,
      3426,
      3431,
      3433,
      3434,
      3436,
      3438,
      3439,
      3444,
      3447,
      3455,
      3456,
      3461,
      3463,
      3470,
      3472,
      3473,
      3475,
      3477,
      3478,
      3482,
      3488,
      3494,
      3497,
      3505,
      3506,
      3513,
      3515,
      3520,
      3521,
      3524,
      3526,
      3528,
      3531,
      3532,
      3537,
      3539,
      3540,
      3545,
      3546,
      3551,
      3553,
      3555,
      3558,
      3559,
      3564,
      3566,
      3567,
      3571,
      3573,
      3575,
      3577,
      3580,
      3581,
      3586,
      3588,
      3590,
      3597
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Put alarm clock in bedroom",
   "task_description": "Take alarm clock. Sit it on stand, next to bed. Plug in alarm clock. Set time, according to watch. Set alarm, depending on what time you have to get up.",
   "program": [
    "[Walk] <bedroom> (1)",
    "[Walk] <alarm_clock> (1)",
    "[Find] <alarm_clock> (1)",
    "[Grab] <alarm_clock> (1)",
    "[Find] <dresser> (1)",
    "[Open] <dresser> (1)",
    "[PutBack] <alarm_clock> (1) <dresser> (1)",
    "[SwitchOn] <alarm_clock> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_kellensecond",
   "file_id": "split11_6",
   "goal_condition": [
    [
     [
      247,
      189,
      "INSIDE",
      "character",
      "bedroom"
     ],
     [
      1000,
      1001,
      "ON",
      "alarm_clock",
      "dresser"
     ]
    ],
    [
     [
      1001,
      "dresser",
      "OPEN"
     ],
     [
      1000,
      "alarm_clock",
      "ON"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1188,
   "completion_tokens": 69,
   "total_tokens": 1257
  }
 },
 "11": {
  "plan": [
   [
    " # 0: find chair\n find('chair')\n # 1: grab chair\n assert('close' to 'chair')\n else: find('chair')\n grab('chair')\n assert('chair' in 'hands')\n else: grab('chair')\n turnto('chair')\n assert('chair' in 'hands')\n else: grab('chair')\n pointat('chair')\n # 2: sit on chair\n assert('close' to 'chair')\n else: find('chair')\n sit('chair')\n lookat('chair')\n # 3: turn chair\n turnto('chair')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " chair",
      "\n",
      " find",
      "('",
      "chair",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " grab",
      " chair",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "chair",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "chair",
      "')",
      "\n",
      " grab",
      "('",
      "chair",
      "')",
      "\n",
      " assert",
      "('",
      "chair",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "chair",
      "')",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "chair",
      "')",
      "\n",
      " assert",
      "('",
      "chair",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "chair",
      "')",
      "\n",
      " point",
      "at",
      "('",
      "chair",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " sit",
      " on",
      " chair",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "chair",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "chair",
      "')",
      "\n",
      " sit",
      "('",
      "chair",
      "')",
      "\n",
      " look",
      "at",
      "('",
      "chair",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " turn",
      " chair",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "chair",
      "')"
     ],
     "token_logprobs": [
      -0.02354492,
      -0.008183338,
      -0.0017354785,
      -0.57903904,
      -0.17297141,
      -0.02746461,
      -0.05162374,
      -0.0018031899,
      -0.001255418,
      -0.0015326691,
      -0.00888981,
      -0.0039265538,
      -0.0025668447,
      -0.0005732152,
      -1.5433472,
      -0.0859978,
      -0.019356383,
      -0.37191558,
      -0.0014288637,
      -0.0027151783,
      -0.00186613,
      -0.001042502,
      -0.002035856,
      -0.0006994787,
      -0.0044231075,
      -0.0052227424,
      -0.001097997,
      -0.0012993431,
      -0.0030312778,
      -0.0012376334,
      -0.0007528626,
      -0.0015503992,
      -0.0060357875,
      -0.0067640343,
      -0.0008489645,
      -0.00041095246,
      -0.0016043067,
      -0.004713875,
      -0.73633635,
      -0.0009951874,
      -0.0078787645,
      -0.0017135639,
      -0.017854618,
      -0.0029165552,
      -0.004318162,
      -0.01162654,
      -0.0026746579,
      -0.0063947462,
      -0.0022031637,
      -0.0021103378,
      -0.0012162096,
      -0.0004311635,
      -0.002144147,
      -0.0038766519,
      -0.48226175,
      -2.8206221e-05,
      -0.00013490739,
      -0.00037374342,
      -0.00042293806,
      -0.0012162096,
      -0.0026716702,
      -0.26472497,
      -0.00033749174,
      -0.004281289,
      -0.0006778259,
      -0.0018721609,
      -0.00078644656,
      -0.0011253858,
      -0.0009479367,
      -0.0011220442,
      -0.0012809024,
      -0.0006580251,
      -0.0008917378,
      -0.00056033314,
      -0.00047678567,
      -0.0006060773,
      -0.0022663085,
      -0.06649868,
      -0.00045871665,
      -0.0003512045,
      -0.0003881742,
      -0.001114167,
      -0.004622254,
      -0.002632703,
      -0.0057340865,
      -0.0006682836,
      -0.093583494,
      -0.63015443,
      -0.17876321,
      -0.009181159,
      -0.17618087,
      -0.00047797684,
      -0.5682717,
      -0.0012300529,
      -0.0021159528,
      -0.0014653959,
      -0.0004434504,
      -0.0028723795,
      -0.002124137,
      -0.000585442,
      -0.00051900244,
      -0.013183541,
      -0.0007366371,
      -0.00030702315,
      -0.0016197691,
      -0.004001837,
      -0.0135673685,
      -0.0009882086,
      -0.00036623323,
      -0.0013489996,
      -0.14341949,
      -2.2917955,
      -0.010198345,
      -0.00060834415,
      -0.0008123946,
      -0.0012606097,
      -0.34760994,
      -0.029617103,
      -0.007184725,
      -0.0009993663,
      -5.091084,
      -1.7376077,
      -1.3103412,
      -0.26518673,
      -4.406191e-05,
      -0.00156001,
      -0.0015886051,
      -0.00206823,
      -0.0031854163
     ],
     "top_logprobs": [
      {
       " #": -0.02354492
      },
      {
       " 0": -0.008183338
      },
      {
       ":": -0.0017354785
      },
      {
       " find": -0.57903904
      },
      {
       " chair": -0.17297141
      },
      {
       "\n": -0.02746461
      },
      {
       " find": -0.05162374
      },
      {
       "('": -0.0018031899
      },
      {
       "chair": -0.001255418
      },
      {
       "')": -0.0015326691
      },
      {
       "\n": -0.00888981
      },
      {
       " #": -0.0039265538
      },
      {
       " 1": -0.0025668447
      },
      {
       ":": -0.0005732152
      },
      {
       " walk": -0.8084716
      },
      {
       " chair": -0.0859978
      },
      {
       "\n": -0.019356383
      },
      {
       " assert": -0.37191558
      },
      {
       "('": -0.0014288637
      },
      {
       "close": -0.0027151783
      },
      {
       "'": -0.00186613
      },
      {
       " to": -0.001042502
      },
      {
       " '": -0.002035856
      },
      {
       "chair": -0.0006994787
      },
      {
       "')": -0.0044231075
      },
      {
       "\n": -0.0052227424
      },
      {
       " else": -0.001097997
      },
      {
       ":": -0.0012993431
      },
      {
       " find": -0.0030312778
      },
      {
       "('": -0.0012376334
      },
      {
       "chair": -0.0007528626
      },
      {
       "')": -0.0015503992
      },
      {
       "\n": -0.0060357875
      },
      {
       " grab": -0.0067640343
      },
      {
       "('": -0.0008489645
      },
      {
       "chair": -0.00041095246
      },
      {
       "')": -0.0016043067
      },
      {
       "\n": -0.004713875
      },
      {
       " #": -0.7050939
      },
      {
       "('": -0.0009951874
      },
      {
       "chair": -0.0078787645
      },
      {
       "'": -0.0017135639
      },
      {
       " in": -0.017854618
      },
      {
       " '": -0.0029165552
      },
      {
       "hands": -0.004318162
      },
      {
       "')": -0.01162654
      },
      {
       "\n": -0.0026746579
      },
      {
       " else": -0.0063947462
      },
      {
       ":": -0.0022031637
      },
      {
       " grab": -0.0021103378
      },
      {
       "('": -0.0012162096
      },
      {
       "chair": -0.0004311635
      },
      {
       "')": -0.002144147
      },
      {
       "\n": -0.0038766519
      },
      {
       " tur": -0.48226175
      },
      {
       "nt": -2.8206221e-05
      },
      {
       "o": -0.00013490739
      },
      {
       "('": -0.00037374342
      },
      {
       "chair": -0.00042293806
      },
      {
       "')": -0.0012162096
      },
      {
       "\n": -0.0026716702
      },
      {
       " assert": -0.26472497
      },
      {
       "('": -0.00033749174
      },
      {
       "chair": -0.004281289
      },
      {
       "'": -0.0006778259
      },
      {
       " in": -0.0018721609
      },
      {
       " '": -0.00078644656
      },
      {
       "hands": -0.0011253858
      },
      {
       "')": -0.0009479367
      },
      {
       "\n": -0.0011220442
      },
      {
       " else": -0.0012809024
      },
      {
       ":": -0.0006580251
      },
      {
       " grab": -0.0008917378
      },
      {
       "('": -0.00056033314
      },
      {
       "chair": -0.00047678567
      },
      {
       "')": -0.0006060773
      },
      {
       "\n": -0.0022663085
      },
      {
       " point": -0.06649868
      },
      {
       "at": -0.00045871665
      },
      {
       "('": -0.0003512045
      },
      {
       "chair": -0.0003881742
      },
      {
       "')": -0.001114167
      },
      {
       "\n": -0.004622254
      },
      {
       " #": -0.002632703
      },
      {
       " 2": -0.0057340865
      },
      {
       ":": -0.0006682836
      },
      {
       " sit": -0.093583494
      },
      {
       " on": -0.63015443
      },
      {
       " chair": -0.17876321
      },
      {
       "\n": -0.009181159
      },
      {
       " assert": -0.17618087
      },
      {
       "('": -0.00047797684
      },
      {
       "close": -0.5682717
      },
      {
       "'": -0.0012300529
      },
      {
       " to": -0.0021159528
      },
      {
       " '": -0.0014653959
      },
      {
       "chair": -0.0004434504
      },
      {
       "')": -0.0028723795
      },
      {
       "\n": -0.002124137
      },
      {
       " else": -0.000585442
      },
      {
       ":": -0.00051900244
      },
      {
       " find": -0.013183541
      },
      {
       "('": -0.0007366371
      },
      {
       "chair": -0.00030702315
      },
      {
       "')": -0.0016197691
      },
      {
       "\n": -0.004001837
      },
      {
       " sit": -0.0135673685
      },
      {
       "('": -0.0009882086
      },
      {
       "chair": -0.00036623323
      },
      {
       "')": -0.0013489996
      },
      {
       "\n": -0.14341949
      },
      {
       " #": -0.41922003
      },
      {
       "at": -0.010198345
      },
      {
       "('": -0.00060834415
      },
      {
       "chair": -0.0008123946
      },
      {
       "')": -0.0012606097
      },
      {
       "\n": -0.34760994
      },
      {
       " #": -0.029617103
      },
      {
       " 3": -0.007184725
      },
      {
       ":": -0.0009993663
      },
      {
       " Done": -0.7936684
      },
      {
       " to": -0.5333383
      },
      {
       " to": -0.7724432
      },
      {
       " tur": -0.26518673
      },
      {
       "nt": -4.406191e-05
      },
      {
       "o": -0.00156001
      },
      {
       "('": -0.0015886051
      },
      {
       "chair": -0.00206823
      },
      {
       "')": -0.0031854163
      }
     ],
     "text_offset": [
      3376,
      3378,
      3380,
      3381,
      3386,
      3392,
      3393,
      3398,
      3400,
      3405,
      3407,
      3408,
      3410,
      3412,
      3413,
      3418,
      3424,
      3425,
      3432,
      3434,
      3439,
      3440,
      3443,
      3445,
      3450,
      3452,
      3453,
      3458,
      3459,
      3464,
      3466,
      3471,
      3473,
      3474,
      3479,
      3481,
      3486,
      3488,
      3489,
      3496,
      3498,
      3503,
      3504,
      3507,
      3509,
      3514,
      3516,
      3517,
      3522,
      3523,
      3528,
      3530,
      3535,
      3537,
      3538,
      3542,
      3544,
      3545,
      3547,
      3552,
      3554,
      3555,
      3562,
      3564,
      3569,
      3570,
      3573,
      3575,
      3580,
      3582,
      3583,
      3588,
      3589,
      3594,
      3596,
      3601,
      3603,
      3604,
      3610,
      3612,
      3614,
      3619,
      3621,
      3622,
      3624,
      3626,
      3627,
      3631,
      3634,
      3640,
      3641,
      3648,
      3650,
      3655,
      3656,
      3659,
      3661,
      3666,
      3668,
      3669,
      3674,
      3675,
      3680,
      3682,
      3687,
      3689,
      3690,
      3694,
      3696,
      3701,
      3703,
      3704,
      3709,
      3711,
      3713,
      3718,
      3720,
      3721,
      3723,
      3725,
      3726,
      3731,
      3737,
      3738,
      3742,
      3744,
      3745,
      3747,
      3752
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Sit in chair",
   "task_description": "I sit in a chair to rest and eat.",
   "program": [
    "[Walk] <dining_room> (1)",
    "[Walk] <chair> (1)",
    "[Find] <chair> (1)",
    "[Pull] <chair> (1)",
    "[Sit] <chair> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_kellensecond",
   "file_id": "split8_7",
   "goal_condition": [
    [
     [
      247,
      60,
      "ON",
      "character",
      "chair"
     ],
     [
      247,
      1,
      "INSIDE",
      "character",
      "dining_room"
     ]
    ],
    [
     [
      247,
      "character",
      "SITTING"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1183,
   "completion_tokens": 129,
   "total_tokens": 1312
  }
 },
 "12": {
  "plan": [
   [
    " # 0: wake up\n wakeup()\n # 1: find alarm clock\n find('alarm_clock')\n # 2: turn off the alarm\n switchoff('alarm_clock')\n # 3: Done\n standup()",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " wake",
      " up",
      "\n",
      " wake",
      "up",
      "()",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " alarm",
      " clock",
      "\n",
      " find",
      "('",
      "al",
      "arm",
      "_",
      "clock",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " turn",
      " off",
      " the",
      " alarm",
      "\n",
      " switch",
      "off",
      "('",
      "al",
      "arm",
      "_",
      "clock",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " Done",
      "\n",
      " stand",
      "up",
      "()"
     ],
     "token_logprobs": [
      -0.02114942,
      -0.011756138,
      -0.0025113919,
      -2.993698,
      -0.1690592,
      -0.06369898,
      -0.016388493,
      -0.002868913,
      -0.011087346,
      -0.011480318,
      -0.005376502,
      -0.004689023,
      -0.0008650708,
      -0.2546635,
      -0.2563698,
      -0.6512392,
      -0.023864307,
      -0.16787305,
      -0.0020039033,
      -0.008335984,
      -0.0005747649,
      -0.0254837,
      -0.00067866227,
      -0.003522841,
      -0.007500675,
      -0.014305536,
      -0.0058685583,
      -0.001551473,
      -0.62201005,
      -0.030601453,
      -0.8631715,
      -0.007992737,
      -0.22139572,
      -1.3738497,
      -0.0042541116,
      -0.0013799197,
      -0.0010807512,
      -0.00024048591,
      -0.015451665,
      -0.0004432111,
      -0.002966709,
      -0.27076983,
      -0.037258882,
      -0.006489651,
      -0.00060094945,
      -1.4173112,
      -0.5076504,
      -3.018484,
      -0.0017234168,
      -0.007831442
     ],
     "top_logprobs": [
      {
       " #": -0.02114942
      },
      {
       " 0": -0.011756138
      },
      {
       ":": -0.0025113919
      },
      {
       " find": -0.35482767
      },
      {
       " up": -0.1690592
      },
      {
       "\n": -0.06369898
      },
      {
       " wake": -0.016388493
      },
      {
       "up": -0.002868913
      },
      {
       "()": -0.011087346
      },
      {
       "\n": -0.011480318
      },
      {
       " #": -0.005376502
      },
      {
       " 1": -0.004689023
      },
      {
       ":": -0.0008650708
      },
      {
       " find": -0.2546635
      },
      {
       " alarm": -0.2563698
      },
      {
       " clock": -0.6512392
      },
      {
       "\n": -0.023864307
      },
      {
       " find": -0.16787305
      },
      {
       "('": -0.0020039033
      },
      {
       "al": -0.008335984
      },
      {
       "arm": -0.0005747649
      },
      {
       "_": -0.0254837
      },
      {
       "clock": -0.00067866227
      },
      {
       "')": -0.003522841
      },
      {
       "\n": -0.007500675
      },
      {
       " #": -0.014305536
      },
      {
       " 2": -0.0058685583
      },
      {
       ":": -0.001551473
      },
      {
       " turn": -0.62201005
      },
      {
       " off": -0.030601453
      },
      {
       " alarm": -0.56023884
      },
      {
       " alarm": -0.007992737
      },
      {
       "\n": -0.22139572
      },
      {
       " assert": -0.73969936
      },
      {
       "off": -0.0042541116
      },
      {
       "('": -0.0013799197
      },
      {
       "al": -0.0010807512
      },
      {
       "arm": -0.00024048591
      },
      {
       "_": -0.015451665
      },
      {
       "clock": -0.0004432111
      },
      {
       "')": -0.002966709
      },
      {
       "\n": -0.27076983
      },
      {
       " #": -0.037258882
      },
      {
       " 3": -0.006489651
      },
      {
       ":": -0.00060094945
      },
      {
       " Done": -1.4173112
      },
      {
       "\n": -0.5076504
      },
      {
       "<|endoftext|>": -1.5679598
      },
      {
       "up": -0.0017234168
      },
      {
       "()": -0.007831442
      }
     ],
     "text_offset": [
      3378,
      3380,
      3382,
      3383,
      3388,
      3391,
      3392,
      3397,
      3399,
      3401,
      3402,
      3404,
      3406,
      3407,
      3412,
      3418,
      3424,
      3425,
      3430,
      3432,
      3434,
      3437,
      3438,
      3443,
      3445,
      3446,
      3448,
      3450,
      3451,
      3456,
      3460,
      3464,
      3470,
      3471,
      3478,
      3481,
      3483,
      3485,
      3488,
      3489,
      3494,
      3496,
      3497,
      3499,
      3501,
      3502,
      3507,
      3508,
      3514,
      3516
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Shut off alarm",
   "task_description": "Shutting of the alarm clock",
   "program": [
    "[Walk] <bedroom> (1)",
    "[Walk] <alarm_clock> (1)",
    "[Find] <alarm_clock> (1)",
    "[Grab] <alarm_clock> (1)",
    "[SwitchOff] <alarm_clock> (1)",
    "[PutObjBack] <alarm_clock> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_kellensecond",
   "file_id": "split4_4",
   "goal_condition": [
    [
     [
      247,
      189,
      "INSIDE",
      "character",
      "bedroom"
     ]
    ],
    [
     [
      1000,
      "alarm_clock",
      "OFF"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1184,
   "completion_tokens": 50,
   "total_tokens": 1234
  }
 },
 "13": {
  "plan": [
   [
    " # 0: find bed\n find('bed')\n # 1: lay down on bed\n assert('close' to 'bed')\n else: find('bed')\n turnto('bed')\n lookat('bed')\n lie('bed')\n # 2: turn off lights\n switchoff('light')\n # 3: sleep\n sleep()",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " bed",
      "\n",
      " find",
      "('",
      "bed",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " lay",
      " down",
      " on",
      " bed",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "bed",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "bed",
      "')",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "bed",
      "')",
      "\n",
      " look",
      "at",
      "('",
      "bed",
      "')",
      "\n",
      " lie",
      "('",
      "bed",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " turn",
      " off",
      " lights",
      "\n",
      " switch",
      "off",
      "('",
      "light",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " sleep",
      "\n",
      " sleep",
      "()"
     ],
     "token_logprobs": [
      -0.01718459,
      -0.009373189,
      -0.0019921982,
      -1.1156139,
      -0.7642398,
      -0.031130971,
      -0.27292696,
      -0.0018110126,
      -0.00044333027,
      -0.001624546,
      -0.0076163425,
      -0.0044060443,
      -0.0031075676,
      -0.0007056832,
      -0.63628185,
      -0.11063692,
      -0.2038521,
      -0.07409128,
      -0.01495869,
      -1.5235035,
      -0.0016286067,
      -0.006365173,
      -0.0029677858,
      -0.00083088985,
      -0.0027330504,
      -0.00028102813,
      -0.004205086,
      -0.004855638,
      -0.0015598917,
      -0.0014763171,
      -0.0046699196,
      -0.001464201,
      -0.00028734808,
      -0.001033077,
      -0.0051910467,
      -0.9087063,
      -3.8217877e-05,
      -0.00031608582,
      -0.0005855612,
      -0.00018248011,
      -0.0019383293,
      -0.0041795294,
      -0.24217898,
      -0.00049813156,
      -0.0004508442,
      -0.00024060514,
      -0.0007534595,
      -0.003554661,
      -0.6352978,
      -0.011364079,
      -0.0013001795,
      -0.0012690857,
      -0.00476035,
      -0.035174813,
      -0.007321193,
      -0.00096983457,
      -3.6227012,
      -0.31771207,
      -2.0075939,
      -0.04626296,
      -2.0340033,
      -0.007039875,
      -0.0016180993,
      -0.20430516,
      -0.0034465778,
      -0.012087292,
      -0.018659964,
      -0.0067649344,
      -0.0011176269,
      -1.0597237,
      -0.0687458,
      -0.018364687,
      -0.005709627
     ],
     "top_logprobs": [
      {
       " #": -0.01718459
      },
      {
       " 0": -0.009373189
      },
      {
       ":": -0.0019921982
      },
      {
       " walk": -0.742176
      },
      {
       " bed": -0.7642398
      },
      {
       "\n": -0.031130971
      },
      {
       " find": -0.27292696
      },
      {
       "('": -0.0018110126
      },
      {
       "bed": -0.00044333027
      },
      {
       "')": -0.001624546
      },
      {
       "\n": -0.0076163425
      },
      {
       " #": -0.0044060443
      },
      {
       " 1": -0.0031075676
      },
      {
       ":": -0.0007056832
      },
      {
       " lay": -0.63628185
      },
      {
       " down": -0.11063692
      },
      {
       " on": -0.2038521
      },
      {
       " bed": -0.07409128
      },
      {
       "\n": -0.01495869
      },
      {
       " tur": -0.2884058
      },
      {
       "('": -0.0016286067
      },
      {
       "close": -0.006365173
      },
      {
       "'": -0.0029677858
      },
      {
       " to": -0.00083088985
      },
      {
       " '": -0.0027330504
      },
      {
       "bed": -0.00028102813
      },
      {
       "')": -0.004205086
      },
      {
       "\n": -0.004855638
      },
      {
       " else": -0.0015598917
      },
      {
       ":": -0.0014763171
      },
      {
       " find": -0.0046699196
      },
      {
       "('": -0.001464201
      },
      {
       "bed": -0.00028734808
      },
      {
       "')": -0.001033077
      },
      {
       "\n": -0.0051910467
      },
      {
       " tur": -0.9087063
      },
      {
       "nt": -3.8217877e-05
      },
      {
       "o": -0.00031608582
      },
      {
       "('": -0.0005855612
      },
      {
       "bed": -0.00018248011
      },
      {
       "')": -0.0019383293
      },
      {
       "\n": -0.0041795294
      },
      {
       " look": -0.24217898
      },
      {
       "at": -0.00049813156
      },
      {
       "('": -0.0004508442
      },
      {
       "bed": -0.00024060514
      },
      {
       "')": -0.0007534595
      },
      {
       "\n": -0.003554661
      },
      {
       " lie": -0.6352978
      },
      {
       "('": -0.011364079
      },
      {
       "bed": -0.0013001795
      },
      {
       "')": -0.0012690857
      },
      {
       "\n": -0.00476035
      },
      {
       " #": -0.035174813
      },
      {
       " 2": -0.007321193
      },
      {
       ":": -0.00096983457
      },
      {
       " close": -0.76593935
      },
      {
       " off": -0.31771207
      },
      {
       " the": -0.44693923
      },
      {
       "\n": -0.04626296
      },
      {
       " find": -0.66051686
      },
      {
       "off": -0.007039875
      },
      {
       "('": -0.0016180993
      },
      {
       "light": -0.20430516
      },
      {
       "')": -0.0034465778
      },
      {
       "\n": -0.012087292
      },
      {
       " #": -0.018659964
      },
      {
       " 3": -0.0067649344
      },
      {
       ":": -0.0011176269
      },
      {
       " sleep": -1.0597237
      },
      {
       "\n": -0.0687458
      },
      {
       " sleep": -0.018364687
      },
      {
       "()": -0.005709627
      }
     ],
     "text_offset": [
      3372,
      3374,
      3376,
      3377,
      3382,
      3386,
      3387,
      3392,
      3394,
      3397,
      3399,
      3400,
      3402,
      3404,
      3405,
      3409,
      3414,
      3417,
      3421,
      3422,
      3429,
      3431,
      3436,
      3437,
      3440,
      3442,
      3445,
      3447,
      3448,
      3453,
      3454,
      3459,
      3461,
      3464,
      3466,
      3467,
      3471,
      3473,
      3474,
      3476,
      3479,
      3481,
      3482,
      3487,
      3489,
      3491,
      3494,
      3496,
      3497,
      3501,
      3503,
      3506,
      3508,
      3509,
      3511,
      3513,
      3514,
      3519,
      3523,
      3530,
      3531,
      3538,
      3541,
      3543,
      3548,
      3550,
      3551,
      3553,
      3555,
      3556,
      3562,
      3563,
      3569
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Take nap",
   "task_description": "Sleep for a short amount of time during the day",
   "program": [
    "[Walk] <bedroom> (1)",
    "[Walk] <bed> (1)",
    "[Find] <bed> (1)",
    "[Lie] <bed> (1)",
    "[Sleep]"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_july",
   "file_id": "split6_5",
   "goal_condition": [
    [
     [
      247,
      194,
      "ON",
      "character",
      "bed"
     ],
     [
      247,
      189,
      "INSIDE",
      "character",
      "bedroom"
     ]
    ],
    [
     [
      247,
      "character",
      "LYING"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1182,
   "completion_tokens": 73,
   "total_tokens": 1255
  }
 },
 "14": {
  "plan": [
   [
    " # 0: find computer\n find('computer')\n # 1: sit on chair\n find('chair')\n sit('chair')\n # 2: turn on computer\n assert('close' to 'computer')\n else: find('computer')\n switchon('computer')\n # 3: use the mouse\n assert('close' to 'computer')\n else: find('computer')\n lookat('computer')\n find('mouse')\n grab('mouse')\n pointat('mousepad')\n move('mouse')\n # 4: use keyboard\n find('keyboard')\n grab('keyboard')\n pointat('keyboard')\n type('keyboard')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " computer",
      "\n",
      " find",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " sit",
      " on",
      " chair",
      "\n",
      " find",
      "('",
      "chair",
      "')",
      "\n",
      " sit",
      "('",
      "chair",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " turn",
      " on",
      " computer",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "computer",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "computer",
      "')",
      "\n",
      " switch",
      "on",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " use",
      " the",
      " mouse",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "computer",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "computer",
      "')",
      "\n",
      " look",
      "at",
      "('",
      "computer",
      "')",
      "\n",
      " find",
      "('",
      "mouse",
      "')",
      "\n",
      " grab",
      "('",
      "mouse",
      "')",
      "\n",
      " point",
      "at",
      "('",
      "mouse",
      "pad",
      "')",
      "\n",
      " move",
      "('",
      "mouse",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " use",
      " keyboard",
      "\n",
      " find",
      "('",
      "key",
      "board",
      "')",
      "\n",
      " grab",
      "('",
      "key",
      "board",
      "')",
      "\n",
      " point",
      "at",
      "('",
      "key",
      "board",
      "')",
      "\n",
      " type",
      "('",
      "key",
      "board",
      "')"
     ],
     "token_logprobs": [
      -0.018559342,
      -0.006762114,
      -0.0017548259,
      -1.4099461,
      -0.72321194,
      -0.030856157,
      -0.096304365,
      -0.0022219217,
      -0.0021992233,
      -0.0019528427,
      -0.007908561,
      -0.005676239,
      -0.003554661,
      -0.000751311,
      -1.7898972,
      -0.7592721,
      -0.30322573,
      -0.085537486,
      -0.47423106,
      -0.0013997947,
      -0.0031482272,
      -0.0019062002,
      -0.0048211985,
      -0.83505696,
      -0.0022683397,
      -0.0013128925,
      -0.0008396568,
      -0.0064546736,
      -0.04099813,
      -0.0083483085,
      -0.0013070428,
      -0.5560379,
      -0.05328011,
      -0.42742217,
      -0.025593638,
      -0.6396607,
      -0.0018795651,
      -0.06413479,
      -0.004364138,
      -0.0010255584,
      -0.004219694,
      -0.0035255912,
      -0.0069968957,
      -0.005244793,
      -0.0018764609,
      -0.001789218,
      -0.005185356,
      -0.0017476002,
      -0.00095628976,
      -0.0026725063,
      -0.0067643346,
      -0.24149723,
      -0.004066531,
      -0.00089722703,
      -0.0009883279,
      -0.0020773106,
      -0.0058835447,
      -0.019903762,
      -0.007451073,
      -0.00062718947,
      -1.4919356,
      -1.3431538,
      -1.0879183,
      -0.38785806,
      -1.1301467,
      -0.0017374487,
      -0.3457903,
      -0.004306668,
      -0.00043903594,
      -0.0027659808,
      -1.4918756,
      -0.019317674,
      -0.0041163852,
      -0.003783671,
      -0.0016567857,
      -0.0050334204,
      -0.0012979099,
      -0.0023837036,
      -0.002746916,
      -0.0061426507,
      -4.3007126,
      -0.0049363202,
      -0.0009946515,
      -0.4204272,
      -0.013931761,
      -0.0063305614,
      -1.1338477,
      -0.0018204479,
      -0.0041209925,
      -0.0801929,
      -0.005796074,
      -0.5130739,
      -0.0010473961,
      -0.00038554877,
      -0.0031405133,
      -0.009231328,
      -1.5058929,
      -0.0084439395,
      -0.0009560504,
      -0.15821546,
      -2.054734,
      -0.0020850103,
      -0.06974914,
      -2.100321,
      -0.03195487,
      -0.0067171087,
      -0.22260253,
      -0.27389517,
      -0.17014547,
      -0.01151734,
      -0.0017505842,
      -1.161487,
      -1.7900797,
      -0.037287466,
      -0.51394916,
      -0.0010519318,
      -0.0016861609,
      -0.0006499133,
      -0.0024323417,
      -0.005917181,
      -0.44326073,
      -0.00054649834,
      -0.0004045105,
      -0.0014831205,
      -0.0024966944,
      -0.0036443332,
      -0.840381,
      -0.0014861063,
      -0.0004998033,
      -0.11220705,
      -0.0021931296,
      -0.0021701907,
      -0.006375429,
      -0.30012566,
      -0.06231578,
      -0.03330989,
      -0.003351304,
      -0.0041970075
     ],
     "top_logprobs": [
      {
       " #": -0.018559342
      },
      {
       " 0": -0.006762114
      },
      {
       ":": -0.0017548259
      },
      {
       " walk": -0.37261468
      },
      {
       " computer": -0.72321194
      },
      {
       "\n": -0.030856157
      },
      {
       " find": -0.096304365
      },
      {
       "('": -0.0022219217
      },
      {
       "computer": -0.0021992233
      },
      {
       "')": -0.0019528427
      },
      {
       "\n": -0.007908561
      },
      {
       " #": -0.005676239
      },
      {
       " 1": -0.003554661
      },
      {
       ":": -0.000751311
      },
      {
       " turn": -1.0634302
      },
      {
       " on": -0.7592721
      },
      {
       " chair": -0.30322573
      },
      {
       "\n": -0.085537486
      },
      {
       " find": -0.47423106
      },
      {
       "('": -0.0013997947
      },
      {
       "chair": -0.0031482272
      },
      {
       "')": -0.0019062002
      },
      {
       "\n": -0.0048211985
      },
      {
       " assert": -0.6720913
      },
      {
       "('": -0.0022683397
      },
      {
       "chair": -0.0013128925
      },
      {
       "')": -0.0008396568
      },
      {
       "\n": -0.0064546736
      },
      {
       " #": -0.04099813
      },
      {
       " 2": -0.0083483085
      },
      {
       ":": -0.0013070428
      },
      {
       " turn": -0.5560379
      },
      {
       " on": -0.05328011
      },
      {
       " computer": -0.42742217
      },
      {
       "\n": -0.025593638
      },
      {
       " assert": -0.6396607
      },
      {
       "('": -0.0018795651
      },
      {
       "close": -0.06413479
      },
      {
       "'": -0.004364138
      },
      {
       " to": -0.0010255584
      },
      {
       " '": -0.004219694
      },
      {
       "computer": -0.0035255912
      },
      {
       "')": -0.0069968957
      },
      {
       "\n": -0.005244793
      },
      {
       " else": -0.0018764609
      },
      {
       ":": -0.001789218
      },
      {
       " find": -0.005185356
      },
      {
       "('": -0.0017476002
      },
      {
       "computer": -0.00095628976
      },
      {
       "')": -0.0026725063
      },
      {
       "\n": -0.0067643346
      },
      {
       " switch": -0.24149723
      },
      {
       "on": -0.004066531
      },
      {
       "('": -0.00089722703
      },
      {
       "computer": -0.0009883279
      },
      {
       "')": -0.0020773106
      },
      {
       "\n": -0.0058835447
      },
      {
       " #": -0.019903762
      },
      {
       " 3": -0.007451073
      },
      {
       ":": -0.00062718947
      },
      {
       " open": -1.163124
      },
      {
       " computer": -0.9786415
      },
      {
       " computer": -0.7123965
      },
      {
       "\n": -0.38785806
      },
      {
       " find": -0.55902463
      },
      {
       "('": -0.0017374487
      },
      {
       "close": -0.3457903
      },
      {
       "'": -0.004306668
      },
      {
       " to": -0.00043903594
      },
      {
       " '": -0.0027659808
      },
      {
       "mouse": -0.25834176
      },
      {
       "')": -0.019317674
      },
      {
       "\n": -0.0041163852
      },
      {
       " else": -0.003783671
      },
      {
       ":": -0.0016567857
      },
      {
       " find": -0.0050334204
      },
      {
       "('": -0.0012979099
      },
      {
       "computer": -0.0023837036
      },
      {
       "')": -0.002746916
      },
      {
       "\n": -0.0061426507
      },
      {
       " find": -0.8819049
      },
      {
       "at": -0.0049363202
      },
      {
       "('": -0.0009946515
      },
      {
       "computer": -0.4204272
      },
      {
       "')": -0.013931761
      },
      {
       "\n": -0.0063305614
      },
      {
       " find": -1.1338477
      },
      {
       "('": -0.0018204479
      },
      {
       "mouse": -0.0041209925
      },
      {
       "')": -0.0801929
      },
      {
       "\n": -0.005796074
      },
      {
       " grab": -0.5130739
      },
      {
       "('": -0.0010473961
      },
      {
       "mouse": -0.00038554877
      },
      {
       "')": -0.0031405133
      },
      {
       "\n": -0.009231328
      },
      {
       " #": -1.2570707
      },
      {
       "at": -0.0084439395
      },
      {
       "('": -0.0009560504
      },
      {
       "mouse": -0.15821546
      },
      {
       "')": -0.13937442
      },
      {
       "')": -0.0020850103
      },
      {
       "\n": -0.06974914
      },
      {
       " #": -0.29836315
      },
      {
       "('": -0.03195487
      },
      {
       "mouse": -0.0067171087
      },
      {
       "')": -0.22260253
      },
      {
       "\n": -0.27389517
      },
      {
       " #": -0.17014547
      },
      {
       " 4": -0.01151734
      },
      {
       ":": -0.0017505842
      },
      {
       " use": -1.161487
      },
      {
       " the": -0.19665009
      },
      {
       "\n": -0.037287466
      },
      {
       " find": -0.51394916
      },
      {
       "('": -0.0010519318
      },
      {
       "key": -0.0016861609
      },
      {
       "board": -0.0006499133
      },
      {
       "')": -0.0024323417
      },
      {
       "\n": -0.005917181
      },
      {
       " grab": -0.44326073
      },
      {
       "('": -0.00054649834
      },
      {
       "key": -0.0004045105
      },
      {
       "board": -0.0014831205
      },
      {
       "')": -0.0024966944
      },
      {
       "\n": -0.0036443332
      },
      {
       " point": -0.840381
      },
      {
       "at": -0.0014861063
      },
      {
       "('": -0.0004998033
      },
      {
       "key": -0.11220705
      },
      {
       "board": -0.0021931296
      },
      {
       "')": -0.0021701907
      },
      {
       "\n": -0.006375429
      },
      {
       " type": -0.30012566
      },
      {
       "('": -0.06231578
      },
      {
       "key": -0.03330989
      },
      {
       "board": -0.003351304
      },
      {
       "')": -0.0041970075
      }
     ],
     "text_offset": [
      3376,
      3378,
      3380,
      3381,
      3386,
      3395,
      3396,
      3401,
      3403,
      3411,
      3413,
      3414,
      3416,
      3418,
      3419,
      3423,
      3426,
      3432,
      3433,
      3438,
      3440,
      3445,
      3447,
      3448,
      3452,
      3454,
      3459,
      3461,
      3462,
      3464,
      3466,
      3467,
      3472,
      3475,
      3484,
      3485,
      3492,
      3494,
      3499,
      3500,
      3503,
      3505,
      3513,
      3515,
      3516,
      3521,
      3522,
      3527,
      3529,
      3537,
      3539,
      3540,
      3547,
      3549,
      3551,
      3559,
      3561,
      3562,
      3564,
      3566,
      3567,
      3571,
      3575,
      3581,
      3582,
      3589,
      3591,
      3596,
      3597,
      3600,
      3602,
      3610,
      3612,
      3613,
      3618,
      3619,
      3624,
      3626,
      3634,
      3636,
      3637,
      3642,
      3644,
      3646,
      3654,
      3656,
      3657,
      3662,
      3664,
      3669,
      3671,
      3672,
      3677,
      3679,
      3684,
      3686,
      3687,
      3693,
      3695,
      3697,
      3702,
      3705,
      3707,
      3708,
      3713,
      3715,
      3720,
      3722,
      3723,
      3725,
      3727,
      3728,
      3732,
      3741,
      3742,
      3747,
      3749,
      3752,
      3757,
      3759,
      3760,
      3765,
      3767,
      3770,
      3775,
      3777,
      3778,
      3784,
      3786,
      3788,
      3791,
      3796,
      3798,
      3799,
      3804,
      3806,
      3809,
      3814
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Use computer",
   "task_description": "Sit at my desk and grade papers on my computer",
   "program": [
    "[Walk] <home_office> (1)",
    "[Walk] <chair> (1)",
    "[Find] <chair> (1)",
    "[Sit] <chair> (1)",
    "[Find] <computer> (1)",
    "[SwitchOn] <computer> (1)",
    "[TurnTo] <computer> (1)",
    "[LookAt] <computer> (1)",
    "[Find] <keyboard> (1)",
    "[Type] <keyboard> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upworknturk_second",
   "file_id": "split137_1",
   "goal_condition": [
    [
     [
      247,
      254,
      "ON",
      "character",
      "chair"
     ],
     [
      247,
      248,
      "INSIDE",
      "character",
      "home_office"
     ]
    ],
    [
     [
      247,
      "character",
      "SITTING"
     ],
     [
      273,
      "computer",
      "ON"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1181,
   "completion_tokens": 138,
   "total_tokens": 1319
  }
 },
 "15": {
  "plan": [
   [
    " # 0: walk to bathroom\n walk('bathroom')\n # 1: find sink\n find('sink')\n # 2: turn on tap\n turnon('tap')\n # 3: wash face\n assert('close' to 'sink')\n else: find('sink')\n wash('face')\n # 4: turn off tap\n turnoff('tap')\n # 5: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " bathroom",
      "\n",
      " walk",
      "('",
      "bath",
      "room",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " sink",
      "\n",
      " find",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " turn",
      " on",
      " tap",
      "\n",
      " turn",
      "on",
      "('",
      "tap",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " wash",
      " face",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "s",
      "ink",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " wash",
      "('",
      "face",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " turn",
      " off",
      " tap",
      "\n",
      " turn",
      "off",
      "('",
      "tap",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.01664591,
      -0.0060567767,
      -0.0017549442,
      -0.7070579,
      -0.31223115,
      -0.13107936,
      -0.017197689,
      -0.0052694185,
      -0.0038622904,
      -0.0027497853,
      -0.00014003337,
      -0.002224549,
      -0.006465713,
      -0.0021066957,
      -0.0031148018,
      -0.00073950086,
      -0.08246451,
      -0.12055085,
      -0.026069188,
      -0.32684398,
      -0.00081442395,
      -0.00080022594,
      -5.1930627e-05,
      -0.0014220575,
      -0.0052444334,
      -0.019510021,
      -0.0049172123,
      -0.00073794933,
      -0.42742902,
      -0.07801457,
      -2.56605,
      -0.08824174,
      -1.6548091,
      -0.08437499,
      -0.0030371968,
      -0.1414477,
      -0.0033479547,
      -0.004665906,
      -0.030290533,
      -0.0061976467,
      -0.0003407113,
      -1.2383703,
      -0.10992579,
      -0.16010955,
      -0.7690956,
      -0.0019472886,
      -0.04819595,
      -0.004336961,
      -0.0010989525,
      -0.003230445,
      -0.23130381,
      -4.489638e-05,
      -0.0065958425,
      -0.004213468,
      -0.0015325489,
      -0.0019439443,
      -0.011232185,
      -0.0019532004,
      -0.00081191683,
      -2.8565719e-05,
      -0.0028594064,
      -0.005827968,
      -0.52371037,
      -0.013770697,
      -0.042537767,
      -0.0073347627,
      -0.032336175,
      -0.21078086,
      -0.0073821354,
      -0.0023528747,
      -0.1381684,
      -0.029236522,
      -0.07004815,
      -0.022174038,
      -0.11187716,
      -0.0026526642,
      -0.0007869244,
      -0.0016614423,
      -0.0023219902,
      -0.17788105,
      -0.019378807,
      -0.0041912002,
      -0.0027346038,
      -1.0073903
     ],
     "top_logprobs": [
      {
       " #": -0.01664591
      },
      {
       " 0": -0.0060567767
      },
      {
       ":": -0.0017549442
      },
      {
       " walk": -0.7070579
      },
      {
       " to": -0.31223115
      },
      {
       " bathroom": -0.13107936
      },
      {
       "\n": -0.017197689
      },
      {
       " walk": -0.0052694185
      },
      {
       "('": -0.0038622904
      },
      {
       "bath": -0.0027497853
      },
      {
       "room": -0.00014003337
      },
      {
       "')": -0.002224549
      },
      {
       "\n": -0.006465713
      },
      {
       " #": -0.0021066957
      },
      {
       " 1": -0.0031148018
      },
      {
       ":": -0.00073950086
      },
      {
       " find": -0.08246451
      },
      {
       " sink": -0.12055085
      },
      {
       "\n": -0.026069188
      },
      {
       " find": -0.32684398
      },
      {
       "('": -0.00081442395
      },
      {
       "s": -0.00080022594
      },
      {
       "ink": -5.1930627e-05
      },
      {
       "')": -0.0014220575
      },
      {
       "\n": -0.0052444334
      },
      {
       " #": -0.019510021
      },
      {
       " 2": -0.0049172123
      },
      {
       ":": -0.00073794933
      },
      {
       " turn": -0.42742902
      },
      {
       " on": -0.07801457
      },
      {
       " f": -0.90891296
      },
      {
       "\n": -0.08824174
      },
      {
       " assert": -0.9913819
      },
      {
       "on": -0.08437499
      },
      {
       "('": -0.0030371968
      },
      {
       "tap": -0.1414477
      },
      {
       "')": -0.0033479547
      },
      {
       "\n": -0.004665906
      },
      {
       " #": -0.030290533
      },
      {
       " 3": -0.0061976467
      },
      {
       ":": -0.0003407113
      },
      {
       " wash": -1.2383703
      },
      {
       " face": -0.10992579
      },
      {
       "\n": -0.16010955
      },
      {
       " assert": -0.7690956
      },
      {
       "('": -0.0019472886
      },
      {
       "close": -0.04819595
      },
      {
       "'": -0.004336961
      },
      {
       " to": -0.0010989525
      },
      {
       " '": -0.003230445
      },
      {
       "s": -0.23130381
      },
      {
       "ink": -4.489638e-05
      },
      {
       "')": -0.0065958425
      },
      {
       "\n": -0.004213468
      },
      {
       " else": -0.0015325489
      },
      {
       ":": -0.0019439443
      },
      {
       " find": -0.011232185
      },
      {
       "('": -0.0019532004
      },
      {
       "s": -0.00081191683
      },
      {
       "ink": -2.8565719e-05
      },
      {
       "')": -0.0028594064
      },
      {
       "\n": -0.005827968
      },
      {
       " wash": -0.52371037
      },
      {
       "('": -0.013770697
      },
      {
       "face": -0.042537767
      },
      {
       "')": -0.0073347627
      },
      {
       "\n": -0.032336175
      },
      {
       " #": -0.21078086
      },
      {
       " 4": -0.0073821354
      },
      {
       ":": -0.0023528747
      },
      {
       " turn": -0.1381684
      },
      {
       " off": -0.029236522
      },
      {
       " tap": -0.07004815
      },
      {
       "\n": -0.022174038
      },
      {
       " turn": -0.11187716
      },
      {
       "off": -0.0026526642
      },
      {
       "('": -0.0007869244
      },
      {
       "tap": -0.0016614423
      },
      {
       "')": -0.0023219902
      },
      {
       "\n": -0.17788105
      },
      {
       " #": -0.019378807
      },
      {
       " 5": -0.0041912002
      },
      {
       ":": -0.0027346038
      },
      {
       " Done": -1.0073903
      }
     ],
     "text_offset": [
      3373,
      3375,
      3377,
      3378,
      3383,
      3386,
      3395,
      3396,
      3401,
      3403,
      3407,
      3411,
      3413,
      3414,
      3416,
      3418,
      3419,
      3424,
      3429,
      3430,
      3435,
      3437,
      3438,
      3441,
      3443,
      3444,
      3446,
      3448,
      3449,
      3454,
      3457,
      3461,
      3462,
      3467,
      3469,
      3471,
      3474,
      3476,
      3477,
      3479,
      3481,
      3482,
      3487,
      3492,
      3493,
      3500,
      3502,
      3507,
      3508,
      3511,
      3513,
      3514,
      3517,
      3519,
      3520,
      3525,
      3526,
      3531,
      3533,
      3534,
      3537,
      3539,
      3540,
      3545,
      3547,
      3551,
      3553,
      3554,
      3556,
      3558,
      3559,
      3564,
      3568,
      3572,
      3573,
      3578,
      3581,
      3583,
      3586,
      3588,
      3589,
      3591,
      3593,
      3594
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Wash face",
   "task_description": "Turn the faucet on. Wet the face. Take facial cleanser out of packaging. Lather on face. Rinse face with water. Turn off the faucet. Dry face with towel.",
   "program": [
    "[Walk] <bathroom> (1)",
    "[Walk] <sink> (1)",
    "[Find] <faucet> (1)",
    "[SwitchOn] <faucet> (1)",
    "[Find] <face> (1)",
    "[Wash] <face> (1)",
    "[Find] <rag> (1)",
    "[Grab] <rag> (1)",
    "[Rinse] <rag> (1)",
    "[Find] <facial_cleanser> (1)",
    "[Grab] <facial_cleanser> (1)",
    "[Pour] <facial_cleanser> (1) <rag> (1)",
    "[PutObjBack] <facial_cleanser> (1)",
    "[Scrub] <face> (1)",
    "[Rinse] <rag> (1)",
    "[PutObjBack] <rag> (1)",
    "[Rinse] <face> (1)",
    "[SwitchOff] <faucet> (1)",
    "[Find] <towel> (1)",
    "[Grab] <towel> (1)",
    "[Wipe] <face> (1)",
    "[PutObjBack] <towel> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upworknturk_second",
   "file_id": "split96_2",
   "goal_condition": [
    [
     [
      247,
      149,
      "INSIDE",
      "character",
      "bathroom"
     ],
     [
      1002,
      1001,
      "INSIDE",
      "facial_cleanser",
      "rag"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1181,
   "completion_tokens": 84,
   "total_tokens": 1265
  }
 },
 "16": {
  "plan": [
   [
    " # 0: find newspaper\n find('newspaper')\n # 1: grab newspaper\n assert('close' to 'newspaper')\n else: find('newspaper')\n grab('newspaper')\n # 2: sit on chair\n find('chair')\n assert('close' to 'chair')\n else: find('chair')\n sit('chair')\n # 3: read newspaper\n assert('newspaper' in 'hands')\n else: grab('newspaper')\n read('newspaper')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " newspaper",
      "\n",
      " find",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " grab",
      " newspaper",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " grab",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " sit",
      " on",
      " chair",
      "\n",
      " find",
      "('",
      "chair",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "chair",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "chair",
      "')",
      "\n",
      " sit",
      "('",
      "chair",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " read",
      " newspaper",
      "\n",
      " assert",
      "('",
      "new",
      "sp",
      "aper",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " read",
      "('",
      "new",
      "sp",
      "aper",
      "')"
     ],
     "token_logprobs": [
      -0.018005779,
      -0.0076669743,
      -0.0018256424,
      -0.3597068,
      -0.3433708,
      -0.028388897,
      -0.031808604,
      -0.0019873597,
      -0.002094271,
      -0.0005682056,
      -0.00071964,
      -0.0028579724,
      -0.007786387,
      -0.0047193253,
      -0.002472852,
      -0.0004490551,
      -0.22128692,
      -0.13214868,
      -0.014128999,
      -0.5872305,
      -0.0014613363,
      -0.0038562464,
      -0.0020757553,
      -0.0005838295,
      -0.0017939958,
      -0.0036645536,
      -0.00044642974,
      -0.003359258,
      -0.0047884965,
      -0.005977142,
      -0.0015718323,
      -0.0013880371,
      -0.0032162126,
      -0.0011198947,
      -0.0009093366,
      -0.0003553787,
      -0.00032276337,
      -0.0019229823,
      -0.006072665,
      -0.0026098741,
      -0.0007078308,
      -0.0006760368,
      -0.0004992054,
      -0.00012572645,
      -0.0015326691,
      -0.004379344,
      -1.0294089,
      -0.0072817462,
      -0.00063524215,
      -0.7457316,
      -0.6807554,
      -1.3285819,
      -0.12944901,
      -0.2109876,
      -0.0010159514,
      -0.0015290863,
      -0.0014987021,
      -0.0037772674,
      -0.41946352,
      -0.00065158313,
      -0.0050974647,
      -0.0018799246,
      -0.0007038932,
      -0.0012698009,
      -0.0014668246,
      -0.003477322,
      -0.0028635918,
      -0.001524192,
      -0.0012152551,
      -0.0036943455,
      -0.00097460754,
      -0.0009932191,
      -0.0014256403,
      -0.0050026905,
      -0.008697574,
      -0.0009482962,
      -0.0007259036,
      -0.0013424365,
      -0.0057225768,
      -0.020222783,
      -0.009321203,
      -0.0008082195,
      -0.2881541,
      -0.25952387,
      -0.010418398,
      -1.3982357,
      -0.0011408407,
      -0.14388388,
      -0.0009305755,
      -0.0008052355,
      -0.003005987,
      -0.013736497,
      -0.004427357,
      -0.008688797,
      -0.02429671,
      -0.0040579713,
      -0.0035005275,
      -0.002631388,
      -0.024849117,
      -0.0014294606,
      -0.0010203687,
      -0.0005082699,
      -0.0016935649,
      -0.0035781697,
      -0.005647284,
      -0.58802336,
      -0.00091590156,
      -0.0007534595,
      -0.00039664176,
      -0.00028043022,
      -0.0018577697
     ],
     "top_logprobs": [
      {
       " #": -0.018005779
      },
      {
       " 0": -0.0076669743
      },
      {
       ":": -0.0018256424
      },
      {
       " find": -0.3597068
      },
      {
       " newspaper": -0.3433708
      },
      {
       "\n": -0.028388897
      },
      {
       " find": -0.031808604
      },
      {
       "('": -0.0019873597
      },
      {
       "new": -0.002094271
      },
      {
       "sp": -0.0005682056
      },
      {
       "aper": -0.00071964
      },
      {
       "')": -0.0028579724
      },
      {
       "\n": -0.007786387
      },
      {
       " #": -0.0047193253
      },
      {
       " 1": -0.002472852
      },
      {
       ":": -0.0004490551
      },
      {
       " grab": -0.22128692
      },
      {
       " newspaper": -0.13214868
      },
      {
       "\n": -0.014128999
      },
      {
       " assert": -0.5872305
      },
      {
       "('": -0.0014613363
      },
      {
       "close": -0.0038562464
      },
      {
       "'": -0.0020757553
      },
      {
       " to": -0.0005838295
      },
      {
       " '": -0.0017939958
      },
      {
       "new": -0.0036645536
      },
      {
       "sp": -0.00044642974
      },
      {
       "aper": -0.003359258
      },
      {
       "')": -0.0047884965
      },
      {
       "\n": -0.005977142
      },
      {
       " else": -0.0015718323
      },
      {
       ":": -0.0013880371
      },
      {
       " find": -0.0032162126
      },
      {
       "('": -0.0011198947
      },
      {
       "new": -0.0009093366
      },
      {
       "sp": -0.0003553787
      },
      {
       "aper": -0.00032276337
      },
      {
       "')": -0.0019229823
      },
      {
       "\n": -0.006072665
      },
      {
       " grab": -0.0026098741
      },
      {
       "('": -0.0007078308
      },
      {
       "new": -0.0006760368
      },
      {
       "sp": -0.0004992054
      },
      {
       "aper": -0.00012572645
      },
      {
       "')": -0.0015326691
      },
      {
       "\n": -0.004379344
      },
      {
       " assert": -0.48867747
      },
      {
       " 2": -0.0072817462
      },
      {
       ":": -0.00063524215
      },
      {
       " sit": -0.7457316
      },
      {
       " on": -0.6807554
      },
      {
       " couch": -1.2072003
      },
      {
       "\n": -0.12944901
      },
      {
       " find": -0.2109876
      },
      {
       "('": -0.0010159514
      },
      {
       "chair": -0.0015290863
      },
      {
       "')": -0.0014987021
      },
      {
       "\n": -0.0037772674
      },
      {
       " assert": -0.41946352
      },
      {
       "('": -0.00065158313
      },
      {
       "close": -0.0050974647
      },
      {
       "'": -0.0018799246
      },
      {
       " to": -0.0007038932
      },
      {
       " '": -0.0012698009
      },
      {
       "chair": -0.0014668246
      },
      {
       "')": -0.003477322
      },
      {
       "\n": -0.0028635918
      },
      {
       " else": -0.001524192
      },
      {
       ":": -0.0012152551
      },
      {
       " find": -0.0036943455
      },
      {
       "('": -0.00097460754
      },
      {
       "chair": -0.0009932191
      },
      {
       "')": -0.0014256403
      },
      {
       "\n": -0.0050026905
      },
      {
       " sit": -0.008697574
      },
      {
       "('": -0.0009482962
      },
      {
       "chair": -0.0007259036
      },
      {
       "')": -0.0013424365
      },
      {
       "\n": -0.0057225768
      },
      {
       " #": -0.020222783
      },
      {
       " 3": -0.009321203
      },
      {
       ":": -0.0008082195
      },
      {
       " read": -0.2881541
      },
      {
       " newspaper": -0.25952387
      },
      {
       "\n": -0.010418398
      },
      {
       " tur": -0.95520526
      },
      {
       "('": -0.0011408407
      },
      {
       "new": -0.14388388
      },
      {
       "sp": -0.0009305755
      },
      {
       "aper": -0.0008052355
      },
      {
       "'": -0.003005987
      },
      {
       " in": -0.013736497
      },
      {
       " '": -0.004427357
      },
      {
       "hands": -0.008688797
      },
      {
       "')": -0.02429671
      },
      {
       "\n": -0.0040579713
      },
      {
       " else": -0.0035005275
      },
      {
       ":": -0.002631388
      },
      {
       " grab": -0.024849117
      },
      {
       "('": -0.0014294606
      },
      {
       "new": -0.0010203687
      },
      {
       "sp": -0.0005082699
      },
      {
       "aper": -0.0016935649
      },
      {
       "')": -0.0035781697
      },
      {
       "\n": -0.005647284
      },
      {
       " read": -0.58802336
      },
      {
       "('": -0.00091590156
      },
      {
       "new": -0.0007534595
      },
      {
       "sp": -0.00039664176
      },
      {
       "aper": -0.00028043022
      },
      {
       "')": -0.0018577697
      }
     ],
     "text_offset": [
      3378,
      3380,
      3382,
      3383,
      3388,
      3398,
      3399,
      3404,
      3406,
      3409,
      3411,
      3415,
      3417,
      3418,
      3420,
      3422,
      3423,
      3428,
      3438,
      3439,
      3446,
      3448,
      3453,
      3454,
      3457,
      3459,
      3462,
      3464,
      3468,
      3470,
      3471,
      3476,
      3477,
      3482,
      3484,
      3487,
      3489,
      3493,
      3495,
      3496,
      3501,
      3503,
      3506,
      3508,
      3512,
      3514,
      3515,
      3517,
      3519,
      3520,
      3524,
      3527,
      3533,
      3534,
      3539,
      3541,
      3546,
      3548,
      3549,
      3556,
      3558,
      3563,
      3564,
      3567,
      3569,
      3574,
      3576,
      3577,
      3582,
      3583,
      3588,
      3590,
      3595,
      3597,
      3598,
      3602,
      3604,
      3609,
      3611,
      3612,
      3614,
      3616,
      3617,
      3622,
      3632,
      3633,
      3640,
      3642,
      3645,
      3647,
      3651,
      3652,
      3655,
      3657,
      3662,
      3664,
      3665,
      3670,
      3671,
      3676,
      3678,
      3681,
      3683,
      3687,
      3689,
      3690,
      3695,
      3697,
      3700,
      3702,
      3706
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Read newspaper",
   "task_description": "Sit in my chair at my desk. Open up newspaper. Read about current events.",
   "program": [
    "[Walk] <home_office> (1)",
    "[Walk] <chair> (1)",
    "[Find] <chair> (1)",
    "[Sit] <chair> (1)",
    "[Find] <newspaper> (1)",
    "[Grab] <newspaper> (1)",
    "[Open] <newspaper> (1)",
    "[Read] <newspaper> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_july",
   "file_id": "split17_4",
   "goal_condition": [
    [
     [
      247,
      1000,
      "HOLDS_RH",
      "character",
      "newspaper"
     ],
     [
      247,
      254,
      "ON",
      "character",
      "chair"
     ],
     [
      247,
      248,
      "INSIDE",
      "character",
      "home_office"
     ]
    ],
    [
     [
      247,
      "character",
      "SITTING"
     ],
     [
      1000,
      "newspaper",
      "OPEN"
     ]
    ]
   ]
  },
  "usage": {
   "prompt_tokens": 1183,
   "completion_tokens": 111,
   "total_tokens": 1294
  }
 },
 "17": {
  "plan": [
   [
    " # 0: find a cup\n find('cup')\n # 1: grab cup\n grab('cup')\n # 2: fill cup with water\n assert('close' to 'faucet')\n else: find('faucet')\n pour('cup')\n # 3: drink water\n assert('close' to 'cup')\n else: find('cup')\n drink('cup')\n # 4: put cup back\n assert('close' to 'cup')\n else: find('cup')\n putback('cup')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " a",
      " cup",
      "\n",
      " find",
      "('",
      "cup",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " grab",
      " cup",
      "\n",
      " grab",
      "('",
      "cup",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " fill",
      " cup",
      " with",
      " water",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " pour",
      "('",
      "cup",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " drink",
      " water",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "cup",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "cup",
      "')",
      "\n",
      " drink",
      "('",
      "cup",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " put",
      " cup",
      " back",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "cup",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "cup",
      "')",
      "\n",
      " put",
      "back",
      "('",
      "cup",
      "')"
     ],
     "token_logprobs": [
      -0.08876882,
      -0.033353154,
      -0.0045676436,
      -0.16587976,
      -2.336152,
      -0.2623013,
      -0.056535497,
      -0.022043634,
      -0.0047818488,
      -0.00067866227,
      -0.0025617091,
      -0.014161341,
      -0.010042821,
      -0.00476023,
      -0.0010347478,
      -0.16955158,
      -1.0792898,
      -0.03243844,
      -0.7727051,
      -0.0018483935,
      -0.00020596985,
      -0.0015074194,
      -0.0061024716,
      -0.5767079,
      -0.008846093,
      -0.0012816186,
      -0.7554751,
      -0.37503096,
      -0.3480359,
      -0.5773113,
      -0.033409297,
      -0.77534443,
      -0.0038299803,
      -0.04303023,
      -0.0087625105,
      -0.0010581954,
      -0.004364858,
      -1.022785,
      -0.0040280493,
      -0.0003718351,
      -0.019188127,
      -0.0078538945,
      -0.002444466,
      -0.0029551112,
      -0.02506178,
      -0.0024980668,
      -0.00086531014,
      -0.0005210318,
      -0.0002512175,
      -0.0036807049,
      -0.009154089,
      -0.71568143,
      -0.0073035397,
      -1.0958506,
      -0.2797275,
      -0.009448758,
      -0.0836743,
      -0.010804119,
      -0.0012803064,
      -0.12046136,
      -1.6742166,
      -0.14103733,
      -1.3905742,
      -0.0019014224,
      -0.37651637,
      -0.0024794242,
      -0.0005750042,
      -0.0049317665,
      -0.019011633,
      -0.008305578,
      -0.0040469,
      -0.0017312987,
      -0.0018425409,
      -0.46283007,
      -0.0014787051,
      -0.0004893054,
      -0.0043756324,
      -0.005585066,
      -0.56154066,
      -0.002953676,
      -0.030210607,
      -0.0019948257,
      -0.22715802,
      -0.033074092,
      -0.010729892,
      -0.0016832352,
      -0.31123286,
      -0.20807356,
      -0.13070358,
      -0.031553667,
      -0.8133699,
      -0.0013151594,
      -0.11183624,
      -0.0024754792,
      -0.004912898,
      -0.003343589,
      -0.013296608,
      -0.0153514305,
      -0.0022237136,
      -0.0008480099,
      -0.0008387032,
      -0.022055455,
      -0.0010562862,
      -0.0001779483,
      -0.0012712333,
      -0.005533641,
      -0.053810723,
      -0.63101286,
      -0.0032519712,
      -0.00026421316,
      -0.0043919175
     ],
     "top_logprobs": [
      {
       " #": -0.08876882
      },
      {
       " 0": -0.033353154
      },
      {
       ":": -0.0045676436
      },
      {
       " find": -0.16587976
      },
      {
       " cup": -0.90839875
      },
      {
       " cup": -0.2623013
      },
      {
       "\n": -0.056535497
      },
      {
       " find": -0.022043634
      },
      {
       "('": -0.0047818488
      },
      {
       "cup": -0.00067866227
      },
      {
       "')": -0.0025617091
      },
      {
       "\n": -0.014161341
      },
      {
       " #": -0.010042821
      },
      {
       " 1": -0.00476023
      },
      {
       ":": -0.0010347478
      },
      {
       " grab": -0.16955158
      },
      {
       " the": -0.7946123
      },
      {
       "\n": -0.03243844
      },
      {
       " assert": -0.63976675
      },
      {
       "('": -0.0018483935
      },
      {
       "cup": -0.00020596985
      },
      {
       "')": -0.0015074194
      },
      {
       "\n": -0.0061024716
      },
      {
       " #": -0.5767079
      },
      {
       " 2": -0.008846093
      },
      {
       ":": -0.0012816186
      },
      {
       " fill": -0.7554751
      },
      {
       " cup": -0.37503096
      },
      {
       " with": -0.3480359
      },
      {
       " water": -0.5773113
      },
      {
       "\n": -0.033409297
      },
      {
       " assert": -0.77534443
      },
      {
       "('": -0.0038299803
      },
      {
       "close": -0.04303023
      },
      {
       "'": -0.0087625105
      },
      {
       " to": -0.0010581954
      },
      {
       " '": -0.004364858
      },
      {
       "f": -1.022785
      },
      {
       "auc": -0.0040280493
      },
      {
       "et": -0.0003718351
      },
      {
       "')": -0.019188127
      },
      {
       "\n": -0.0078538945
      },
      {
       " else": -0.002444466
      },
      {
       ":": -0.0029551112
      },
      {
       " find": -0.02506178
      },
      {
       "('": -0.0024980668
      },
      {
       "f": -0.00086531014
      },
      {
       "auc": -0.0005210318
      },
      {
       "et": -0.0002512175
      },
      {
       "')": -0.0036807049
      },
      {
       "\n": -0.009154089
      },
      {
       " pour": -0.71568143
      },
      {
       "('": -0.0073035397
      },
      {
       "water": -0.9371858
      },
      {
       "')": -0.2797275
      },
      {
       "\n": -0.009448758
      },
      {
       " #": -0.0836743
      },
      {
       " 3": -0.010804119
      },
      {
       ":": -0.0012803064
      },
      {
       " drink": -0.12046136
      },
      {
       "\n": -1.3522792
      },
      {
       "\n": -0.14103733
      },
      {
       " tur": -0.79442096
      },
      {
       "('": -0.0019014224
      },
      {
       "close": -0.37651637
      },
      {
       "'": -0.0024794242
      },
      {
       " to": -0.0005750042
      },
      {
       " '": -0.0049317665
      },
      {
       "cup": -0.019011633
      },
      {
       "')": -0.008305578
      },
      {
       "\n": -0.0040469
      },
      {
       " else": -0.0017312987
      },
      {
       ":": -0.0018425409
      },
      {
       " find": -0.46283007
      },
      {
       "('": -0.0014787051
      },
      {
       "cup": -0.0004893054
      },
      {
       "')": -0.0043756324
      },
      {
       "\n": -0.005585066
      },
      {
       " drink": -0.56154066
      },
      {
       "('": -0.002953676
      },
      {
       "cup": -0.030210607
      },
      {
       "')": -0.0019948257
      },
      {
       "\n": -0.22715802
      },
      {
       " #": -0.033074092
      },
      {
       " 4": -0.010729892
      },
      {
       ":": -0.0016832352
      },
      {
       " put": -0.31123286
      },
      {
       " cup": -0.20807356
      },
      {
       " back": -0.13070358
      },
      {
       "\n": -0.031553667
      },
      {
       " put": -0.623148
      },
      {
       "('": -0.0013151594
      },
      {
       "close": -0.11183624
      },
      {
       "'": -0.0024754792
      },
      {
       " to": -0.004912898
      },
      {
       " '": -0.003343589
      },
      {
       "cup": -0.013296608
      },
      {
       "')": -0.0153514305
      },
      {
       "\n": -0.0022237136
      },
      {
       " else": -0.0008480099
      },
      {
       ":": -0.0008387032
      },
      {
       " find": -0.022055455
      },
      {
       "('": -0.0010562862
      },
      {
       "cup": -0.0001779483
      },
      {
       "')": -0.0012712333
      },
      {
       "\n": -0.005533641
      },
      {
       " put": -0.053810723
      },
      {
       "back": -0.63101286
      },
      {
       "('": -0.0032519712
      },
      {
       "cup": -0.00026421316
      },
      {
       "')": -0.0043919175
      }
     ],
     "text_offset": [
      3369,
      3371,
      3373,
      3374,
      3379,
      3381,
      3385,
      3386,
      3391,
      3393,
      3396,
      3398,
      3399,
      3401,
      3403,
      3404,
      3409,
      3413,
      3414,
      3419,
      3421,
      3424,
      3426,
      3427,
      3429,
      3431,
      3432,
      3437,
      3441,
      3446,
      3452,
      3453,
      3460,
      3462,
      3467,
      3468,
      3471,
      3473,
      3474,
      3477,
      3479,
      3481,
      3482,
      3487,
      3488,
      3493,
      3495,
      3496,
      3499,
      3501,
      3503,
      3504,
      3509,
      3511,
      3514,
      3516,
      3517,
      3519,
      3521,
      3522,
      3528,
      3534,
      3535,
      3542,
      3544,
      3549,
      3550,
      3553,
      3555,
      3558,
      3560,
      3561,
      3566,
      3567,
      3572,
      3574,
      3577,
      3579,
      3580,
      3586,
      3588,
      3591,
      3593,
      3594,
      3596,
      3598,
      3599,
      3603,
      3607,
      3612,
      3613,
      3620,
      3622,
      3627,
      3628,
      3631,
      3633,
      3636,
      3638,
      3639,
      3644,
      3645,
      3650,
      3652,
      3655,
      3657,
      3658,
      3662,
      3666,
      3668,
      3671
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Drink",
   "task_description": "I bring the cup filled with water to my lips. I tilt the cup upwards slowly, so that the water falls into my mouth.",
   "program": [
    "[Find] <water_glass> (1)",
    "[Grab] <water_glass> (1)",
    "[Drink] <water_glass> (1)"
   ],
   "batch": "results_intentions_march-13-18",
   "file_id": "file146_1",
   "goal_condition": [
    [
     [
      247,
      1000,
      "HOLDS_RH",
      "character",
      "water_glass"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1179,
   "completion_tokens": 111,
   "total_tokens": 1290
  }
 },
 "18": {
  "plan": [
   [
    " # 0: walk into bathroom\n walk('bathroom')\n # 1: find sink\n find('sink')\n # 2: turn on the faucet\n turnon('faucet')\n # 3: grab a towel\n find('towel')\n # 4: wipe the sink\n assert('towel' in 'hands')\n else: find('towel')\n grab('towel')\n wipe('sink')\n # 5: turn off the faucet\n turnoff('faucet')\n # 6: grab the soap\n find('soap')\n # 7: wash the sink\n assert('soap' in 'hands')\n else: find('soap')\n grab('soap')\n wash('sink')\n # 8: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " into",
      " bathroom",
      "\n",
      " walk",
      "('",
      "bath",
      "room",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " sink",
      "\n",
      " find",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " turn",
      " on",
      " the",
      " f",
      "auc",
      "et",
      "\n",
      " turn",
      "on",
      "('",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " grab",
      " a",
      " towel",
      "\n",
      " find",
      "('",
      "t",
      "ow",
      "el",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " wipe",
      " the",
      " sink",
      "\n",
      " assert",
      "('",
      "t",
      "ow",
      "el",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "t",
      "ow",
      "el",
      "')",
      "\n",
      " grab",
      "('",
      "t",
      "ow",
      "el",
      "')",
      "\n",
      " wipe",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " turn",
      " off",
      " the",
      " f",
      "auc",
      "et",
      "\n",
      " turn",
      "off",
      "('",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " #",
      " 6",
      ":",
      " grab",
      " the",
      " soap",
      "\n",
      " find",
      "('",
      "so",
      "ap",
      "')",
      "\n",
      " #",
      " 7",
      ":",
      " wash",
      " the",
      " sink",
      "\n",
      " assert",
      "('",
      "so",
      "ap",
      "'",
      " in",
      " '",
      "hands",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "so",
      "ap",
      "')",
      "\n",
      " grab",
      "('",
      "so",
      "ap",
      "')",
      "\n",
      " wash",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " #",
      " 8",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.016097046,
      -0.0064232997,
      -0.0022269397,
      -0.14136854,
      -2.4453676,
      -0.29318652,
      -0.022157218,
      -0.005246351,
      -0.005724914,
      -0.0015779806,
      -0.00013287991,
      -0.0016678318,
      -0.00750704,
      -0.0024478144,
      -0.0029675467,
      -0.0008364372,
      -0.114556044,
      -1.2983487,
      -0.04153233,
      -0.16965581,
      -0.0008345872,
      -0.000526521,
      -0.00011058788,
      -0.0015563098,
      -0.005983319,
      -0.016971895,
      -0.004150082,
      -0.0011189391,
      -0.9207804,
      -0.047521196,
      -1.062937,
      -0.3375195,
      -0.0017201925,
      -0.0023203157,
      -0.04428841,
      -2.2461576,
      -0.05191896,
      -0.0038390146,
      -0.003102484,
      -0.0004602654,
      -0.00034762823,
      -0.0022643965,
      -0.0057593226,
      -0.04192384,
      -0.0062717805,
      -0.00083410944,
      -0.8777105,
      -1.4873697,
      -0.9869784,
      -0.081005536,
      -0.7513177,
      -0.0013436314,
      -0.00070079096,
      -0.0007722504,
      -0.00023714808,
      -0.0025494588,
      -0.0050262925,
      -3.3319867,
      -0.007057101,
      -0.0011860142,
      -0.44138542,
      -0.29466528,
      -0.045329742,
      -0.12976581,
      -1.4966753,
      -0.002537446,
      -1.037014,
      -0.001422417,
      -0.00018605449,
      -0.00322309,
      -0.032542616,
      -0.009367293,
      -0.020700844,
      -0.046497274,
      -0.0078000836,
      -0.0070496565,
      -0.0038785664,
      -0.88447475,
      -0.0021800485,
      -0.00041178783,
      -0.00046324843,
      -2.9041616e-05,
      -0.0048463545,
      -0.0069715665,
      -3.2994816,
      -0.0014630081,
      -0.00016852893,
      -0.00014170136,
      -0.00047773935,
      -0.001975235,
      -0.005526148,
      -0.26564747,
      -0.0014308931,
      -0.066272885,
      -9.305951e-05,
      -0.013111067,
      -0.008253591,
      -0.084193476,
      -0.008281834,
      -0.0022025649,
      -0.4701647,
      -0.02995367,
      -0.21419223,
      -0.009667564,
      -0.00081406545,
      -0.0013257839,
      -0.016526889,
      -0.14580539,
      -0.003443945,
      -0.00091100833,
      -0.00070556306,
      -0.00037934902,
      -0.00017961723,
      -0.0020977345,
      -0.08297897,
      -0.02096187,
      -0.0030801224,
      -0.001983776,
      -2.4980023,
      -1.5015608,
      -1.9450483,
      -0.06321554,
      -0.06026434,
      -0.001241572,
      -0.0003985491,
      -0.00016328375,
      -0.002286022,
      -0.0065405252,
      -0.88250047,
      -0.0078716185,
      -0.00086626475,
      -0.34628645,
      -0.2217511,
      -0.5439478,
      -0.0681224,
      -0.60109496,
      -0.0013831421,
      -0.018422302,
      -0.00014575632,
      -0.0014359064,
      -0.007772632,
      -0.0020992889,
      -0.003091662,
      -0.0057276716,
      -0.0043492913,
      -0.0016533223,
      -0.001699057,
      -0.031374924,
      -0.001239782,
      -0.0011755116,
      -9.878341e-05,
      -0.0023126684,
      -0.004818144,
      -0.10147651,
      -0.00078763964,
      -0.00025515142,
      -0.00011082348,
      -0.0015676515,
      -0.0035039384,
      -0.026475495,
      -0.0009244911,
      -0.024492519,
      -0.00011583212,
      -0.0015388172,
      -0.034497153,
      -0.016063971,
      -0.0023847802,
      -0.001885718,
      -1.4411446
     ],
     "top_logprobs": [
      {
       " #": -0.016097046
      },
      {
       " 0": -0.0064232997
      },
      {
       ":": -0.0022269397
      },
      {
       " walk": -0.14136854
      },
      {
       " to": -0.37119007
      },
      {
       " bathroom": -0.29318652
      },
      {
       "\n": -0.022157218
      },
      {
       " walk": -0.005246351
      },
      {
       "('": -0.005724914
      },
      {
       "bath": -0.0015779806
      },
      {
       "room": -0.00013287991
      },
      {
       "')": -0.0016678318
      },
      {
       "\n": -0.00750704
      },
      {
       " #": -0.0024478144
      },
      {
       " 1": -0.0029675467
      },
      {
       ":": -0.0008364372
      },
      {
       " find": -0.114556044
      },
      {
       " sink": -1.2983487
      },
      {
       "\n": -0.04153233
      },
      {
       " find": -0.16965581
      },
      {
       "('": -0.0008345872
      },
      {
       "s": -0.000526521
      },
      {
       "ink": -0.00011058788
      },
      {
       "')": -0.0015563098
      },
      {
       "\n": -0.005983319
      },
      {
       " #": -0.016971895
      },
      {
       " 2": -0.004150082
      },
      {
       ":": -0.0011189391
      },
      {
       " turn": -0.9207804
      },
      {
       " on": -0.047521196
      },
      {
       " f": -0.7639191
      },
      {
       " f": -0.3375195
      },
      {
       "auc": -0.0017201925
      },
      {
       "et": -0.0023203157
      },
      {
       "\n": -0.04428841
      },
      {
       " assert": -0.61813366
      },
      {
       "on": -0.05191896
      },
      {
       "('": -0.0038390146
      },
      {
       "f": -0.003102484
      },
      {
       "auc": -0.0004602654
      },
      {
       "et": -0.00034762823
      },
      {
       "')": -0.0022643965
      },
      {
       "\n": -0.0057593226
      },
      {
       " #": -0.04192384
      },
      {
       " 3": -0.0062717805
      },
      {
       ":": -0.00083410944
      },
      {
       " grab": -0.8777105
      },
      {
       " a": -1.4873697
      },
      {
       " towel": -0.9869784
      },
      {
       "\n": -0.081005536
      },
      {
       " find": -0.7513177
      },
      {
       "('": -0.0013436314
      },
      {
       "t": -0.00070079096
      },
      {
       "ow": -0.0007722504
      },
      {
       "el": -0.00023714808
      },
      {
       "')": -0.0025494588
      },
      {
       "\n": -0.0050262925
      },
      {
       " grab": -0.071382284
      },
      {
       " 4": -0.007057101
      },
      {
       ":": -0.0011860142
      },
      {
       " wipe": -0.44138542
      },
      {
       " the": -0.29466528
      },
      {
       " sink": -0.045329742
      },
      {
       "\n": -0.12976581
      },
      {
       " wipe": -0.54511726
      },
      {
       "('": -0.002537446
      },
      {
       "close": -0.44584474
      },
      {
       "ow": -0.001422417
      },
      {
       "el": -0.00018605449
      },
      {
       "'": -0.00322309
      },
      {
       " in": -0.032542616
      },
      {
       " '": -0.009367293
      },
      {
       "hands": -0.020700844
      },
      {
       "')": -0.046497274
      },
      {
       "\n": -0.0078000836
      },
      {
       " else": -0.0070496565
      },
      {
       ":": -0.0038785664
      },
      {
       " grab": -0.5468627
      },
      {
       "('": -0.0021800485
      },
      {
       "t": -0.00041178783
      },
      {
       "ow": -0.00046324843
      },
      {
       "el": -2.9041616e-05
      },
      {
       "')": -0.0048463545
      },
      {
       "\n": -0.0069715665
      },
      {
       " wipe": -0.1567769
      },
      {
       "('": -0.0014630081
      },
      {
       "t": -0.00016852893
      },
      {
       "ow": -0.00014170136
      },
      {
       "el": -0.00047773935
      },
      {
       "')": -0.001975235
      },
      {
       "\n": -0.005526148
      },
      {
       " wipe": -0.26564747
      },
      {
       "('": -0.0014308931
      },
      {
       "s": -0.066272885
      },
      {
       "ink": -9.305951e-05
      },
      {
       "')": -0.013111067
      },
      {
       "\n": -0.008253591
      },
      {
       " #": -0.084193476
      },
      {
       " 5": -0.008281834
      },
      {
       ":": -0.0022025649
      },
      {
       " turn": -0.4701647
      },
      {
       " off": -0.02995367
      },
      {
       " the": -0.21419223
      },
      {
       " f": -0.009667564
      },
      {
       "auc": -0.00081406545
      },
      {
       "et": -0.0013257839
      },
      {
       "\n": -0.016526889
      },
      {
       " turn": -0.14580539
      },
      {
       "off": -0.003443945
      },
      {
       "('": -0.00091100833
      },
      {
       "f": -0.00070556306
      },
      {
       "auc": -0.00037934902
      },
      {
       "et": -0.00017961723
      },
      {
       "')": -0.0020977345
      },
      {
       "\n": -0.08297897
      },
      {
       " #": -0.02096187
      },
      {
       " 6": -0.0030801224
      },
      {
       ":": -0.001983776
      },
      {
       " put": -1.0795165
      },
      {
       " a": -0.84439427
      },
      {
       " soap": -1.9450483
      },
      {
       "\n": -0.06321554
      },
      {
       " find": -0.06026434
      },
      {
       "('": -0.001241572
      },
      {
       "so": -0.0003985491
      },
      {
       "ap": -0.00016328375
      },
      {
       "')": -0.002286022
      },
      {
       "\n": -0.0065405252
      },
      {
       " grab": -0.5875996
      },
      {
       " 7": -0.0078716185
      },
      {
       ":": -0.00086626475
      },
      {
       " wash": -0.34628645
      },
      {
       " the": -0.2217511
      },
      {
       " sink": -0.5439478
      },
      {
       "\n": -0.0681224
      },
      {
       " assert": -0.60109496
      },
      {
       "('": -0.0013831421
      },
      {
       "so": -0.018422302
      },
      {
       "ap": -0.00014575632
      },
      {
       "'": -0.0014359064
      },
      {
       " in": -0.007772632
      },
      {
       " '": -0.0020992889
      },
      {
       "hands": -0.003091662
      },
      {
       "')": -0.0057276716
      },
      {
       "\n": -0.0043492913
      },
      {
       " else": -0.0016533223
      },
      {
       ":": -0.001699057
      },
      {
       " find": -0.031374924
      },
      {
       "('": -0.001239782
      },
      {
       "so": -0.0011755116
      },
      {
       "ap": -9.878341e-05
      },
      {
       "')": -0.0023126684
      },
      {
       "\n": -0.004818144
      },
      {
       " grab": -0.10147651
      },
      {
       "('": -0.00078763964
      },
      {
       "so": -0.00025515142
      },
      {
       "ap": -0.00011082348
      },
      {
       "')": -0.0015676515
      },
      {
       "\n": -0.0035039384
      },
      {
       " wash": -0.026475495
      },
      {
       "('": -0.0009244911
      },
      {
       "s": -0.024492519
      },
      {
       "ink": -0.00011583212
      },
      {
       "')": -0.0015388172
      },
      {
       "\n": -0.034497153
      },
      {
       " #": -0.016063971
      },
      {
       " 8": -0.0023847802
      },
      {
       ":": -0.001885718
      },
      {
       " put": -1.4229646
      }
     ],
     "text_offset": [
      3378,
      3380,
      3382,
      3383,
      3388,
      3393,
      3402,
      3403,
      3408,
      3410,
      3414,
      3418,
      3420,
      3421,
      3423,
      3425,
      3426,
      3431,
      3436,
      3437,
      3442,
      3444,
      3445,
      3448,
      3450,
      3451,
      3453,
      3455,
      3456,
      3461,
      3464,
      3468,
      3470,
      3473,
      3475,
      3476,
      3481,
      3483,
      3485,
      3486,
      3489,
      3491,
      3493,
      3494,
      3496,
      3498,
      3499,
      3504,
      3506,
      3512,
      3513,
      3518,
      3520,
      3521,
      3523,
      3525,
      3527,
      3528,
      3530,
      3532,
      3533,
      3538,
      3542,
      3547,
      3548,
      3555,
      3557,
      3558,
      3560,
      3562,
      3563,
      3566,
      3568,
      3573,
      3575,
      3576,
      3581,
      3582,
      3587,
      3589,
      3590,
      3592,
      3594,
      3596,
      3597,
      3602,
      3604,
      3605,
      3607,
      3609,
      3611,
      3612,
      3617,
      3619,
      3620,
      3623,
      3625,
      3626,
      3628,
      3630,
      3631,
      3636,
      3640,
      3644,
      3646,
      3649,
      3651,
      3652,
      3657,
      3660,
      3662,
      3663,
      3666,
      3668,
      3670,
      3671,
      3673,
      3675,
      3676,
      3681,
      3685,
      3690,
      3691,
      3696,
      3698,
      3700,
      3702,
      3704,
      3705,
      3707,
      3709,
      3710,
      3715,
      3719,
      3724,
      3725,
      3732,
      3734,
      3736,
      3738,
      3739,
      3742,
      3744,
      3749,
      3751,
      3752,
      3757,
      3758,
      3763,
      3765,
      3767,
      3769,
      3771,
      3772,
      3777,
      3779,
      3781,
      3783,
      3785,
      3786,
      3791,
      3793,
      3794,
      3797,
      3799,
      3800,
      3802,
      3804,
      3805
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Clean bathroom",
   "task_description": "I'm going to clean the bathroom, take the brush, wash and rinse the toilet and shower",
   "program": [
    "[Walk] <bathroom> (1)",
    "[Walk] <brush> (1)",
    "[Find] <brush> (1)",
    "[Grab] <brush> (1)",
    "[Find] <detergent> (1)",
    "[Grab] <detergent> (1)",
    "[Find] <toilet> (1)",
    "[PutBack] <detergent> (1) <toilet> (1)",
    "[Find] <toilet> (1)",
    "[Scrub] <toilet> (1)",
    "[Rinse] <toilet> (1)",
    "[Find] <shower> (1)",
    "[Scrub] <shower> (1)",
    "[Rinse] <shower> (1)"
   ],
   "batch": "results_intentions_march-13-18",
   "file_id": "file367_1",
   "goal_condition": [
    [
     [
      247,
      149,
      "INSIDE",
      "character",
      "bathroom"
     ],
     [
      1001,
      166,
      "ON",
      "detergent",
      "toilet"
     ],
     [
      247,
      1000,
      "HOLDS_RH",
      "character",
      "brush"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1182,
   "completion_tokens": 169,
   "total_tokens": 1351
  }
 },
 "19": {
  "plan": [
   [
    " # 0: find phone\n find('phone')\n # 1: pick up phone\n assert('close' to 'phone')\n else: find('phone')\n grab('phone')\n # 2: put phone to ear\n turnto('phone')\n putin('phone', 'ear')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " phone",
      "\n",
      " find",
      "('",
      "phone",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " pick",
      " up",
      " phone",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "phone",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "phone",
      "')",
      "\n",
      " grab",
      "('",
      "phone",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " put",
      " phone",
      " to",
      " ear",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "phone",
      "')",
      "\n",
      " put",
      "in",
      "('",
      "phone",
      "',",
      " '",
      "ear",
      "')"
     ],
     "token_logprobs": [
      -0.018531835,
      -0.008579617,
      -0.0018916896,
      -0.691579,
      -0.21879585,
      -0.039587695,
      -0.045269184,
      -0.00214092,
      -0.001310147,
      -0.0026711915,
      -0.009107892,
      -0.004470344,
      -0.0025338614,
      -0.001090837,
      -2.023519,
      -0.038579885,
      -0.33834147,
      -0.01980642,
      -0.53482044,
      -0.00190608,
      -0.009948478,
      -0.0029533175,
      -0.0015826372,
      -0.0023695459,
      -0.0005935529,
      -0.005259833,
      -0.0064955275,
      -0.001929671,
      -0.0016618,
      -0.0038088579,
      -0.0015900383,
      -0.00035180151,
      -0.0021002456,
      -0.007910666,
      -0.07425818,
      -0.0009204334,
      -0.00017866449,
      -0.0020176987,
      -0.026603665,
      -0.846654,
      -0.011895766,
      -0.0012381112,
      -1.7158763,
      -0.268091,
      -1.3164327,
      -0.20294276,
      -0.033838447,
      -1.1049166,
      -5.5149267e-05,
      -0.00022826564,
      -0.0007785713,
      -0.0033427516,
      -0.0015164923,
      -0.0043686293,
      -2.1928194,
      -2.973679,
      -0.007510944,
      -0.19508372,
      -0.4466872,
      -0.0067250286,
      -0.023741372,
      -0.0019271622
     ],
     "top_logprobs": [
      {
       " #": -0.018531835
      },
      {
       " 0": -0.008579617
      },
      {
       ":": -0.0018916896
      },
      {
       " find": -0.691579
      },
      {
       " phone": -0.21879585
      },
      {
       "\n": -0.039587695
      },
      {
       " find": -0.045269184
      },
      {
       "('": -0.00214092
      },
      {
       "phone": -0.001310147
      },
      {
       "')": -0.0026711915
      },
      {
       "\n": -0.009107892
      },
      {
       " #": -0.004470344
      },
      {
       " 1": -0.0025338614
      },
      {
       ":": -0.001090837
      },
      {
       " grab": -0.18449372
      },
      {
       " up": -0.038579885
      },
      {
       " phone": -0.33834147
      },
      {
       "\n": -0.01980642
      },
      {
       " assert": -0.53482044
      },
      {
       "('": -0.00190608
      },
      {
       "close": -0.009948478
      },
      {
       "'": -0.0029533175
      },
      {
       " to": -0.0015826372
      },
      {
       " '": -0.0023695459
      },
      {
       "phone": -0.0005935529
      },
      {
       "')": -0.005259833
      },
      {
       "\n": -0.0064955275
      },
      {
       " else": -0.001929671
      },
      {
       ":": -0.0016618
      },
      {
       " find": -0.0038088579
      },
      {
       "('": -0.0015900383
      },
      {
       "phone": -0.00035180151
      },
      {
       "')": -0.0021002456
      },
      {
       "\n": -0.007910666
      },
      {
       " grab": -0.07425818
      },
      {
       "('": -0.0009204334
      },
      {
       "phone": -0.00017866449
      },
      {
       "')": -0.0020176987
      },
      {
       "\n": -0.026603665
      },
      {
       " assert": -0.70346653
      },
      {
       " 2": -0.011895766
      },
      {
       ":": -0.0012381112
      },
      {
       " look": -1.4777105
      },
      {
       " phone": -0.268091
      },
      {
       " in": -1.0910709
      },
      {
       " ear": -0.20294276
      },
      {
       "\n": -0.033838447
      },
      {
       " tur": -1.1049166
      },
      {
       "nt": -5.5149267e-05
      },
      {
       "o": -0.00022826564
      },
      {
       "('": -0.0007785713
      },
      {
       "phone": -0.0033427516
      },
      {
       "')": -0.0015164923
      },
      {
       "\n": -0.0043686293
      },
      {
       " point": -0.9567717
      },
      {
       "on": -0.2209469
      },
      {
       "('": -0.007510944
      },
      {
       "phone": -0.19508372
      },
      {
       "',": -0.4466872
      },
      {
       " '": -0.0067250286
      },
      {
       "ear": -0.023741372
      },
      {
       "')": -0.0019271622
      }
     ],
     "text_offset": [
      3377,
      3379,
      3381,
      3382,
      3387,
      3393,
      3394,
      3399,
      3401,
      3406,
      3408,
      3409,
      3411,
      3413,
      3414,
      3419,
      3422,
      3428,
      3429,
      3436,
      3438,
      3443,
      3444,
      3447,
      3449,
      3454,
      3456,
      3457,
      3462,
      3463,
      3468,
      3470,
      3475,
      3477,
      3478,
      3483,
      3485,
      3490,
      3492,
      3493,
      3495,
      3497,
      3498,
      3502,
      3508,
      3511,
      3515,
      3516,
      3520,
      3522,
      3523,
      3525,
      3530,
      3532,
      3533,
      3537,
      3539,
      3541,
      3546,
      3548,
      3550,
      3553
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Pick up phone",
   "task_description": "I go to my home office. I walk towards my desk. I see the phone. I pick it up.",
   "program": [
    "[Walk] <home_office> (1)",
    "[Walk] <desk> (1)",
    "[Find] <phone> (1)",
    "[TurnTo] <phone> (1)",
    "[LookAt] <phone> (1)",
    "[Grab] <phone> (1)"
   ],
   "batch": "results_intentions_march-13-18",
   "file_id": "file870_1",
   "goal_condition": [
    [
     [
      247,
      1000,
      "HOLDS_RH",
      "character",
      "phone"
     ],
     [
      247,
      248,
      "INSIDE",
      "character",
      "home_office"
     ],
     [
      247,
      1000,
      "FACING",
      "character",
      "phone"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1183,
   "completion_tokens": 62,
   "total_tokens": 1245
  }
 },
 "20": {
  "plan": [
   [
    " # 0: walk to bathroom\n walk('bathroom')\n # 1: find toilet\n find('toilet')\n # 2: turn to toilet\n turnto('toilet')\n lookat('toilet')\n # 3: sit on toilet\n assert('close' to 'toilet')\n else: find('toilet')\n else: turnto('toilet')\n sit('toilet')\n # 4: use the toilet\n def go_to_kitchen():\n # 0: walk to kitchen\n walk('kitchen')\n # 1: find kitchen counter\n find('kitchen_counter')\n # 2: turn to kitchen counter\n turnto('kitchen_counter')\n lookat('kitchen_counter')\n # 3: open a cupboard\n assert('close' to 'cupboard')\n else: find('cupboard')\n open('cupboard')\n # 4: grab something from inside the cupboard\n grab('<obj>')",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " bathroom",
      "\n",
      " walk",
      "('",
      "bath",
      "room",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " toilet",
      "\n",
      " find",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " turn",
      " to",
      " toilet",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " look",
      "at",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " sit",
      " on",
      " toilet",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "to",
      "ilet",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " else",
      ":",
      " tur",
      "nt",
      "o",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " sit",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " use",
      " the",
      " toilet",
      "\n",
      " def",
      " go",
      "_",
      "to",
      "_",
      "kit",
      "chen",
      "():",
      "\n",
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " kitchen",
      "\n",
      " walk",
      "('",
      "kit",
      "chen",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " kitchen",
      " counter",
      "\n",
      " find",
      "('",
      "kit",
      "chen",
      "_",
      "counter",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " turn",
      " to",
      " kitchen",
      " counter",
      "\n",
      " tur",
      "nt",
      "o",
      "('",
      "kit",
      "chen",
      "_",
      "counter",
      "')",
      "\n",
      " look",
      "at",
      "('",
      "kit",
      "chen",
      "_",
      "counter",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " open",
      " a",
      " cup",
      "board",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "cup",
      "board",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "cup",
      "board",
      "')",
      "\n",
      " open",
      "('",
      "cup",
      "board",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " grab",
      " something",
      " from",
      " inside",
      " the",
      " cup",
      "board",
      "\n",
      " grab",
      "('",
      "<",
      "obj",
      ">",
      "')"
     ],
     "token_logprobs": [
      -0.015420552,
      -0.00731771,
      -0.0025900328,
      -0.13506323,
      -0.25823364,
      -0.3785824,
      -0.019525763,
      -0.0045927917,
      -0.0034371873,
      -0.0022983898,
      -0.00015672446,
      -0.001658099,
      -0.006865693,
      -0.0020110107,
      -0.0030925004,
      -0.0004737435,
      -0.11400691,
      -0.045693792,
      -0.021231849,
      -0.24608669,
      -0.0008162131,
      -0.0006669723,
      -0.00024287197,
      -0.0018391965,
      -0.0049291924,
      -0.015660463,
      -0.0048794765,
      -0.0005773893,
      -3.017047,
      -1.1713809,
      -0.25623223,
      -0.06506142,
      -0.09051674,
      -2.7490969e-05,
      -0.00026123386,
      -0.0006139479,
      -0.00035704856,
      -0.00021586417,
      -0.0011892958,
      -0.0066453414,
      -0.9022882,
      -0.00077129586,
      -0.0004453587,
      -0.0003278922,
      -0.00027494476,
      -0.0005859189,
      -0.004032655,
      -0.044319317,
      -0.008155692,
      -0.00077666395,
      -0.36613283,
      -0.057043035,
      -0.34907815,
      -0.022273377,
      -0.6237274,
      -0.0011471653,
      -0.0018906139,
      -0.0029639006,
      -0.00057059067,
      -0.0016403678,
      -0.0014038534,
      -0.00024608686,
      -0.0046522534,
      -0.0038080204,
      -0.0015731436,
      -0.0014342356,
      -0.013486471,
      -0.001145135,
      -0.00078859425,
      -0.00016161484,
      -0.0012683686,
      -0.0052972226,
      -0.35859057,
      -0.0042483653,
      -0.019004468,
      -6.9690854e-05,
      -8.00667e-05,
      -0.00061609555,
      -0.0010167877,
      -7.541475e-05,
      -0.0020940315,
      -0.0034416723,
      -0.005827848,
      -0.0010488285,
      -0.0009144692,
      -0.0007950352,
      -0.0012318448,
      -0.08600521,
      -0.036370236,
      -0.007999466,
      -0.001814357,
      -2.1704836,
      -1.7092142,
      -0.00741408,
      -0.03230244,
      -3.6863573,
      -1.574951,
      -0.0022219217,
      -0.97168905,
      -0.0015170283,
      -0.9384459,
      -0.0013547902,
      -0.061884243,
      -0.011753785,
      -0.02370091,
      -0.005524949,
      -0.0020343624,
      -0.024641631,
      -0.0227368,
      -0.017265908,
      -0.017688313,
      -0.0033503475,
      -0.0023431361,
      -0.0018780144,
      -0.00062552054,
      -0.002034602,
      -0.005336112,
      -0.001564907,
      -0.0024796636,
      -0.00070830766,
      -0.017116131,
      -0.87111104,
      -0.047429264,
      -0.0133636575,
      -0.10681806,
      -0.0011009781,
      -0.0029141044,
      -0.0003625331,
      -0.017869363,
      -0.0005899748,
      -0.001393407,
      -0.004943028,
      -0.0074538346,
      -0.004707769,
      -0.0007363996,
      -2.0105493,
      -0.013922211,
      -0.09369942,
      -0.019844666,
      -0.012364969,
      -0.015581818,
      -2.1649737e-05,
      -0.00031835173,
      -0.0005318864,
      -0.0016839514,
      -0.00018474413,
      -0.0017816329,
      -0.000440229,
      -0.0008992545,
      -0.005095487,
      -0.0428063,
      -0.0003901998,
      -0.00046789853,
      -0.0009617781,
      -0.00027148862,
      -0.0012900336,
      -0.00022963606,
      -0.0012701586,
      -0.03334077,
      -0.0051308344,
      -0.0066698845,
      -0.0008487251,
      -1.5230662,
      -4.069379,
      -0.7675664,
      -0.0026071258,
      -0.066437535,
      -0.44275984,
      -0.0007894305,
      -0.002096302,
      -0.00197213,
      -0.00034285896,
      -0.0017999666,
      -0.057172462,
      -0.0007539364,
      -0.0039932784,
      -0.0044174204,
      -0.0008561208,
      -0.0009253256,
      -0.0021419965,
      -0.00080404343,
      -0.0006650631,
      -0.0016392922,
      -0.0018128045,
      -0.005853749,
      -0.20167832,
      -0.0015770249,
      -0.0003940164,
      -0.0006991211,
      -0.0016019199,
      -1.1168252,
      -0.054492038,
      -0.0073822555,
      -0.0009935767,
      -0.78636205,
      -2.1426344,
      -0.6107115,
      -3.08266,
      -1.2905848,
      -0.0039793933,
      -0.0014342356,
      -0.019500054,
      -0.25194538,
      -0.008690479,
      -2.762002,
      -0.40229154,
      -0.00792713,
      -0.008720842
     ],
     "top_logprobs": [
      {
       " #": -0.015420552
      },
      {
       " 0": -0.00731771
      },
      {
       ":": -0.0025900328
      },
      {
       " walk": -0.13506323
      },
      {
       " to": -0.25823364
      },
      {
       " bathroom": -0.3785824
      },
      {
       "\n": -0.019525763
      },
      {
       " walk": -0.0045927917
      },
      {
       "('": -0.0034371873
      },
      {
       "bath": -0.0022983898
      },
      {
       "room": -0.00015672446
      },
      {
       "')": -0.001658099
      },
      {
       "\n": -0.006865693
      },
      {
       " #": -0.0020110107
      },
      {
       " 1": -0.0030925004
      },
      {
       ":": -0.0004737435
      },
      {
       " find": -0.11400691
      },
      {
       " toilet": -0.045693792
      },
      {
       "\n": -0.021231849
      },
      {
       " find": -0.24608669
      },
      {
       "('": -0.0008162131
      },
      {
       "to": -0.0006669723
      },
      {
       "ilet": -0.00024287197
      },
      {
       "')": -0.0018391965
      },
      {
       "\n": -0.0049291924
      },
      {
       " #": -0.015660463
      },
      {
       " 2": -0.0048794765
      },
      {
       ":": -0.0005773893
      },
      {
       " sit": -0.7384104
      },
      {
       " on": -0.58084005
      },
      {
       " toilet": -0.25623223
      },
      {
       "\n": -0.06506142
      },
      {
       " tur": -0.09051674
      },
      {
       "nt": -2.7490969e-05
      },
      {
       "o": -0.00026123386
      },
      {
       "('": -0.0006139479
      },
      {
       "to": -0.00035704856
      },
      {
       "ilet": -0.00021586417
      },
      {
       "')": -0.0011892958
      },
      {
       "\n": -0.0066453414
      },
      {
       " #": -0.56305003
      },
      {
       "at": -0.00077129586
      },
      {
       "('": -0.0004453587
      },
      {
       "to": -0.0003278922
      },
      {
       "ilet": -0.00027494476
      },
      {
       "')": -0.0005859189
      },
      {
       "\n": -0.004032655
      },
      {
       " #": -0.044319317
      },
      {
       " 3": -0.008155692
      },
      {
       ":": -0.00077666395
      },
      {
       " sit": -0.36613283
      },
      {
       " on": -0.057043035
      },
      {
       " toilet": -0.34907815
      },
      {
       "\n": -0.022273377
      },
      {
       " assert": -0.6237274
      },
      {
       "('": -0.0011471653
      },
      {
       "close": -0.0018906139
      },
      {
       "'": -0.0029639006
      },
      {
       " to": -0.00057059067
      },
      {
       " '": -0.0016403678
      },
      {
       "to": -0.0014038534
      },
      {
       "ilet": -0.00024608686
      },
      {
       "')": -0.0046522534
      },
      {
       "\n": -0.0038080204
      },
      {
       " else": -0.0015731436
      },
      {
       ":": -0.0014342356
      },
      {
       " find": -0.013486471
      },
      {
       "('": -0.001145135
      },
      {
       "to": -0.00078859425
      },
      {
       "ilet": -0.00016161484
      },
      {
       "')": -0.0012683686
      },
      {
       "\n": -0.0052972226
      },
      {
       " else": -0.35859057
      },
      {
       ":": -0.0042483653
      },
      {
       " tur": -0.019004468
      },
      {
       "nt": -6.9690854e-05
      },
      {
       "o": -8.00667e-05
      },
      {
       "('": -0.00061609555
      },
      {
       "to": -0.0010167877
      },
      {
       "ilet": -7.541475e-05
      },
      {
       "')": -0.0020940315
      },
      {
       "\n": -0.0034416723
      },
      {
       " sit": -0.005827848
      },
      {
       "('": -0.0010488285
      },
      {
       "to": -0.0009144692
      },
      {
       "ilet": -0.0007950352
      },
      {
       "')": -0.0012318448
      },
      {
       "\n": -0.08600521
      },
      {
       " #": -0.036370236
      },
      {
       " 4": -0.007999466
      },
      {
       ":": -0.001814357
      },
      {
       " flush": -1.3678665
      },
      {
       " toilet": -0.225955
      },
      {
       " toilet": -0.00741408
      },
      {
       "\n": -0.03230244
      },
      {
       " use": -0.8167027
      },
      {
       " go": -1.574951
      },
      {
       "_": -0.0022219217
      },
      {
       "sh": -0.7134836
      },
      {
       "_": -0.0015170283
      },
      {
       "kit": -0.9384459
      },
      {
       "chen": -0.0013547902
      },
      {
       "():": -0.061884243
      },
      {
       "\n": -0.011753785
      },
      {
       " #": -0.02370091
      },
      {
       " 0": -0.005524949
      },
      {
       ":": -0.0020343624
      },
      {
       " walk": -0.024641631
      },
      {
       " to": -0.0227368
      },
      {
       " kitchen": -0.017265908
      },
      {
       "\n": -0.017688313
      },
      {
       " walk": -0.0033503475
      },
      {
       "('": -0.0023431361
      },
      {
       "kit": -0.0018780144
      },
      {
       "chen": -0.00062552054
      },
      {
       "')": -0.002034602
      },
      {
       "\n": -0.005336112
      },
      {
       " #": -0.001564907
      },
      {
       " 1": -0.0024796636
      },
      {
       ":": -0.00070830766
      },
      {
       " find": -0.017116131
      },
      {
       " kitchen": -0.87111104
      },
      {
       " counter": -0.047429264
      },
      {
       "\n": -0.0133636575
      },
      {
       " find": -0.10681806
      },
      {
       "('": -0.0011009781
      },
      {
       "kit": -0.0029141044
      },
      {
       "chen": -0.0003625331
      },
      {
       "_": -0.017869363
      },
      {
       "counter": -0.0005899748
      },
      {
       "')": -0.001393407
      },
      {
       "\n": -0.004943028
      },
      {
       " #": -0.0074538346
      },
      {
       " 2": -0.004707769
      },
      {
       ":": -0.0007363996
      },
      {
       " find": -1.1811856
      },
      {
       " to": -0.013922211
      },
      {
       " kitchen": -0.09369942
      },
      {
       " counter": -0.019844666
      },
      {
       "\n": -0.012364969
      },
      {
       " tur": -0.015581818
      },
      {
       "nt": -2.1649737e-05
      },
      {
       "o": -0.00031835173
      },
      {
       "('": -0.0005318864
      },
      {
       "kit": -0.0016839514
      },
      {
       "chen": -0.00018474413
      },
      {
       "_": -0.0017816329
      },
      {
       "counter": -0.000440229
      },
      {
       "')": -0.0008992545
      },
      {
       "\n": -0.005095487
      },
      {
       " look": -0.0428063
      },
      {
       "at": -0.0003901998
      },
      {
       "('": -0.00046789853
      },
      {
       "kit": -0.0009617781
      },
      {
       "chen": -0.00027148862
      },
      {
       "_": -0.0012900336
      },
      {
       "counter": -0.00022963606
      },
      {
       "')": -0.0012701586
      },
      {
       "\n": -0.03334077
      },
      {
       " #": -0.0051308344
      },
      {
       " 3": -0.0066698845
      },
      {
       ":": -0.0008487251
      },
      {
       " grab": -1.2227123
      },
      {
       " the": -1.3061411
      },
      {
       " cup": -0.7675664
      },
      {
       "board": -0.0026071258
      },
      {
       "\n": -0.066437535
      },
      {
       " assert": -0.44275984
      },
      {
       "('": -0.0007894305
      },
      {
       "close": -0.002096302
      },
      {
       "'": -0.00197213
      },
      {
       " to": -0.00034285896
      },
      {
       " '": -0.0017999666
      },
      {
       "cup": -0.057172462
      },
      {
       "board": -0.0007539364
      },
      {
       "')": -0.0039932784
      },
      {
       "\n": -0.0044174204
      },
      {
       " else": -0.0008561208
      },
      {
       ":": -0.0009253256
      },
      {
       " find": -0.0021419965
      },
      {
       "('": -0.00080404343
      },
      {
       "cup": -0.0006650631
      },
      {
       "board": -0.0016392922
      },
      {
       "')": -0.0018128045
      },
      {
       "\n": -0.005853749
      },
      {
       " open": -0.20167832
      },
      {
       "('": -0.0015770249
      },
      {
       "cup": -0.0003940164
      },
      {
       "board": -0.0006991211
      },
      {
       "')": -0.0016019199
      },
      {
       "<|endoftext|>": -0.41891304
      },
      {
       " #": -0.054492038
      },
      {
       " 4": -0.0073822555
      },
      {
       ":": -0.0009935767
      },
      {
       " grab": -0.78636205
      },
      {
       " a": -0.51687986
      },
      {
       " from": -0.6107115
      },
      {
       " the": -0.6486676
      },
      {
       "\n": -0.50616956
      },
      {
       " cup": -0.0039793933
      },
      {
       "board": -0.0014342356
      },
      {
       "\n": -0.019500054
      },
      {
       " grab": -0.25194538
      },
      {
       "('": -0.008690479
      },
      {
       "something": -0.47043237
      },
      {
       "obj": -0.40229154
      },
      {
       ">": -0.00792713
      },
      {
       "')": -0.008720842
      }
     ],
     "text_offset": [
      3376,
      3378,
      3380,
      3381,
      3386,
      3389,
      3398,
      3399,
      3404,
      3406,
      3410,
      3414,
      3416,
      3417,
      3419,
      3421,
      3422,
      3427,
      3434,
      3435,
      3440,
      3442,
      3444,
      3448,
      3450,
      3451,
      3453,
      3455,
      3456,
      3461,
      3464,
      3471,
      3472,
      3476,
      3478,
      3479,
      3481,
      3483,
      3487,
      3489,
      3490,
      3495,
      3497,
      3499,
      3501,
      3505,
      3507,
      3508,
      3510,
      3512,
      3513,
      3517,
      3520,
      3527,
      3528,
      3535,
      3537,
      3542,
      3543,
      3546,
      3548,
      3550,
      3554,
      3556,
      3557,
      3562,
      3563,
      3568,
      3570,
      3572,
      3576,
      3578,
      3579,
      3584,
      3585,
      3589,
      3591,
      3592,
      3594,
      3596,
      3600,
      3602,
      3603,
      3607,
      3609,
      3611,
      3615,
      3617,
      3618,
      3620,
      3622,
      3623,
      3627,
      3631,
      3638,
      3639,
      3643,
      3646,
      3647,
      3649,
      3650,
      3653,
      3657,
      3660,
      3661,
      3663,
      3665,
      3666,
      3671,
      3674,
      3682,
      3683,
      3688,
      3690,
      3693,
      3697,
      3699,
      3700,
      3702,
      3704,
      3705,
      3710,
      3718,
      3726,
      3727,
      3732,
      3734,
      3737,
      3741,
      3742,
      3749,
      3751,
      3752,
      3754,
      3756,
      3757,
      3762,
      3765,
      3773,
      3781,
      3782,
      3786,
      3788,
      3789,
      3791,
      3794,
      3798,
      3799,
      3806,
      3808,
      3809,
      3814,
      3816,
      3818,
      3821,
      3825,
      3826,
      3833,
      3835,
      3836,
      3838,
      3840,
      3841,
      3846,
      3848,
      3852,
      3857,
      3858,
      3865,
      3867,
      3872,
      3873,
      3876,
      3878,
      3881,
      3886,
      3888,
      3889,
      3894,
      3895,
      3900,
      3902,
      3905,
      3910,
      3912,
      3913,
      3918,
      3920,
      3923,
      3928,
      3930,
      3931,
      3933,
      3935,
      3936,
      3941,
      3951,
      3956,
      3963,
      3967,
      3971,
      3976,
      3977,
      3982,
      3984,
      3985,
      3988,
      3989
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Go to toilet",
   "task_description": "I walk to the entrance of the bathroom. I turn to the door. I open the door to the bathroom. I walk inside of the bathroom. I find the toilet inside of the bathroom and walk over to it. I turn and look at the toilet.",
   "program": [
    "[Walk] <bathroom> (1)",
    "[Walk] <toilet> (1)",
    "[Find] <toilet> (1)",
    "[TurnTo] <toilet> (1)",
    "[LookAt] <toilet> (1)",
    "[Walk] <toilet> (1)",
    "[TurnTo] <toilet> (1)"
   ],
   "batch": "results_intentions_march-13-18",
   "file_id": "file496_1",
   "goal_condition": [
    [
     [
      247,
      166,
      "FACING",
      "character",
      "toilet"
     ],
     [
      247,
      149,
      "INSIDE",
      "character",
      "bathroom"
     ]
    ],
    []
   ]
  },
  "usage": {
   "prompt_tokens": 1184,
   "completion_tokens": 208,
   "total_tokens": 1392
  }
 }
}