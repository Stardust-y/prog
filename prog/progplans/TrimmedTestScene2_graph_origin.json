{
 "0": {
  "plan": [
   [
    " # 0: walk to bathroom\n walk('bathroom')\n # 1: find toilet\n find('toilet')\n # 2: grab toilet brush\n find('toiletbrush')\n assert('close' to 'toiletbrush')\n else: find('toiletbrush')\n grab('toiletbrush')\n # 3: put toilet cleaner on brush\n find('toiletcleaner')\n assert('close' to 'toiletcleaner')\n else: find('toiletcleaner')\n grab('toiletcleaner')\n find('toiletbrush')\n assert('toiletcleaner' in 'hands' )\n else: find('toiletcleaner')\n else: grab('toiletcleaner')\n putin('toiletcleaner', 'toiletbrush')\n # 4: start scrubbing toilet\n find('toilet')\n assert('toiletbrush' in 'hands' )\n else: find('toiletbrush')\n else: grab('toiletbrush')\n assert('close' to 'toilet' )\n else: find('toilet')\n putin('toiletbrush', 'toilet')\n # 5: flush toilet\n # 6: wipe down toilet\n # 7: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " bathroom",
      "\n",
      " walk",
      "('",
      "bath",
      "room",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " toilet",
      "\n",
      " find",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " grab",
      " toilet",
      " brush",
      "\n",
      " find",
      "('",
      "to",
      "ilet",
      "brush",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "to",
      "ilet",
      "brush",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "to",
      "ilet",
      "brush",
      "')",
      "\n",
      " grab",
      "('",
      "to",
      "ilet",
      "brush",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " put",
      " toilet",
      " cleaner",
      " on",
      " brush",
      "\n",
      " find",
      "('",
      "to",
      "ilet",
      "clean",
      "er",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "to",
      "ilet",
      "clean",
      "er",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "to",
      "ilet",
      "clean",
      "er",
      "')",
      "\n",
      " grab",
      "('",
      "to",
      "ilet",
      "clean",
      "er",
      "')",
      "\n",
      " find",
      "('",
      "to",
      "ilet",
      "brush",
      "')",
      "\n",
      " assert",
      "('",
      "to",
      "ilet",
      "clean",
      "er",
      "'",
      " in",
      " '",
      "hands",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "to",
      "ilet",
      "clean",
      "er",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "to",
      "ilet",
      "clean",
      "er",
      "')",
      "\n",
      " put",
      "in",
      "('",
      "to",
      "ilet",
      "clean",
      "er",
      "',",
      " '",
      "to",
      "ilet",
      "brush",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " start",
      " scrub",
      "bing",
      " toilet",
      "\n",
      " find",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " assert",
      "('",
      "to",
      "ilet",
      "brush",
      "'",
      " in",
      " '",
      "hands",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "to",
      "ilet",
      "brush",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "to",
      "ilet",
      "brush",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "to",
      "ilet",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " put",
      "in",
      "('",
      "to",
      "ilet",
      "brush",
      "',",
      " '",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " flush",
      " toilet",
      "\n",
      " #",
      " 6",
      ":",
      " wipe",
      " down",
      " toilet",
      "\n",
      " #",
      " 7",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.0135404235,
      -0.004478188,
      -0.0036207028,
      -0.10778426,
      -0.016768763,
      -0.10006363,
      -0.026940813,
      -0.0040594093,
      -0.004663871,
      -0.0014208646,
      -8.221057e-05,
      -0.0009106507,
      -0.009783125,
      -0.0016847276,
      -0.0023307696,
      -0.0006476483,
      -0.21051465,
      -0.034449033,
      -0.030856466,
      -0.0030923802,
      -0.0007715342,
      -0.00020871071,
      -5.9321566e-05,
      -0.00033665728,
      -0.006131556,
      -0.0013146825,
      -0.0018028322,
      -0.001033077,
      -0.7074107,
      -0.30310315,
      -0.3766169,
      -0.015793445,
      -0.2095265,
      -0.0005317681,
      -0.0012845406,
      -0.0014583505,
      -0.00871495,
      -0.0008226559,
      -0.0041212314,
      -0.08004018,
      -0.00041220273,
      -0.001025259,
      -0.00092150713,
      -0.00066351244,
      -0.00034882128,
      -0.00016280691,
      -1.37819625e-05,
      -0.0014790627,
      -0.035369433,
      -0.0042319023,
      -0.00025181074,
      -0.0003566928,
      -0.00083667657,
      -0.00043784294,
      -9.0437854e-05,
      -5.216904e-05,
      -0.00049562723,
      -0.00062730775,
      -0.0027090216,
      -0.00059927773,
      -0.00044392727,
      -5.9085025e-05,
      -4.5847235e-05,
      -0.00023989083,
      -0.000110942696,
      -0.004274884,
      -0.001425401,
      -0.0026529026,
      -0.00073914323,
      -0.73627365,
      -0.29388303,
      -2.5163937,
      -0.938012,
      -0.7804039,
      -0.012971875,
      -0.017313939,
      -0.00048978225,
      -0.004797601,
      -0.04063293,
      -0.0520888,
      -0.00030261147,
      -0.0008044011,
      -0.0034331195,
      -0.027242733,
      -0.0002014371,
      -0.0010685805,
      -0.00038113716,
      -0.000110467736,
      -0.0002556273,
      -0.00014229833,
      -9.818829e-05,
      -0.005923716,
      -3.023464e-05,
      -0.03562876,
      -0.0031021272,
      -0.00014992956,
      -0.00011583212,
      -0.000444405,
      -0.00034619775,
      -5.8367896e-05,
      -3.142485e-05,
      -0.0018381217,
      -4.6445148e-05,
      -0.00022576131,
      -0.0018486318,
      -0.0017013276,
      -0.00031644345,
      -4.036551e-05,
      -2.4543265e-06,
      -0.0026226041,
      -3.559716e-05,
      -0.00019368572,
      -0.004065452,
      -0.35186043,
      -0.0002660041,
      -0.0017317765,
      -0.00029521773,
      -0.10469111,
      -0.00060094945,
      -0.004121352,
      -0.009321445,
      -0.0003376119,
      -0.007276882,
      -0.00010140506,
      -0.016375529,
      -5.0856816e-05,
      -0.00041154944,
      -0.0017911292,
      -0.0005081507,
      -0.00078048056,
      -0.03628426,
      -0.00014706762,
      -0.0018608755,
      -0.00012882493,
      -0.00028520045,
      -0.0014237302,
      -0.0002781662,
      -9.329886e-05,
      -4.763911e-05,
      -0.0052773883,
      -2.582111e-05,
      -0.0006347644,
      -0.001588485,
      -0.0011009781,
      -0.00023690966,
      -0.00044953197,
      -0.00041059483,
      -4.0246297e-05,
      -7.3446927e-06,
      -0.0014720791,
      -6.516092e-05,
      -0.0004602654,
      -0.002297254,
      -1.5484612,
      -0.036519527,
      -0.0006274279,
      -0.00017985563,
      -0.00018271852,
      -0.009249135,
      -6.0633804e-05,
      -0.050220013,
      -0.00013764732,
      -0.00040534776,
      -0.00016650239,
      -0.000782033,
      -0.0008606544,
      -0.005850092,
      -0.0015619203,
      -0.0022721027,
      -0.0005235371,
      -0.6509453,
      -0.024525566,
      -0.0020281505,
      -0.27627715,
      -0.07895036,
      -0.19513117,
      -0.00032717505,
      -0.00041375431,
      -5.157113e-05,
      -0.09810939,
      -0.0033934668,
      -0.009889726,
      -0.00035192163,
      -0.052231163,
      -6.611553e-05,
      -0.002385137,
      -0.0008950785,
      -0.0041745594,
      -0.00038769643,
      -0.0005118471,
      -0.008823065,
      -0.00040331934,
      -0.0016445467,
      -9.771052e-05,
      -0.00019833862,
      -0.001489568,
      -0.00023655016,
      -9.329886e-05,
      -1.4616429e-05,
      -0.0008637576,
      -0.0008904247,
      -0.0016112922,
      -0.0024311459,
      -0.00022743117,
      -0.0005507898,
      -0.0003139382,
      -4.573365e-05,
      -8.483411e-05,
      -0.0003125086,
      -0.00043796306,
      -0.002459109,
      -0.08332804,
      -0.00016447584,
      -0.002543184,
      -0.00040761274,
      -0.00046312832,
      -0.0002199182,
      -0.00053862494,
      -3.154219e-05,
      -0.02053011,
      -8.149626e-05,
      -0.0011562373,
      -0.00013860193,
      -0.0002058497,
      -0.00033665728,
      -0.00019893186,
      -0.0001345479,
      -0.00063041,
      -0.0012520745,
      -0.0018842245,
      -0.032654446,
      -0.0024898828,
      -0.0001866524,
      -0.000297601,
      -1.5094201e-05,
      -0.0011181047,
      -0.00553376,
      -7.159913e-05,
      -0.0010886884,
      -0.00022850404,
      -0.0014555458,
      -0.0051434143,
      -0.002775724,
      -0.0018343596,
      -0.0004490551,
      -0.38041395,
      -0.06590966,
      -0.039991695,
      -1.12008,
      -0.00044392727,
      -0.0008377485,
      -1.9574646,
      -0.9384194,
      -0.31614092,
      -0.7415734,
      -0.026259348,
      -0.0011725258,
      -0.00096523983,
      -0.26498395
     ],
     "top_logprobs": [
      {
       " #": -0.0135404235
      },
      {
       " 0": -0.004478188
      },
      {
       ":": -0.0036207028
      },
      {
       " walk": -0.10778426
      },
      {
       " to": -0.016768763
      },
      {
       " bathroom": -0.10006363
      },
      {
       "\n": -0.026940813
      },
      {
       " walk": -0.0040594093
      },
      {
       "('": -0.004663871
      },
      {
       "bath": -0.0014208646
      },
      {
       "room": -8.221057e-05
      },
      {
       "')": -0.0009106507
      },
      {
       "\n": -0.009783125
      },
      {
       " #": -0.0016847276
      },
      {
       " 1": -0.0023307696
      },
      {
       ":": -0.0006476483
      },
      {
       " find": -0.21051465
      },
      {
       " toilet": -0.034449033
      },
      {
       "\n": -0.030856466
      },
      {
       " find": -0.0030923802
      },
      {
       "('": -0.0007715342
      },
      {
       "to": -0.00020871071
      },
      {
       "ilet": -5.9321566e-05
      },
      {
       "')": -0.00033665728
      },
      {
       "\n": -0.006131556
      },
      {
       " #": -0.0013146825
      },
      {
       " 2": -0.0018028322
      },
      {
       ":": -0.001033077
      },
      {
       " grab": -0.7074107
      },
      {
       " toilet": -0.30310315
      },
      {
       " brush": -0.3766169
      },
      {
       "\n": -0.015793445
      },
      {
       " find": -0.2095265
      },
      {
       "('": -0.0005317681
      },
      {
       "to": -0.0012845406
      },
      {
       "ilet": -0.0014583505
      },
      {
       "brush": -0.00871495
      },
      {
       "')": -0.0008226559
      },
      {
       "\n": -0.0041212314
      },
      {
       " assert": -0.08004018
      },
      {
       "('": -0.00041220273
      },
      {
       "close": -0.001025259
      },
      {
       "'": -0.00092150713
      },
      {
       " to": -0.00066351244
      },
      {
       " '": -0.00034882128
      },
      {
       "to": -0.00016280691
      },
      {
       "ilet": -1.37819625e-05
      },
      {
       "brush": -0.0014790627
      },
      {
       "')": -0.035369433
      },
      {
       "\n": -0.0042319023
      },
      {
       " else": -0.00025181074
      },
      {
       ":": -0.0003566928
      },
      {
       " find": -0.00083667657
      },
      {
       "('": -0.00043784294
      },
      {
       "to": -9.0437854e-05
      },
      {
       "ilet": -5.216904e-05
      },
      {
       "brush": -0.00049562723
      },
      {
       "')": -0.00062730775
      },
      {
       "\n": -0.0027090216
      },
      {
       " grab": -0.00059927773
      },
      {
       "('": -0.00044392727
      },
      {
       "to": -5.9085025e-05
      },
      {
       "ilet": -4.5847235e-05
      },
      {
       "brush": -0.00023989083
      },
      {
       "')": -0.000110942696
      },
      {
       "\n": -0.004274884
      },
      {
       " #": -0.001425401
      },
      {
       " 3": -0.0026529026
      },
      {
       ":": -0.00073914323
      },
      {
       " put": -0.73627365
      },
      {
       " toilet": -0.29388303
      },
      {
       " brush": -0.15621184
      },
      {
       " in": -0.75160676
      },
      {
       " toilet": -0.743698
      },
      {
       "\n": -0.012971875
      },
      {
       " find": -0.017313939
      },
      {
       "('": -0.00048978225
      },
      {
       "to": -0.004797601
      },
      {
       "ilet": -0.04063293
      },
      {
       "clean": -0.0520888
      },
      {
       "er": -0.00030261147
      },
      {
       "')": -0.0008044011
      },
      {
       "\n": -0.0034331195
      },
      {
       " assert": -0.027242733
      },
      {
       "('": -0.0002014371
      },
      {
       "close": -0.0010685805
      },
      {
       "'": -0.00038113716
      },
      {
       " to": -0.000110467736
      },
      {
       " '": -0.0002556273
      },
      {
       "to": -0.00014229833
      },
      {
       "ilet": -9.818829e-05
      },
      {
       "clean": -0.005923716
      },
      {
       "er": -3.023464e-05
      },
      {
       "')": -0.03562876
      },
      {
       "\n": -0.0031021272
      },
      {
       " else": -0.00014992956
      },
      {
       ":": -0.00011583212
      },
      {
       " find": -0.000444405
      },
      {
       "('": -0.00034619775
      },
      {
       "to": -5.8367896e-05
      },
      {
       "ilet": -3.142485e-05
      },
      {
       "clean": -0.0018381217
      },
      {
       "er": -4.6445148e-05
      },
      {
       "')": -0.00022576131
      },
      {
       "\n": -0.0018486318
      },
      {
       " grab": -0.0017013276
      },
      {
       "('": -0.00031644345
      },
      {
       "to": -4.036551e-05
      },
      {
       "ilet": -2.4543265e-06
      },
      {
       "clean": -0.0026226041
      },
      {
       "er": -3.559716e-05
      },
      {
       "')": -0.00019368572
      },
      {
       "\n": -0.004065452
      },
      {
       " find": -0.35186043
      },
      {
       "('": -0.0002660041
      },
      {
       "to": -0.0017317765
      },
      {
       "ilet": -0.00029521773
      },
      {
       "brush": -0.10469111
      },
      {
       "')": -0.00060094945
      },
      {
       "\n": -0.004121352
      },
      {
       " assert": -0.009321445
      },
      {
       "('": -0.0003376119
      },
      {
       "to": -0.007276882
      },
      {
       "ilet": -0.00010140506
      },
      {
       "clean": -0.016375529
      },
      {
       "er": -5.0856816e-05
      },
      {
       "'": -0.00041154944
      },
      {
       " in": -0.0017911292
      },
      {
       " '": -0.0005081507
      },
      {
       "hands": -0.00078048056
      },
      {
       "'": -0.03628426
      },
      {
       " )": -0.00014706762
      },
      {
       "\n": -0.0018608755
      },
      {
       " else": -0.00012882493
      },
      {
       ":": -0.00028520045
      },
      {
       " find": -0.0014237302
      },
      {
       "('": -0.0002781662
      },
      {
       "to": -9.329886e-05
      },
      {
       "ilet": -4.763911e-05
      },
      {
       "clean": -0.0052773883
      },
      {
       "er": -2.582111e-05
      },
      {
       "')": -0.0006347644
      },
      {
       "\n": -0.001588485
      },
      {
       " else": -0.0011009781
      },
      {
       ":": -0.00023690966
      },
      {
       " grab": -0.00044953197
      },
      {
       "('": -0.00041059483
      },
      {
       "to": -4.0246297e-05
      },
      {
       "ilet": -7.3446927e-06
      },
      {
       "clean": -0.0014720791
      },
      {
       "er": -6.516092e-05
      },
      {
       "')": -0.0004602654
      },
      {
       "\n": -0.002297254
      },
      {
       " assert": -0.24207821
      },
      {
       "in": -0.036519527
      },
      {
       "('": -0.0006274279
      },
      {
       "to": -0.00017985563
      },
      {
       "ilet": -0.00018271852
      },
      {
       "clean": -0.009249135
      },
      {
       "er": -6.0633804e-05
      },
      {
       "',": -0.050220013
      },
      {
       " '": -0.00013764732
      },
      {
       "to": -0.00040534776
      },
      {
       "ilet": -0.00016650239
      },
      {
       "brush": -0.000782033
      },
      {
       "')": -0.0008606544
      },
      {
       "\n": -0.005850092
      },
      {
       " #": -0.0015619203
      },
      {
       " 4": -0.0022721027
      },
      {
       ":": -0.0005235371
      },
      {
       " start": -0.6509453
      },
      {
       " scrub": -0.024525566
      },
      {
       "bing": -0.0020281505
      },
      {
       " toilet": -0.27627715
      },
      {
       "\n": -0.07895036
      },
      {
       " find": -0.19513117
      },
      {
       "('": -0.00032717505
      },
      {
       "to": -0.00041375431
      },
      {
       "ilet": -5.157113e-05
      },
      {
       "')": -0.09810939
      },
      {
       "\n": -0.0033934668
      },
      {
       " assert": -0.009889726
      },
      {
       "('": -0.00035192163
      },
      {
       "to": -0.052231163
      },
      {
       "ilet": -6.611553e-05
      },
      {
       "brush": -0.002385137
      },
      {
       "'": -0.0008950785
      },
      {
       " in": -0.0041745594
      },
      {
       " '": -0.00038769643
      },
      {
       "hands": -0.0005118471
      },
      {
       "'": -0.008823065
      },
      {
       " )": -0.00040331934
      },
      {
       "\n": -0.0016445467
      },
      {
       " else": -9.771052e-05
      },
      {
       ":": -0.00019833862
      },
      {
       " find": -0.001489568
      },
      {
       "('": -0.00023655016
      },
      {
       "to": -9.329886e-05
      },
      {
       "ilet": -1.4616429e-05
      },
      {
       "brush": -0.0008637576
      },
      {
       "')": -0.0008904247
      },
      {
       "\n": -0.0016112922
      },
      {
       " else": -0.0024311459
      },
      {
       ":": -0.00022743117
      },
      {
       " grab": -0.0005507898
      },
      {
       "('": -0.0003139382
      },
      {
       "to": -4.573365e-05
      },
      {
       "ilet": -8.483411e-05
      },
      {
       "brush": -0.0003125086
      },
      {
       "')": -0.00043796306
      },
      {
       "\n": -0.002459109
      },
      {
       " assert": -0.08332804
      },
      {
       "('": -0.00016447584
      },
      {
       "close": -0.002543184
      },
      {
       "'": -0.00040761274
      },
      {
       " to": -0.00046312832
      },
      {
       " '": -0.0002199182
      },
      {
       "to": -0.00053862494
      },
      {
       "ilet": -3.154219e-05
      },
      {
       "'": -0.02053011
      },
      {
       " )": -8.149626e-05
      },
      {
       "\n": -0.0011562373
      },
      {
       " else": -0.00013860193
      },
      {
       ":": -0.0002058497
      },
      {
       " find": -0.00033665728
      },
      {
       "('": -0.00019893186
      },
      {
       "to": -0.0001345479
      },
      {
       "ilet": -0.00063041
      },
      {
       "')": -0.0012520745
      },
      {
       "\n": -0.0018842245
      },
      {
       " put": -0.032654446
      },
      {
       "in": -0.0024898828
      },
      {
       "('": -0.0001866524
      },
      {
       "to": -0.000297601
      },
      {
       "ilet": -1.5094201e-05
      },
      {
       "brush": -0.0011181047
      },
      {
       "',": -0.00553376
      },
      {
       " '": -7.159913e-05
      },
      {
       "to": -0.0010886884
      },
      {
       "ilet": -0.00022850404
      },
      {
       "')": -0.0014555458
      },
      {
       "\n": -0.0051434143
      },
      {
       " #": -0.002775724
      },
      {
       " 5": -0.0018343596
      },
      {
       ":": -0.0004490551
      },
      {
       " flush": -0.38041395
      },
      {
       " toilet": -0.06590966
      },
      {
       "\n": -0.039991695
      },
      {
       " find": -0.87195957
      },
      {
       " 6": -0.00044392727
      },
      {
       ":": -0.0008377485
      },
      {
       " grab": -1.2473387
      },
      {
       " down": -0.9384194
      },
      {
       " toilet": -0.31614092
      },
      {
       "\n": -0.7415734
      },
      {
       " #": -0.026259348
      },
      {
       " 7": -0.0011725258
      },
      {
       ":": -0.00096523983
      },
      {
       " Done": -0.26498395
      }
     ],
     "text_offset": [
      4715,
      4717,
      4719,
      4720,
      4725,
      4728,
      4737,
      4738,
      4743,
      4745,
      4749,
      4753,
      4755,
      4756,
      4758,
      4760,
      4761,
      4766,
      4773,
      4774,
      4779,
      4781,
      4783,
      4787,
      4789,
      4790,
      4792,
      4794,
      4795,
      4800,
      4807,
      4813,
      4814,
      4819,
      4821,
      4823,
      4827,
      4832,
      4834,
      4835,
      4842,
      4844,
      4849,
      4850,
      4853,
      4855,
      4857,
      4861,
      4866,
      4868,
      4869,
      4874,
      4875,
      4880,
      4882,
      4884,
      4888,
      4893,
      4895,
      4896,
      4901,
      4903,
      4905,
      4909,
      4914,
      4916,
      4917,
      4919,
      4921,
      4922,
      4926,
      4933,
      4941,
      4944,
      4950,
      4951,
      4956,
      4958,
      4960,
      4964,
      4969,
      4971,
      4973,
      4974,
      4981,
      4983,
      4988,
      4989,
      4992,
      4994,
      4996,
      5000,
      5005,
      5007,
      5009,
      5010,
      5015,
      5016,
      5021,
      5023,
      5025,
      5029,
      5034,
      5036,
      5038,
      5039,
      5044,
      5046,
      5048,
      5052,
      5057,
      5059,
      5061,
      5062,
      5067,
      5069,
      5071,
      5075,
      5080,
      5082,
      5083,
      5090,
      5092,
      5094,
      5098,
      5103,
      5105,
      5106,
      5109,
      5111,
      5116,
      5117,
      5119,
      5120,
      5125,
      5126,
      5131,
      5133,
      5135,
      5139,
      5144,
      5146,
      5148,
      5149,
      5154,
      5155,
      5160,
      5162,
      5164,
      5168,
      5173,
      5175,
      5177,
      5178,
      5182,
      5184,
      5186,
      5188,
      5192,
      5197,
      5199,
      5201,
      5203,
      5205,
      5209,
      5214,
      5216,
      5217,
      5219,
      5221,
      5222,
      5228,
      5234,
      5238,
      5245,
      5246,
      5251,
      5253,
      5255,
      5259,
      5261,
      5262,
      5269,
      5271,
      5273,
      5277,
      5282,
      5283,
      5286,
      5288,
      5293,
      5294,
      5296,
      5297,
      5302,
      5303,
      5308,
      5310,
      5312,
      5316,
      5321,
      5323,
      5324,
      5329,
      5330,
      5335,
      5337,
      5339,
      5343,
      5348,
      5350,
      5351,
      5358,
      5360,
      5365,
      5366,
      5369,
      5371,
      5373,
      5377,
      5378,
      5380,
      5381,
      5386,
      5387,
      5392,
      5394,
      5396,
      5400,
      5402,
      5403,
      5407,
      5409,
      5411,
      5413,
      5417,
      5422,
      5424,
      5426,
      5428,
      5432,
      5434,
      5435,
      5437,
      5439,
      5440,
      5446,
      5453,
      5454,
      5456,
      5458,
      5459,
      5464,
      5469,
      5476,
      5477,
      5479,
      5481,
      5482
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Clean toilet",
   "task_description": "Use the toilet bowl cleaner and squeeze it around the inside of toilet bowl. Let it sit in there while you clean the rest of the toilet. Spray the all purpose cleaner on top of toilet, sides, bottom, and on and under the seat and lid. Wipe down toilet with paper towels on all the areas you sprayed the cleaner. Now using the toilet brush, scrub the inside bowl around completely in all areas.",
   "program": [
    "[Find] <brush> (1)",
    "[TurnTo] <brush> (1)",
    "[PointAt] <brush> (1)",
    "[Wash] <brush> (1)",
    "[TurnTo] <brush> (1)",
    "[LookAt] <brush> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_turk_robot",
   "file_id": "split67_2",
   "goal_condition": [
    [
     [
      240,
      1000,
      "FACING",
      "character",
      "brush"
     ]
    ],
    []
   ]
  }
 },
 "1": {
  "plan": [
   [
    " # 0: walk to computer\n walk('computer')\n # 1: find monitor\n find('monitor')\n # 2: turn off monitor\n assert('close' to 'monitor' )\n else: find('monitor')\n assert('monitor' is 'switchon' )\n else: switchon('monitor')\n switchoff('monitor')\n # 3: grab cloth\n find('cloth')\n assert('close' to 'cloth')\n else: find('cloth')\n grab('cloth')\n # 4: apply cleaning solution to cloth\n find('cleaningsolution')\n assert('close' to 'cleaningsolution')\n else: find('cleaningsolution')\n grab('cleaningsolution')\n find('cloth')\n assert('cleaningsolution' in 'hands' )\n else: find('cleaningsolution')\n else: grab('cleaningsolution')\n assert('close' to 'cloth' )\n else: find('cloth')\n putin('cleaningsolution', 'cloth')\n # 5: start scrubbing monitor\n find('monitor')\n assert('cloth' in 'hands' )\n else: find('cloth')\n else: grab('cloth')\n assert('close' to 'monitor' )\n else: find('monitor')\n putin('cloth', 'monitor')\n # 6: dry monitor with cloth\n find('monitor')\n assert('cloth' in 'hands' )\n else: find('cloth')\n else: grab('cloth')\n assert('close' to 'monitor' )\n else: find('monitor')\n putin('cloth', 'monitor')\n # 7: turn on monitor\n assert('close' to 'monitor' )\n else: find('monitor')\n assert('monitor' is 'switchoff' )\n else: switchoff('monitor')\n switchon('monitor')\n # 8: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " computer",
      "\n",
      " walk",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " monitor",
      "\n",
      " find",
      "('",
      "monitor",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " turn",
      " off",
      " monitor",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "monitor",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "monitor",
      "')",
      "\n",
      " assert",
      "('",
      "monitor",
      "'",
      " is",
      " '",
      "switch",
      "on",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " switch",
      "on",
      "('",
      "monitor",
      "')",
      "\n",
      " switch",
      "off",
      "('",
      "monitor",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " grab",
      " cloth",
      "\n",
      " find",
      "('",
      "cloth",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "cloth",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "cloth",
      "')",
      "\n",
      " grab",
      "('",
      "cloth",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " apply",
      " cleaning",
      " solution",
      " to",
      " cloth",
      "\n",
      " find",
      "('",
      "clean",
      "ings",
      "olution",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "clean",
      "ings",
      "olution",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "clean",
      "ings",
      "olution",
      "')",
      "\n",
      " grab",
      "('",
      "clean",
      "ings",
      "olution",
      "')",
      "\n",
      " find",
      "('",
      "cloth",
      "')",
      "\n",
      " assert",
      "('",
      "clean",
      "ings",
      "olution",
      "'",
      " in",
      " '",
      "hands",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "clean",
      "ings",
      "olution",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "clean",
      "ings",
      "olution",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "cloth",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "cloth",
      "')",
      "\n",
      " put",
      "in",
      "('",
      "clean",
      "ings",
      "olution",
      "',",
      " '",
      "cloth",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " start",
      " scrub",
      "bing",
      " monitor",
      "\n",
      " find",
      "('",
      "monitor",
      "')",
      "\n",
      " assert",
      "('",
      "cloth",
      "'",
      " in",
      " '",
      "hands",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "cloth",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "cloth",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "monitor",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "monitor",
      "')",
      "\n",
      " put",
      "in",
      "('",
      "cloth",
      "',",
      " '",
      "monitor",
      "')",
      "\n",
      " #",
      " 6",
      ":",
      " dry",
      " monitor",
      " with",
      " cloth",
      "\n",
      " find",
      "('",
      "monitor",
      "')",
      "\n",
      " assert",
      "('",
      "cloth",
      "'",
      " in",
      " '",
      "hands",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "cloth",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "cloth",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "monitor",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "monitor",
      "')",
      "\n",
      " put",
      "in",
      "('",
      "cloth",
      "',",
      " '",
      "monitor",
      "')",
      "\n",
      " #",
      " 7",
      ":",
      " turn",
      " on",
      " monitor",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "monitor",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "monitor",
      "')",
      "\n",
      " assert",
      "('",
      "monitor",
      "'",
      " is",
      " '",
      "switch",
      "off",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " switch",
      "off",
      "('",
      "monitor",
      "')",
      "\n",
      " switch",
      "on",
      "('",
      "monitor",
      "')",
      "\n",
      " #",
      " 8",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.015746258,
      -0.004015002,
      -0.0024643065,
      -0.4417357,
      -0.07014539,
      -0.28801352,
      -0.05319286,
      -0.006188411,
      -0.012078544,
      -0.003985318,
      -0.0016121276,
      -0.009514528,
      -0.0018800428,
      -0.0021437877,
      -0.0005272344,
      -0.69158673,
      -0.15613261,
      -0.010776283,
      -0.0036612025,
      -0.00064895867,
      -0.016340936,
      -0.0005385048,
      -0.0052867364,
      -0.0015178656,
      -0.002618659,
      -0.0007447508,
      -1.7928053,
      -0.2108783,
      -0.079709634,
      -0.010547538,
      -0.20285141,
      -0.00097615726,
      -0.008459745,
      -0.0011042005,
      -0.00017973736,
      -0.00083386997,
      -0.00069244066,
      -0.24597067,
      -0.00010796247,
      -0.0030357009,
      -0.00026373632,
      -0.0004029617,
      -0.0007591272,
      -0.00036360786,
      -0.0002733969,
      -0.00048632707,
      -0.0037271313,
      -0.17758968,
      -0.00060882105,
      -0.001148838,
      -0.0008205074,
      -0.0007667621,
      -0.0011934736,
      -0.023200927,
      -0.001007482,
      -0.013698367,
      -8.912656e-05,
      -0.001436922,
      -0.00041279974,
      -0.00075334037,
      -0.0016121276,
      -0.0050614597,
      -0.00042699307,
      -0.00035824155,
      -0.0007221462,
      -0.0029333534,
      -0.00040665813,
      -0.0015179839,
      -0.00023535996,
      -0.00019380587,
      -0.0004346243,
      -0.00592228,
      -0.0014933893,
      -0.0026396941,
      -0.0006395365,
      -0.79498684,
      -1.4347786,
      -0.06754422,
      -0.025812397,
      -0.00042222187,
      -0.0031329768,
      -0.00048060223,
      -0.00275845,
      -0.01627726,
      -0.00027244323,
      -0.000494912,
      -0.0005517445,
      -9.461016e-05,
      -0.00033510666,
      -0.0006588605,
      -0.04599363,
      -0.001748673,
      -0.0001390797,
      -0.00021741669,
      -0.00041399087,
      -0.0002661214,
      -0.00040391632,
      -0.00016411634,
      -0.0020046216,
      -0.00055544183,
      -0.0003294419,
      -0.0002303513,
      -0.00022564115,
      -0.0036029967,
      -0.00096476206,
      -0.002192173,
      -0.00032896505,
      -3.635038,
      -0.8757088,
      -0.3604265,
      -0.5129905,
      -0.074722506,
      -0.012728019,
      -0.047567833,
      -0.0006487193,
      -0.16101955,
      -0.009307249,
      -0.0018644575,
      -0.0026828458,
      -0.0026943788,
      -0.034032255,
      -0.00022987355,
      -0.0016249054,
      -0.0005249685,
      -0.00023178181,
      -0.0003762477,
      -0.0020790987,
      -0.0003557382,
      -0.00036491916,
      -0.04222647,
      -0.0016721308,
      -0.00011762026,
      -0.00011762026,
      -0.000368853,
      -0.00020024595,
      -0.0005425607,
      -3.4762696e-05,
      -0.00017186676,
      -0.00018987012,
      -0.0013048351,
      -0.0037144483,
      -0.00019750134,
      -0.00039592464,
      -6.158372e-05,
      -0.0003119107,
      -0.0003512045,
      -0.0040510893,
      -1.094054,
      -0.00029020815,
      -0.052068014,
      -0.0006539692,
      -0.0036396072,
      -0.013252879,
      -0.00034738888,
      -0.021758996,
      -0.00024155974,
      -0.00037290892,
      -0.0005312913,
      -0.0026632429,
      -0.000444405,
      -0.0014355488,
      -0.015021614,
      -9.925743e-05,
      -0.0014376382,
      -0.00012810968,
      -0.00025062053,
      -0.0014499346,
      -0.0003547845,
      -0.0011734813,
      -0.00010545909,
      -0.00025360263,
      -0.00072268123,
      -0.001602636,
      -0.0015958281,
      -0.0002590881,
      -0.0007884759,
      -0.0003042804,
      -0.00042734694,
      -6.814395e-05,
      -0.00015148021,
      -0.00061895844,
      -0.002353712,
      -0.5273743,
      -0.0001599459,
      -0.00476059,
      -0.00038614578,
      -0.0003090478,
      -0.00025634444,
      -0.00087741966,
      -0.072897226,
      -7.016862e-05,
      -0.0011900119,
      -0.0001758016,
      -0.00022003835,
      -0.00044965209,
      -0.00013824523,
      -0.0006705523,
      -0.0006519426,
      -0.002660732,
      -0.0070992415,
      -0.019567033,
      -0.0003589559,
      -0.0017355977,
      -0.00023178181,
      -0.0009145874,
      -0.010588981,
      -0.00011762026,
      -0.00039342127,
      -0.0008387032,
      -0.006047181,
      -0.0023779694,
      -0.00208991,
      -0.00034655444,
      -0.8383818,
      -1.4311918,
      -0.0030470614,
      -0.08264033,
      -0.06644021,
      -0.08338725,
      -0.0002423942,
      -0.005165702,
      -0.0003850729,
      -0.0029298868,
      -0.008173421,
      -0.00021753216,
      -0.10128298,
      -0.00080690725,
      -0.0032062263,
      -0.00029676838,
      -0.00036575546,
      -0.0060298513,
      -0.00028066957,
      -0.0014075534,
      -0.000102002974,
      -0.00017711478,
      -0.0012911074,
      -0.00026516683,
      -0.0020005608,
      -0.0008936471,
      -0.0012779183,
      -0.0023203157,
      -0.00022254174,
      -0.0006880262,
      -0.00021789165,
      -0.0013128925,
      -0.00031429582,
      -0.0017316572,
      -0.002379523,
      -9.0318645e-05,
      -0.0012653846,
      -0.00033987593,
      -1.6521892e-05,
      -0.0001643557,
      -0.00071403343,
      -0.007764223,
      -6.4446605e-05,
      -0.0007061591,
      -6.6829845e-05,
      -0.00015720223,
      -0.00021598431,
      -0.0003407113,
      -0.00023071081,
      -0.0006224183,
      -0.0017754228,
      -0.03526829,
      -0.0034998113,
      -0.00017556225,
      -0.0043586907,
      -0.0050342595,
      -7.768064e-05,
      -0.00041279974,
      -0.00052437244,
      -0.005791578,
      -0.0023941612,
      -0.0012095865,
      -0.00041589915,
      -2.120177,
      -0.14819214,
      -0.29462126,
      -0.21242231,
      -0.010256274,
      -0.58903307,
      -0.00025038118,
      -0.2182455,
      -0.0005373127,
      -0.0025427062,
      -0.024277046,
      -0.00021348093,
      -0.057017222,
      -0.00031560898,
      -0.0011437045,
      -0.00024787875,
      -5.9201422e-05,
      -0.004736514,
      -8.495144e-05,
      -0.0006285017,
      -0.00012322118,
      -0.00015720223,
      -0.00034154486,
      -0.00013800588,
      -0.00035883667,
      -0.00045024627,
      -0.0009808101,
      -0.0008372717,
      -0.00017818765,
      -0.00024954765,
      -0.00018366938,
      -0.00025765572,
      -0.00040308,
      -0.0012527916,
      -0.007674242,
      -9.949678e-05,
      -0.0003061859,
      -0.0002603966,
      -2.2604345e-05,
      -0.00015791749,
      -0.00043593463,
      -0.0028863663,
      -5.657977e-05,
      -0.000617527,
      -9.305951e-05,
      -0.000114518014,
      -0.00013943638,
      -0.00012954207,
      -0.00013300005,
      -0.00041983582,
      -0.0013157564,
      -0.025472753,
      -0.06708104,
      -0.0002977211,
      -0.0008345872,
      -0.0028546248,
      -9.4729374e-05,
      -0.00016388074,
      -0.0006854027,
      -0.0058660996,
      -0.0017242541,
      -0.0043137926,
      -0.0007259036,
      -0.19526969,
      -0.055292416,
      -0.007598263,
      -0.012852807,
      -0.37468323,
      -0.00013121005,
      -0.0023078287,
      -0.00030582916,
      -0.00011475737,
      -0.00017377506,
      -0.0002139559,
      -0.009495033,
      -6.182308e-05,
      -0.00086721935,
      -8.912656e-05,
      -0.000106773194,
      -0.00019964804,
      -0.00019285125,
      -6.838237e-05,
      -0.00041011896,
      -0.0010525278,
      -0.05504917,
      -0.00011976601,
      -0.00039652258,
      -0.00024429872,
      -0.00017616016,
      -0.00036003065,
      -0.0009548583,
      -0.0051175337,
      -0.005430737,
      -4.1200903e-05,
      -0.00071451114,
      -0.000113566224,
      -0.000102002974,
      -0.00019643032,
      -0.0018458853,
      -0.00019130061,
      -0.00013896049,
      -0.00060679164,
      -0.0014541133,
      -0.00029438327,
      -6.48061e-05,
      -0.00018414622,
      -0.00012500932,
      -0.00065361155,
      -0.0033310899,
      -0.0011882219,
      -0.0011297984,
      -0.0011400053,
      -0.027066715
     ],
     "top_logprobs": [
      {
       " #": -0.015746258
      },
      {
       " 0": -0.004015002
      },
      {
       ":": -0.0024643065
      },
      {
       " walk": -0.4417357
      },
      {
       " to": -0.07014539
      },
      {
       " computer": -0.28801352
      },
      {
       "\n": -0.05319286
      },
      {
       " walk": -0.006188411
      },
      {
       "('": -0.012078544
      },
      {
       "computer": -0.003985318
      },
      {
       "')": -0.0016121276
      },
      {
       "\n": -0.009514528
      },
      {
       " #": -0.0018800428
      },
      {
       " 1": -0.0021437877
      },
      {
       ":": -0.0005272344
      },
      {
       " find": -0.69158673
      },
      {
       " monitor": -0.15613261
      },
      {
       "\n": -0.010776283
      },
      {
       " find": -0.0036612025
      },
      {
       "('": -0.00064895867
      },
      {
       "monitor": -0.016340936
      },
      {
       "')": -0.0005385048
      },
      {
       "\n": -0.0052867364
      },
      {
       " #": -0.0015178656
      },
      {
       " 2": -0.002618659
      },
      {
       ":": -0.0007447508
      },
      {
       " grab": -0.88618344
      },
      {
       " off": -0.2108783
      },
      {
       " monitor": -0.079709634
      },
      {
       "\n": -0.010547538
      },
      {
       " assert": -0.20285141
      },
      {
       "('": -0.00097615726
      },
      {
       "close": -0.008459745
      },
      {
       "'": -0.0011042005
      },
      {
       " to": -0.00017973736
      },
      {
       " '": -0.00083386997
      },
      {
       "monitor": -0.00069244066
      },
      {
       "'": -0.24597067
      },
      {
       " )": -0.00010796247
      },
      {
       "\n": -0.0030357009
      },
      {
       " else": -0.00026373632
      },
      {
       ":": -0.0004029617
      },
      {
       " find": -0.0007591272
      },
      {
       "('": -0.00036360786
      },
      {
       "monitor": -0.0002733969
      },
      {
       "')": -0.00048632707
      },
      {
       "\n": -0.0037271313
      },
      {
       " assert": -0.17758968
      },
      {
       "('": -0.00060882105
      },
      {
       "monitor": -0.001148838
      },
      {
       "'": -0.0008205074
      },
      {
       " is": -0.0007667621
      },
      {
       " '": -0.0011934736
      },
      {
       "switch": -0.023200927
      },
      {
       "on": -0.001007482
      },
      {
       "'": -0.013698367
      },
      {
       " )": -8.912656e-05
      },
      {
       "\n": -0.001436922
      },
      {
       " else": -0.00041279974
      },
      {
       ":": -0.00075334037
      },
      {
       " switch": -0.0016121276
      },
      {
       "on": -0.0050614597
      },
      {
       "('": -0.00042699307
      },
      {
       "monitor": -0.00035824155
      },
      {
       "')": -0.0007221462
      },
      {
       "\n": -0.0029333534
      },
      {
       " switch": -0.00040665813
      },
      {
       "off": -0.0015179839
      },
      {
       "('": -0.00023535996
      },
      {
       "monitor": -0.00019380587
      },
      {
       "')": -0.0004346243
      },
      {
       "\n": -0.00592228
      },
      {
       " #": -0.0014933893
      },
      {
       " 3": -0.0026396941
      },
      {
       ":": -0.0006395365
      },
      {
       " grab": -0.79498684
      },
      {
       " cloth": -1.4347786
      },
      {
       "\n": -0.06754422
      },
      {
       " find": -0.025812397
      },
      {
       "('": -0.00042222187
      },
      {
       "cloth": -0.0031329768
      },
      {
       "')": -0.00048060223
      },
      {
       "\n": -0.00275845
      },
      {
       " assert": -0.01627726
      },
      {
       "('": -0.00027244323
      },
      {
       "close": -0.000494912
      },
      {
       "'": -0.0005517445
      },
      {
       " to": -9.461016e-05
      },
      {
       " '": -0.00033510666
      },
      {
       "cloth": -0.0006588605
      },
      {
       "')": -0.04599363
      },
      {
       "\n": -0.001748673
      },
      {
       " else": -0.0001390797
      },
      {
       ":": -0.00021741669
      },
      {
       " find": -0.00041399087
      },
      {
       "('": -0.0002661214
      },
      {
       "cloth": -0.00040391632
      },
      {
       "')": -0.00016411634
      },
      {
       "\n": -0.0020046216
      },
      {
       " grab": -0.00055544183
      },
      {
       "('": -0.0003294419
      },
      {
       "cloth": -0.0002303513
      },
      {
       "')": -0.00022564115
      },
      {
       "\n": -0.0036029967
      },
      {
       " #": -0.00096476206
      },
      {
       " 4": -0.002192173
      },
      {
       ":": -0.00032896505
      },
      {
       " damp": -1.7103838
      },
      {
       " cleaning": -0.8757088
      },
      {
       " solution": -0.3604265
      },
      {
       " to": -0.5129905
      },
      {
       " cloth": -0.074722506
      },
      {
       "\n": -0.012728019
      },
      {
       " find": -0.047567833
      },
      {
       "('": -0.0006487193
      },
      {
       "clean": -0.16101955
      },
      {
       "ings": -0.009307249
      },
      {
       "olution": -0.0018644575
      },
      {
       "')": -0.0026828458
      },
      {
       "\n": -0.0026943788
      },
      {
       " assert": -0.034032255
      },
      {
       "('": -0.00022987355
      },
      {
       "close": -0.0016249054
      },
      {
       "'": -0.0005249685
      },
      {
       " to": -0.00023178181
      },
      {
       " '": -0.0003762477
      },
      {
       "clean": -0.0020790987
      },
      {
       "ings": -0.0003557382
      },
      {
       "olution": -0.00036491916
      },
      {
       "')": -0.04222647
      },
      {
       "\n": -0.0016721308
      },
      {
       " else": -0.00011762026
      },
      {
       ":": -0.00011762026
      },
      {
       " find": -0.000368853
      },
      {
       "('": -0.00020024595
      },
      {
       "clean": -0.0005425607
      },
      {
       "ings": -3.4762696e-05
      },
      {
       "olution": -0.00017186676
      },
      {
       "')": -0.00018987012
      },
      {
       "\n": -0.0013048351
      },
      {
       " grab": -0.0037144483
      },
      {
       "('": -0.00019750134
      },
      {
       "clean": -0.00039592464
      },
      {
       "ings": -6.158372e-05
      },
      {
       "olution": -0.0003119107
      },
      {
       "')": -0.0003512045
      },
      {
       "\n": -0.0040510893
      },
      {
       " #": -0.7124727
      },
      {
       "('": -0.00029020815
      },
      {
       "cloth": -0.052068014
      },
      {
       "')": -0.0006539692
      },
      {
       "\n": -0.0036396072
      },
      {
       " assert": -0.013252879
      },
      {
       "('": -0.00034738888
      },
      {
       "clean": -0.021758996
      },
      {
       "ings": -0.00024155974
      },
      {
       "olution": -0.00037290892
      },
      {
       "'": -0.0005312913
      },
      {
       " in": -0.0026632429
      },
      {
       " '": -0.000444405
      },
      {
       "hands": -0.0014355488
      },
      {
       "'": -0.015021614
      },
      {
       " )": -9.925743e-05
      },
      {
       "\n": -0.0014376382
      },
      {
       " else": -0.00012810968
      },
      {
       ":": -0.00025062053
      },
      {
       " find": -0.0014499346
      },
      {
       "('": -0.0003547845
      },
      {
       "clean": -0.0011734813
      },
      {
       "ings": -0.00010545909
      },
      {
       "olution": -0.00025360263
      },
      {
       "')": -0.00072268123
      },
      {
       "\n": -0.001602636
      },
      {
       " else": -0.0015958281
      },
      {
       ":": -0.0002590881
      },
      {
       " grab": -0.0007884759
      },
      {
       "('": -0.0003042804
      },
      {
       "clean": -0.00042734694
      },
      {
       "ings": -6.814395e-05
      },
      {
       "olution": -0.00015148021
      },
      {
       "')": -0.00061895844
      },
      {
       "\n": -0.002353712
      },
      {
       " assert": -0.5273743
      },
      {
       "('": -0.0001599459
      },
      {
       "close": -0.00476059
      },
      {
       "'": -0.00038614578
      },
      {
       " to": -0.0003090478
      },
      {
       " '": -0.00025634444
      },
      {
       "cloth": -0.00087741966
      },
      {
       "'": -0.072897226
      },
      {
       " )": -7.016862e-05
      },
      {
       "\n": -0.0011900119
      },
      {
       " else": -0.0001758016
      },
      {
       ":": -0.00022003835
      },
      {
       " find": -0.00044965209
      },
      {
       "('": -0.00013824523
      },
      {
       "cloth": -0.0006705523
      },
      {
       "')": -0.0006519426
      },
      {
       "\n": -0.002660732
      },
      {
       " put": -0.0070992415
      },
      {
       "in": -0.019567033
      },
      {
       "('": -0.0003589559
      },
      {
       "clean": -0.0017355977
      },
      {
       "ings": -0.00023178181
      },
      {
       "olution": -0.0009145874
      },
      {
       "',": -0.010588981
      },
      {
       " '": -0.00011762026
      },
      {
       "cloth": -0.00039342127
      },
      {
       "')": -0.0008387032
      },
      {
       "\n": -0.006047181
      },
      {
       " #": -0.0023779694
      },
      {
       " 5": -0.00208991
      },
      {
       ":": -0.00034655444
      },
      {
       " start": -0.8383818
      },
      {
       " wiping": -0.6686757
      },
      {
       "bing": -0.0030470614
      },
      {
       " monitor": -0.08264033
      },
      {
       "\n": -0.06644021
      },
      {
       " find": -0.08338725
      },
      {
       "('": -0.0002423942
      },
      {
       "monitor": -0.005165702
      },
      {
       "')": -0.0003850729
      },
      {
       "\n": -0.0029298868
      },
      {
       " assert": -0.008173421
      },
      {
       "('": -0.00021753216
      },
      {
       "cloth": -0.10128298
      },
      {
       "'": -0.00080690725
      },
      {
       " in": -0.0032062263
      },
      {
       " '": -0.00029676838
      },
      {
       "hands": -0.00036575546
      },
      {
       "'": -0.0060298513
      },
      {
       " )": -0.00028066957
      },
      {
       "\n": -0.0014075534
      },
      {
       " else": -0.000102002974
      },
      {
       ":": -0.00017711478
      },
      {
       " find": -0.0012911074
      },
      {
       "('": -0.00026516683
      },
      {
       "cloth": -0.0020005608
      },
      {
       "')": -0.0008936471
      },
      {
       "\n": -0.0012779183
      },
      {
       " else": -0.0023203157
      },
      {
       ":": -0.00022254174
      },
      {
       " grab": -0.0006880262
      },
      {
       "('": -0.00021789165
      },
      {
       "cloth": -0.0013128925
      },
      {
       "')": -0.00031429582
      },
      {
       "\n": -0.0017316572
      },
      {
       " assert": -0.002379523
      },
      {
       "('": -9.0318645e-05
      },
      {
       "close": -0.0012653846
      },
      {
       "'": -0.00033987593
      },
      {
       " to": -1.6521892e-05
      },
      {
       " '": -0.0001643557
      },
      {
       "monitor": -0.00071403343
      },
      {
       "'": -0.007764223
      },
      {
       " )": -6.4446605e-05
      },
      {
       "\n": -0.0007061591
      },
      {
       " else": -6.6829845e-05
      },
      {
       ":": -0.00015720223
      },
      {
       " find": -0.00021598431
      },
      {
       "('": -0.0003407113
      },
      {
       "monitor": -0.00023071081
      },
      {
       "')": -0.0006224183
      },
      {
       "\n": -0.0017754228
      },
      {
       " put": -0.03526829
      },
      {
       "in": -0.0034998113
      },
      {
       "('": -0.00017556225
      },
      {
       "cloth": -0.0043586907
      },
      {
       "',": -0.0050342595
      },
      {
       " '": -7.768064e-05
      },
      {
       "monitor": -0.00041279974
      },
      {
       "')": -0.00052437244
      },
      {
       "\n": -0.005791578
      },
      {
       " #": -0.0023941612
      },
      {
       " 6": -0.0012095865
      },
      {
       ":": -0.00041589915
      },
      {
       " rinse": -0.781695
      },
      {
       " monitor": -0.14819214
      },
      {
       " with": -0.29462126
      },
      {
       " cloth": -0.21242231
      },
      {
       "\n": -0.010256274
      },
      {
       " find": -0.58903307
      },
      {
       "('": -0.00025038118
      },
      {
       "monitor": -0.2182455
      },
      {
       "')": -0.0005373127
      },
      {
       "\n": -0.0025427062
      },
      {
       " assert": -0.024277046
      },
      {
       "('": -0.00021348093
      },
      {
       "cloth": -0.057017222
      },
      {
       "'": -0.00031560898
      },
      {
       " in": -0.0011437045
      },
      {
       " '": -0.00024787875
      },
      {
       "hands": -5.9201422e-05
      },
      {
       "'": -0.004736514
      },
      {
       " )": -8.495144e-05
      },
      {
       "\n": -0.0006285017
      },
      {
       " else": -0.00012322118
      },
      {
       ":": -0.00015720223
      },
      {
       " find": -0.00034154486
      },
      {
       "('": -0.00013800588
      },
      {
       "cloth": -0.00035883667
      },
      {
       "')": -0.00045024627
      },
      {
       "\n": -0.0009808101
      },
      {
       " else": -0.0008372717
      },
      {
       ":": -0.00017818765
      },
      {
       " grab": -0.00024954765
      },
      {
       "('": -0.00018366938
      },
      {
       "cloth": -0.00025765572
      },
      {
       "')": -0.00040308
      },
      {
       "\n": -0.0012527916
      },
      {
       " assert": -0.007674242
      },
      {
       "('": -9.949678e-05
      },
      {
       "close": -0.0003061859
      },
      {
       "'": -0.0002603966
      },
      {
       " to": -2.2604345e-05
      },
      {
       " '": -0.00015791749
      },
      {
       "monitor": -0.00043593463
      },
      {
       "'": -0.0028863663
      },
      {
       " )": -5.657977e-05
      },
      {
       "\n": -0.000617527
      },
      {
       " else": -9.305951e-05
      },
      {
       ":": -0.000114518014
      },
      {
       " find": -0.00013943638
      },
      {
       "('": -0.00012954207
      },
      {
       "monitor": -0.00013300005
      },
      {
       "')": -0.00041983582
      },
      {
       "\n": -0.0013157564
      },
      {
       " put": -0.025472753
      },
      {
       "in": -0.06708104
      },
      {
       "('": -0.0002977211
      },
      {
       "cloth": -0.0008345872
      },
      {
       "',": -0.0028546248
      },
      {
       " '": -9.4729374e-05
      },
      {
       "monitor": -0.00016388074
      },
      {
       "')": -0.0006854027
      },
      {
       "\n": -0.0058660996
      },
      {
       " #": -0.0017242541
      },
      {
       " 7": -0.0043137926
      },
      {
       ":": -0.0007259036
      },
      {
       " turn": -0.19526969
      },
      {
       " on": -0.055292416
      },
      {
       " monitor": -0.007598263
      },
      {
       "\n": -0.012852807
      },
      {
       " assert": -0.37468323
      },
      {
       "('": -0.00013121005
      },
      {
       "close": -0.0023078287
      },
      {
       "'": -0.00030582916
      },
      {
       " to": -0.00011475737
      },
      {
       " '": -0.00017377506
      },
      {
       "monitor": -0.0002139559
      },
      {
       "'": -0.009495033
      },
      {
       " )": -6.182308e-05
      },
      {
       "\n": -0.00086721935
      },
      {
       " else": -8.912656e-05
      },
      {
       ":": -0.000106773194
      },
      {
       " find": -0.00019964804
      },
      {
       "('": -0.00019285125
      },
      {
       "monitor": -6.838237e-05
      },
      {
       "')": -0.00041011896
      },
      {
       "\n": -0.0010525278
      },
      {
       " assert": -0.05504917
      },
      {
       "('": -0.00011976601
      },
      {
       "monitor": -0.00039652258
      },
      {
       "'": -0.00024429872
      },
      {
       " is": -0.00017616016
      },
      {
       " '": -0.00036003065
      },
      {
       "switch": -0.0009548583
      },
      {
       "off": -0.0051175337
      },
      {
       "'": -0.005430737
      },
      {
       " )": -4.1200903e-05
      },
      {
       "\n": -0.00071451114
      },
      {
       " else": -0.000113566224
      },
      {
       ":": -0.000102002974
      },
      {
       " switch": -0.00019643032
      },
      {
       "off": -0.0018458853
      },
      {
       "('": -0.00019130061
      },
      {
       "monitor": -0.00013896049
      },
      {
       "')": -0.00060679164
      },
      {
       "\n": -0.0014541133
      },
      {
       " switch": -0.00029438327
      },
      {
       "on": -6.48061e-05
      },
      {
       "('": -0.00018414622
      },
      {
       "monitor": -0.00012500932
      },
      {
       "')": -0.00065361155
      },
      {
       "\n": -0.0033310899
      },
      {
       " #": -0.0011882219
      },
      {
       " 8": -0.0011297984
      },
      {
       ":": -0.0011400053
      },
      {
       " Done": -0.027066715
      }
     ],
     "text_offset": [
      4715,
      4717,
      4719,
      4720,
      4725,
      4728,
      4737,
      4738,
      4743,
      4745,
      4753,
      4755,
      4756,
      4758,
      4760,
      4761,
      4766,
      4774,
      4775,
      4780,
      4782,
      4789,
      4791,
      4792,
      4794,
      4796,
      4797,
      4802,
      4806,
      4814,
      4815,
      4822,
      4824,
      4829,
      4830,
      4833,
      4835,
      4842,
      4843,
      4845,
      4846,
      4851,
      4852,
      4857,
      4859,
      4866,
      4868,
      4869,
      4876,
      4878,
      4885,
      4886,
      4889,
      4891,
      4897,
      4899,
      4900,
      4902,
      4903,
      4908,
      4909,
      4916,
      4918,
      4920,
      4927,
      4929,
      4930,
      4937,
      4940,
      4942,
      4949,
      4951,
      4952,
      4954,
      4956,
      4957,
      4962,
      4968,
      4969,
      4974,
      4976,
      4981,
      4983,
      4984,
      4991,
      4993,
      4998,
      4999,
      5002,
      5004,
      5009,
      5011,
      5012,
      5017,
      5018,
      5023,
      5025,
      5030,
      5032,
      5033,
      5038,
      5040,
      5045,
      5047,
      5048,
      5050,
      5052,
      5053,
      5059,
      5068,
      5077,
      5080,
      5086,
      5087,
      5092,
      5094,
      5099,
      5103,
      5110,
      5112,
      5113,
      5120,
      5122,
      5127,
      5128,
      5131,
      5133,
      5138,
      5142,
      5149,
      5151,
      5152,
      5157,
      5158,
      5163,
      5165,
      5170,
      5174,
      5181,
      5183,
      5184,
      5189,
      5191,
      5196,
      5200,
      5207,
      5209,
      5210,
      5215,
      5217,
      5222,
      5224,
      5225,
      5232,
      5234,
      5239,
      5243,
      5250,
      5251,
      5254,
      5256,
      5261,
      5262,
      5264,
      5265,
      5270,
      5271,
      5276,
      5278,
      5283,
      5287,
      5294,
      5296,
      5297,
      5302,
      5303,
      5308,
      5310,
      5315,
      5319,
      5326,
      5328,
      5329,
      5336,
      5338,
      5343,
      5344,
      5347,
      5349,
      5354,
      5355,
      5357,
      5358,
      5363,
      5364,
      5369,
      5371,
      5376,
      5378,
      5379,
      5383,
      5385,
      5387,
      5392,
      5396,
      5403,
      5405,
      5407,
      5412,
      5414,
      5415,
      5417,
      5419,
      5420,
      5426,
      5432,
      5436,
      5444,
      5445,
      5450,
      5452,
      5459,
      5461,
      5462,
      5469,
      5471,
      5476,
      5477,
      5480,
      5482,
      5487,
      5488,
      5490,
      5491,
      5496,
      5497,
      5502,
      5504,
      5509,
      5511,
      5512,
      5517,
      5518,
      5523,
      5525,
      5530,
      5532,
      5533,
      5540,
      5542,
      5547,
      5548,
      5551,
      5553,
      5560,
      5561,
      5563,
      5564,
      5569,
      5570,
      5575,
      5577,
      5584,
      5586,
      5587,
      5591,
      5593,
      5595,
      5600,
      5602,
      5604,
      5611,
      5613,
      5614,
      5616,
      5618,
      5619,
      5623,
      5631,
      5636,
      5642,
      5643,
      5648,
      5650,
      5657,
      5659,
      5660,
      5667,
      5669,
      5674,
      5675,
      5678,
      5680,
      5685,
      5686,
      5688,
      5689,
      5694,
      5695,
      5700,
      5702,
      5707,
      5709,
      5710,
      5715,
      5716,
      5721,
      5723,
      5728,
      5730,
      5731,
      5738,
      5740,
      5745,
      5746,
      5749,
      5751,
      5758,
      5759,
      5761,
      5762,
      5767,
      5768,
      5773,
      5775,
      5782,
      5784,
      5785,
      5789,
      5791,
      5793,
      5798,
      5800,
      5802,
      5809,
      5811,
      5812,
      5814,
      5816,
      5817,
      5822,
      5825,
      5833,
      5834,
      5841,
      5843,
      5848,
      5849,
      5852,
      5854,
      5861,
      5862,
      5864,
      5865,
      5870,
      5871,
      5876,
      5878,
      5885,
      5887,
      5888,
      5895,
      5897,
      5904,
      5905,
      5908,
      5910,
      5916,
      5919,
      5920,
      5922,
      5923,
      5928,
      5929,
      5936,
      5939,
      5941,
      5948,
      5950,
      5951,
      5958,
      5960,
      5962,
      5969,
      5971,
      5972,
      5974,
      5976,
      5977
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Wash monitor",
   "task_description": "Clean the grime off of my monitor screen when not in use",
   "program": [
    "[Walk] <home_office> (1)",
    "[Walk] <computer> (1)",
    "[Find] <computer> (1)",
    "[TurnTo] <computer> (1)",
    "[LookAt] <computer> (1)",
    "[SwitchOff] <computer> (1)",
    "[Find] <brush> (1)",
    "[TurnTo] <brush> (1)",
    "[LookAt] <brush> (1)",
    "[Grab] <brush> (1)",
    "[Wipe] <computer> (1)",
    "[Drop] <brush> (1)",
    "[Find] <napkin> (1)",
    "[Grab] <napkin> (1)",
    "[Wash] <napkin> (1)",
    "[Wipe] <computer> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_turk_robot",
   "file_id": "split16_2",
   "goal_condition": [
    [
     [
      240,
      241,
      "INSIDE",
      "character",
      "home_office"
     ],
     [
      240,
      1001,
      "HOLDS_RH",
      "character",
      "napkin"
     ]
    ],
    [
     [
      276,
      "computer",
      "OFF"
     ]
    ]
   ]
  }
 },
 "2": {
  "plan": [
   [
    " # 0: find tv\n find('television')\n # 1: grab remote\n find('controller')\n assert('close' to 'controller')\n else: find('controller')\n grab('controller')\n # 2: point remote at tv\n find('television')\n assert('controller' in 'hands' )\n else: find('controller')\n else: grab('controller')\n assert('close' to 'television' )\n else: find('television')\n pointat('controller', 'television')\n # 3: press power button\n switchon('television')\n # 4: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " tv",
      "\n",
      " find",
      "('",
      "te",
      "levision",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " grab",
      " remote",
      "\n",
      " find",
      "('",
      "controller",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "controller",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "controller",
      "')",
      "\n",
      " grab",
      "('",
      "controller",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " point",
      " remote",
      " at",
      " tv",
      "\n",
      " find",
      "('",
      "te",
      "levision",
      "')",
      "\n",
      " assert",
      "('",
      "controller",
      "'",
      " in",
      " '",
      "hands",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "controller",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "controller",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "te",
      "levision",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "te",
      "levision",
      "')",
      "\n",
      " point",
      "at",
      "('",
      "controller",
      "',",
      " '",
      "te",
      "levision",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " press",
      " power",
      " button",
      "\n",
      " switch",
      "on",
      "('",
      "te",
      "levision",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.013384378,
      -0.005459502,
      -0.0024683687,
      -0.68644375,
      -0.8080265,
      -0.056654267,
      -0.0042181374,
      -0.0013532366,
      -0.5487885,
      -0.0004988487,
      -0.0007041307,
      -0.0098909885,
      -0.0012100624,
      -0.0019553453,
      -0.00046467895,
      -1.5951347,
      -0.25938147,
      -0.16732359,
      -0.2903824,
      -0.00057154533,
      -0.52546847,
      -0.00052091165,
      -0.006089098,
      -0.111271806,
      -0.00037887125,
      -0.0023203157,
      -0.0006744853,
      -0.00022743117,
      -0.000712005,
      -0.0019155162,
      -0.03787255,
      -0.003997648,
      -0.00024883242,
      -0.0003282479,
      -0.0008470562,
      -0.000411847,
      -0.0006589797,
      -0.00036873287,
      -0.002615551,
      -0.0008917378,
      -0.00040641878,
      -0.00042889945,
      -0.00020286761,
      -0.006347117,
      -0.0013467318,
      -0.0033493899,
      -0.00043963388,
      -1.232205,
      -0.28141892,
      -0.13742526,
      -0.09266509,
      -0.02635573,
      -0.62730044,
      -0.00054327596,
      -0.0021873354,
      -0.00081907597,
      -0.00041399087,
      -0.004856237,
      -0.0066257217,
      -0.00037302624,
      -0.095198,
      -0.0005331404,
      -0.0034149396,
      -0.00068194285,
      -0.002203403,
      -0.019621374,
      -0.000113686365,
      -0.002322943,
      -0.00023595692,
      -0.0002818626,
      -0.0013309766,
      -0.0003165636,
      -0.0011051551,
      -0.0007821523,
      -0.0016086057,
      -0.00163977,
      -0.00025467362,
      -0.000657308,
      -0.00042723241,
      -0.00044917525,
      -0.00018939328,
      -0.0023308885,
      -0.042026903,
      -0.00022915828,
      -0.0008825494,
      -0.0004984892,
      -0.00013323847,
      -0.00028472362,
      -0.0025626656,
      -0.001032957,
      -0.037699103,
      -8.51908e-05,
      -0.0013376616,
      -0.00020406157,
      -0.0002555109,
      -0.0005998747,
      -0.0002861541,
      -0.00025670204,
      -0.00021204854,
      -0.0005086275,
      -0.003178662,
      -0.0060164775,
      -0.0016396517,
      -0.0004746981,
      -0.06266227,
      -0.0713691,
      -0.0004003382,
      -0.0016829966,
      -0.0007325849,
      -0.0024627529,
      -0.008933052,
      -0.0016075302,
      -0.0024263663,
      -0.00071462855,
      -0.4170238,
      -0.20780586,
      -0.0530261,
      -0.25485942,
      -0.6619886,
      -0.0011052743,
      -0.0007038932,
      -0.062055845,
      -0.0002915213,
      -0.001437518,
      -0.00722921,
      -0.0012523138,
      -0.0026729843,
      -0.0012798286,
      -0.040619332
     ],
     "top_logprobs": [
      {
       " #": -0.013384378
      },
      {
       " 0": -0.005459502
      },
      {
       ":": -0.0024683687
      },
      {
       " find": -0.68644375
      },
      {
       " tv": -0.8080265
      },
      {
       "\n": -0.056654267
      },
      {
       " find": -0.0042181374
      },
      {
       "('": -0.0013532366
      },
      {
       "te": -0.5487885
      },
      {
       "levision": -0.0004988487
      },
      {
       "')": -0.0007041307
      },
      {
       "\n": -0.0098909885
      },
      {
       " #": -0.0012100624
      },
      {
       " 1": -0.0019553453
      },
      {
       ":": -0.00046467895
      },
      {
       " find": -0.77281666
      },
      {
       " remote": -0.25938147
      },
      {
       "\n": -0.16732359
      },
      {
       " find": -0.2903824
      },
      {
       "('": -0.00057154533
      },
      {
       "controller": -0.52546847
      },
      {
       "')": -0.00052091165
      },
      {
       "\n": -0.006089098
      },
      {
       " assert": -0.111271806
      },
      {
       "('": -0.00037887125
      },
      {
       "close": -0.0023203157
      },
      {
       "'": -0.0006744853
      },
      {
       " to": -0.00022743117
      },
      {
       " '": -0.000712005
      },
      {
       "controller": -0.0019155162
      },
      {
       "')": -0.03787255
      },
      {
       "\n": -0.003997648
      },
      {
       " else": -0.00024883242
      },
      {
       ":": -0.0003282479
      },
      {
       " find": -0.0008470562
      },
      {
       "('": -0.000411847
      },
      {
       "controller": -0.0006589797
      },
      {
       "')": -0.00036873287
      },
      {
       "\n": -0.002615551
      },
      {
       " grab": -0.0008917378
      },
      {
       "('": -0.00040641878
      },
      {
       "controller": -0.00042889945
      },
      {
       "')": -0.00020286761
      },
      {
       "\n": -0.006347117
      },
      {
       " #": -0.0013467318
      },
      {
       " 2": -0.0033493899
      },
      {
       ":": -0.00043963388
      },
      {
       " point": -1.232205
      },
      {
       " remote": -0.28141892
      },
      {
       " at": -0.13742526
      },
      {
       " tv": -0.09266509
      },
      {
       "\n": -0.02635573
      },
      {
       " find": -0.62730044
      },
      {
       "('": -0.00054327596
      },
      {
       "te": -0.0021873354
      },
      {
       "levision": -0.00081907597
      },
      {
       "')": -0.00041399087
      },
      {
       "\n": -0.004856237
      },
      {
       " assert": -0.0066257217
      },
      {
       "('": -0.00037302624
      },
      {
       "controller": -0.095198
      },
      {
       "'": -0.0005331404
      },
      {
       " in": -0.0034149396
      },
      {
       " '": -0.00068194285
      },
      {
       "hands": -0.002203403
      },
      {
       "'": -0.019621374
      },
      {
       " )": -0.000113686365
      },
      {
       "\n": -0.002322943
      },
      {
       " else": -0.00023595692
      },
      {
       ":": -0.0002818626
      },
      {
       " find": -0.0013309766
      },
      {
       "('": -0.0003165636
      },
      {
       "controller": -0.0011051551
      },
      {
       "')": -0.0007821523
      },
      {
       "\n": -0.0016086057
      },
      {
       " else": -0.00163977
      },
      {
       ":": -0.00025467362
      },
      {
       " grab": -0.000657308
      },
      {
       "('": -0.00042723241
      },
      {
       "controller": -0.00044917525
      },
      {
       "')": -0.00018939328
      },
      {
       "\n": -0.0023308885
      },
      {
       " assert": -0.042026903
      },
      {
       "('": -0.00022915828
      },
      {
       "close": -0.0008825494
      },
      {
       "'": -0.0004984892
      },
      {
       " to": -0.00013323847
      },
      {
       " '": -0.00028472362
      },
      {
       "te": -0.0025626656
      },
      {
       "levision": -0.001032957
      },
      {
       "'": -0.037699103
      },
      {
       " )": -8.51908e-05
      },
      {
       "\n": -0.0013376616
      },
      {
       " else": -0.00020406157
      },
      {
       ":": -0.0002555109
      },
      {
       " find": -0.0005998747
      },
      {
       "('": -0.0002861541
      },
      {
       "te": -0.00025670204
      },
      {
       "levision": -0.00021204854
      },
      {
       "')": -0.0005086275
      },
      {
       "\n": -0.003178662
      },
      {
       " point": -0.0060164775
      },
      {
       "at": -0.0016396517
      },
      {
       "('": -0.0004746981
      },
      {
       "controller": -0.06266227
      },
      {
       "',": -0.0713691
      },
      {
       " '": -0.0004003382
      },
      {
       "te": -0.0016829966
      },
      {
       "levision": -0.0007325849
      },
      {
       "')": -0.0024627529
      },
      {
       "\n": -0.008933052
      },
      {
       " #": -0.0016075302
      },
      {
       " 3": -0.0024263663
      },
      {
       ":": -0.00071462855
      },
      {
       " press": -0.4170238
      },
      {
       " power": -0.20780586
      },
      {
       " button": -0.0530261
      },
      {
       "\n": -0.25485942
      },
      {
       " switch": -0.6619886
      },
      {
       "on": -0.0011052743
      },
      {
       "('": -0.0007038932
      },
      {
       "te": -0.062055845
      },
      {
       "levision": -0.0002915213
      },
      {
       "')": -0.001437518
      },
      {
       "\n": -0.00722921
      },
      {
       " #": -0.0012523138
      },
      {
       " 4": -0.0026729843
      },
      {
       ":": -0.0012798286
      },
      {
       " Done": -0.040619332
      }
     ],
     "text_offset": [
      4713,
      4715,
      4717,
      4718,
      4723,
      4726,
      4727,
      4732,
      4734,
      4736,
      4744,
      4746,
      4747,
      4749,
      4751,
      4752,
      4757,
      4764,
      4765,
      4770,
      4772,
      4782,
      4784,
      4785,
      4792,
      4794,
      4799,
      4800,
      4803,
      4805,
      4815,
      4817,
      4818,
      4823,
      4824,
      4829,
      4831,
      4841,
      4843,
      4844,
      4849,
      4851,
      4861,
      4863,
      4864,
      4866,
      4868,
      4869,
      4875,
      4882,
      4885,
      4888,
      4889,
      4894,
      4896,
      4898,
      4906,
      4908,
      4909,
      4916,
      4918,
      4928,
      4929,
      4932,
      4934,
      4939,
      4940,
      4942,
      4943,
      4948,
      4949,
      4954,
      4956,
      4966,
      4968,
      4969,
      4974,
      4975,
      4980,
      4982,
      4992,
      4994,
      4995,
      5002,
      5004,
      5009,
      5010,
      5013,
      5015,
      5017,
      5025,
      5026,
      5028,
      5029,
      5034,
      5035,
      5040,
      5042,
      5044,
      5052,
      5054,
      5055,
      5061,
      5063,
      5065,
      5075,
      5077,
      5079,
      5081,
      5089,
      5091,
      5092,
      5094,
      5096,
      5097,
      5103,
      5109,
      5116,
      5117,
      5124,
      5126,
      5128,
      5130,
      5138,
      5140,
      5141,
      5143,
      5145,
      5146
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Turn on TV",
   "task_description": "Sit in a chair.  Grab the remote control.  Point the remote at the television.  Press the power button.",
   "program": [
    "[Walk] <home_office> (1)",
    "[Walk] <chair> (1)",
    "[Find] <chair> (1)",
    "[Sit] <chair> (1)",
    "[Find] <remote_control> (1)",
    "[Grab] <remote_control> (1)",
    "[Find] <television> (1)",
    "[TurnTo] <television> (1)",
    "[PointAt] <television> (1)",
    "[SwitchOn] <television> (1)",
    "[PutObjBack] <remote_control> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_kellensecond",
   "file_id": "split5_9",
   "goal_condition": [
    [
     [
      240,
      241,
      "INSIDE",
      "character",
      "home_office"
     ],
     [
      240,
      281,
      "FACING",
      "character",
      "television"
     ],
     [
      240,
      271,
      "ON",
      "character",
      "chair"
     ]
    ],
    [
     [
      240,
      "character",
      "SITTING"
     ],
     [
      281,
      "television",
      "ON"
     ]
    ]
   ]
  }
 },
 "3": {
  "plan": [
   [
    " # 0: walk to computer\n walk('computer')\n # 1: find computer\n find('computer')\n # 2: switch on computer\n assert('close' to 'computer')\n else: find('computer')\n switchon('computer')\n # 3: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " computer",
      "\n",
      " walk",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " computer",
      "\n",
      " find",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " switch",
      " on",
      " computer",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "computer",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "computer",
      "')",
      "\n",
      " switch",
      "on",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.015972698,
      -0.005751712,
      -0.0031673615,
      -0.43492454,
      -0.063857935,
      -0.3450202,
      -0.024282908,
      -0.0051973383,
      -0.015164541,
      -0.0036416412,
      -0.00084013457,
      -0.008543906,
      -0.0011331419,
      -0.0020180582,
      -0.00047123732,
      -0.15437359,
      -0.59224594,
      -0.023241678,
      -0.005427621,
      -0.00077380013,
      -0.0006799144,
      -0.00044404552,
      -0.006112187,
      -0.00077702344,
      -0.0018602777,
      -0.0004423766,
      -0.67376655,
      -0.11684009,
      -0.025267523,
      -0.011338279,
      -0.1597772,
      -0.0006285017,
      -0.01300388,
      -0.0011538494,
      -0.00017127168,
      -0.0007480895,
      -0.0003774407,
      -0.7437789,
      -0.010621269,
      -0.0004320008,
      -0.0006281441,
      -0.0014194321,
      -0.00080595264,
      -0.00015779921,
      -0.001014641,
      -0.006206044,
      -0.13188396,
      -0.00031584647,
      -0.00047481735,
      -0.0001866524,
      -0.0009704297,
      -0.0068035806,
      -0.0010873751,
      -0.0038804815,
      -0.0014114921,
      -0.02351148
     ],
     "top_logprobs": [
      {
       " #": -0.015972698
      },
      {
       " 0": -0.005751712
      },
      {
       ":": -0.0031673615
      },
      {
       " walk": -0.43492454
      },
      {
       " to": -0.063857935
      },
      {
       " computer": -0.3450202
      },
      {
       "\n": -0.024282908
      },
      {
       " walk": -0.0051973383
      },
      {
       "('": -0.015164541
      },
      {
       "computer": -0.0036416412
      },
      {
       "')": -0.00084013457
      },
      {
       "\n": -0.008543906
      },
      {
       " #": -0.0011331419
      },
      {
       " 1": -0.0020180582
      },
      {
       ":": -0.00047123732
      },
      {
       " find": -0.15437359
      },
      {
       " computer": -0.59224594
      },
      {
       "\n": -0.023241678
      },
      {
       " find": -0.005427621
      },
      {
       "('": -0.00077380013
      },
      {
       "computer": -0.0006799144
      },
      {
       "')": -0.00044404552
      },
      {
       "\n": -0.006112187
      },
      {
       " #": -0.00077702344
      },
      {
       " 2": -0.0018602777
      },
      {
       ":": -0.0004423766
      },
      {
       " switch": -0.67376655
      },
      {
       " on": -0.11684009
      },
      {
       " computer": -0.025267523
      },
      {
       "\n": -0.011338279
      },
      {
       " assert": -0.1597772
      },
      {
       "('": -0.0006285017
      },
      {
       "close": -0.01300388
      },
      {
       "'": -0.0011538494
      },
      {
       " to": -0.00017127168
      },
      {
       " '": -0.0007480895
      },
      {
       "computer": -0.0003774407
      },
      {
       "'": -0.64566857
      },
      {
       "\n": -0.010621269
      },
      {
       " else": -0.0004320008
      },
      {
       ":": -0.0006281441
      },
      {
       " find": -0.0014194321
      },
      {
       "('": -0.00080595264
      },
      {
       "computer": -0.00015779921
      },
      {
       "')": -0.001014641
      },
      {
       "\n": -0.006206044
      },
      {
       " switch": -0.13188396
      },
      {
       "on": -0.00031584647
      },
      {
       "('": -0.00047481735
      },
      {
       "computer": -0.0001866524
      },
      {
       "')": -0.0009704297
      },
      {
       "\n": -0.0068035806
      },
      {
       " #": -0.0010873751
      },
      {
       " 3": -0.0038804815
      },
      {
       ":": -0.0014114921
      },
      {
       " Done": -0.02351148
      }
     ],
     "text_offset": [
      4719,
      4721,
      4723,
      4724,
      4729,
      4732,
      4741,
      4742,
      4747,
      4749,
      4757,
      4759,
      4760,
      4762,
      4764,
      4765,
      4770,
      4779,
      4780,
      4785,
      4787,
      4795,
      4797,
      4798,
      4800,
      4802,
      4803,
      4810,
      4813,
      4822,
      4823,
      4830,
      4832,
      4837,
      4838,
      4841,
      4843,
      4851,
      4853,
      4854,
      4859,
      4860,
      4865,
      4867,
      4875,
      4877,
      4878,
      4885,
      4887,
      4889,
      4897,
      4899,
      4900,
      4902,
      4904,
      4905
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Turn on computer",
   "task_description": "Push power button.",
   "program": [
    "[Walk] <home_office> (1)",
    "[Walk] <computer> (1)",
    "[SwitchOn] <computer> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_turk_third",
   "file_id": "split56_4",
   "goal_condition": [
    [
     [
      240,
      241,
      "INSIDE",
      "character",
      "home_office"
     ]
    ],
    [
     [
      276,
      "computer",
      "ON"
     ]
    ]
   ]
  }
 },
 "4": {
  "plan": [
   [
    " # 0: find electric shaver\n find('electricshaver')\n # 1: grab electric shaver\n assert('close' to 'electricshaver')\n else: find('electricshaver')\n grab('electricshaver')\n # 2: turn on electric shaver\n assert('close' to 'electricshaver' )\n else: find('electricshaver')\n assert('electricshaver' is 'switchoff' )\n else: switchoff('electricshaver')\n switchon('electricshaver')\n # 3: start shaving\n # 4: rinse off electric shaver\n # 5: put electric shaver back\n # 6: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " electric",
      " sh",
      "aver",
      "\n",
      " find",
      "('",
      "elect",
      "rics",
      "ha",
      "ver",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " grab",
      " electric",
      " sh",
      "aver",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "elect",
      "rics",
      "ha",
      "ver",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "elect",
      "rics",
      "ha",
      "ver",
      "')",
      "\n",
      " grab",
      "('",
      "elect",
      "rics",
      "ha",
      "ver",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " turn",
      " on",
      " electric",
      " sh",
      "aver",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "elect",
      "rics",
      "ha",
      "ver",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "elect",
      "rics",
      "ha",
      "ver",
      "')",
      "\n",
      " assert",
      "('",
      "elect",
      "rics",
      "ha",
      "ver",
      "'",
      " is",
      " '",
      "switch",
      "off",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " switch",
      "off",
      "('",
      "elect",
      "rics",
      "ha",
      "ver",
      "')",
      "\n",
      " switch",
      "on",
      "('",
      "elect",
      "rics",
      "ha",
      "ver",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " start",
      " shaving",
      "\n",
      " #",
      " 4",
      ":",
      " rinse",
      " off",
      " electric",
      " sh",
      "aver",
      "\n",
      " #",
      " 5",
      ":",
      " put",
      " electric",
      " sh",
      "aver",
      " back",
      "\n",
      " #",
      " 6",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.017150149,
      -0.0059170607,
      -0.0022867392,
      -0.913058,
      -0.122743085,
      -0.09652591,
      -0.0009905946,
      -0.026448812,
      -0.0078080134,
      -0.002056941,
      -0.068506464,
      -8.900641e-05,
      -0.00035514025,
      -2.6773841e-05,
      -0.0008982999,
      -0.0068059205,
      -0.0023519201,
      -0.0021050232,
      -0.00039699755,
      -0.31727007,
      -0.009541549,
      -0.0012137054,
      -0.0012344711,
      -0.00921382,
      -0.0122657055,
      -0.0005186486,
      -0.0005082699,
      -0.0007558447,
      -0.0013158765,
      -0.0005481682,
      -0.0019116942,
      -0.00020274745,
      -0.00013359329,
      -3.249586e-05,
      -0.0236328,
      -0.004589378,
      -0.00026087437,
      -0.0003140574,
      -0.0006975704,
      -0.00038900867,
      -0.0008300526,
      -0.00017007865,
      -0.00034953654,
      -3.8103353e-05,
      -0.00060452666,
      -0.0023641675,
      -0.0004885883,
      -0.00031298358,
      -0.00060226076,
      -5.956092e-05,
      -0.0003917514,
      -4.2870764e-05,
      -0.0005337355,
      -0.0040310407,
      -0.00076891074,
      -0.002087401,
      -0.00035716867,
      -1.7685416,
      -0.11221592,
      -0.03652688,
      -0.0010490679,
      -0.0005148311,
      -0.0070935986,
      -0.19303396,
      -0.00059641484,
      -0.21688688,
      -0.00059748866,
      -0.00015446138,
      -0.00059069006,
      -0.0038989717,
      -0.000118333635,
      -0.00022880347,
      -3.2735214e-05,
      -0.056109257,
      -0.000113448885,
      -0.0018593222,
      -0.00053993624,
      -0.0002058497,
      -0.0005940307,
      -0.00020823294,
      -0.000585442,
      -8.876706e-05,
      -0.0002116928,
      -7.8752586e-05,
      -0.0011187008,
      -0.0019195178,
      -0.10657859,
      -0.00021503064,
      -0.006669764,
      -0.00020131696,
      -0.00026111372,
      -1.1159372e-05,
      -0.00067472464,
      -0.0004084472,
      -0.0008066679,
      -0.028340148,
      -0.0013492389,
      -0.005826049,
      -5.109523e-05,
      -0.0012092289,
      -0.0004698068,
      -0.00034738888,
      -0.0002600399,
      -0.0005790592,
      -0.00021860692,
      -0.0011862527,
      -0.000118453776,
      -4.9187893e-05,
      -0.00013204545,
      -0.00072459044,
      -0.0019500953,
      -0.0002854398,
      -4.477904e-05,
      -0.00013300005,
      -0.000681465,
      -0.00013383264,
      -3.988961e-05,
      -1.2588937e-05,
      -0.0003554988,
      -0.0022749705,
      -0.0010482307,
      -0.0024258883,
      -0.0003626532,
      -0.49124643,
      -0.03980414,
      -0.06493992,
      -0.6488387,
      -0.0023755787,
      -0.00061347015,
      -1.0964272,
      -0.80165404,
      -0.6707996,
      -0.0011545666,
      -0.00041399087,
      -0.07059317,
      -0.02914772,
      -0.00074987864,
      -0.00086244626,
      -2.0275939,
      -0.33915743,
      -0.00086817396,
      -0.0009981714,
      -0.2687504,
      -0.14725289,
      -0.9779683,
      -0.0006397749,
      -0.0010886884,
      -0.22211811
     ],
     "top_logprobs": [
      {
       " #": -0.017150149
      },
      {
       " 0": -0.0059170607
      },
      {
       ":": -0.0022867392
      },
      {
       " walk": -0.79386497
      },
      {
       " electric": -0.122743085
      },
      {
       " sh": -0.09652591
      },
      {
       "aver": -0.0009905946
      },
      {
       "\n": -0.026448812
      },
      {
       " find": -0.0078080134
      },
      {
       "('": -0.002056941
      },
      {
       "elect": -0.068506464
      },
      {
       "rics": -8.900641e-05
      },
      {
       "ha": -0.00035514025
      },
      {
       "ver": -2.6773841e-05
      },
      {
       "')": -0.0008982999
      },
      {
       "\n": -0.0068059205
      },
      {
       " #": -0.0023519201
      },
      {
       " 1": -0.0021050232
      },
      {
       ":": -0.00039699755
      },
      {
       " grab": -0.31727007
      },
      {
       " electric": -0.009541549
      },
      {
       " sh": -0.0012137054
      },
      {
       "aver": -0.0012344711
      },
      {
       "\n": -0.00921382
      },
      {
       " assert": -0.0122657055
      },
      {
       "('": -0.0005186486
      },
      {
       "close": -0.0005082699
      },
      {
       "'": -0.0007558447
      },
      {
       " to": -0.0013158765
      },
      {
       " '": -0.0005481682
      },
      {
       "elect": -0.0019116942
      },
      {
       "rics": -0.00020274745
      },
      {
       "ha": -0.00013359329
      },
      {
       "ver": -3.249586e-05
      },
      {
       "')": -0.0236328
      },
      {
       "\n": -0.004589378
      },
      {
       " else": -0.00026087437
      },
      {
       ":": -0.0003140574
      },
      {
       " find": -0.0006975704
      },
      {
       "('": -0.00038900867
      },
      {
       "elect": -0.0008300526
      },
      {
       "rics": -0.00017007865
      },
      {
       "ha": -0.00034953654
      },
      {
       "ver": -3.8103353e-05
      },
      {
       "')": -0.00060452666
      },
      {
       "\n": -0.0023641675
      },
      {
       " grab": -0.0004885883
      },
      {
       "('": -0.00031298358
      },
      {
       "elect": -0.00060226076
      },
      {
       "rics": -5.956092e-05
      },
      {
       "ha": -0.0003917514
      },
      {
       "ver": -4.2870764e-05
      },
      {
       "')": -0.0005337355
      },
      {
       "\n": -0.0040310407
      },
      {
       " #": -0.00076891074
      },
      {
       " 2": -0.002087401
      },
      {
       ":": -0.00035716867
      },
      {
       " find": -0.93007416
      },
      {
       " on": -0.11221592
      },
      {
       " electric": -0.03652688
      },
      {
       " sh": -0.0010490679
      },
      {
       "aver": -0.0005148311
      },
      {
       "\n": -0.0070935986
      },
      {
       " assert": -0.19303396
      },
      {
       "('": -0.00059641484
      },
      {
       "close": -0.21688688
      },
      {
       "'": -0.00059748866
      },
      {
       " to": -0.00015446138
      },
      {
       " '": -0.00059069006
      },
      {
       "elect": -0.0038989717
      },
      {
       "rics": -0.000118333635
      },
      {
       "ha": -0.00022880347
      },
      {
       "ver": -3.2735214e-05
      },
      {
       "'": -0.056109257
      },
      {
       " )": -0.000113448885
      },
      {
       "\n": -0.0018593222
      },
      {
       " else": -0.00053993624
      },
      {
       ":": -0.0002058497
      },
      {
       " find": -0.0005940307
      },
      {
       "('": -0.00020823294
      },
      {
       "elect": -0.000585442
      },
      {
       "rics": -8.876706e-05
      },
      {
       "ha": -0.0002116928
      },
      {
       "ver": -7.8752586e-05
      },
      {
       "')": -0.0011187008
      },
      {
       "\n": -0.0019195178
      },
      {
       " assert": -0.10657859
      },
      {
       "('": -0.00021503064
      },
      {
       "elect": -0.006669764
      },
      {
       "rics": -0.00020131696
      },
      {
       "ha": -0.00026111372
      },
      {
       "ver": -1.1159372e-05
      },
      {
       "'": -0.00067472464
      },
      {
       " is": -0.0004084472
      },
      {
       " '": -0.0008066679
      },
      {
       "switch": -0.028340148
      },
      {
       "off": -0.0013492389
      },
      {
       "'": -0.005826049
      },
      {
       " )": -5.109523e-05
      },
      {
       "\n": -0.0012092289
      },
      {
       " else": -0.0004698068
      },
      {
       ":": -0.00034738888
      },
      {
       " switch": -0.0002600399
      },
      {
       "off": -0.0005790592
      },
      {
       "('": -0.00021860692
      },
      {
       "elect": -0.0011862527
      },
      {
       "rics": -0.000118453776
      },
      {
       "ha": -4.9187893e-05
      },
      {
       "ver": -0.00013204545
      },
      {
       "')": -0.00072459044
      },
      {
       "\n": -0.0019500953
      },
      {
       " switch": -0.0002854398
      },
      {
       "on": -4.477904e-05
      },
      {
       "('": -0.00013300005
      },
      {
       "elect": -0.000681465
      },
      {
       "rics": -0.00013383264
      },
      {
       "ha": -3.988961e-05
      },
      {
       "ver": -1.2588937e-05
      },
      {
       "')": -0.0003554988
      },
      {
       "\n": -0.0022749705
      },
      {
       " #": -0.0010482307
      },
      {
       " 3": -0.0024258883
      },
      {
       ":": -0.0003626532
      },
      {
       " start": -0.49124643
      },
      {
       " shaving": -0.03980414
      },
      {
       "\n": -0.06493992
      },
      {
       " #": -0.6488387
      },
      {
       " 4": -0.0023755787
      },
      {
       ":": -0.00061347015
      },
      {
       " turn": -0.7525579
      },
      {
       " off": -0.80165404
      },
      {
       " electric": -0.6707996
      },
      {
       " sh": -0.0011545666
      },
      {
       "aver": -0.00041399087
      },
      {
       "\n": -0.07059317
      },
      {
       " #": -0.02914772
      },
      {
       " 5": -0.00074987864
      },
      {
       ":": -0.00086244626
      },
      {
       " turn": -0.62330943
      },
      {
       " electric": -0.33915743
      },
      {
       " sh": -0.00086817396
      },
      {
       "aver": -0.0009981714
      },
      {
       " back": -0.2687504
      },
      {
       "\n": -0.14725289
      },
      {
       " find": -0.90355885
      },
      {
       " 6": -0.0006397749
      },
      {
       ":": -0.0010886884
      },
      {
       " Done": -0.22211811
      }
     ],
     "text_offset": [
      4708,
      4710,
      4712,
      4713,
      4718,
      4727,
      4730,
      4734,
      4735,
      4740,
      4742,
      4747,
      4751,
      4753,
      4756,
      4758,
      4759,
      4761,
      4763,
      4764,
      4769,
      4778,
      4781,
      4785,
      4786,
      4793,
      4795,
      4800,
      4801,
      4804,
      4806,
      4811,
      4815,
      4817,
      4820,
      4822,
      4823,
      4828,
      4829,
      4834,
      4836,
      4841,
      4845,
      4847,
      4850,
      4852,
      4853,
      4858,
      4860,
      4865,
      4869,
      4871,
      4874,
      4876,
      4877,
      4879,
      4881,
      4882,
      4887,
      4890,
      4899,
      4902,
      4906,
      4907,
      4914,
      4916,
      4921,
      4922,
      4925,
      4927,
      4932,
      4936,
      4938,
      4941,
      4942,
      4944,
      4945,
      4950,
      4951,
      4956,
      4958,
      4963,
      4967,
      4969,
      4972,
      4974,
      4975,
      4982,
      4984,
      4989,
      4993,
      4995,
      4998,
      4999,
      5002,
      5004,
      5010,
      5013,
      5014,
      5016,
      5017,
      5022,
      5023,
      5030,
      5033,
      5035,
      5040,
      5044,
      5046,
      5049,
      5051,
      5052,
      5059,
      5061,
      5063,
      5068,
      5072,
      5074,
      5077,
      5079,
      5080,
      5082,
      5084,
      5085,
      5091,
      5099,
      5100,
      5102,
      5104,
      5105,
      5111,
      5115,
      5124,
      5127,
      5131,
      5132,
      5134,
      5136,
      5137,
      5141,
      5150,
      5153,
      5157,
      5162,
      5163,
      5165,
      5167,
      5168
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Shave",
   "task_description": "I go into the bathroom, cut the tub water on, then wet my legs. I then open the shaving cream and apply it to my legs. I grab the razor off of the shelf and start shaving my legs until they are hairless and smooth.",
   "program": [
    "[Find] <razor> (1)",
    "[TurnTo] <razor> (1)",
    "[PointAt] <razor> (1)",
    "[Wash] <razor> (1)",
    "[TurnTo] <razor> (1)",
    "[LookAt] <razor> (1)",
    "[Grab] <razor> (1)",
    "[Walk] <bathroom> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_turk_third",
   "file_id": "split39_1",
   "goal_condition": [
    [
     [
      240,
      1000,
      "HOLDS_RH",
      "character",
      "razor"
     ],
     [
      240,
      1,
      "INSIDE",
      "character",
      "bathroom"
     ]
    ],
    []
   ]
  }
 },
 "5": {
  "plan": [
   [
    " # 0: walk to closet\n walk('closet')\n # 1: find hanger\n find('hanger')\n # 2: grab hanger\n assert('close' to 'hanger')\n else: find('hanger')\n grab('hanger')\n # 3: find jacket\n find('jacket')\n # 4: grab jacket\n assert('close' to 'jacket')\n else: find('jacket')\n grab('jacket')\n # 5: put jacket on hanger\n assert('hanger' in 'hands' )\n else: find('hanger')\n else: grab('hanger')\n assert('jacket' in 'hands' )\n else: find('jacket')\n else: grab('jacket')\n assert('close' to 'hanger' )\n else: find('hanger')\n putin('jacket', 'hanger')\n # 6: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " closet",
      "\n",
      " walk",
      "('",
      "cl",
      "os",
      "et",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " h",
      "anger",
      "\n",
      " find",
      "('",
      "h",
      "anger",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " grab",
      " h",
      "anger",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "h",
      "anger",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "h",
      "anger",
      "')",
      "\n",
      " grab",
      "('",
      "h",
      "anger",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " find",
      " jacket",
      "\n",
      " find",
      "('",
      "j",
      "acket",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " grab",
      " jacket",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "j",
      "acket",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "j",
      "acket",
      "')",
      "\n",
      " grab",
      "('",
      "j",
      "acket",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " put",
      " jacket",
      " on",
      " h",
      "anger",
      "\n",
      " assert",
      "('",
      "h",
      "anger",
      "'",
      " in",
      " '",
      "hands",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "h",
      "anger",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "h",
      "anger",
      "')",
      "\n",
      " assert",
      "('",
      "j",
      "acket",
      "'",
      " in",
      " '",
      "hands",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "j",
      "acket",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "j",
      "acket",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "h",
      "anger",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "h",
      "anger",
      "')",
      "\n",
      " put",
      "in",
      "('",
      "j",
      "acket",
      "',",
      " '",
      "h",
      "anger",
      "')",
      "\n",
      " #",
      " 6",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.008429752,
      -0.00324922,
      -0.0017471225,
      -0.8626695,
      -0.04976121,
      -0.41903457,
      -0.025507726,
      -0.00488421,
      -0.006364092,
      -0.00054971507,
      -0.00012894507,
      -0.0002145538,
      -0.0007979591,
      -0.0076380256,
      -0.0009024769,
      -0.0015267011,
      -0.00037028352,
      -0.13595715,
      -0.2576688,
      -0.006006643,
      -0.013104365,
      -0.0033615313,
      -0.0006332137,
      -0.0002107382,
      -0.00018617464,
      -0.00033295903,
      -0.0042041303,
      -0.0020243274,
      -0.0013582519,
      -0.00031572633,
      -0.16734931,
      -0.051349122,
      -0.00039282523,
      -0.00940965,
      -0.020821884,
      -0.00043259587,
      -0.0013713825,
      -0.00071832864,
      -0.00022158712,
      -0.00052115106,
      -0.00027291913,
      -0.00011547263,
      -0.014576023,
      -0.0030749214,
      -0.00019774071,
      -0.0002409637,
      -0.00054053415,
      -0.00038829155,
      -0.00016721859,
      -4.036551e-05,
      -0.00032061574,
      -0.0019712918,
      -0.00048310656,
      -0.0003661131,
      -0.00012620141,
      -8.7733215e-06,
      -0.00020918754,
      -0.003309201,
      -0.0010892844,
      -0.0023547865,
      -0.00036146207,
      -0.28935313,
      -0.059676703,
      -0.013344629,
      -0.0022100338,
      -0.0004821529,
      -0.00046789853,
      -5.8367896e-05,
      -0.00044845813,
      -0.002607245,
      -0.001652607,
      -0.001841944,
      -0.0004210298,
      -0.14787892,
      -0.005765139,
      -0.008977135,
      -0.0048667793,
      -0.00023059067,
      -0.0004715968,
      -0.0004933604,
      -9.305951e-05,
      -0.00035883667,
      -0.0005661762,
      -3.6482897e-06,
      -0.019597547,
      -0.002031494,
      -0.0001552949,
      -0.00015970749,
      -0.0004683754,
      -0.00016054008,
      -0.00016697923,
      -3.6482897e-06,
      -0.0002620674,
      -0.0019649626,
      -0.00046885313,
      -0.0002991535,
      -0.00012822983,
      -3.529076e-06,
      -0.00042711227,
      -0.002901012,
      -0.0007847767,
      -0.002587643,
      -0.0003059484,
      -0.9981832,
      -0.7287481,
      -0.05721481,
      -0.0079675615,
      -0.00033224377,
      -0.008579857,
      -0.17528315,
      -0.00054423057,
      -0.50232595,
      -0.0001296622,
      -0.00039330113,
      -0.003667724,
      -0.0006486029,
      -0.001306445,
      -0.016130358,
      -0.00045907334,
      -0.0016973863,
      -0.00027208467,
      -0.00023571757,
      -0.0021626046,
      -0.0002875865,
      -0.0008685307,
      -0.000117978816,
      -0.00093296246,
      -0.0016031138,
      -0.0014957781,
      -0.00018545937,
      -0.00037660534,
      -0.00037851362,
      -0.0005033814,
      -9.0795475e-05,
      -0.0006793165,
      -0.0022777189,
      -0.022891019,
      -0.00020453747,
      -0.82321274,
      -3.7148744e-05,
      -0.00040164858,
      -0.0014077919,
      -0.00035860104,
      -0.00045692569,
      -0.011925803,
      -0.00011988616,
      -0.0020045012,
      -0.00013287991,
      -0.00015732239,
      -0.0010771711,
      -0.00048560995,
      -0.00044619318,
      -8.0580685e-06,
      -0.0011258635,
      -0.0017712459,
      -0.0024435145,
      -0.00038459513,
      -0.0004878777,
      -0.0005562772,
      -0.00023595692,
      -6.1516675e-06,
      -0.00044631332,
      -0.004087657,
      -2.449851,
      -0.0008039243,
      -0.039122526,
      -0.0009500853,
      -0.00026325852,
      -0.0035118926,
      -0.081862524,
      -0.000385668,
      -0.17523825,
      -0.00047398286,
      -0.0027109345,
      -0.00042830152,
      -0.00029235485,
      -0.0012431245,
      -0.00040737336,
      -0.0010587933,
      -0.000139794,
      -0.00074749446,
      -0.0033539948,
      -0.010014582,
      -0.1373181,
      -0.00072035525,
      -0.012353563,
      -2.0098154e-05,
      -0.027759759,
      -0.00018545937,
      -0.00023535996,
      -0.00011285097,
      -0.0006177654,
      -0.0042939787,
      -0.0014573958,
      -0.0024993818,
      -0.0009145874,
      -2.104284
     ],
     "top_logprobs": [
      {
       " #": -0.008429752
      },
      {
       " 0": -0.00324922
      },
      {
       ":": -0.0017471225
      },
      {
       " find": -0.68055767
      },
      {
       " to": -0.04976121
      },
      {
       " closet": -0.41903457
      },
      {
       "\n": -0.025507726
      },
      {
       " walk": -0.00488421
      },
      {
       "('": -0.006364092
      },
      {
       "cl": -0.00054971507
      },
      {
       "os": -0.00012894507
      },
      {
       "et": -0.0002145538
      },
      {
       "')": -0.0007979591
      },
      {
       "\n": -0.0076380256
      },
      {
       " #": -0.0009024769
      },
      {
       " 1": -0.0015267011
      },
      {
       ":": -0.00037028352
      },
      {
       " find": -0.13595715
      },
      {
       " h": -0.2576688
      },
      {
       "anger": -0.006006643
      },
      {
       "\n": -0.013104365
      },
      {
       " find": -0.0033615313
      },
      {
       "('": -0.0006332137
      },
      {
       "h": -0.0002107382
      },
      {
       "anger": -0.00018617464
      },
      {
       "')": -0.00033295903
      },
      {
       "\n": -0.0042041303
      },
      {
       " #": -0.0020243274
      },
      {
       " 2": -0.0013582519
      },
      {
       ":": -0.00031572633
      },
      {
       " grab": -0.16734931
      },
      {
       " h": -0.051349122
      },
      {
       "anger": -0.00039282523
      },
      {
       "\n": -0.00940965
      },
      {
       " assert": -0.020821884
      },
      {
       "('": -0.00043259587
      },
      {
       "close": -0.0013713825
      },
      {
       "'": -0.00071832864
      },
      {
       " to": -0.00022158712
      },
      {
       " '": -0.00052115106
      },
      {
       "h": -0.00027291913
      },
      {
       "anger": -0.00011547263
      },
      {
       "')": -0.014576023
      },
      {
       "\n": -0.0030749214
      },
      {
       " else": -0.00019774071
      },
      {
       ":": -0.0002409637
      },
      {
       " find": -0.00054053415
      },
      {
       "('": -0.00038829155
      },
      {
       "h": -0.00016721859
      },
      {
       "anger": -4.036551e-05
      },
      {
       "')": -0.00032061574
      },
      {
       "\n": -0.0019712918
      },
      {
       " grab": -0.00048310656
      },
      {
       "('": -0.0003661131
      },
      {
       "h": -0.00012620141
      },
      {
       "anger": -8.7733215e-06
      },
      {
       "')": -0.00020918754
      },
      {
       "\n": -0.003309201
      },
      {
       " #": -0.0010892844
      },
      {
       " 3": -0.0023547865
      },
      {
       ":": -0.00036146207
      },
      {
       " find": -0.28935313
      },
      {
       " jacket": -0.059676703
      },
      {
       "\n": -0.013344629
      },
      {
       " find": -0.0022100338
      },
      {
       "('": -0.0004821529
      },
      {
       "j": -0.00046789853
      },
      {
       "acket": -5.8367896e-05
      },
      {
       "')": -0.00044845813
      },
      {
       "\n": -0.002607245
      },
      {
       " #": -0.001652607
      },
      {
       " 4": -0.001841944
      },
      {
       ":": -0.0004210298
      },
      {
       " grab": -0.14787892
      },
      {
       " jacket": -0.005765139
      },
      {
       "\n": -0.008977135
      },
      {
       " assert": -0.0048667793
      },
      {
       "('": -0.00023059067
      },
      {
       "close": -0.0004715968
      },
      {
       "'": -0.0004933604
      },
      {
       " to": -9.305951e-05
      },
      {
       " '": -0.00035883667
      },
      {
       "j": -0.0005661762
      },
      {
       "acket": -3.6482897e-06
      },
      {
       "')": -0.019597547
      },
      {
       "\n": -0.002031494
      },
      {
       " else": -0.0001552949
      },
      {
       ":": -0.00015970749
      },
      {
       " find": -0.0004683754
      },
      {
       "('": -0.00016054008
      },
      {
       "j": -0.00016697923
      },
      {
       "acket": -3.6482897e-06
      },
      {
       "')": -0.0002620674
      },
      {
       "\n": -0.0019649626
      },
      {
       " grab": -0.00046885313
      },
      {
       "('": -0.0002991535
      },
      {
       "j": -0.00012822983
      },
      {
       "acket": -3.529076e-06
      },
      {
       "')": -0.00042711227
      },
      {
       "\n": -0.002901012
      },
      {
       " #": -0.0007847767
      },
      {
       " 5": -0.002587643
      },
      {
       ":": -0.0003059484
      },
      {
       " put": -0.9981832
      },
      {
       " h": -0.6830136
      },
      {
       " on": -0.05721481
      },
      {
       " h": -0.0079675615
      },
      {
       "anger": -0.00033224377
      },
      {
       "\n": -0.008579857
      },
      {
       " assert": -0.17528315
      },
      {
       "('": -0.00054423057
      },
      {
       "h": -0.50232595
      },
      {
       "anger": -0.0001296622
      },
      {
       "'": -0.00039330113
      },
      {
       " in": -0.003667724
      },
      {
       " '": -0.0006486029
      },
      {
       "hands": -0.001306445
      },
      {
       "'": -0.016130358
      },
      {
       " )": -0.00045907334
      },
      {
       "\n": -0.0016973863
      },
      {
       " else": -0.00027208467
      },
      {
       ":": -0.00023571757
      },
      {
       " find": -0.0021626046
      },
      {
       "('": -0.0002875865
      },
      {
       "h": -0.0008685307
      },
      {
       "anger": -0.000117978816
      },
      {
       "')": -0.00093296246
      },
      {
       "\n": -0.0016031138
      },
      {
       " else": -0.0014957781
      },
      {
       ":": -0.00018545937
      },
      {
       " grab": -0.00037660534
      },
      {
       "('": -0.00037851362
      },
      {
       "h": -0.0005033814
      },
      {
       "anger": -9.0795475e-05
      },
      {
       "')": -0.0006793165
      },
      {
       "\n": -0.0022777189
      },
      {
       " assert": -0.022891019
      },
      {
       "('": -0.00020453747
      },
      {
       "close": -0.5817272
      },
      {
       "acket": -3.7148744e-05
      },
      {
       "'": -0.00040164858
      },
      {
       " in": -0.0014077919
      },
      {
       " '": -0.00035860104
      },
      {
       "hands": -0.00045692569
      },
      {
       "'": -0.011925803
      },
      {
       " )": -0.00011988616
      },
      {
       "\n": -0.0020045012
      },
      {
       " else": -0.00013287991
      },
      {
       ":": -0.00015732239
      },
      {
       " find": -0.0010771711
      },
      {
       "('": -0.00048560995
      },
      {
       "j": -0.00044619318
      },
      {
       "acket": -8.0580685e-06
      },
      {
       "')": -0.0011258635
      },
      {
       "\n": -0.0017712459
      },
      {
       " else": -0.0024435145
      },
      {
       ":": -0.00038459513
      },
      {
       " grab": -0.0004878777
      },
      {
       "('": -0.0005562772
      },
      {
       "j": -0.00023595692
      },
      {
       "acket": -6.1516675e-06
      },
      {
       "')": -0.00044631332
      },
      {
       "\n": -0.004087657
      },
      {
       " put": -0.10564607
      },
      {
       "('": -0.0008039243
      },
      {
       "close": -0.039122526
      },
      {
       "'": -0.0009500853
      },
      {
       " to": -0.00026325852
      },
      {
       " '": -0.0035118926
      },
      {
       "h": -0.081862524
      },
      {
       "anger": -0.000385668
      },
      {
       "'": -0.17523825
      },
      {
       " )": -0.00047398286
      },
      {
       "\n": -0.0027109345
      },
      {
       " else": -0.00042830152
      },
      {
       ":": -0.00029235485
      },
      {
       " find": -0.0012431245
      },
      {
       "('": -0.00040737336
      },
      {
       "h": -0.0010587933
      },
      {
       "anger": -0.000139794
      },
      {
       "')": -0.00074749446
      },
      {
       "\n": -0.0033539948
      },
      {
       " put": -0.010014582
      },
      {
       "in": -0.1373181
      },
      {
       "('": -0.00072035525
      },
      {
       "j": -0.012353563
      },
      {
       "acket": -2.0098154e-05
      },
      {
       "',": -0.027759759
      },
      {
       " '": -0.00018545937
      },
      {
       "h": -0.00023535996
      },
      {
       "anger": -0.00011285097
      },
      {
       "')": -0.0006177654
      },
      {
       "\n": -0.0042939787
      },
      {
       " #": -0.0014573958
      },
      {
       " 6": -0.0024993818
      },
      {
       ":": -0.0009145874
      },
      {
       " hang": -0.83790565
      }
     ],
     "text_offset": [
      4717,
      4719,
      4721,
      4722,
      4727,
      4730,
      4737,
      4738,
      4743,
      4745,
      4747,
      4749,
      4751,
      4753,
      4754,
      4756,
      4758,
      4759,
      4764,
      4766,
      4771,
      4772,
      4777,
      4779,
      4780,
      4785,
      4787,
      4788,
      4790,
      4792,
      4793,
      4798,
      4800,
      4805,
      4806,
      4813,
      4815,
      4820,
      4821,
      4824,
      4826,
      4827,
      4832,
      4834,
      4835,
      4840,
      4841,
      4846,
      4848,
      4849,
      4854,
      4856,
      4857,
      4862,
      4864,
      4865,
      4870,
      4872,
      4873,
      4875,
      4877,
      4878,
      4883,
      4890,
      4891,
      4896,
      4898,
      4899,
      4904,
      4906,
      4907,
      4909,
      4911,
      4912,
      4917,
      4924,
      4925,
      4932,
      4934,
      4939,
      4940,
      4943,
      4945,
      4946,
      4951,
      4953,
      4954,
      4959,
      4960,
      4965,
      4967,
      4968,
      4973,
      4975,
      4976,
      4981,
      4983,
      4984,
      4989,
      4991,
      4992,
      4994,
      4996,
      4997,
      5001,
      5008,
      5011,
      5013,
      5018,
      5019,
      5026,
      5028,
      5029,
      5034,
      5035,
      5038,
      5040,
      5045,
      5046,
      5048,
      5049,
      5054,
      5055,
      5060,
      5062,
      5063,
      5068,
      5070,
      5071,
      5076,
      5077,
      5082,
      5084,
      5085,
      5090,
      5092,
      5093,
      5100,
      5102,
      5103,
      5108,
      5109,
      5112,
      5114,
      5119,
      5120,
      5122,
      5123,
      5128,
      5129,
      5134,
      5136,
      5137,
      5142,
      5144,
      5145,
      5150,
      5151,
      5156,
      5158,
      5159,
      5164,
      5166,
      5167,
      5174,
      5176,
      5181,
      5182,
      5185,
      5187,
      5188,
      5193,
      5194,
      5196,
      5197,
      5202,
      5203,
      5208,
      5210,
      5211,
      5216,
      5218,
      5219,
      5223,
      5225,
      5227,
      5228,
      5233,
      5235,
      5237,
      5238,
      5243,
      5245,
      5246,
      5248,
      5250,
      5251
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Hang up jacket",
   "task_description": "Upon entering, remove coat and utilize coatrack/hook to store coat by neatly hanging coat on hook.",
   "program": [
    "[Walk] <bedroom> (1)",
    "[Walk] <clothes_jacket> (1)",
    "[Find] <clothes_jacket> (1)",
    "[Find] <clothes_jacket> (1)",
    "[PutOff] <clothes_jacket> (1)",
    "[Grab] <clothes_jacket> (1)",
    "[Find] <hanger> (1)",
    "[PutBack] <clothes_jacket> (1) <hanger> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_turk_third",
   "file_id": "split65_2",
   "goal_condition": [
    [
     [
      240,
      162,
      "INSIDE",
      "character",
      "bedroom"
     ],
     [
      1000,
      1001,
      "ON",
      "clothes_jacket",
      "hanger"
     ]
    ],
    []
   ]
  }
 },
 "6": {
  "plan": [
   [
    " # 0: find newspaper\n find('newspaper')\n # 1: grab newspaper\n assert('close' to 'newspaper')\n else: find('newspaper')\n grab('newspaper')\n # 2: find chair\n find('chair')\n # 3: sit down in chair\n assert('close' to 'chair' )\n else: find('chair')\n sit('chair')\n # 4: unfold newspaper\n assert('close' to 'newspaper' )\n else: find('newspaper')\n assert('newspaper' is 'folded' )\n else: unfold('newspaper')\n # 5: start reading newspaper\n # 6: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " newspaper",
      "\n",
      " find",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " grab",
      " newspaper",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " grab",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " find",
      " chair",
      "\n",
      " find",
      "('",
      "chair",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " sit",
      " down",
      " in",
      " chair",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "chair",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "chair",
      "')",
      "\n",
      " sit",
      "('",
      "chair",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " unfold",
      " newspaper",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "new",
      "sp",
      "aper",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " assert",
      "('",
      "new",
      "sp",
      "aper",
      "'",
      " is",
      " '",
      "fold",
      "ed",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " unfold",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " start",
      " reading",
      " newspaper",
      "\n",
      " #",
      " 6",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.013712506,
      -0.005271216,
      -0.001874072,
      -0.21244177,
      -0.040940132,
      -0.02630555,
      -0.0037104986,
      -0.0013211282,
      -0.0016804887,
      -0.00023154433,
      -0.00018248011,
      -0.0012076764,
      -0.006261702,
      -0.00074618217,
      -0.001258403,
      -0.0005798965,
      -0.047218543,
      -0.006537224,
      -0.008412921,
      -0.0069927536,
      -0.00041482816,
      -0.0004984892,
      -0.0006230134,
      -0.00084288017,
      -0.0003726696,
      -0.00052878505,
      -7.97072e-05,
      -0.000597132,
      -0.01371305,
      -0.0034406548,
      -0.00023440628,
      -0.00028066957,
      -0.0005772701,
      -0.00030130113,
      -0.00022826564,
      -3.7386224e-05,
      -0.00042067032,
      -0.00042090964,
      -0.0022433698,
      -0.00030642524,
      -0.0002669587,
      -0.000111540605,
      -2.3435998e-05,
      -4.2033495e-05,
      -0.00047016633,
      -0.0033666133,
      -0.0006028587,
      -0.0026333,
      -0.00046467895,
      -0.85188,
      -0.82912415,
      -0.03951136,
      -0.003238877,
      -0.0005623597,
      -0.00057762774,
      -0.00033713412,
      -0.0041667176,
      -0.0015014486,
      -0.0027036434,
      -0.0009818821,
      -0.018724883,
      -2.6886547,
      -1.794019,
      -0.043751247,
      -0.009624595,
      -0.11751265,
      -0.0005325425,
      -0.017743945,
      -0.00082122453,
      -0.00020775704,
      -0.0006901748,
      -0.0004225786,
      -0.36368015,
      -0.00015577173,
      -0.0022654713,
      -0.00024585033,
      -0.00037433943,
      -0.00068671495,
      -0.0003838799,
      -0.00029199722,
      -0.0008741973,
      -0.0028723795,
      -0.041601174,
      -0.005589562,
      -0.0011886996,
      -0.0006925608,
      -0.005488571,
      -0.0010405928,
      -0.0030786882,
      -0.000425204,
      -2.9328775,
      -0.061697263,
      -0.017322488,
      -0.10995912,
      -0.0008286211,
      -2.6585038,
      -0.0023610014,
      -0.00028877953,
      -0.0014295809,
      -0.017403334,
      -0.00010557923,
      -0.00019750134,
      -0.54922277,
      -0.010005854,
      -0.0047428017,
      -0.0025237615,
      -0.00023261909,
      -0.011989985,
      -0.0005383865,
      -0.00046992695,
      -5.300351e-05,
      -0.0007882366,
      -0.0016080078,
      -0.0037769089,
      -0.15539487,
      -0.00098248,
      -0.0025038049,
      -0.00017472965,
      -0.00022504793,
      -0.00096356997,
      -0.3449358,
      -0.0042882916,
      -0.17932011,
      -0.005174091,
      -0.024256097,
      -0.00029724615,
      -0.0026216474,
      -0.0010781267,
      -0.0010047345,
      -0.22826883,
      -0.0013304988,
      -0.0005661762,
      -0.00014337122,
      -0.00048298642,
      -0.0011966951,
      -0.0055646887,
      -0.056304123,
      -0.0022289718,
      -0.00048298642,
      -0.3991528,
      -0.019589402,
      -0.8852465,
      -0.0077089006,
      -1.9125153,
      -0.001339691,
      -0.0006711474,
      -0.12469302
     ],
     "top_logprobs": [
      {
       " #": -0.013712506
      },
      {
       " 0": -0.005271216
      },
      {
       ":": -0.001874072
      },
      {
       " find": -0.21244177
      },
      {
       " newspaper": -0.040940132
      },
      {
       "\n": -0.02630555
      },
      {
       " find": -0.0037104986
      },
      {
       "('": -0.0013211282
      },
      {
       "new": -0.0016804887
      },
      {
       "sp": -0.00023154433
      },
      {
       "aper": -0.00018248011
      },
      {
       "')": -0.0012076764
      },
      {
       "\n": -0.006261702
      },
      {
       " #": -0.00074618217
      },
      {
       " 1": -0.001258403
      },
      {
       ":": -0.0005798965
      },
      {
       " grab": -0.047218543
      },
      {
       " newspaper": -0.006537224
      },
      {
       "\n": -0.008412921
      },
      {
       " assert": -0.0069927536
      },
      {
       "('": -0.00041482816
      },
      {
       "close": -0.0004984892
      },
      {
       "'": -0.0006230134
      },
      {
       " to": -0.00084288017
      },
      {
       " '": -0.0003726696
      },
      {
       "new": -0.00052878505
      },
      {
       "sp": -7.97072e-05
      },
      {
       "aper": -0.000597132
      },
      {
       "')": -0.01371305
      },
      {
       "\n": -0.0034406548
      },
      {
       " else": -0.00023440628
      },
      {
       ":": -0.00028066957
      },
      {
       " find": -0.0005772701
      },
      {
       "('": -0.00030130113
      },
      {
       "new": -0.00022826564
      },
      {
       "sp": -3.7386224e-05
      },
      {
       "aper": -0.00042067032
      },
      {
       "')": -0.00042090964
      },
      {
       "\n": -0.0022433698
      },
      {
       " grab": -0.00030642524
      },
      {
       "('": -0.0002669587
      },
      {
       "new": -0.000111540605
      },
      {
       "sp": -2.3435998e-05
      },
      {
       "aper": -4.2033495e-05
      },
      {
       "')": -0.00047016633
      },
      {
       "\n": -0.0033666133
      },
      {
       " #": -0.0006028587
      },
      {
       " 2": -0.0026333
      },
      {
       ":": -0.00046467895
      },
      {
       " find": -0.85188
      },
      {
       " chair": -0.82912415
      },
      {
       "\n": -0.03951136
      },
      {
       " find": -0.003238877
      },
      {
       "('": -0.0005623597
      },
      {
       "chair": -0.00057762774
      },
      {
       "')": -0.00033713412
      },
      {
       "\n": -0.0041667176
      },
      {
       " #": -0.0015014486
      },
      {
       " 3": -0.0027036434
      },
      {
       ":": -0.0009818821
      },
      {
       " sit": -0.018724883
      },
      {
       " on": -0.49947438
      },
      {
       "\n": -0.7918588
      },
      {
       " chair": -0.043751247
      },
      {
       "\n": -0.009624595
      },
      {
       " assert": -0.11751265
      },
      {
       "('": -0.0005325425
      },
      {
       "close": -0.017743945
      },
      {
       "'": -0.00082122453
      },
      {
       " to": -0.00020775704
      },
      {
       " '": -0.0006901748
      },
      {
       "chair": -0.0004225786
      },
      {
       "'": -0.36368015
      },
      {
       " )": -0.00015577173
      },
      {
       "\n": -0.0022654713
      },
      {
       " else": -0.00024585033
      },
      {
       ":": -0.00037433943
      },
      {
       " find": -0.00068671495
      },
      {
       "('": -0.0003838799
      },
      {
       "chair": -0.00029199722
      },
      {
       "')": -0.0008741973
      },
      {
       "\n": -0.0028723795
      },
      {
       " sit": -0.041601174
      },
      {
       "('": -0.005589562
      },
      {
       "chair": -0.0011886996
      },
      {
       "')": -0.0006925608
      },
      {
       "\n": -0.005488571
      },
      {
       " #": -0.0010405928
      },
      {
       " 4": -0.0030786882
      },
      {
       ":": -0.000425204
      },
      {
       " open": -0.8118899
      },
      {
       " newspaper": -0.061697263
      },
      {
       "\n": -0.017322488
      },
      {
       " assert": -0.10995912
      },
      {
       "('": -0.0008286211
      },
      {
       "new": -0.07562583
      },
      {
       "'": -0.0023610014
      },
      {
       " to": -0.00028877953
      },
      {
       " '": -0.0014295809
      },
      {
       "new": -0.017403334
      },
      {
       "sp": -0.00010557923
      },
      {
       "aper": -0.00019750134
      },
      {
       "'": -0.54922277
      },
      {
       " )": -0.010005854
      },
      {
       "\n": -0.0047428017
      },
      {
       " else": -0.0025237615
      },
      {
       ":": -0.00023261909
      },
      {
       " find": -0.011989985
      },
      {
       "('": -0.0005383865
      },
      {
       "new": -0.00046992695
      },
      {
       "sp": -5.300351e-05
      },
      {
       "aper": -0.0007882366
      },
      {
       "')": -0.0016080078
      },
      {
       "\n": -0.0037769089
      },
      {
       " assert": -0.15539487
      },
      {
       "('": -0.00098248
      },
      {
       "new": -0.0025038049
      },
      {
       "sp": -0.00017472965
      },
      {
       "aper": -0.00022504793
      },
      {
       "'": -0.00096356997
      },
      {
       " is": -0.3449358
      },
      {
       " '": -0.0042882916
      },
      {
       "fold": -0.17932011
      },
      {
       "ed": -0.005174091
      },
      {
       "'": -0.024256097
      },
      {
       " )": -0.00029724615
      },
      {
       "\n": -0.0026216474
      },
      {
       " else": -0.0010781267
      },
      {
       ":": -0.0010047345
      },
      {
       " unfold": -0.22826883
      },
      {
       "('": -0.0013304988
      },
      {
       "new": -0.0005661762
      },
      {
       "sp": -0.00014337122
      },
      {
       "aper": -0.00048298642
      },
      {
       "')": -0.0011966951
      },
      {
       "\n": -0.0055646887
      },
      {
       " #": -0.056304123
      },
      {
       " 5": -0.0022289718
      },
      {
       ":": -0.00048298642
      },
      {
       " start": -0.3991528
      },
      {
       " reading": -0.019589402
      },
      {
       "\n": -0.5710871
      },
      {
       "\n": -0.0077089006
      },
      {
       " look": -0.7897211
      },
      {
       " 6": -0.001339691
      },
      {
       ":": -0.0006711474
      },
      {
       " Done": -0.12469302
      }
     ],
     "text_offset": [
      4717,
      4719,
      4721,
      4722,
      4727,
      4737,
      4738,
      4743,
      4745,
      4748,
      4750,
      4754,
      4756,
      4757,
      4759,
      4761,
      4762,
      4767,
      4777,
      4778,
      4785,
      4787,
      4792,
      4793,
      4796,
      4798,
      4801,
      4803,
      4807,
      4809,
      4810,
      4815,
      4816,
      4821,
      4823,
      4826,
      4828,
      4832,
      4834,
      4835,
      4840,
      4842,
      4845,
      4847,
      4851,
      4853,
      4854,
      4856,
      4858,
      4859,
      4864,
      4870,
      4871,
      4876,
      4878,
      4883,
      4885,
      4886,
      4888,
      4890,
      4891,
      4895,
      4900,
      4903,
      4909,
      4910,
      4917,
      4919,
      4924,
      4925,
      4928,
      4930,
      4935,
      4936,
      4938,
      4939,
      4944,
      4945,
      4950,
      4952,
      4957,
      4959,
      4960,
      4964,
      4966,
      4971,
      4973,
      4974,
      4976,
      4978,
      4979,
      4986,
      4996,
      4997,
      5004,
      5006,
      5011,
      5012,
      5015,
      5017,
      5020,
      5022,
      5026,
      5027,
      5029,
      5030,
      5035,
      5036,
      5041,
      5043,
      5046,
      5048,
      5052,
      5054,
      5055,
      5062,
      5064,
      5067,
      5069,
      5073,
      5074,
      5077,
      5079,
      5083,
      5085,
      5086,
      5088,
      5089,
      5094,
      5095,
      5102,
      5104,
      5107,
      5109,
      5113,
      5115,
      5116,
      5118,
      5120,
      5121,
      5127,
      5135,
      5145,
      5146,
      5148,
      5150,
      5151
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Read newspaper",
   "task_description": "I go outside to get the newspaper.I come back inside and sit down at the dining room table and read it.",
   "program": [
    "[Find] <chair> (1)",
    "[TurnTo] <chair> (1)",
    "[PointAt] <chair> (1)",
    "[Wash] <chair> (1)",
    "[Sit] <chair> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_turk_third",
   "file_id": "split3_3",
   "goal_condition": [
    [
     [
      240,
      194,
      "FACING",
      "character",
      "chair"
     ],
     [
      240,
      194,
      "ON",
      "character",
      "chair"
     ],
     [
      240,
      209,
      "FACING",
      "character",
      "computer"
     ]
    ],
    [
     [
      240,
      "character",
      "SITTING"
     ]
    ]
   ]
  }
 },
 "7": {
  "plan": [
   [
    " # 0: find seat\n find('seat')\n # 1: sit in seat\n assert('close' to 'seat')\n else: find('seat')\n sit('seat')\n # 2: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " seat",
      "\n",
      " find",
      "('",
      "seat",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " sit",
      " in",
      " seat",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "seat",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "seat",
      "')",
      "\n",
      " sit",
      "('",
      "seat",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.18722785,
      -0.035560384,
      -0.0043095425,
      -0.57108575,
      -2.8741412,
      -0.072281055,
      -0.011581315,
      -0.0046839337,
      -0.018354855,
      -0.0007299585,
      -0.011493765,
      -0.0027537276,
      -0.0031489434,
      -0.0008219398,
      -0.4213808,
      -2.8536355,
      -0.04367086,
      -0.01733644,
      -0.03106186,
      -0.0014951812,
      -0.004124226,
      -0.0018918088,
      -0.00030869205,
      -0.0007606778,
      -0.00039234746,
      -0.15188447,
      -0.009059473,
      -0.0005640305,
      -0.00065635337,
      -0.0016665169,
      -0.0009161371,
      -0.0001707939,
      -0.0006317222,
      -0.005101179,
      -0.0064457944,
      -0.00489978,
      -0.0011181047,
      -0.00095354614,
      -0.04900485,
      -0.0015477728,
      -0.005363499,
      -0.0011698994,
      -0.042606313
     ],
     "top_logprobs": [
      {
       " #": -0.18722785
      },
      {
       " 0": -0.035560384
      },
      {
       ":": -0.0043095425
      },
      {
       " find": -0.57108575
      },
      {
       " chair": -0.34283864
      },
      {
       "\n": -0.072281055
      },
      {
       " find": -0.011581315
      },
      {
       "('": -0.0046839337
      },
      {
       "seat": -0.018354855
      },
      {
       "')": -0.0007299585
      },
      {
       "\n": -0.011493765
      },
      {
       " #": -0.0027537276
      },
      {
       " 1": -0.0031489434
      },
      {
       ":": -0.0008219398
      },
      {
       " sit": -0.4213808
      },
      {
       " on": -0.93899596
      },
      {
       " seat": -0.04367086
      },
      {
       "\n": -0.01733644
      },
      {
       " assert": -0.03106186
      },
      {
       "('": -0.0014951812
      },
      {
       "close": -0.004124226
      },
      {
       "'": -0.0018918088
      },
      {
       " to": -0.00030869205
      },
      {
       " '": -0.0007606778
      },
      {
       "seat": -0.00039234746
      },
      {
       "')": -0.15188447
      },
      {
       "\n": -0.009059473
      },
      {
       " else": -0.0005640305
      },
      {
       ":": -0.00065635337
      },
      {
       " find": -0.0016665169
      },
      {
       "('": -0.0009161371
      },
      {
       "seat": -0.0001707939
      },
      {
       "')": -0.0006317222
      },
      {
       "\n": -0.005101179
      },
      {
       " sit": -0.0064457944
      },
      {
       "('": -0.00489978
      },
      {
       "seat": -0.0011181047
      },
      {
       "')": -0.00095354614
      },
      {
       "\n": -0.04900485
      },
      {
       " #": -0.0015477728
      },
      {
       " 2": -0.005363499
      },
      {
       ":": -0.0011698994
      },
      {
       " Done": -0.042606313
      }
     ],
     "text_offset": [
      4706,
      4708,
      4710,
      4711,
      4716,
      4721,
      4722,
      4727,
      4729,
      4733,
      4735,
      4736,
      4738,
      4740,
      4741,
      4745,
      4748,
      4753,
      4754,
      4761,
      4763,
      4768,
      4769,
      4772,
      4774,
      4778,
      4780,
      4781,
      4786,
      4787,
      4792,
      4794,
      4798,
      4800,
      4801,
      4805,
      4807,
      4811,
      4813,
      4814,
      4816,
      4818,
      4819
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Sit",
   "task_description": "We sit at the dining room table",
   "program": [
    "[Walk] <dining_room> (1)",
    "[Walk] <chair> (1)",
    "[Find] <chair> (1)",
    "[Pull] <chair> (1)",
    "[Sit] <chair> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_turk_third",
   "file_id": "split41_2",
   "goal_condition": [
    [
     [
      240,
      41,
      "INSIDE",
      "character",
      "dining_room"
     ],
     [
      240,
      1000,
      "ON",
      "character",
      "chair"
     ]
    ],
    [
     [
      240,
      "character",
      "SITTING"
     ]
    ]
   ]
  }
 },
 "8": {
  "plan": [
   [
    " # 0: find bed\n find('bed')\n # 1: sit on bed\n assert('close' to 'bed')\n else: find('bed')\n sit('bed')\n # 2: lie down\n standup('bed')\n # 3: close eyes\n # 4: drift off to sleep\n # 5: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " bed",
      "\n",
      " find",
      "('",
      "bed",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " sit",
      " on",
      " bed",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "bed",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "bed",
      "')",
      "\n",
      " sit",
      "('",
      "bed",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " lie",
      " down",
      "\n",
      " stand",
      "up",
      "('",
      "bed",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " close",
      " eyes",
      "\n",
      " #",
      " 4",
      ":",
      " drift",
      " off",
      " to",
      " sleep",
      "\n",
      " #",
      " 5",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.036594708,
      -0.011929903,
      -0.0031193448,
      -1.372726,
      -0.043387968,
      -0.02686446,
      -0.005819274,
      -0.002435688,
      -0.00021228698,
      -0.00048775758,
      -0.008185261,
      -0.0013651743,
      -0.0016944013,
      -0.00044130278,
      -0.5226288,
      -0.14939655,
      -0.027424235,
      -0.012111545,
      -0.19249456,
      -0.0012463459,
      -0.0026966503,
      -0.0012688463,
      -0.00033498742,
      -0.0010139239,
      -0.00010367096,
      -0.0982643,
      -0.007233353,
      -0.0003993836,
      -0.0006438308,
      -0.001428386,
      -0.000962376,
      -7.732115e-05,
      -0.00055591954,
      -0.005037495,
      -0.00566203,
      -0.001057957,
      -0.0002042981,
      -0.00054363545,
      -0.006694126,
      -0.0007387856,
      -0.0021951608,
      -0.00043402638,
      -1.0986063,
      -0.090009086,
      -0.5171295,
      -0.9618777,
      -0.0057244943,
      -0.3753306,
      -0.0016112922,
      -0.0024117278,
      -0.008640097,
      -0.0409505,
      -0.0024929887,
      -0.0006569513,
      -0.7485713,
      -0.03755812,
      -0.032725576,
      -0.16493957,
      -0.002137338,
      -0.0009654792,
      -2.593574,
      -0.15527262,
      -0.13515568,
      -0.0104813995,
      -0.015435867,
      -0.0015619203,
      -0.0011500301,
      -0.0010672655,
      -0.06066288
     ],
     "top_logprobs": [
      {
       " #": -0.036594708
      },
      {
       " 0": -0.011929903
      },
      {
       ":": -0.0031193448
      },
      {
       " walk": -0.55104196
      },
      {
       " bed": -0.043387968
      },
      {
       "\n": -0.02686446
      },
      {
       " find": -0.005819274
      },
      {
       "('": -0.002435688
      },
      {
       "bed": -0.00021228698
      },
      {
       "')": -0.00048775758
      },
      {
       "\n": -0.008185261
      },
      {
       " #": -0.0013651743
      },
      {
       " 1": -0.0016944013
      },
      {
       ":": -0.00044130278
      },
      {
       " sit": -0.5226288
      },
      {
       " on": -0.14939655
      },
      {
       " bed": -0.027424235
      },
      {
       "\n": -0.012111545
      },
      {
       " assert": -0.19249456
      },
      {
       "('": -0.0012463459
      },
      {
       "close": -0.0026966503
      },
      {
       "'": -0.0012688463
      },
      {
       " to": -0.00033498742
      },
      {
       " '": -0.0010139239
      },
      {
       "bed": -0.00010367096
      },
      {
       "')": -0.0982643
      },
      {
       "\n": -0.007233353
      },
      {
       " else": -0.0003993836
      },
      {
       ":": -0.0006438308
      },
      {
       " find": -0.001428386
      },
      {
       "('": -0.000962376
      },
      {
       "bed": -7.732115e-05
      },
      {
       "')": -0.00055591954
      },
      {
       "\n": -0.005037495
      },
      {
       " sit": -0.00566203
      },
      {
       "('": -0.001057957
      },
      {
       "bed": -0.0002042981
      },
      {
       "')": -0.00054363545
      },
      {
       "\n": -0.006694126
      },
      {
       " #": -0.0007387856
      },
      {
       " 2": -0.0021951608
      },
      {
       ":": -0.00043402638
      },
      {
       " lay": -0.7441637
      },
      {
       " down": -0.090009086
      },
      {
       "\n": -0.5171295
      },
      {
       " stand": -0.9618777
      },
      {
       "up": -0.0057244943
      },
      {
       "('": -0.3753306
      },
      {
       "bed": -0.0016112922
      },
      {
       "')": -0.0024117278
      },
      {
       "\n": -0.008640097
      },
      {
       " #": -0.0409505
      },
      {
       " 3": -0.0024929887
      },
      {
       ":": -0.0006569513
      },
      {
       " close": -0.7485713
      },
      {
       " eyes": -0.03755812
      },
      {
       "\n": -0.032725576
      },
      {
       " #": -0.16493957
      },
      {
       " 4": -0.002137338
      },
      {
       ":": -0.0009654792
      },
      {
       " Done": -0.63080263
      },
      {
       " off": -0.15527262
      },
      {
       " to": -0.13515568
      },
      {
       " sleep": -0.0104813995
      },
      {
       "\n": -0.015435867
      },
      {
       " #": -0.0015619203
      },
      {
       " 5": -0.0011500301
      },
      {
       ":": -0.0010672655
      },
      {
       " Done": -0.06066288
      }
     ],
     "text_offset": [
      4708,
      4710,
      4712,
      4713,
      4718,
      4722,
      4723,
      4728,
      4730,
      4733,
      4735,
      4736,
      4738,
      4740,
      4741,
      4745,
      4748,
      4752,
      4753,
      4760,
      4762,
      4767,
      4768,
      4771,
      4773,
      4776,
      4778,
      4779,
      4784,
      4785,
      4790,
      4792,
      4795,
      4797,
      4798,
      4802,
      4804,
      4807,
      4809,
      4810,
      4812,
      4814,
      4815,
      4819,
      4824,
      4825,
      4831,
      4833,
      4835,
      4838,
      4840,
      4841,
      4843,
      4845,
      4846,
      4852,
      4857,
      4858,
      4860,
      4862,
      4863,
      4869,
      4873,
      4876,
      4882,
      4883,
      4885,
      4887,
      4888
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Sleep",
   "task_description": "Lie down in a bed at night and fall asleep",
   "program": [
    "[Walk] <bedroom> (1)",
    "[Walk] <bed> (1)",
    "[Find] <bed> (1)",
    "[Lie] <bed> (1)",
    "[Sleep]"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_july",
   "file_id": "split22_2",
   "goal_condition": [
    [
     [
      240,
      162,
      "INSIDE",
      "character",
      "bedroom"
     ],
     [
      240,
      197,
      "ON",
      "character",
      "bed"
     ]
    ],
    [
     [
      240,
      "character",
      "LYING"
     ]
    ]
   ]
  }
 },
 "9": {
  "plan": [
   [
    " # 0: walk to bedroom\n walk('bedroom')\n # 1: find alarm clock\n find('alarmclock')\n # 2: grab alarm clock\n assert('close' to 'alarmclock')\n else: find('alarmclock')\n grab('alarmclock')\n # 3: find bedroom\n find('bedroom')\n # 4: put alarm clock in bedroom\n assert('alarmclock' in 'hands' )\n else: find('alarmclock')\n else: grab('alarmclock')\n assert('close' to 'bedroom' )\n else: find('bedroom')\n putin('alarmclock', 'bedroom')\n # 5: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " bedroom",
      "\n",
      " walk",
      "('",
      "bedroom",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " alarm",
      " clock",
      "\n",
      " find",
      "('",
      "al",
      "arm",
      "clock",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " grab",
      " alarm",
      " clock",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "al",
      "arm",
      "clock",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "al",
      "arm",
      "clock",
      "')",
      "\n",
      " grab",
      "('",
      "al",
      "arm",
      "clock",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " find",
      " bedroom",
      "\n",
      " find",
      "('",
      "bedroom",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " put",
      " alarm",
      " clock",
      " in",
      " bedroom",
      "\n",
      " assert",
      "('",
      "al",
      "arm",
      "clock",
      "'",
      " in",
      " '",
      "hands",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "al",
      "arm",
      "clock",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "al",
      "arm",
      "clock",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "bedroom",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "bedroom",
      "')",
      "\n",
      " put",
      "in",
      "('",
      "al",
      "arm",
      "clock",
      "',",
      " '",
      "bedroom",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.0098225465,
      -0.0032662041,
      -0.0019240561,
      -0.07227157,
      -0.031127835,
      -0.0039850785,
      -0.024524037,
      -0.0029914596,
      -0.004951834,
      -0.0015431152,
      -0.00060226076,
      -0.0065389043,
      -0.0011567133,
      -0.0011558789,
      -0.00043605478,
      -0.022115353,
      -0.0077249366,
      -0.038655713,
      -0.0107196495,
      -0.0015076578,
      -0.00039723687,
      -0.00052902347,
      -7.684431e-05,
      -0.014996749,
      -0.00047028364,
      -0.0034828247,
      -0.0005346873,
      -0.0012613268,
      -0.00024990342,
      -0.016588459,
      -0.0040780217,
      -0.009956546,
      -0.006095634,
      -0.0051932046,
      -0.00027303834,
      -0.000444405,
      -0.00042198348,
      -0.0001902296,
      -0.0002745909,
      -0.00016125533,
      -4.3465872e-05,
      -0.0023049612,
      -0.009268627,
      -0.0023527553,
      -0.00019273112,
      -0.00019893186,
      -0.00046169595,
      -0.00021145344,
      -9.997455e-05,
      -1.9980816e-05,
      -0.0005568742,
      -0.0005261615,
      -0.0015155377,
      -0.0003009416,
      -0.00019726387,
      -6.611553e-05,
      -0.00010379017,
      -0.00044642974,
      -0.0003061859,
      -0.0022593795,
      -0.00048048302,
      -0.001505986,
      -0.0003095256,
      -0.07336244,
      -0.58489877,
      -0.1662067,
      -0.00606385,
      -0.00025181074,
      -0.008557012,
      -0.00063870015,
      -0.0025434233,
      -0.00042424936,
      -0.001042502,
      -0.00025837286,
      -0.19557637,
      -0.0053035747,
      -0.005401429,
      -0.017027795,
      -0.0019171288,
      -0.008842667,
      -0.0020927757,
      -0.00015195705,
      -0.0018048025,
      -2.3556138e-05,
      -0.0021359038,
      -0.00015481713,
      -0.0006466937,
      -0.00021514892,
      -0.0003512045,
      -0.00395097,
      -4.3586017e-05,
      -0.0009429253,
      -7.9946556e-05,
      -9.9022756e-05,
      -0.00025312486,
      -0.00014563711,
      -7.839496e-05,
      -2.2159093e-06,
      -0.0004676601,
      -0.0004333111,
      -0.0009589143,
      -0.00028078974,
      -0.00010045139,
      -0.00013538517,
      -0.00016185326,
      -5.3837026e-05,
      -3.249586e-05,
      -0.000292475,
      -0.00049455435,
      -0.00069745025,
      -0.005090753,
      -0.000102479804,
      -0.00066398835,
      -0.00025694142,
      -7.016862e-05,
      -0.00017449218,
      -0.0011453744,
      -0.012930333,
      -4.1678675e-05,
      -0.00058406877,
      -8.054166e-05,
      -8.912656e-05,
      -0.0002968876,
      -0.00013466804,
      -0.00021848676,
      -0.00043963388,
      -0.0021083066,
      -0.0026457915,
      -0.002519161,
      -0.00020847135,
      -0.0001687683,
      -2.6180607e-05,
      -0.00079372677,
      -0.007832283,
      -0.00011249522,
      -0.00026481107,
      -0.000789669,
      -0.003953603,
      -0.00054327596,
      -0.0018943159,
      -0.00061764714,
      -0.055533327
     ],
     "top_logprobs": [
      {
       " #": -0.0098225465
      },
      {
       " 0": -0.0032662041
      },
      {
       ":": -0.0019240561
      },
      {
       " walk": -0.07227157
      },
      {
       " to": -0.031127835
      },
      {
       " bedroom": -0.0039850785
      },
      {
       "\n": -0.024524037
      },
      {
       " walk": -0.0029914596
      },
      {
       "('": -0.004951834
      },
      {
       "bedroom": -0.0015431152
      },
      {
       "')": -0.00060226076
      },
      {
       "\n": -0.0065389043
      },
      {
       " #": -0.0011567133
      },
      {
       " 1": -0.0011558789
      },
      {
       ":": -0.00043605478
      },
      {
       " find": -0.022115353
      },
      {
       " alarm": -0.0077249366
      },
      {
       " clock": -0.038655713
      },
      {
       "\n": -0.0107196495
      },
      {
       " find": -0.0015076578
      },
      {
       "('": -0.00039723687
      },
      {
       "al": -0.00052902347
      },
      {
       "arm": -7.684431e-05
      },
      {
       "clock": -0.014996749
      },
      {
       "')": -0.00047028364
      },
      {
       "\n": -0.0034828247
      },
      {
       " #": -0.0005346873
      },
      {
       " 2": -0.0012613268
      },
      {
       ":": -0.00024990342
      },
      {
       " grab": -0.016588459
      },
      {
       " alarm": -0.0040780217
      },
      {
       " clock": -0.009956546
      },
      {
       "\n": -0.006095634
      },
      {
       " assert": -0.0051932046
      },
      {
       "('": -0.00027303834
      },
      {
       "close": -0.000444405
      },
      {
       "'": -0.00042198348
      },
      {
       " to": -0.0001902296
      },
      {
       " '": -0.0002745909
      },
      {
       "al": -0.00016125533
      },
      {
       "arm": -4.3465872e-05
      },
      {
       "clock": -0.0023049612
      },
      {
       "')": -0.009268627
      },
      {
       "\n": -0.0023527553
      },
      {
       " else": -0.00019273112
      },
      {
       ":": -0.00019893186
      },
      {
       " find": -0.00046169595
      },
      {
       "('": -0.00021145344
      },
      {
       "al": -9.997455e-05
      },
      {
       "arm": -1.9980816e-05
      },
      {
       "clock": -0.0005568742
      },
      {
       "')": -0.0005261615
      },
      {
       "\n": -0.0015155377
      },
      {
       " grab": -0.0003009416
      },
      {
       "('": -0.00019726387
      },
      {
       "al": -6.611553e-05
      },
      {
       "arm": -0.00010379017
      },
      {
       "clock": -0.00044642974
      },
      {
       "')": -0.0003061859
      },
      {
       "\n": -0.0022593795
      },
      {
       " #": -0.00048048302
      },
      {
       " 3": -0.001505986
      },
      {
       ":": -0.0003095256
      },
      {
       " find": -0.07336244
      },
      {
       " bedroom": -0.58489877
      },
      {
       "\n": -0.1662067
      },
      {
       " find": -0.00606385
      },
      {
       "('": -0.00025181074
      },
      {
       "bedroom": -0.008557012
      },
      {
       "')": -0.00063870015
      },
      {
       "\n": -0.0025434233
      },
      {
       " #": -0.00042424936
      },
      {
       " 4": -0.001042502
      },
      {
       ":": -0.00025837286
      },
      {
       " put": -0.19557637
      },
      {
       " alarm": -0.0053035747
      },
      {
       " clock": -0.005401429
      },
      {
       " in": -0.017027795
      },
      {
       " bedroom": -0.0019171288
      },
      {
       "\n": -0.008842667
      },
      {
       " assert": -0.0020927757
      },
      {
       "('": -0.00015195705
      },
      {
       "al": -0.0018048025
      },
      {
       "arm": -2.3556138e-05
      },
      {
       "clock": -0.0021359038
      },
      {
       "'": -0.00015481713
      },
      {
       " in": -0.0006466937
      },
      {
       " '": -0.00021514892
      },
      {
       "hands": -0.0003512045
      },
      {
       "'": -0.00395097
      },
      {
       " )": -4.3586017e-05
      },
      {
       "\n": -0.0009429253
      },
      {
       " else": -7.9946556e-05
      },
      {
       ":": -9.9022756e-05
      },
      {
       " find": -0.00025312486
      },
      {
       "('": -0.00014563711
      },
      {
       "al": -7.839496e-05
      },
      {
       "arm": -2.2159093e-06
      },
      {
       "clock": -0.0004676601
      },
      {
       "')": -0.0004333111
      },
      {
       "\n": -0.0009589143
      },
      {
       " else": -0.00028078974
      },
      {
       ":": -0.00010045139
      },
      {
       " grab": -0.00013538517
      },
      {
       "('": -0.00016185326
      },
      {
       "al": -5.3837026e-05
      },
      {
       "arm": -3.249586e-05
      },
      {
       "clock": -0.000292475
      },
      {
       "')": -0.00049455435
      },
      {
       "\n": -0.00069745025
      },
      {
       " assert": -0.005090753
      },
      {
       "('": -0.000102479804
      },
      {
       "close": -0.00066398835
      },
      {
       "'": -0.00025694142
      },
      {
       " to": -7.016862e-05
      },
      {
       " '": -0.00017449218
      },
      {
       "bedroom": -0.0011453744
      },
      {
       "'": -0.012930333
      },
      {
       " )": -4.1678675e-05
      },
      {
       "\n": -0.00058406877
      },
      {
       " else": -8.054166e-05
      },
      {
       ":": -8.912656e-05
      },
      {
       " find": -0.0002968876
      },
      {
       "('": -0.00013466804
      },
      {
       "bedroom": -0.00021848676
      },
      {
       "')": -0.00043963388
      },
      {
       "\n": -0.0021083066
      },
      {
       " put": -0.0026457915
      },
      {
       "in": -0.002519161
      },
      {
       "('": -0.00020847135
      },
      {
       "al": -0.0001687683
      },
      {
       "arm": -2.6180607e-05
      },
      {
       "clock": -0.00079372677
      },
      {
       "',": -0.007832283
      },
      {
       " '": -0.00011249522
      },
      {
       "bedroom": -0.00026481107
      },
      {
       "')": -0.000789669
      },
      {
       "\n": -0.003953603
      },
      {
       " #": -0.00054327596
      },
      {
       " 5": -0.0018943159
      },
      {
       ":": -0.00061764714
      },
      {
       " Done": -0.055533327
      }
     ],
     "text_offset": [
      4729,
      4731,
      4733,
      4734,
      4739,
      4742,
      4750,
      4751,
      4756,
      4758,
      4765,
      4767,
      4768,
      4770,
      4772,
      4773,
      4778,
      4784,
      4790,
      4791,
      4796,
      4798,
      4800,
      4803,
      4808,
      4810,
      4811,
      4813,
      4815,
      4816,
      4821,
      4827,
      4833,
      4834,
      4841,
      4843,
      4848,
      4849,
      4852,
      4854,
      4856,
      4859,
      4864,
      4866,
      4867,
      4872,
      4873,
      4878,
      4880,
      4882,
      4885,
      4890,
      4892,
      4893,
      4898,
      4900,
      4902,
      4905,
      4910,
      4912,
      4913,
      4915,
      4917,
      4918,
      4923,
      4931,
      4932,
      4937,
      4939,
      4946,
      4948,
      4949,
      4951,
      4953,
      4954,
      4958,
      4964,
      4970,
      4973,
      4981,
      4982,
      4989,
      4991,
      4993,
      4996,
      5001,
      5002,
      5005,
      5007,
      5012,
      5013,
      5015,
      5016,
      5021,
      5022,
      5027,
      5029,
      5031,
      5034,
      5039,
      5041,
      5042,
      5047,
      5048,
      5053,
      5055,
      5057,
      5060,
      5065,
      5067,
      5068,
      5075,
      5077,
      5082,
      5083,
      5086,
      5088,
      5095,
      5096,
      5098,
      5099,
      5104,
      5105,
      5110,
      5112,
      5119,
      5121,
      5122,
      5126,
      5128,
      5130,
      5132,
      5135,
      5140,
      5142,
      5144,
      5151,
      5153,
      5154,
      5156,
      5158,
      5159
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Put alarm clock in bedroom",
   "task_description": "Take alarm clock. Sit it on stand, next to bed. Plug in alarm clock. Set time, according to watch. Set alarm, depending on what time you have to get up.",
   "program": [
    "[Walk] <bedroom> (1)",
    "[Walk] <alarm_clock> (1)",
    "[Find] <alarm_clock> (1)",
    "[Grab] <alarm_clock> (1)",
    "[Find] <dresser> (1)",
    "[Open] <dresser> (1)",
    "[PutBack] <alarm_clock> (1) <dresser> (1)",
    "[SwitchOn] <alarm_clock> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_kellensecond",
   "file_id": "split11_6",
   "goal_condition": [
    [
     [
      240,
      162,
      "INSIDE",
      "character",
      "bedroom"
     ],
     [
      1000,
      1001,
      "ON",
      "alarm_clock",
      "dresser"
     ]
    ],
    [
     [
      1001,
      "dresser",
      "OPEN"
     ],
     [
      1000,
      "alarm_clock",
      "ON"
     ]
    ]
   ]
  }
 },
 "10": {
  "plan": [
   [
    " # 0: find chair\n find('chair')\n # 1: sit in chair\n assert('close' to 'chair')\n else: find('chair')\n sit('chair')\n # 2: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " chair",
      "\n",
      " find",
      "('",
      "chair",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " sit",
      " in",
      " chair",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "chair",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "chair",
      "')",
      "\n",
      " sit",
      "('",
      "chair",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.015384536,
      -0.0060369866,
      -0.0017907696,
      -0.56759346,
      -0.018763263,
      -0.021714652,
      -0.00315259,
      -0.0012538674,
      -0.0006630347,
      -0.0004292552,
      -0.006042443,
      -0.00085659855,
      -0.0013071621,
      -0.00052461185,
      -1.3226272,
      -0.19889662,
      -0.013001886,
      -0.009766331,
      -0.028577292,
      -0.0008075043,
      -0.0047157314,
      -0.0009862984,
      -0.00020978546,
      -0.00080499804,
      -0.00027482552,
      -0.0998018,
      -0.005782165,
      -0.0003372524,
      -0.00047076144,
      -0.0011426316,
      -0.00069649564,
      -0.0002358368,
      -0.0010965646,
      -0.0052128565,
      -0.008180873,
      -0.0015695617,
      -0.00078597065,
      -0.0005522222,
      -0.009938788,
      -0.00097401056,
      -0.0035412638,
      -0.0009729368,
      -0.047083203
     ],
     "top_logprobs": [
      {
       " #": -0.015384536
      },
      {
       " 0": -0.0060369866
      },
      {
       ":": -0.0017907696
      },
      {
       " find": -0.56759346
      },
      {
       " chair": -0.018763263
      },
      {
       "\n": -0.021714652
      },
      {
       " find": -0.00315259
      },
      {
       "('": -0.0012538674
      },
      {
       "chair": -0.0006630347
      },
      {
       "')": -0.0004292552
      },
      {
       "\n": -0.006042443
      },
      {
       " #": -0.00085659855
      },
      {
       " 1": -0.0013071621
      },
      {
       ":": -0.00052461185
      },
      {
       " walk": -0.62922776
      },
      {
       " in": -0.19889662
      },
      {
       " chair": -0.013001886
      },
      {
       "\n": -0.009766331
      },
      {
       " assert": -0.028577292
      },
      {
       "('": -0.0008075043
      },
      {
       "close": -0.0047157314
      },
      {
       "'": -0.0009862984
      },
      {
       " to": -0.00020978546
      },
      {
       " '": -0.00080499804
      },
      {
       "chair": -0.00027482552
      },
      {
       "')": -0.0998018
      },
      {
       "\n": -0.005782165
      },
      {
       " else": -0.0003372524
      },
      {
       ":": -0.00047076144
      },
      {
       " find": -0.0011426316
      },
      {
       "('": -0.00069649564
      },
      {
       "chair": -0.0002358368
      },
      {
       "')": -0.0010965646
      },
      {
       "\n": -0.0052128565
      },
      {
       " sit": -0.008180873
      },
      {
       "('": -0.0015695617
      },
      {
       "chair": -0.00078597065
      },
      {
       "')": -0.0005522222
      },
      {
       "\n": -0.009938788
      },
      {
       " #": -0.00097401056
      },
      {
       " 2": -0.0035412638
      },
      {
       ":": -0.0009729368
      },
      {
       " Done": -0.047083203
      }
     ],
     "text_offset": [
      4715,
      4717,
      4719,
      4720,
      4725,
      4731,
      4732,
      4737,
      4739,
      4744,
      4746,
      4747,
      4749,
      4751,
      4752,
      4756,
      4759,
      4765,
      4766,
      4773,
      4775,
      4780,
      4781,
      4784,
      4786,
      4791,
      4793,
      4794,
      4799,
      4800,
      4805,
      4807,
      4812,
      4814,
      4815,
      4819,
      4821,
      4826,
      4828,
      4829,
      4831,
      4833,
      4834
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Sit in chair",
   "task_description": "I sit in a chair to rest and eat.",
   "program": [
    "[Walk] <dining_room> (1)",
    "[Walk] <chair> (1)",
    "[Find] <chair> (1)",
    "[Pull] <chair> (1)",
    "[Sit] <chair> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_kellensecond",
   "file_id": "split8_7",
   "goal_condition": [
    [
     [
      240,
      41,
      "INSIDE",
      "character",
      "dining_room"
     ],
     [
      240,
      1000,
      "ON",
      "character",
      "chair"
     ]
    ],
    [
     [
      240,
      "character",
      "SITTING"
     ]
    ]
   ]
  }
 },
 "11": {
  "plan": [
   [
    " # 0: walk to bathroom\n walk('bathroom')\n # 1: find window\n find('window')\n # 2: open window\n assert('close' to 'window' )\n else: find('window')\n assert('window' is 'closed' )\n else: close('window')\n open('window')\n # 3: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " bathroom",
      "\n",
      " walk",
      "('",
      "bath",
      "room",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " window",
      "\n",
      " find",
      "('",
      "window",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " open",
      " window",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "window",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "window",
      "')",
      "\n",
      " assert",
      "('",
      "window",
      "'",
      " is",
      " '",
      "closed",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " close",
      "('",
      "window",
      "')",
      "\n",
      " open",
      "('",
      "window",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.012902315,
      -0.004080654,
      -0.0027451823,
      -0.055360958,
      -0.036407817,
      -0.021744132,
      -0.024870627,
      -0.003756985,
      -0.0047597503,
      -0.0010777671,
      -0.000102240454,
      -0.0008710941,
      -0.0077796006,
      -0.0012743383,
      -0.0015941572,
      -0.00054196373,
      -0.049161483,
      -0.1165177,
      -0.015231352,
      -0.0026633611,
      -0.0009743682,
      -0.0042473464,
      -0.0005708301,
      -0.0053868666,
      -0.0010833183,
      -0.0018110126,
      -0.00088099967,
      -0.054062296,
      -0.00977831,
      -0.0095213875,
      -0.010979108,
      -0.00084741286,
      -0.022606507,
      -0.0012754104,
      -0.00018796182,
      -0.0007470167,
      -0.0003553787,
      -0.3584265,
      -0.00010808168,
      -0.0030866412,
      -0.0002410829,
      -0.00027792776,
      -0.0006372678,
      -0.00041411104,
      -0.00017568239,
      -0.00052890525,
      -0.0025743172,
      -0.014243807,
      -0.00039962292,
      -0.00048179337,
      -0.0006293371,
      -0.0004895429,
      -0.00059200136,
      -0.009863961,
      -0.0129754385,
      -8.018216e-05,
      -0.0017287907,
      -0.00012560723,
      -0.00018748498,
      -0.0056514805,
      -0.00036837524,
      -0.0001643557,
      -0.00092842686,
      -0.002701432,
      -0.0009693577,
      -0.00028925636,
      -9.699527e-05,
      -0.0008100076,
      -0.004518785,
      -0.0010018698,
      -0.002902925,
      -0.0010542577,
      -0.052630715
     ],
     "top_logprobs": [
      {
       " #": -0.012902315
      },
      {
       " 0": -0.004080654
      },
      {
       ":": -0.0027451823
      },
      {
       " walk": -0.055360958
      },
      {
       " to": -0.036407817
      },
      {
       " bathroom": -0.021744132
      },
      {
       "\n": -0.024870627
      },
      {
       " walk": -0.003756985
      },
      {
       "('": -0.0047597503
      },
      {
       "bath": -0.0010777671
      },
      {
       "room": -0.000102240454
      },
      {
       "')": -0.0008710941
      },
      {
       "\n": -0.0077796006
      },
      {
       " #": -0.0012743383
      },
      {
       " 1": -0.0015941572
      },
      {
       ":": -0.00054196373
      },
      {
       " find": -0.049161483
      },
      {
       " window": -0.1165177
      },
      {
       "\n": -0.015231352
      },
      {
       " find": -0.0026633611
      },
      {
       "('": -0.0009743682
      },
      {
       "window": -0.0042473464
      },
      {
       "')": -0.0005708301
      },
      {
       "\n": -0.0053868666
      },
      {
       " #": -0.0010833183
      },
      {
       " 2": -0.0018110126
      },
      {
       ":": -0.00088099967
      },
      {
       " open": -0.054062296
      },
      {
       " window": -0.00977831
      },
      {
       "\n": -0.0095213875
      },
      {
       " assert": -0.010979108
      },
      {
       "('": -0.00084741286
      },
      {
       "close": -0.022606507
      },
      {
       "'": -0.0012754104
      },
      {
       " to": -0.00018796182
      },
      {
       " '": -0.0007470167
      },
      {
       "window": -0.0003553787
      },
      {
       "'": -0.3584265
      },
      {
       " )": -0.00010808168
      },
      {
       "\n": -0.0030866412
      },
      {
       " else": -0.0002410829
      },
      {
       ":": -0.00027792776
      },
      {
       " find": -0.0006372678
      },
      {
       "('": -0.00041411104
      },
      {
       "window": -0.00017568239
      },
      {
       "')": -0.00052890525
      },
      {
       "\n": -0.0025743172
      },
      {
       " assert": -0.014243807
      },
      {
       "('": -0.00039962292
      },
      {
       "window": -0.00048179337
      },
      {
       "'": -0.0006293371
      },
      {
       " is": -0.0004895429
      },
      {
       " '": -0.00059200136
      },
      {
       "closed": -0.009863961
      },
      {
       "'": -0.0129754385
      },
      {
       " )": -8.018216e-05
      },
      {
       "\n": -0.0017287907
      },
      {
       " else": -0.00012560723
      },
      {
       ":": -0.00018748498
      },
      {
       " close": -0.0056514805
      },
      {
       "('": -0.00036837524
      },
      {
       "window": -0.0001643557
      },
      {
       "')": -0.00092842686
      },
      {
       "\n": -0.002701432
      },
      {
       " open": -0.0009693577
      },
      {
       "('": -0.00028925636
      },
      {
       "window": -9.699527e-05
      },
      {
       "')": -0.0008100076
      },
      {
       "\n": -0.004518785
      },
      {
       " #": -0.0010018698
      },
      {
       " 3": -0.002902925
      },
      {
       ":": -0.0010542577
      },
      {
       " Done": -0.052630715
      }
     ],
     "text_offset": [
      4723,
      4725,
      4727,
      4728,
      4733,
      4736,
      4745,
      4746,
      4751,
      4753,
      4757,
      4761,
      4763,
      4764,
      4766,
      4768,
      4769,
      4774,
      4781,
      4782,
      4787,
      4789,
      4795,
      4797,
      4798,
      4800,
      4802,
      4803,
      4808,
      4815,
      4816,
      4823,
      4825,
      4830,
      4831,
      4834,
      4836,
      4842,
      4843,
      4845,
      4846,
      4851,
      4852,
      4857,
      4859,
      4865,
      4867,
      4868,
      4875,
      4877,
      4883,
      4884,
      4887,
      4889,
      4895,
      4896,
      4898,
      4899,
      4904,
      4905,
      4911,
      4913,
      4919,
      4921,
      4922,
      4927,
      4929,
      4935,
      4937,
      4938,
      4940,
      4942,
      4943
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Open bathroom window",
   "task_description": "Make sure bathroom window is unlocked. Lift up bathroom window so it is open.",
   "program": [
    "[Walk] <bathroom> (1)",
    "[Walk] <window> (1)",
    "[Find] <window> (1)",
    "[Open] <window> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_kellensecond",
   "file_id": "split7_3",
   "goal_condition": [
    [
     [
      240,
      1,
      "INSIDE",
      "character",
      "bathroom"
     ]
    ],
    [
     [
      1000,
      "window",
      "OPEN"
     ]
    ]
   ]
  }
 },
 "12": {
  "plan": [
   [
    " # 0: walk to home office\n walk('home_office')\n # 1: find computer\n find('computer')\n # 2: switch on computer\n assert('close' to 'computer' )\n else: find('computer')\n assert('computer' is 'switchoff' )\n else: switchoff('computer')\n switchon('computer')\n # 3: find mouse\n find('mouse')\n # 4: grab mouse\n assert('close' to 'mouse')\n else: find('mouse')\n grab('mouse')\n # 5: find mousepad\n find('mousepad')\n # 6: put mouse on mousepad\n assert('mouse' in 'hands' )\n else: find('mouse')\n else: grab('mouse')\n assert('close' to 'mousepad' )\n else: find('mousepad')\n putin('mouse', 'mousepad')\n # 7: open program\n find('computer')\n assert('close' to 'computer' )\n else: find('computer')\n open('program')\n # 8: use program\n # 9: close program\n find('computer')\n assert('close' to 'computer' )\n else: find('computer')\n close('program')\n # 10: switch off computer\n assert('close' to 'computer' )\n else: find('computer')\n assert('computer' is 'switchon' )\n else: switchon('computer')\n switchoff('computer')\n # 11: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " home",
      " office",
      "\n",
      " walk",
      "('",
      "home",
      "_",
      "office",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " computer",
      "\n",
      " find",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " switch",
      " on",
      " computer",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "computer",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "computer",
      "')",
      "\n",
      " assert",
      "('",
      "computer",
      "'",
      " is",
      " '",
      "switch",
      "off",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " switch",
      "off",
      "('",
      "computer",
      "')",
      "\n",
      " switch",
      "on",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " find",
      " mouse",
      "\n",
      " find",
      "('",
      "mouse",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " grab",
      " mouse",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "mouse",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "mouse",
      "')",
      "\n",
      " grab",
      "('",
      "mouse",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " find",
      " mouse",
      "pad",
      "\n",
      " find",
      "('",
      "mouse",
      "pad",
      "')",
      "\n",
      " #",
      " 6",
      ":",
      " put",
      " mouse",
      " on",
      " mouse",
      "pad",
      "\n",
      " assert",
      "('",
      "mouse",
      "'",
      " in",
      " '",
      "hands",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "mouse",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "mouse",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "mouse",
      "pad",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "mouse",
      "pad",
      "')",
      "\n",
      " put",
      "in",
      "('",
      "mouse",
      "',",
      " '",
      "mouse",
      "pad",
      "')",
      "\n",
      " #",
      " 7",
      ":",
      " open",
      " program",
      "\n",
      " find",
      "('",
      "computer",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "computer",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "computer",
      "')",
      "\n",
      " open",
      "('",
      "program",
      "')",
      "\n",
      " #",
      " 8",
      ":",
      " use",
      " program",
      "\n",
      " #",
      " 9",
      ":",
      " close",
      " program",
      "\n",
      " find",
      "('",
      "computer",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "computer",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "computer",
      "')",
      "\n",
      " close",
      "('",
      "program",
      "')",
      "\n",
      " #",
      " 10",
      ":",
      " switch",
      " off",
      " computer",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "computer",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "computer",
      "')",
      "\n",
      " assert",
      "('",
      "computer",
      "'",
      " is",
      " '",
      "switch",
      "on",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " switch",
      "on",
      "('",
      "computer",
      "')",
      "\n",
      " switch",
      "off",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 11",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.013865581,
      -0.0060014245,
      -0.0033505866,
      -0.24003682,
      -0.068692364,
      -0.7882777,
      -0.13175483,
      -0.027150251,
      -0.005207643,
      -0.010329082,
      -0.009853729,
      -1.8544022,
      -0.00068599783,
      -0.0010072426,
      -0.008800092,
      -0.0011127337,
      -0.0024373606,
      -0.0005617646,
      -0.20052505,
      -0.037334114,
      -0.012258161,
      -0.00294465,
      -0.0008702596,
      -0.0006299322,
      -0.00054840755,
      -0.0049547693,
      -0.0007686714,
      -0.0020356765,
      -0.00068122573,
      -0.9623108,
      -0.12770656,
      -0.03874035,
      -0.009674065,
      -0.15565321,
      -0.0006773481,
      -0.005696978,
      -0.0011037227,
      -0.00022325605,
      -0.0011104669,
      -0.00039222822,
      -0.50198185,
      -0.000107007865,
      -0.0028144547,
      -0.0003033258,
      -0.00033916067,
      -0.00080619013,
      -0.00039199076,
      -0.000106533844,
      -0.00036337037,
      -0.0030323537,
      -0.10800323,
      -0.0003773206,
      -0.00034953654,
      -0.00064776564,
      -0.00048036288,
      -0.0009950692,
      -0.013160591,
      -0.0016191732,
      -0.010199186,
      -6.09933e-05,
      -0.001805161,
      -0.0003051177,
      -0.00017759066,
      -0.00038626595,
      -0.0014882567,
      -0.00032920254,
      -0.00017067656,
      -0.00091673416,
      -0.002815293,
      -0.00040045741,
      -6.158372e-05,
      -0.00019845407,
      -0.00022850404,
      -0.0004164971,
      -0.002956189,
      -0.00087455584,
      -0.0019649626,
      -0.0006154986,
      -1.1575541,
      -0.62500775,
      -0.07598115,
      -0.00554323,
      -0.00058168365,
      -0.0003625331,
      -0.0010293778,
      -0.0034489695,
      -0.0045329137,
      -0.0014294606,
      -0.0005682056,
      -0.30147737,
      -0.0024913142,
      -0.012347888,
      -0.010863529,
      -0.00030356515,
      -0.0012731435,
      -0.00057715003,
      -8.0899285e-05,
      -0.00057667313,
      -0.0002880624,
      -0.044731244,
      -0.0017648564,
      -0.00011869313,
      -0.00021157267,
      -0.0004642021,
      -0.00016185326,
      -0.00024429872,
      -0.00021586417,
      -0.0016277712,
      -0.00046730434,
      -0.00028078974,
      -9.842577e-05,
      -9.997455e-05,
      -0.0034801925,
      -0.00087885105,
      -0.0020108917,
      -0.00051304104,
      -0.70276344,
      -0.7873343,
      -0.1786558,
      -0.0103504015,
      -0.0034800724,
      -0.0003813765,
      -0.00016960275,
      -0.0002775683,
      -0.00032383628,
      -0.0025485023,
      -0.0010632077,
      -0.0020576578,
      -0.00047702223,
      -0.637037,
      -0.0056309225,
      -0.03770975,
      -0.011689016,
      -0.028715177,
      -0.007869997,
      -0.04475188,
      -0.00036110257,
      -0.0216323,
      -0.0006137095,
      -0.0026444755,
      -0.00043319192,
      -0.001194785,
      -0.009942098,
      -6.325358e-05,
      -0.00129994,
      -0.0001233404,
      -0.00018987012,
      -0.00086292316,
      -0.0002528855,
      -0.00032860556,
      -0.0019337907,
      -0.00104847,
      -0.00071534567,
      -0.00017985563,
      -0.0003960448,
      -0.00030928716,
      -0.00017151104,
      -0.0007356825,
      -0.0013562224,
      -0.007817625,
      -0.00017616016,
      -0.0015294439,
      -0.00031429582,
      -0.0002853206,
      -0.00035442502,
      -0.00019046802,
      -0.00082611677,
      -0.019949794,
      -5.5385808e-05,
      -0.0006817035,
      -0.00011261161,
      -0.00014527855,
      -0.0002107382,
      -0.00022927843,
      -0.00022170728,
      -0.0002773308,
      -0.00042341586,
      -0.0018988543,
      -0.004160314,
      -0.021099862,
      -0.00033146844,
      -0.0002107382,
      -0.024815388,
      -0.00012572645,
      -0.00014170136,
      -0.00017902305,
      -0.0005578269,
      -0.0032508948,
      -0.0007352056,
      -0.0034017814,
      -0.00076640357,
      -2.4190233,
      -3.1680124,
      -0.11652508,
      -2.4298203,
      -0.0017824701,
      -0.9139089,
      -0.009451827,
      -0.005063077,
      -0.29194218,
      -0.0009504429,
      -0.122786485,
      -0.0010452494,
      -0.00016805116,
      -0.00043390904,
      -0.009301114,
      -0.0638153,
      -0.00012465262,
      -0.0020356765,
      -0.00028412943,
      -0.00044285253,
      -0.0007041307,
      -0.00035967113,
      -0.000539221,
      -0.00036181876,
      -0.0029463838,
      -0.5466591,
      -0.008662942,
      -0.5632031,
      -0.01744209,
      -0.009652999,
      -0.0011527737,
      -0.0013673238,
      -0.0012184783,
      -0.51863533,
      -0.3028436,
      -0.027497077,
      -0.9986247,
      -0.0063914447,
      -0.001422417,
      -0.32325286,
      -0.027845312,
      -0.014415768,
      -1.1649766,
      -0.00038065936,
      -0.032539353,
      -0.00073675625,
      -0.0026380215,
      -0.10326349,
      -0.00023977255,
      -0.09581463,
      -0.00048465535,
      -5.037998e-05,
      -0.0002917607,
      -0.009186091,
      -0.011062573,
      -0.00015946814,
      -0.0007761871,
      -0.00010068981,
      -0.0002192039,
      -0.00028901699,
      -0.00028639348,
      -0.00033319838,
      -0.00043283522,
      -0.001729626,
      -0.040717047,
      -0.0003581233,
      -0.00074272143,
      -0.00083160505,
      -0.0050704456,
      -0.0010011544,
      -0.00382262,
      -0.002033526,
      -0.270537,
      -0.06455933,
      -0.00353875,
      -0.009741654,
      -0.1736129,
      -0.00019237537,
      -0.009522292,
      -0.00026373632,
      -0.000104625564,
      -0.00024406594,
      -0.00030046387,
      -0.009721612,
      -6.468596e-05,
      -0.00076700153,
      -9.305951e-05,
      -0.00012179443,
      -0.00024370644,
      -0.00022134777,
      -0.00018378951,
      -0.0005896153,
      -0.0010388028,
      -0.11329771,
      -0.00014206085,
      -0.0004609816,
      -0.0003209734,
      -0.00022707166,
      -0.00045108353,
      -0.0048906184,
      -0.00083667657,
      -0.0037958142,
      -5.9085025e-05,
      -0.00061406806,
      -0.0002528855,
      -0.0003841183,
      -0.0006675693,
      -0.0033734916,
      -0.00027148862,
      -0.00019225522,
      -0.0016173823,
      -0.0018658907,
      -0.00032717505,
      -0.0006648256,
      -0.00029008894,
      -0.00021729656,
      -0.000872886,
      -0.0057691564,
      -0.0012410942,
      -0.0027395645,
      -0.0020393196,
      -0.08994603
     ],
     "top_logprobs": [
      {
       " #": -0.013865581
      },
      {
       " 0": -0.0060014245
      },
      {
       ":": -0.0033505866
      },
      {
       " walk": -0.24003682
      },
      {
       " to": -0.068692364
      },
      {
       " home": -0.7882777
      },
      {
       " office": -0.13175483
      },
      {
       "\n": -0.027150251
      },
      {
       " walk": -0.005207643
      },
      {
       "('": -0.010329082
      },
      {
       "home": -0.009853729
      },
      {
       "office": -0.33865896
      },
      {
       "office": -0.00068599783
      },
      {
       "')": -0.0010072426
      },
      {
       "\n": -0.008800092
      },
      {
       " #": -0.0011127337
      },
      {
       " 1": -0.0024373606
      },
      {
       ":": -0.0005617646
      },
      {
       " find": -0.20052505
      },
      {
       " computer": -0.037334114
      },
      {
       "\n": -0.012258161
      },
      {
       " find": -0.00294465
      },
      {
       "('": -0.0008702596
      },
      {
       "computer": -0.0006299322
      },
      {
       "')": -0.00054840755
      },
      {
       "\n": -0.0049547693
      },
      {
       " #": -0.0007686714
      },
      {
       " 2": -0.0020356765
      },
      {
       ":": -0.00068122573
      },
      {
       " turn": -0.67920876
      },
      {
       " on": -0.12770656
      },
      {
       " computer": -0.03874035
      },
      {
       "\n": -0.009674065
      },
      {
       " assert": -0.15565321
      },
      {
       "('": -0.0006773481
      },
      {
       "close": -0.005696978
      },
      {
       "'": -0.0011037227
      },
      {
       " to": -0.00022325605
      },
      {
       " '": -0.0011104669
      },
      {
       "computer": -0.00039222822
      },
      {
       "'": -0.50198185
      },
      {
       " )": -0.000107007865
      },
      {
       "\n": -0.0028144547
      },
      {
       " else": -0.0003033258
      },
      {
       ":": -0.00033916067
      },
      {
       " find": -0.00080619013
      },
      {
       "('": -0.00039199076
      },
      {
       "computer": -0.000106533844
      },
      {
       "')": -0.00036337037
      },
      {
       "\n": -0.0030323537
      },
      {
       " assert": -0.10800323
      },
      {
       "('": -0.0003773206
      },
      {
       "computer": -0.00034953654
      },
      {
       "'": -0.00064776564
      },
      {
       " is": -0.00048036288
      },
      {
       " '": -0.0009950692
      },
      {
       "switch": -0.013160591
      },
      {
       "off": -0.0016191732
      },
      {
       "'": -0.010199186
      },
      {
       " )": -6.09933e-05
      },
      {
       "\n": -0.001805161
      },
      {
       " else": -0.0003051177
      },
      {
       ":": -0.00017759066
      },
      {
       " switch": -0.00038626595
      },
      {
       "off": -0.0014882567
      },
      {
       "('": -0.00032920254
      },
      {
       "computer": -0.00017067656
      },
      {
       "')": -0.00091673416
      },
      {
       "\n": -0.002815293
      },
      {
       " switch": -0.00040045741
      },
      {
       "on": -6.158372e-05
      },
      {
       "('": -0.00019845407
      },
      {
       "computer": -0.00022850404
      },
      {
       "')": -0.0004164971
      },
      {
       "\n": -0.002956189
      },
      {
       " #": -0.00087455584
      },
      {
       " 3": -0.0019649626
      },
      {
       ":": -0.0006154986
      },
      {
       " find": -1.1575541
      },
      {
       " mouse": -0.62500775
      },
      {
       "\n": -0.07598115
      },
      {
       " find": -0.00554323
      },
      {
       "('": -0.00058168365
      },
      {
       "mouse": -0.0003625331
      },
      {
       "')": -0.0010293778
      },
      {
       "\n": -0.0034489695
      },
      {
       " #": -0.0045329137
      },
      {
       " 4": -0.0014294606
      },
      {
       ":": -0.0005682056
      },
      {
       " grab": -0.30147737
      },
      {
       " mouse": -0.0024913142
      },
      {
       "\n": -0.012347888
      },
      {
       " assert": -0.010863529
      },
      {
       "('": -0.00030356515
      },
      {
       "close": -0.0012731435
      },
      {
       "'": -0.00057715003
      },
      {
       " to": -8.0899285e-05
      },
      {
       " '": -0.00057667313
      },
      {
       "mouse": -0.0002880624
      },
      {
       "')": -0.044731244
      },
      {
       "\n": -0.0017648564
      },
      {
       " else": -0.00011869313
      },
      {
       ":": -0.00021157267
      },
      {
       " find": -0.0004642021
      },
      {
       "('": -0.00016185326
      },
      {
       "mouse": -0.00024429872
      },
      {
       "')": -0.00021586417
      },
      {
       "\n": -0.0016277712
      },
      {
       " grab": -0.00046730434
      },
      {
       "('": -0.00028078974
      },
      {
       "mouse": -9.842577e-05
      },
      {
       "')": -9.997455e-05
      },
      {
       "\n": -0.0034801925
      },
      {
       " #": -0.00087885105
      },
      {
       " 5": -0.0020108917
      },
      {
       ":": -0.00051304104
      },
      {
       " find": -0.70276344
      },
      {
       " keyboard": -0.6571968
      },
      {
       "pad": -0.1786558
      },
      {
       "\n": -0.0103504015
      },
      {
       " find": -0.0034800724
      },
      {
       "('": -0.0003813765
      },
      {
       "mouse": -0.00016960275
      },
      {
       "pad": -0.0002775683
      },
      {
       "')": -0.00032383628
      },
      {
       "\n": -0.0025485023
      },
      {
       " #": -0.0010632077
      },
      {
       " 6": -0.0020576578
      },
      {
       ":": -0.00047702223
      },
      {
       " put": -0.637037
      },
      {
       " mouse": -0.0056309225
      },
      {
       " on": -0.03770975
      },
      {
       " mouse": -0.011689016
      },
      {
       "pad": -0.028715177
      },
      {
       "\n": -0.007869997
      },
      {
       " assert": -0.04475188
      },
      {
       "('": -0.00036110257
      },
      {
       "mouse": -0.0216323
      },
      {
       "'": -0.0006137095
      },
      {
       " in": -0.0026444755
      },
      {
       " '": -0.00043319192
      },
      {
       "hands": -0.001194785
      },
      {
       "'": -0.009942098
      },
      {
       " )": -6.325358e-05
      },
      {
       "\n": -0.00129994
      },
      {
       " else": -0.0001233404
      },
      {
       ":": -0.00018987012
      },
      {
       " find": -0.00086292316
      },
      {
       "('": -0.0002528855
      },
      {
       "mouse": -0.00032860556
      },
      {
       "')": -0.0019337907
      },
      {
       "\n": -0.00104847
      },
      {
       " else": -0.00071534567
      },
      {
       ":": -0.00017985563
      },
      {
       " grab": -0.0003960448
      },
      {
       "('": -0.00030928716
      },
      {
       "mouse": -0.00017151104
      },
      {
       "')": -0.0007356825
      },
      {
       "\n": -0.0013562224
      },
      {
       " assert": -0.007817625
      },
      {
       "('": -0.00017616016
      },
      {
       "close": -0.0015294439
      },
      {
       "'": -0.00031429582
      },
      {
       " to": -0.0002853206
      },
      {
       " '": -0.00035442502
      },
      {
       "mouse": -0.00019046802
      },
      {
       "pad": -0.00082611677
      },
      {
       "'": -0.019949794
      },
      {
       " )": -5.5385808e-05
      },
      {
       "\n": -0.0006817035
      },
      {
       " else": -0.00011261161
      },
      {
       ":": -0.00014527855
      },
      {
       " find": -0.0002107382
      },
      {
       "('": -0.00022927843
      },
      {
       "mouse": -0.00022170728
      },
      {
       "pad": -0.0002773308
      },
      {
       "')": -0.00042341586
      },
      {
       "\n": -0.0018988543
      },
      {
       " put": -0.004160314
      },
      {
       "in": -0.021099862
      },
      {
       "('": -0.00033146844
      },
      {
       "mouse": -0.0002107382
      },
      {
       "',": -0.024815388
      },
      {
       " '": -0.00012572645
      },
      {
       "mouse": -0.00014170136
      },
      {
       "pad": -0.00017902305
      },
      {
       "')": -0.0005578269
      },
      {
       "\n": -0.0032508948
      },
      {
       " #": -0.0007352056
      },
      {
       " 7": -0.0034017814
      },
      {
       ":": -0.00076640357
      },
      {
       " find": -0.7782055
      },
      {
       " web": -1.730061
      },
      {
       "\n": -0.11652508
      },
      {
       " #": -0.5075505
      },
      {
       "('": -0.0017824701
      },
      {
       "program": -0.5897417
      },
      {
       "')": -0.009451827
      },
      {
       "\n": -0.005063077
      },
      {
       " assert": -0.29194218
      },
      {
       "('": -0.0009504429
      },
      {
       "close": -0.122786485
      },
      {
       "'": -0.0010452494
      },
      {
       " to": -0.00016805116
      },
      {
       " '": -0.00043390904
      },
      {
       "computer": -0.009301114
      },
      {
       "'": -0.0638153
      },
      {
       " )": -0.00012465262
      },
      {
       "\n": -0.0020356765
      },
      {
       " else": -0.00028412943
      },
      {
       ":": -0.00044285253
      },
      {
       " find": -0.0007041307
      },
      {
       "('": -0.00035967113
      },
      {
       "computer": -0.000539221
      },
      {
       "')": -0.00036181876
      },
      {
       "\n": -0.0029463838
      },
      {
       " open": -0.5466591
      },
      {
       "('": -0.008662942
      },
      {
       "program": -0.5632031
      },
      {
       "')": -0.01744209
      },
      {
       "\n": -0.009652999
      },
      {
       " #": -0.0011527737
      },
      {
       " 8": -0.0013673238
      },
      {
       ":": -0.0012184783
      },
      {
       " use": -0.51863533
      },
      {
       " program": -0.3028436
      },
      {
       "\n": -0.027497077
      },
      {
       " #": -0.9986247
      },
      {
       " 9": -0.0063914447
      },
      {
       ":": -0.001422417
      },
      {
       " close": -0.32325286
      },
      {
       " program": -0.027845312
      },
      {
       "\n": -0.014415768
      },
      {
       " #": -0.67195565
      },
      {
       "('": -0.00038065936
      },
      {
       "computer": -0.032539353
      },
      {
       "')": -0.00073675625
      },
      {
       "\n": -0.0026380215
      },
      {
       " assert": -0.10326349
      },
      {
       "('": -0.00023977255
      },
      {
       "close": -0.09581463
      },
      {
       "'": -0.00048465535
      },
      {
       " to": -5.037998e-05
      },
      {
       " '": -0.0002917607
      },
      {
       "computer": -0.009186091
      },
      {
       "'": -0.011062573
      },
      {
       " )": -0.00015946814
      },
      {
       "\n": -0.0007761871
      },
      {
       " else": -0.00010068981
      },
      {
       ":": -0.0002192039
      },
      {
       " find": -0.00028901699
      },
      {
       "('": -0.00028639348
      },
      {
       "computer": -0.00033319838
      },
      {
       "')": -0.00043283522
      },
      {
       "\n": -0.001729626
      },
      {
       " close": -0.040717047
      },
      {
       "('": -0.0003581233
      },
      {
       "program": -0.00074272143
      },
      {
       "')": -0.00083160505
      },
      {
       "\n": -0.0050704456
      },
      {
       " #": -0.0010011544
      },
      {
       " 10": -0.00382262
      },
      {
       ":": -0.002033526
      },
      {
       " switch": -0.270537
      },
      {
       " off": -0.06455933
      },
      {
       " computer": -0.00353875
      },
      {
       "\n": -0.009741654
      },
      {
       " assert": -0.1736129
      },
      {
       "('": -0.00019237537
      },
      {
       "close": -0.009522292
      },
      {
       "'": -0.00026373632
      },
      {
       " to": -0.000104625564
      },
      {
       " '": -0.00024406594
      },
      {
       "computer": -0.00030046387
      },
      {
       "'": -0.009721612
      },
      {
       " )": -6.468596e-05
      },
      {
       "\n": -0.00076700153
      },
      {
       " else": -9.305951e-05
      },
      {
       ":": -0.00012179443
      },
      {
       " find": -0.00024370644
      },
      {
       "('": -0.00022134777
      },
      {
       "computer": -0.00018378951
      },
      {
       "')": -0.0005896153
      },
      {
       "\n": -0.0010388028
      },
      {
       " assert": -0.11329771
      },
      {
       "('": -0.00014206085
      },
      {
       "computer": -0.0004609816
      },
      {
       "'": -0.0003209734
      },
      {
       " is": -0.00022707166
      },
      {
       " '": -0.00045108353
      },
      {
       "switch": -0.0048906184
      },
      {
       "on": -0.00083667657
      },
      {
       "'": -0.0037958142
      },
      {
       " )": -5.9085025e-05
      },
      {
       "\n": -0.00061406806
      },
      {
       " else": -0.0002528855
      },
      {
       ":": -0.0003841183
      },
      {
       " switch": -0.0006675693
      },
      {
       "on": -0.0033734916
      },
      {
       "('": -0.00027148862
      },
      {
       "computer": -0.00019225522
      },
      {
       "')": -0.0016173823
      },
      {
       "\n": -0.0018658907
      },
      {
       " switch": -0.00032717505
      },
      {
       "off": -0.0006648256
      },
      {
       "('": -0.00029008894
      },
      {
       "computer": -0.00021729656
      },
      {
       "')": -0.000872886
      },
      {
       "\n": -0.0057691564
      },
      {
       " #": -0.0012410942
      },
      {
       " 11": -0.0027395645
      },
      {
       ":": -0.0020393196
      },
      {
       " Done": -0.08994603
      }
     ],
     "text_offset": [
      4715,
      4717,
      4719,
      4720,
      4725,
      4728,
      4733,
      4740,
      4741,
      4746,
      4748,
      4752,
      4753,
      4759,
      4761,
      4762,
      4764,
      4766,
      4767,
      4772,
      4781,
      4782,
      4787,
      4789,
      4797,
      4799,
      4800,
      4802,
      4804,
      4805,
      4812,
      4815,
      4824,
      4825,
      4832,
      4834,
      4839,
      4840,
      4843,
      4845,
      4853,
      4854,
      4856,
      4857,
      4862,
      4863,
      4868,
      4870,
      4878,
      4880,
      4881,
      4888,
      4890,
      4898,
      4899,
      4902,
      4904,
      4910,
      4913,
      4914,
      4916,
      4917,
      4922,
      4923,
      4930,
      4933,
      4935,
      4943,
      4945,
      4946,
      4953,
      4955,
      4957,
      4965,
      4967,
      4968,
      4970,
      4972,
      4973,
      4978,
      4984,
      4985,
      4990,
      4992,
      4997,
      4999,
      5000,
      5002,
      5004,
      5005,
      5010,
      5016,
      5017,
      5024,
      5026,
      5031,
      5032,
      5035,
      5037,
      5042,
      5044,
      5045,
      5050,
      5051,
      5056,
      5058,
      5063,
      5065,
      5066,
      5071,
      5073,
      5078,
      5080,
      5081,
      5083,
      5085,
      5086,
      5091,
      5097,
      5100,
      5101,
      5106,
      5108,
      5113,
      5116,
      5118,
      5119,
      5121,
      5123,
      5124,
      5128,
      5134,
      5137,
      5143,
      5146,
      5147,
      5154,
      5156,
      5161,
      5162,
      5165,
      5167,
      5172,
      5173,
      5175,
      5176,
      5181,
      5182,
      5187,
      5189,
      5194,
      5196,
      5197,
      5202,
      5203,
      5208,
      5210,
      5215,
      5217,
      5218,
      5225,
      5227,
      5232,
      5233,
      5236,
      5238,
      5243,
      5246,
      5247,
      5249,
      5250,
      5255,
      5256,
      5261,
      5263,
      5268,
      5271,
      5273,
      5274,
      5278,
      5280,
      5282,
      5287,
      5289,
      5291,
      5296,
      5299,
      5301,
      5302,
      5304,
      5306,
      5307,
      5312,
      5320,
      5321,
      5326,
      5328,
      5336,
      5338,
      5339,
      5346,
      5348,
      5353,
      5354,
      5357,
      5359,
      5367,
      5368,
      5370,
      5371,
      5376,
      5377,
      5382,
      5384,
      5392,
      5394,
      5395,
      5400,
      5402,
      5409,
      5411,
      5412,
      5414,
      5416,
      5417,
      5421,
      5429,
      5430,
      5432,
      5434,
      5435,
      5441,
      5449,
      5450,
      5455,
      5457,
      5465,
      5467,
      5468,
      5475,
      5477,
      5482,
      5483,
      5486,
      5488,
      5496,
      5497,
      5499,
      5500,
      5505,
      5506,
      5511,
      5513,
      5521,
      5523,
      5524,
      5530,
      5532,
      5539,
      5541,
      5542,
      5544,
      5547,
      5548,
      5555,
      5559,
      5568,
      5569,
      5576,
      5578,
      5583,
      5584,
      5587,
      5589,
      5597,
      5598,
      5600,
      5601,
      5606,
      5607,
      5612,
      5614,
      5622,
      5624,
      5625,
      5632,
      5634,
      5642,
      5643,
      5646,
      5648,
      5654,
      5656,
      5657,
      5659,
      5660,
      5665,
      5666,
      5673,
      5675,
      5677,
      5685,
      5687,
      5688,
      5695,
      5698,
      5700,
      5708,
      5710,
      5711,
      5713,
      5716,
      5717
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Use computer",
   "task_description": "Browse the internet",
   "program": [
    "[Walk] <home_office> (1)",
    "[Walk] <chair> (1)",
    "[Find] <chair> (1)",
    "[Sit] <chair> (1)",
    "[Find] <computer> (1)",
    "[SwitchOn] <computer> (1)",
    "[TurnTo] <computer> (1)",
    "[LookAt] <computer> (1)",
    "[Find] <keyboard> (1)",
    "[Type] <keyboard> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upworknturk_second",
   "file_id": "split146_1",
   "goal_condition": [
    [
     [
      240,
      241,
      "INSIDE",
      "character",
      "home_office"
     ],
     [
      240,
      271,
      "ON",
      "character",
      "chair"
     ]
    ],
    [
     [
      240,
      "character",
      "SITTING"
     ],
     [
      276,
      "computer",
      "ON"
     ]
    ]
   ]
  }
 },
 "13": {
  "plan": [
   [
    " # 0: walk to bathroom\n walk('bathroom')\n # 1: find sink\n find('sink')\n # 2: turn on faucet\n find('faucet')\n assert('close' to 'faucet' )\n else: find('faucet')\n assert('faucet' is 'switchoff' )\n else: switchoff('faucet')\n switchon('faucet')\n # 3: cup hands and splash water on face\n assert('close' to 'sink' )\n else: find('sink')\n # 4: grab face wash\n find('facewash')\n assert('close' to 'facewash')\n else: find('facewash')\n grab('facewash')\n # 5: apply face wash to face\n assert('facewash' in 'hands' )\n else: find('facewash')\n else: grab('facewash')\n # 6: grab washcloth\n find('washcloth')\n assert('close' to 'washcloth')\n else: find('washcloth')\n grab('washcloth')\n # 7: start scrubbing face\n find('sink')\n assert('washcloth' in 'hands' )\n else: find('washcloth')\n else: grab('washcloth')\n assert('close' to 'sink' )\n else: find('sink')\n putin('washcloth', 'sink')\n # 8: rinse face off with water\n # 9: dry face with towel\n # 10: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " bathroom",
      "\n",
      " walk",
      "('",
      "bath",
      "room",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " sink",
      "\n",
      " find",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " turn",
      " on",
      " f",
      "auc",
      "et",
      "\n",
      " find",
      "('",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "f",
      "auc",
      "et",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " assert",
      "('",
      "f",
      "auc",
      "et",
      "'",
      " is",
      " '",
      "switch",
      "off",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " switch",
      "off",
      "('",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " switch",
      "on",
      "('",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " cup",
      " hands",
      " and",
      " splash",
      " water",
      " on",
      " face",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "s",
      "ink",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " grab",
      " face",
      " wash",
      "\n",
      " find",
      "('",
      "fac",
      "ew",
      "ash",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "fac",
      "ew",
      "ash",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "fac",
      "ew",
      "ash",
      "')",
      "\n",
      " grab",
      "('",
      "fac",
      "ew",
      "ash",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " apply",
      " face",
      " wash",
      " to",
      " face",
      "\n",
      " assert",
      "('",
      "fac",
      "ew",
      "ash",
      "'",
      " in",
      " '",
      "hands",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "fac",
      "ew",
      "ash",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "fac",
      "ew",
      "ash",
      "')",
      "\n",
      " #",
      " 6",
      ":",
      " grab",
      " wash",
      "cloth",
      "\n",
      " find",
      "('",
      "wash",
      "cloth",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "wash",
      "cloth",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "wash",
      "cloth",
      "')",
      "\n",
      " grab",
      "('",
      "wash",
      "cloth",
      "')",
      "\n",
      " #",
      " 7",
      ":",
      " start",
      " scrub",
      "bing",
      " face",
      "\n",
      " find",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " assert",
      "('",
      "wash",
      "cloth",
      "'",
      " in",
      " '",
      "hands",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "wash",
      "cloth",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "wash",
      "cloth",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "s",
      "ink",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " put",
      "in",
      "('",
      "wash",
      "cloth",
      "',",
      " '",
      "s",
      "ink",
      "')",
      "\n",
      " #",
      " 8",
      ":",
      " rinse",
      " face",
      " off",
      " with",
      " water",
      "\n",
      " #",
      " 9",
      ":",
      " dry",
      " face",
      " with",
      " towel",
      "\n",
      " #",
      " 10",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.0143476175,
      -0.00520956,
      -0.0027816424,
      -0.13566521,
      -0.022374555,
      -0.029281756,
      -0.021566523,
      -0.00479263,
      -0.0053767427,
      -0.0013968106,
      -7.720381e-05,
      -0.0010809904,
      -0.009219175,
      -0.00105378,
      -0.0021081863,
      -0.0005800119,
      -0.3296019,
      -0.06212352,
      -0.012641032,
      -0.0026328212,
      -0.00078752136,
      -0.00039950278,
      -5.9321566e-05,
      -0.00036444137,
      -0.004732501,
      -0.00055007363,
      -0.001983776,
      -0.00073675625,
      -0.08694779,
      -0.021018842,
      -0.071056955,
      -0.00031012256,
      -0.0012831083,
      -0.010971514,
      -0.01683253,
      -0.00032657993,
      -0.00034679286,
      -7.24364e-05,
      -0.00028341232,
      -0.00023834205,
      -0.0024354486,
      -0.0029909827,
      -0.00030845366,
      -0.0008420438,
      -0.0004885883,
      -0.00013872207,
      -0.00021157267,
      -9.7114484e-05,
      -0.0008606544,
      -0.0001097506,
      -0.02242734,
      -5.0022347e-05,
      -0.0017661696,
      -0.00015446138,
      -0.00019654672,
      -0.0002676721,
      -0.00020775704,
      -2.9280032e-05,
      -0.005287096,
      -9.251094e-06,
      -0.00017103326,
      -0.0013760993,
      -0.016665123,
      -0.00012751458,
      -9.532728e-05,
      -0.0003427388,
      -4.2272848e-05,
      -0.00021514892,
      -0.0001625685,
      -0.00038364052,
      -0.0051774466,
      -0.00061836146,
      -0.0053724875,
      -3.8577375e-05,
      -0.0011598184,
      -9.449002e-05,
      -0.00010307304,
      -0.00011821817,
      -0.00018295787,
      -0.00013848272,
      -2.0218295e-05,
      -0.0021544807,
      -2.0696069e-05,
      -0.0002939055,
      -0.0016352325,
      -0.0002644525,
      -3.5477948e-05,
      -0.00012214643,
      -4.6325007e-05,
      -0.00097102753,
      -2.3078366e-05,
      -0.0002022697,
      -0.003329894,
      -0.002255974,
      -0.002330531,
      -0.0006794366,
      -3.173841,
      -0.1691067,
      -0.7018243,
      -1.5684565,
      -0.25107235,
      -0.18395346,
      -0.009114149,
      -0.020624902,
      -2.3372183,
      -0.001620367,
      -0.065766044,
      -0.0012015902,
      -0.00028174432,
      -0.00052508863,
      -0.024849912,
      -2.6180607e-05,
      -0.04453997,
      -0.00016864816,
      -0.0030501701,
      -0.0003216896,
      -0.0004605048,
      -0.00093421456,
      -0.00049634156,
      -0.00011940838,
      -0.00011308939,
      -0.0007531019,
      -0.0073706065,
      -0.244148,
      -0.0037056534,
      -0.00070079096,
      -0.32696694,
      -0.8189512,
      -0.18439496,
      -0.027301656,
      -0.01031848,
      -0.00035382994,
      -0.004531835,
      -0.0001064137,
      -0.000118931544,
      -0.00046861471,
      -0.0030192595,
      -0.012736289,
      -0.00021288394,
      -0.0004223411,
      -0.0004169739,
      -0.00091816555,
      -0.0003051177,
      -0.00040868655,
      -0.00012500932,
      -8.137612e-05,
      -0.045479566,
      -0.0022298081,
      -0.000113448885,
      -0.00019332903,
      -0.00032491007,
      -0.00021228698,
      -0.00013931624,
      -0.00014301545,
      -0.00023714808,
      -0.00034297723,
      -0.0016265763,
      -0.0006528963,
      -0.0002830547,
      -0.00012131666,
      -1.1873685e-05,
      -0.00016638411,
      -0.00037827427,
      -0.0037309583,
      -0.0023485154,
      -0.0016514121,
      -0.00038781474,
      -1.0857067,
      -0.39623752,
      -0.0008325587,
      -0.9725363,
      -0.1410308,
      -0.032823868,
      -1.1032144,
      -0.00048095893,
      -0.1361918,
      -0.0001614947,
      -0.00018343095,
      -0.00039413653,
      -0.007823752,
      -0.001000319,
      -0.0013689947,
      -0.017187135,
      -0.00010235966,
      -0.0015656223,
      -0.00011475737,
      -0.0002912829,
      -0.0009815245,
      -0.00028198276,
      -0.00016924512,
      -4.6206733e-05,
      -0.0002609945,
      -0.000716181,
      -0.0017736318,
      -0.0010683412,
      -0.00027363625,
      -0.00028078974,
      -0.00032848728,
      -8.376217e-05,
      -9.615988e-05,
      -7.20769e-05,
      -0.0006834935,
      -0.0039233235,
      -0.60033107,
      -0.0009892815,
      -0.00038495276,
      -3.041256,
      -0.12089438,
      -0.6045448,
      -0.040834576,
      -0.00465333,
      -0.00020847135,
      -0.00089006795,
      -0.0019473487,
      -0.00050302286,
      -0.0015957108,
      -0.0032435395,
      -0.000118453776,
      -0.00020310696,
      -0.0003108397,
      -0.00052806886,
      -0.0001693634,
      -0.0010482307,
      -0.0001668619,
      -0.006536026,
      -0.000827428,
      -0.00013490739,
      -9.7351025e-05,
      -0.00021097568,
      -0.00010820183,
      -0.00062229816,
      -0.00010844024,
      -0.00063762726,
      -0.0011752723,
      -0.0016278895,
      -0.00022528353,
      -0.00011559277,
      -8.685972e-05,
      -0.00057309505,
      -0.0030386313,
      -0.0011876241,
      -0.003084548,
      -0.00041166772,
      -1.470989,
      -0.044689544,
      -0.003239595,
      -0.025293441,
      -0.3231883,
      -1.4916729,
      -0.00017425283,
      -0.007902137,
      -1.1873685e-05,
      -0.00041220273,
      -0.0015631152,
      -0.0037739174,
      -0.0001643557,
      -0.010256274,
      -0.0009046837,
      -0.00023631456,
      -0.00041315737,
      -0.00017520743,
      -0.00013073228,
      -0.0023762968,
      -6.587617e-05,
      -0.0005960573,
      -8.471396e-05,
      -9.0795475e-05,
      -0.0003950902,
      -9.580224e-05,
      -0.00096380746,
      -0.00026731353,
      -0.00036789934,
      -0.0008594623,
      -0.00029068594,
      -0.00012691665,
      -0.00019380587,
      -0.0001831916,
      -0.0005334971,
      -8.7932596e-05,
      -0.00031942554,
      -0.0013306179,
      -0.012945973,
      -8.3404535e-05,
      -0.00032347863,
      -0.00017532664,
      -9.490449e-06,
      -0.00012226657,
      -0.00017389427,
      -3.0826937e-05,
      -0.0029071704,
      -8.51908e-05,
      -0.0006574281,
      -0.000104387145,
      -9.628002e-05,
      -0.00015469792,
      -0.0002103787,
      -4.2870764e-05,
      -0.000246804,
      -0.0003496548,
      -0.0014609777,
      -0.029081445,
      -0.00023500233,
      -0.00019988645,
      -0.0014541133,
      -0.0010209638,
      -0.004115787,
      -9.0437854e-05,
      -0.0002113333,
      -3.1185496e-05,
      -0.0003794682,
      -0.0033007707,
      -0.0012712333,
      -0.00083595945,
      -0.00027160783,
      -0.046807963,
      -0.08540868,
      -0.18491773,
      -0.019623503,
      -0.0010037789,
      -0.0054689124,
      -0.020739788,
      -0.0010324791,
      -0.0004368883,
      -0.04705046,
      -0.0053819558,
      -0.018247524,
      -0.01411582,
      -0.0038189709,
      -0.003740711,
      -0.0015394151,
      -0.0013401678,
      -0.03711647
     ],
     "top_logprobs": [
      {
       " #": -0.0143476175
      },
      {
       " 0": -0.00520956
      },
      {
       ":": -0.0027816424
      },
      {
       " walk": -0.13566521
      },
      {
       " to": -0.022374555
      },
      {
       " bathroom": -0.029281756
      },
      {
       "\n": -0.021566523
      },
      {
       " walk": -0.00479263
      },
      {
       "('": -0.0053767427
      },
      {
       "bath": -0.0013968106
      },
      {
       "room": -7.720381e-05
      },
      {
       "')": -0.0010809904
      },
      {
       "\n": -0.009219175
      },
      {
       " #": -0.00105378
      },
      {
       " 1": -0.0021081863
      },
      {
       ":": -0.0005800119
      },
      {
       " find": -0.3296019
      },
      {
       " sink": -0.06212352
      },
      {
       "\n": -0.012641032
      },
      {
       " find": -0.0026328212
      },
      {
       "('": -0.00078752136
      },
      {
       "s": -0.00039950278
      },
      {
       "ink": -5.9321566e-05
      },
      {
       "')": -0.00036444137
      },
      {
       "\n": -0.004732501
      },
      {
       " #": -0.00055007363
      },
      {
       " 2": -0.001983776
      },
      {
       ":": -0.00073675625
      },
      {
       " turn": -0.08694779
      },
      {
       " on": -0.021018842
      },
      {
       " f": -0.071056955
      },
      {
       "auc": -0.00031012256
      },
      {
       "et": -0.0012831083
      },
      {
       "\n": -0.010971514
      },
      {
       " find": -0.01683253
      },
      {
       "('": -0.00032657993
      },
      {
       "f": -0.00034679286
      },
      {
       "auc": -7.24364e-05
      },
      {
       "et": -0.00028341232
      },
      {
       "')": -0.00023834205
      },
      {
       "\n": -0.0024354486
      },
      {
       " assert": -0.0029909827
      },
      {
       "('": -0.00030845366
      },
      {
       "close": -0.0008420438
      },
      {
       "'": -0.0004885883
      },
      {
       " to": -0.00013872207
      },
      {
       " '": -0.00021157267
      },
      {
       "f": -9.7114484e-05
      },
      {
       "auc": -0.0008606544
      },
      {
       "et": -0.0001097506
      },
      {
       "'": -0.02242734
      },
      {
       " )": -5.0022347e-05
      },
      {
       "\n": -0.0017661696
      },
      {
       " else": -0.00015446138
      },
      {
       ":": -0.00019654672
      },
      {
       " find": -0.0002676721
      },
      {
       "('": -0.00020775704
      },
      {
       "f": -2.9280032e-05
      },
      {
       "auc": -0.005287096
      },
      {
       "et": -9.251094e-06
      },
      {
       "')": -0.00017103326
      },
      {
       "\n": -0.0013760993
      },
      {
       " assert": -0.016665123
      },
      {
       "('": -0.00012751458
      },
      {
       "f": -9.532728e-05
      },
      {
       "auc": -0.0003427388
      },
      {
       "et": -4.2272848e-05
      },
      {
       "'": -0.00021514892
      },
      {
       " is": -0.0001625685
      },
      {
       " '": -0.00038364052
      },
      {
       "switch": -0.0051774466
      },
      {
       "off": -0.00061836146
      },
      {
       "'": -0.0053724875
      },
      {
       " )": -3.8577375e-05
      },
      {
       "\n": -0.0011598184
      },
      {
       " else": -9.449002e-05
      },
      {
       ":": -0.00010307304
      },
      {
       " switch": -0.00011821817
      },
      {
       "off": -0.00018295787
      },
      {
       "('": -0.00013848272
      },
      {
       "f": -2.0218295e-05
      },
      {
       "auc": -0.0021544807
      },
      {
       "et": -2.0696069e-05
      },
      {
       "')": -0.0002939055
      },
      {
       "\n": -0.0016352325
      },
      {
       " switch": -0.0002644525
      },
      {
       "on": -3.5477948e-05
      },
      {
       "('": -0.00012214643
      },
      {
       "f": -4.6325007e-05
      },
      {
       "auc": -0.00097102753
      },
      {
       "et": -2.3078366e-05
      },
      {
       "')": -0.0002022697
      },
      {
       "\n": -0.003329894
      },
      {
       " #": -0.002255974
      },
      {
       " 3": -0.002330531
      },
      {
       ":": -0.0006794366
      },
      {
       " put": -1.199616
      },
      {
       " hands": -0.1691067
      },
      {
       " and": -0.7018243
      },
      {
       " splash": -1.5684565
      },
      {
       " water": -0.25107235
      },
      {
       " on": -0.18395346
      },
      {
       " face": -0.009114149
      },
      {
       "\n": -0.020624902
      },
      {
       " #": -0.85969824
      },
      {
       "('": -0.001620367
      },
      {
       "close": -0.065766044
      },
      {
       "'": -0.0012015902
      },
      {
       " to": -0.00028174432
      },
      {
       " '": -0.00052508863
      },
      {
       "s": -0.024849912
      },
      {
       "ink": -2.6180607e-05
      },
      {
       "'": -0.04453997
      },
      {
       " )": -0.00016864816
      },
      {
       "\n": -0.0030501701
      },
      {
       " else": -0.0003216896
      },
      {
       ":": -0.0004605048
      },
      {
       " find": -0.00093421456
      },
      {
       "('": -0.00049634156
      },
      {
       "s": -0.00011940838
      },
      {
       "ink": -0.00011308939
      },
      {
       "')": -0.0007531019
      },
      {
       "\n": -0.0073706065
      },
      {
       " #": -0.244148
      },
      {
       " 4": -0.0037056534
      },
      {
       ":": -0.00070079096
      },
      {
       " grab": -0.32696694
      },
      {
       " face": -0.8189512
      },
      {
       " wash": -0.18439496
      },
      {
       "\n": -0.027301656
      },
      {
       " find": -0.01031848
      },
      {
       "('": -0.00035382994
      },
      {
       "fac": -0.004531835
      },
      {
       "ew": -0.0001064137
      },
      {
       "ash": -0.000118931544
      },
      {
       "')": -0.00046861471
      },
      {
       "\n": -0.0030192595
      },
      {
       " assert": -0.012736289
      },
      {
       "('": -0.00021288394
      },
      {
       "close": -0.0004223411
      },
      {
       "'": -0.0004169739
      },
      {
       " to": -0.00091816555
      },
      {
       " '": -0.0003051177
      },
      {
       "fac": -0.00040868655
      },
      {
       "ew": -0.00012500932
      },
      {
       "ash": -8.137612e-05
      },
      {
       "')": -0.045479566
      },
      {
       "\n": -0.0022298081
      },
      {
       " else": -0.000113448885
      },
      {
       ":": -0.00019332903
      },
      {
       " find": -0.00032491007
      },
      {
       "('": -0.00021228698
      },
      {
       "fac": -0.00013931624
      },
      {
       "ew": -0.00014301545
      },
      {
       "ash": -0.00023714808
      },
      {
       "')": -0.00034297723
      },
      {
       "\n": -0.0016265763
      },
      {
       " grab": -0.0006528963
      },
      {
       "('": -0.0002830547
      },
      {
       "fac": -0.00012131666
      },
      {
       "ew": -1.1873685e-05
      },
      {
       "ash": -0.00016638411
      },
      {
       "')": -0.00037827427
      },
      {
       "\n": -0.0037309583
      },
      {
       " #": -0.0023485154
      },
      {
       " 5": -0.0016514121
      },
      {
       ":": -0.00038781474
      },
      {
       " put": -1.0054951
      },
      {
       " face": -0.39623752
      },
      {
       " wash": -0.0008325587
      },
      {
       " to": -0.9725363
      },
      {
       " face": -0.1410308
      },
      {
       "\n": -0.032823868
      },
      {
       " find": -0.47623846
      },
      {
       "('": -0.00048095893
      },
      {
       "fac": -0.1361918
      },
      {
       "ew": -0.0001614947
      },
      {
       "ash": -0.00018343095
      },
      {
       "'": -0.00039413653
      },
      {
       " in": -0.007823752
      },
      {
       " '": -0.001000319
      },
      {
       "hands": -0.0013689947
      },
      {
       "'": -0.017187135
      },
      {
       " )": -0.00010235966
      },
      {
       "\n": -0.0015656223
      },
      {
       " else": -0.00011475737
      },
      {
       ":": -0.0002912829
      },
      {
       " find": -0.0009815245
      },
      {
       "('": -0.00028198276
      },
      {
       "fac": -0.00016924512
      },
      {
       "ew": -4.6206733e-05
      },
      {
       "ash": -0.0002609945
      },
      {
       "')": -0.000716181
      },
      {
       "\n": -0.0017736318
      },
      {
       " else": -0.0010683412
      },
      {
       ":": -0.00027363625
      },
      {
       " grab": -0.00028078974
      },
      {
       "('": -0.00032848728
      },
      {
       "fac": -8.376217e-05
      },
      {
       "ew": -9.615988e-05
      },
      {
       "ash": -7.20769e-05
      },
      {
       "')": -0.0006834935
      },
      {
       "\n": -0.0039233235
      },
      {
       " #": -0.60033107
      },
      {
       " 6": -0.0009892815
      },
      {
       ":": -0.00038495276
      },
      {
       " rinse": -0.9613972
      },
      {
       " wash": -0.12089438
      },
      {
       "cloth": -0.6045448
      },
      {
       "\n": -0.040834576
      },
      {
       " find": -0.00465333
      },
      {
       "('": -0.00020847135
      },
      {
       "wash": -0.00089006795
      },
      {
       "cloth": -0.0019473487
      },
      {
       "')": -0.00050302286
      },
      {
       "\n": -0.0015957108
      },
      {
       " assert": -0.0032435395
      },
      {
       "('": -0.000118453776
      },
      {
       "close": -0.00020310696
      },
      {
       "'": -0.0003108397
      },
      {
       " to": -0.00052806886
      },
      {
       " '": -0.0001693634
      },
      {
       "wash": -0.0010482307
      },
      {
       "cloth": -0.0001668619
      },
      {
       "')": -0.006536026
      },
      {
       "\n": -0.000827428
      },
      {
       " else": -0.00013490739
      },
      {
       ":": -9.7351025e-05
      },
      {
       " find": -0.00021097568
      },
      {
       "('": -0.00010820183
      },
      {
       "wash": -0.00062229816
      },
      {
       "cloth": -0.00010844024
      },
      {
       "')": -0.00063762726
      },
      {
       "\n": -0.0011752723
      },
      {
       " grab": -0.0016278895
      },
      {
       "('": -0.00022528353
      },
      {
       "wash": -0.00011559277
      },
      {
       "cloth": -8.685972e-05
      },
      {
       "')": -0.00057309505
      },
      {
       "\n": -0.0030386313
      },
      {
       " #": -0.0011876241
      },
      {
       " 7": -0.003084548
      },
      {
       ":": -0.00041166772
      },
      {
       " scrub": -0.8181809
      },
      {
       " scrub": -0.044689544
      },
      {
       "bing": -0.003239595
      },
      {
       " face": -0.025293441
      },
      {
       "\n": -0.3231883
      },
      {
       " assert": -0.45426306
      },
      {
       "('": -0.00017425283
      },
      {
       "s": -0.007902137
      },
      {
       "ink": -1.1873685e-05
      },
      {
       "')": -0.00041220273
      },
      {
       "\n": -0.0015631152
      },
      {
       " assert": -0.0037739174
      },
      {
       "('": -0.0001643557
      },
      {
       "wash": -0.010256274
      },
      {
       "cloth": -0.0009046837
      },
      {
       "'": -0.00023631456
      },
      {
       " in": -0.00041315737
      },
      {
       " '": -0.00017520743
      },
      {
       "hands": -0.00013073228
      },
      {
       "'": -0.0023762968
      },
      {
       " )": -6.587617e-05
      },
      {
       "\n": -0.0005960573
      },
      {
       " else": -8.471396e-05
      },
      {
       ":": -9.0795475e-05
      },
      {
       " find": -0.0003950902
      },
      {
       "('": -9.580224e-05
      },
      {
       "wash": -0.00096380746
      },
      {
       "cloth": -0.00026731353
      },
      {
       "')": -0.00036789934
      },
      {
       "\n": -0.0008594623
      },
      {
       " else": -0.00029068594
      },
      {
       ":": -0.00012691665
      },
      {
       " grab": -0.00019380587
      },
      {
       "('": -0.0001831916
      },
      {
       "wash": -0.0005334971
      },
      {
       "cloth": -8.7932596e-05
      },
      {
       "')": -0.00031942554
      },
      {
       "\n": -0.0013306179
      },
      {
       " assert": -0.012945973
      },
      {
       "('": -8.3404535e-05
      },
      {
       "close": -0.00032347863
      },
      {
       "'": -0.00017532664
      },
      {
       " to": -9.490449e-06
      },
      {
       " '": -0.00012226657
      },
      {
       "s": -0.00017389427
      },
      {
       "ink": -3.0826937e-05
      },
      {
       "'": -0.0029071704
      },
      {
       " )": -8.51908e-05
      },
      {
       "\n": -0.0006574281
      },
      {
       " else": -0.000104387145
      },
      {
       ":": -9.628002e-05
      },
      {
       " find": -0.00015469792
      },
      {
       "('": -0.0002103787
      },
      {
       "s": -4.2870764e-05
      },
      {
       "ink": -0.000246804
      },
      {
       "')": -0.0003496548
      },
      {
       "\n": -0.0014609777
      },
      {
       " put": -0.029081445
      },
      {
       "in": -0.00023500233
      },
      {
       "('": -0.00019988645
      },
      {
       "wash": -0.0014541133
      },
      {
       "cloth": -0.0010209638
      },
      {
       "',": -0.004115787
      },
      {
       " '": -9.0437854e-05
      },
      {
       "s": -0.0002113333
      },
      {
       "ink": -3.1185496e-05
      },
      {
       "')": -0.0003794682
      },
      {
       "\n": -0.0033007707
      },
      {
       " #": -0.0012712333
      },
      {
       " 8": -0.00083595945
      },
      {
       ":": -0.00027160783
      },
      {
       " rinse": -0.046807963
      },
      {
       " face": -0.08540868
      },
      {
       " off": -0.18491773
      },
      {
       " with": -0.019623503
      },
      {
       " water": -0.0010037789
      },
      {
       "\n": -0.0054689124
      },
      {
       " #": -0.020739788
      },
      {
       " 9": -0.0010324791
      },
      {
       ":": -0.0004368883
      },
      {
       " dry": -0.04705046
      },
      {
       " face": -0.0053819558
      },
      {
       " with": -0.018247524
      },
      {
       " towel": -0.01411582
      },
      {
       "\n": -0.0038189709
      },
      {
       " #": -0.003740711
      },
      {
       " 10": -0.0015394151
      },
      {
       ":": -0.0013401678
      },
      {
       " Done": -0.03711647
      }
     ],
     "text_offset": [
      4712,
      4714,
      4716,
      4717,
      4722,
      4725,
      4734,
      4735,
      4740,
      4742,
      4746,
      4750,
      4752,
      4753,
      4755,
      4757,
      4758,
      4763,
      4768,
      4769,
      4774,
      4776,
      4777,
      4780,
      4782,
      4783,
      4785,
      4787,
      4788,
      4793,
      4796,
      4798,
      4801,
      4803,
      4804,
      4809,
      4811,
      4812,
      4815,
      4817,
      4819,
      4820,
      4827,
      4829,
      4834,
      4835,
      4838,
      4840,
      4841,
      4844,
      4846,
      4847,
      4849,
      4850,
      4855,
      4856,
      4861,
      4863,
      4864,
      4867,
      4869,
      4871,
      4872,
      4879,
      4881,
      4882,
      4885,
      4887,
      4888,
      4891,
      4893,
      4899,
      4902,
      4903,
      4905,
      4906,
      4911,
      4912,
      4919,
      4922,
      4924,
      4925,
      4928,
      4930,
      4932,
      4933,
      4940,
      4942,
      4944,
      4945,
      4948,
      4950,
      4952,
      4953,
      4955,
      4957,
      4958,
      4962,
      4968,
      4972,
      4979,
      4985,
      4988,
      4993,
      4994,
      5001,
      5003,
      5008,
      5009,
      5012,
      5014,
      5015,
      5018,
      5019,
      5021,
      5022,
      5027,
      5028,
      5033,
      5035,
      5036,
      5039,
      5041,
      5042,
      5044,
      5046,
      5047,
      5052,
      5057,
      5062,
      5063,
      5068,
      5070,
      5073,
      5075,
      5078,
      5080,
      5081,
      5088,
      5090,
      5095,
      5096,
      5099,
      5101,
      5104,
      5106,
      5109,
      5111,
      5112,
      5117,
      5118,
      5123,
      5125,
      5128,
      5130,
      5133,
      5135,
      5136,
      5141,
      5143,
      5146,
      5148,
      5151,
      5153,
      5154,
      5156,
      5158,
      5159,
      5165,
      5170,
      5175,
      5178,
      5183,
      5184,
      5191,
      5193,
      5196,
      5198,
      5201,
      5202,
      5205,
      5207,
      5212,
      5213,
      5215,
      5216,
      5221,
      5222,
      5227,
      5229,
      5232,
      5234,
      5237,
      5239,
      5240,
      5245,
      5246,
      5251,
      5253,
      5256,
      5258,
      5261,
      5263,
      5264,
      5266,
      5268,
      5269,
      5274,
      5279,
      5284,
      5285,
      5290,
      5292,
      5296,
      5301,
      5303,
      5304,
      5311,
      5313,
      5318,
      5319,
      5322,
      5324,
      5328,
      5333,
      5335,
      5336,
      5341,
      5342,
      5347,
      5349,
      5353,
      5358,
      5360,
      5361,
      5366,
      5368,
      5372,
      5377,
      5379,
      5380,
      5382,
      5384,
      5385,
      5391,
      5397,
      5401,
      5406,
      5407,
      5412,
      5414,
      5415,
      5418,
      5420,
      5421,
      5428,
      5430,
      5434,
      5439,
      5440,
      5443,
      5445,
      5450,
      5451,
      5453,
      5454,
      5459,
      5460,
      5465,
      5467,
      5471,
      5476,
      5478,
      5479,
      5484,
      5485,
      5490,
      5492,
      5496,
      5501,
      5503,
      5504,
      5511,
      5513,
      5518,
      5519,
      5522,
      5524,
      5525,
      5528,
      5529,
      5531,
      5532,
      5537,
      5538,
      5543,
      5545,
      5546,
      5549,
      5551,
      5552,
      5556,
      5558,
      5560,
      5564,
      5569,
      5571,
      5573,
      5574,
      5577,
      5579,
      5580,
      5582,
      5584,
      5585,
      5591,
      5596,
      5600,
      5605,
      5611,
      5612,
      5614,
      5616,
      5617,
      5621,
      5626,
      5631,
      5637,
      5638,
      5640,
      5643,
      5644
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Wash face",
   "task_description": "Turn on water faucet. Get rag wet. Get face soap out. Squirt face soap in hands and put it on face. Rub soap into face. Wash soap off of face. Dry face off on the hand towel. Hang out rag and hand towel.",
   "program": [
    "[Walk] <bathroom> (1)",
    "[Walk] <sink> (1)",
    "[Find] <rag> (1)",
    "[Grab] <rag> (1)",
    "[Find] <faucet> (1)",
    "[SwitchOn] <faucet> (1)",
    "[Wash] <rag> (1)",
    "[Find] <face_soap> (1)",
    "[Grab] <face_soap> (1)",
    "[Pour] <face_soap> (1) <rag> (1)",
    "[PutObjBack] <face_soap> (1)",
    "[Find] <face> (1)",
    "[Scrub] <face> (1)",
    "[PutBack] <rag> (1) <sink> (1)",
    "[Rinse] <face> (1)",
    "[Rinse] <rag> (1)",
    "[SwitchOff] <faucet> (1)",
    "[Grab] <rag> (1)",
    "[PutObjBack] <rag> (1)",
    "[Find] <towel> (1)",
    "[Grab] <towel> (1)",
    "[Wipe] <face> (1)",
    "[PutObjBack] <towel> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upworknturk_second",
   "file_id": "split145_3",
   "goal_condition": [
    [
     [
      240,
      1,
      "INSIDE",
      "character",
      "bathroom"
     ]
    ],
    []
   ]
  }
 },
 "14": {
  "plan": [
   [
    " # 0: walk to home office\n walk('home office')\n # 1: turn on computer\n find('computer')\n assert('computer' is 'switchoff' )\n else: switchoff('computer')\n switchon('computer')\n # 2: sit on chair\n find('chair')\n assert('close' to 'chair')\n else: find('chair')\n sit('chair')\n # 3: grab mouse\n find('mouse')\n assert('close' to 'mouse')\n else: find('mouse')\n grab('mouse')\n # 4: grab keyboard\n find('keyboard')\n assert('close' to 'keyboard')\n else: find('keyboard')\n grab('keyboard')\n # 5: start typing\n # 6: open browser\n # 7: search topic\n # 8: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " home",
      " office",
      "\n",
      " walk",
      "('",
      "home",
      " office",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " turn",
      " on",
      " computer",
      "\n",
      " find",
      "('",
      "computer",
      "')",
      "\n",
      " assert",
      "('",
      "computer",
      "'",
      " is",
      " '",
      "switch",
      "off",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " switch",
      "off",
      "('",
      "computer",
      "')",
      "\n",
      " switch",
      "on",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " sit",
      " on",
      " chair",
      "\n",
      " find",
      "('",
      "chair",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "chair",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "chair",
      "')",
      "\n",
      " sit",
      "('",
      "chair",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " grab",
      " mouse",
      "\n",
      " find",
      "('",
      "mouse",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "mouse",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "mouse",
      "')",
      "\n",
      " grab",
      "('",
      "mouse",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " grab",
      " keyboard",
      "\n",
      " find",
      "('",
      "key",
      "board",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "key",
      "board",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "key",
      "board",
      "')",
      "\n",
      " grab",
      "('",
      "key",
      "board",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " start",
      " typing",
      "\n",
      " #",
      " 6",
      ":",
      " open",
      " browser",
      "\n",
      " #",
      " 7",
      ":",
      " search",
      " topic",
      "\n",
      " #",
      " 8",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.017201569,
      -0.006493667,
      -0.0035879223,
      -0.25588834,
      -0.048687644,
      -0.2803267,
      -0.12599547,
      -0.027353048,
      -0.0061281966,
      -0.010593317,
      -0.009958292,
      -2.3419647,
      -0.0013001795,
      -0.009648064,
      -0.0014699287,
      -0.0025173675,
      -0.00069601886,
      -1.9881129,
      -0.027165378,
      -0.084247686,
      -0.016680699,
      -0.036198847,
      -0.0012698009,
      -0.0013485218,
      -0.00076425495,
      -0.005829108,
      -0.24281242,
      -0.00072793016,
      -2.6573277,
      -0.0037778663,
      -0.0025185633,
      -0.0038656413,
      -0.07739406,
      -0.0041259015,
      -0.16311023,
      -0.0003296803,
      -0.0053838734,
      -0.0011000226,
      -0.0011491937,
      -0.0020460112,
      -0.001980192,
      -0.00086256367,
      -0.00040868655,
      -0.003015134,
      -0.004640398,
      -0.00085123134,
      -0.00014587646,
      -0.00036646696,
      -0.0002145538,
      -0.00039676193,
      -0.0042589596,
      -0.0019248935,
      -0.0027615589,
      -0.0005853219,
      -1.9280663,
      -1.1739012,
      -0.10277634,
      -0.025460223,
      -0.04293515,
      -0.00085755315,
      -0.0017392406,
      -0.0003929454,
      -0.0036439146,
      -1.1093684,
      -0.0010433393,
      -0.03318031,
      -0.0013678017,
      -0.00031858825,
      -0.0013895868,
      -0.000841566,
      -0.18370983,
      -0.0049460237,
      -0.00060226076,
      -0.0008319608,
      -0.0014797788,
      -0.00067591673,
      -0.00053969875,
      -0.00064168224,
      -0.0043431246,
      -0.0039382833,
      -0.0017643785,
      -0.00078060065,
      -0.0007380695,
      -0.006146549,
      -0.0012781577,
      -0.0024003158,
      -0.0004715968,
      -1.0708299,
      -0.22168115,
      -0.08527996,
      -0.062277146,
      -0.0005299781,
      -0.0013519244,
      -0.0010209638,
      -0.0027242634,
      -0.098950334,
      -0.00033904242,
      -0.0020285102,
      -0.0009789,
      -0.00013407106,
      -0.0004113101,
      -0.0004636042,
      -0.022838758,
      -0.0015466972,
      -0.00024144053,
      -0.00038578815,
      -0.00063041,
      -0.0003960448,
      -0.00021872611,
      -0.0003230018,
      -0.002450743,
      -0.0006110841,
      -0.00042806406,
      -0.00014372978,
      -0.000682063,
      -0.003991842,
      -0.0010084338,
      -0.002535655,
      -0.00035335214,
      -0.6151885,
      -0.093034044,
      -0.0055164383,
      -0.00532245,
      -0.0002905667,
      -0.00021407605,
      -0.00028353152,
      -0.0009205525,
      -0.002237754,
      -0.0016315324,
      -0.00030141752,
      -0.0003137007,
      -0.0004964617,
      -0.00016602462,
      -0.00022671591,
      -0.00057285564,
      -0.0002875865,
      -0.004156486,
      -0.0009787799,
      -9.628002e-05,
      -0.00017127168,
      -0.00043426573,
      -0.00018248011,
      -0.00019964804,
      -0.00012477185,
      -0.00040641878,
      -0.0018439742,
      -0.00054780964,
      -0.00024275183,
      -0.00023047146,
      -0.00032431216,
      -0.0005194802,
      -0.00187025,
      -0.0007576347,
      -0.0019213097,
      -0.00047916983,
      -0.34499875,
      -0.70180744,
      -0.16367838,
      -0.35967207,
      -0.0015919495,
      -0.00045823885,
      -2.1404812,
      -1.4046781,
      -0.030940622,
      -0.025961459,
      -0.0017227007,
      -0.00055568025,
      -1.8605673,
      -4.3611827,
      -0.07828732,
      -0.0006415621,
      -0.0005172162,
      -0.0008385858,
      -1.9953587
     ],
     "top_logprobs": [
      {
       " #": -0.017201569
      },
      {
       " 0": -0.006493667
      },
      {
       ":": -0.0035879223
      },
      {
       " walk": -0.25588834
      },
      {
       " to": -0.048687644
      },
      {
       " home": -0.2803267
      },
      {
       " office": -0.12599547
      },
      {
       "\n": -0.027353048
      },
      {
       " walk": -0.0061281966
      },
      {
       "('": -0.010593317
      },
      {
       "home": -0.009958292
      },
      {
       "office": -0.26315707
      },
      {
       "')": -0.0013001795
      },
      {
       "\n": -0.009648064
      },
      {
       " #": -0.0014699287
      },
      {
       " 1": -0.0025173675
      },
      {
       ":": -0.00069601886
      },
      {
       " find": -0.4348483
      },
      {
       " on": -0.027165378
      },
      {
       " computer": -0.084247686
      },
      {
       "\n": -0.016680699
      },
      {
       " find": -0.036198847
      },
      {
       "('": -0.0012698009
      },
      {
       "computer": -0.0013485218
      },
      {
       "')": -0.00076425495
      },
      {
       "\n": -0.005829108
      },
      {
       " assert": -0.24281242
      },
      {
       "('": -0.00072793016
      },
      {
       "close": -0.075094454
      },
      {
       "'": -0.0037778663
      },
      {
       " is": -0.0025185633
      },
      {
       " '": -0.0038656413
      },
      {
       "switch": -0.07739406
      },
      {
       "off": -0.0041259015
      },
      {
       "'": -0.16311023
      },
      {
       " )": -0.0003296803
      },
      {
       "\n": -0.0053838734
      },
      {
       " else": -0.0011000226
      },
      {
       ":": -0.0011491937
      },
      {
       " switch": -0.0020460112
      },
      {
       "off": -0.001980192
      },
      {
       "('": -0.00086256367
      },
      {
       "computer": -0.00040868655
      },
      {
       "')": -0.003015134
      },
      {
       "\n": -0.004640398
      },
      {
       " switch": -0.00085123134
      },
      {
       "on": -0.00014587646
      },
      {
       "('": -0.00036646696
      },
      {
       "computer": -0.0002145538
      },
      {
       "')": -0.00039676193
      },
      {
       "\n": -0.0042589596
      },
      {
       " #": -0.0019248935
      },
      {
       " 2": -0.0027615589
      },
      {
       ":": -0.0005853219
      },
      {
       " find": -0.7616635
      },
      {
       " on": -1.1739012
      },
      {
       " chair": -0.10277634
      },
      {
       "\n": -0.025460223
      },
      {
       " find": -0.04293515
      },
      {
       "('": -0.00085755315
      },
      {
       "chair": -0.0017392406
      },
      {
       "')": -0.0003929454
      },
      {
       "\n": -0.0036439146
      },
      {
       " sit": -0.4123507
      },
      {
       "('": -0.0010433393
      },
      {
       "close": -0.03318031
      },
      {
       "'": -0.0013678017
      },
      {
       " to": -0.00031858825
      },
      {
       " '": -0.0013895868
      },
      {
       "chair": -0.000841566
      },
      {
       "')": -0.18370983
      },
      {
       "\n": -0.0049460237
      },
      {
       " else": -0.00060226076
      },
      {
       ":": -0.0008319608
      },
      {
       " find": -0.0014797788
      },
      {
       "('": -0.00067591673
      },
      {
       "chair": -0.00053969875
      },
      {
       "')": -0.00064168224
      },
      {
       "\n": -0.0043431246
      },
      {
       " sit": -0.0039382833
      },
      {
       "('": -0.0017643785
      },
      {
       "chair": -0.00078060065
      },
      {
       "')": -0.0007380695
      },
      {
       "\n": -0.006146549
      },
      {
       " #": -0.0012781577
      },
      {
       " 3": -0.0024003158
      },
      {
       ":": -0.0004715968
      },
      {
       " grab": -1.0708299
      },
      {
       " mouse": -0.22168115
      },
      {
       "\n": -0.08527996
      },
      {
       " find": -0.062277146
      },
      {
       "('": -0.0005299781
      },
      {
       "mouse": -0.0013519244
      },
      {
       "')": -0.0010209638
      },
      {
       "\n": -0.0027242634
      },
      {
       " assert": -0.098950334
      },
      {
       "('": -0.00033904242
      },
      {
       "close": -0.0020285102
      },
      {
       "'": -0.0009789
      },
      {
       " to": -0.00013407106
      },
      {
       " '": -0.0004113101
      },
      {
       "mouse": -0.0004636042
      },
      {
       "')": -0.022838758
      },
      {
       "\n": -0.0015466972
      },
      {
       " else": -0.00024144053
      },
      {
       ":": -0.00038578815
      },
      {
       " find": -0.00063041
      },
      {
       "('": -0.0003960448
      },
      {
       "mouse": -0.00021872611
      },
      {
       "')": -0.0003230018
      },
      {
       "\n": -0.002450743
      },
      {
       " grab": -0.0006110841
      },
      {
       "('": -0.00042806406
      },
      {
       "mouse": -0.00014372978
      },
      {
       "')": -0.000682063
      },
      {
       "\n": -0.003991842
      },
      {
       " #": -0.0010084338
      },
      {
       " 4": -0.002535655
      },
      {
       ":": -0.00035335214
      },
      {
       " grab": -0.6151885
      },
      {
       " keyboard": -0.093034044
      },
      {
       "\n": -0.0055164383
      },
      {
       " find": -0.00532245
      },
      {
       "('": -0.0002905667
      },
      {
       "key": -0.00021407605
      },
      {
       "board": -0.00028353152
      },
      {
       "')": -0.0009205525
      },
      {
       "\n": -0.002237754
      },
      {
       " assert": -0.0016315324
      },
      {
       "('": -0.00030141752
      },
      {
       "close": -0.0003137007
      },
      {
       "'": -0.0004964617
      },
      {
       " to": -0.00016602462
      },
      {
       " '": -0.00022671591
      },
      {
       "key": -0.00057285564
      },
      {
       "board": -0.0002875865
      },
      {
       "')": -0.004156486
      },
      {
       "\n": -0.0009787799
      },
      {
       " else": -9.628002e-05
      },
      {
       ":": -0.00017127168
      },
      {
       " find": -0.00043426573
      },
      {
       "('": -0.00018248011
      },
      {
       "key": -0.00019964804
      },
      {
       "board": -0.00012477185
      },
      {
       "')": -0.00040641878
      },
      {
       "\n": -0.0018439742
      },
      {
       " grab": -0.00054780964
      },
      {
       "('": -0.00024275183
      },
      {
       "key": -0.00023047146
      },
      {
       "board": -0.00032431216
      },
      {
       "')": -0.0005194802
      },
      {
       "\n": -0.00187025
      },
      {
       " #": -0.0007576347
      },
      {
       " 5": -0.0019213097
      },
      {
       ":": -0.00047916983
      },
      {
       " start": -0.34499875
      },
      {
       " typing": -0.70180744
      },
      {
       "\n": -0.16367838
      },
      {
       " #": -0.35967207
      },
      {
       " 6": -0.0015919495
      },
      {
       ":": -0.00045823885
      },
      {
       " Done": -1.2461015
      },
      {
       " browser": -1.4046781
      },
      {
       "\n": -0.030940622
      },
      {
       " #": -0.025961459
      },
      {
       " 7": -0.0017227007
      },
      {
       ":": -0.00055568025
      },
      {
       " browse": -1.3402884
      },
      {
       " for": -0.4895641
      },
      {
       "\n": -0.07828732
      },
      {
       " #": -0.0006415621
      },
      {
       " 8": -0.0005172162
      },
      {
       ":": -0.0008385858
      },
      {
       " read": -0.81343204
      }
     ],
     "text_offset": [
      4716,
      4718,
      4720,
      4721,
      4726,
      4729,
      4734,
      4741,
      4742,
      4747,
      4749,
      4753,
      4760,
      4762,
      4763,
      4765,
      4767,
      4768,
      4773,
      4776,
      4785,
      4786,
      4791,
      4793,
      4801,
      4803,
      4804,
      4811,
      4813,
      4821,
      4822,
      4825,
      4827,
      4833,
      4836,
      4837,
      4839,
      4840,
      4845,
      4846,
      4853,
      4856,
      4858,
      4866,
      4868,
      4869,
      4876,
      4878,
      4880,
      4888,
      4890,
      4891,
      4893,
      4895,
      4896,
      4900,
      4903,
      4909,
      4910,
      4915,
      4917,
      4922,
      4924,
      4925,
      4932,
      4934,
      4939,
      4940,
      4943,
      4945,
      4950,
      4952,
      4953,
      4958,
      4959,
      4964,
      4966,
      4971,
      4973,
      4974,
      4978,
      4980,
      4985,
      4987,
      4988,
      4990,
      4992,
      4993,
      4998,
      5004,
      5005,
      5010,
      5012,
      5017,
      5019,
      5020,
      5027,
      5029,
      5034,
      5035,
      5038,
      5040,
      5045,
      5047,
      5048,
      5053,
      5054,
      5059,
      5061,
      5066,
      5068,
      5069,
      5074,
      5076,
      5081,
      5083,
      5084,
      5086,
      5088,
      5089,
      5094,
      5103,
      5104,
      5109,
      5111,
      5114,
      5119,
      5121,
      5122,
      5129,
      5131,
      5136,
      5137,
      5140,
      5142,
      5145,
      5150,
      5152,
      5153,
      5158,
      5159,
      5164,
      5166,
      5169,
      5174,
      5176,
      5177,
      5182,
      5184,
      5187,
      5192,
      5194,
      5195,
      5197,
      5199,
      5200,
      5206,
      5213,
      5214,
      5216,
      5218,
      5219,
      5224,
      5232,
      5233,
      5235,
      5237,
      5238,
      5245,
      5251,
      5252,
      5254,
      5256,
      5257
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Computer work",
   "task_description": "Find the computer, Turn on the computer, find keyboard, find mouse, go online",
   "program": [
    "[Walk] <home_office> (1)",
    "[Walk] <chair> (1)",
    "[Find] <chair> (1)",
    "[Sit] <chair> (1)",
    "[Find] <computer> (1)",
    "[SwitchOn] <computer> (1)",
    "[Find] <mouse> (1)",
    "[Grab] <mouse> (1)",
    "[TurnTo] <computer> (1)",
    "[PointAt] <computer> (1)",
    "[TurnTo] <computer> (1)",
    "[LookAt] <computer> (1)",
    "[PutObjBack] <mouse> (1)",
    "[Find] <keyboard> (1)",
    "[Type] <keyboard> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upworknturk_second",
   "file_id": "split84_1",
   "goal_condition": [
    [
     [
      240,
      241,
      "INSIDE",
      "character",
      "home_office"
     ],
     [
      240,
      271,
      "ON",
      "character",
      "chair"
     ]
    ],
    [
     [
      240,
      "character",
      "SITTING"
     ],
     [
      276,
      "computer",
      "ON"
     ]
    ]
   ]
  }
 },
 "15": {
  "plan": [
   [
    " # 0: walk to bed\n walk('bed')\n # 1: sit on bed\n sit('bed')\n # 2: lay down\n laydown('bed')\n # 3: get comfortable\n getcomfortable('bed')\n # 4: close eyes\n closeeyes('bed')\n # 5: take a nap\n takenap('bed')\n # 6: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " bed",
      "\n",
      " walk",
      "('",
      "bed",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " sit",
      " on",
      " bed",
      "\n",
      " sit",
      "('",
      "bed",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " lay",
      " down",
      "\n",
      " lay",
      "down",
      "('",
      "bed",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " get",
      " comfortable",
      "\n",
      " get",
      "com",
      "fortable",
      "('",
      "bed",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " close",
      " eyes",
      "\n",
      " close",
      "eyes",
      "('",
      "bed",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " take",
      " a",
      " nap",
      "\n",
      " taken",
      "ap",
      "('",
      "bed",
      "')",
      "\n",
      " #",
      " 6",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.016089354,
      -0.0063030897,
      -0.0024015098,
      -0.7320367,
      -0.02810778,
      -1.1907815,
      -0.02168773,
      -0.005836602,
      -0.009860289,
      -0.00976019,
      -0.0009929797,
      -0.007284508,
      -0.00079962896,
      -0.0018114904,
      -0.0005832353,
      -0.5212782,
      -0.13501187,
      -0.035256747,
      -0.0114433,
      -0.4136737,
      -0.001930745,
      -0.00022850404,
      -0.00046885313,
      -0.00592156,
      -0.000625162,
      -0.0019588124,
      -0.00065337407,
      -0.64204544,
      -0.08772625,
      -0.65647215,
      -0.4839179,
      -0.0867341,
      -0.053545386,
      -0.007944974,
      -0.0010290202,
      -0.0058481134,
      -0.00044690748,
      -0.0021081863,
      -0.00051626156,
      -4.5503225,
      -0.38034502,
      -0.028562263,
      -0.34451133,
      -0.098268315,
      -0.0071770395,
      -0.21936089,
      -0.005779108,
      -0.0010675049,
      -0.0043777884,
      -0.0005979664,
      -0.001668547,
      -0.00048048302,
      -0.20093864,
      -0.032990247,
      -0.026504874,
      -0.038304128,
      -0.18452269,
      -0.6721595,
      -0.17430285,
      -0.0011061106,
      -0.002485699,
      -0.0004320008,
      -0.0016795341,
      -0.0007459447,
      -1.0942063,
      -1.0454706,
      -0.10375519,
      -0.014294349,
      -3.8229916,
      -0.00061764714,
      -0.02713751,
      -0.00043020982,
      -0.0010565255,
      -0.0041700713,
      -0.00031715777,
      -0.0019997235,
      -0.0016086057,
      -0.20189473
     ],
     "top_logprobs": [
      {
       " #": -0.016089354
      },
      {
       " 0": -0.0063030897
      },
      {
       ":": -0.0024015098
      },
      {
       " walk": -0.7320367
      },
      {
       " to": -0.02810778
      },
      {
       " bedroom": -0.38830265
      },
      {
       "\n": -0.02168773
      },
      {
       " walk": -0.005836602
      },
      {
       "('": -0.009860289
      },
      {
       "bed": -0.00976019
      },
      {
       "')": -0.0009929797
      },
      {
       "\n": -0.007284508
      },
      {
       " #": -0.00079962896
      },
      {
       " 1": -0.0018114904
      },
      {
       ":": -0.0005832353
      },
      {
       " sit": -0.5212782
      },
      {
       " on": -0.13501187
      },
      {
       " bed": -0.035256747
      },
      {
       "\n": -0.0114433
      },
      {
       " sit": -0.4136737
      },
      {
       "('": -0.001930745
      },
      {
       "bed": -0.00022850404
      },
      {
       "')": -0.00046885313
      },
      {
       "\n": -0.00592156
      },
      {
       " #": -0.000625162
      },
      {
       " 2": -0.0019588124
      },
      {
       ":": -0.00065337407
      },
      {
       " lay": -0.64204544
      },
      {
       " down": -0.08772625
      },
      {
       "\n": -0.65647215
      },
      {
       " lay": -0.4839179
      },
      {
       "down": -0.0867341
      },
      {
       "('": -0.053545386
      },
      {
       "bed": -0.007944974
      },
      {
       "')": -0.0010290202
      },
      {
       "\n": -0.0058481134
      },
      {
       " #": -0.00044690748
      },
      {
       " 3": -0.0021081863
      },
      {
       ":": -0.00051626156
      },
      {
       " close": -0.27066833
      },
      {
       " comfortable": -0.38034502
      },
      {
       "\n": -0.028562263
      },
      {
       " get": -0.34451133
      },
      {
       "com": -0.098268315
      },
      {
       "fortable": -0.0071770395
      },
      {
       "('": -0.21936089
      },
      {
       "bed": -0.005779108
      },
      {
       "')": -0.0010675049
      },
      {
       "\n": -0.0043777884
      },
      {
       " #": -0.0005979664
      },
      {
       " 4": -0.001668547
      },
      {
       ":": -0.00048048302
      },
      {
       " close": -0.20093864
      },
      {
       " eyes": -0.032990247
      },
      {
       "\n": -0.026504874
      },
      {
       " close": -0.038304128
      },
      {
       "eyes": -0.18452269
      },
      {
       "('": -0.6721595
      },
      {
       "bed": -0.17430285
      },
      {
       "')": -0.0011061106
      },
      {
       "\n": -0.002485699
      },
      {
       " #": -0.0004320008
      },
      {
       " 5": -0.0016795341
      },
      {
       ":": -0.0007459447
      },
      {
       " take": -1.0942063
      },
      {
       " nap": -0.49100435
      },
      {
       " nap": -0.10375519
      },
      {
       "\n": -0.014294349
      },
      {
       " take": -0.7540905
      },
      {
       "ap": -0.00061764714
      },
      {
       "('": -0.02713751
      },
      {
       "bed": -0.00043020982
      },
      {
       "')": -0.0010565255
      },
      {
       "\n": -0.0041700713
      },
      {
       " #": -0.00031715777
      },
      {
       " 6": -0.0019997235
      },
      {
       ":": -0.0016086057
      },
      {
       " Done": -0.20189473
      }
     ],
     "text_offset": [
      4711,
      4713,
      4715,
      4716,
      4721,
      4724,
      4728,
      4729,
      4734,
      4736,
      4739,
      4741,
      4742,
      4744,
      4746,
      4747,
      4751,
      4754,
      4758,
      4759,
      4763,
      4765,
      4768,
      4770,
      4771,
      4773,
      4775,
      4776,
      4780,
      4785,
      4786,
      4790,
      4794,
      4796,
      4799,
      4801,
      4802,
      4804,
      4806,
      4807,
      4811,
      4823,
      4824,
      4828,
      4831,
      4839,
      4841,
      4844,
      4846,
      4847,
      4849,
      4851,
      4852,
      4858,
      4863,
      4864,
      4870,
      4874,
      4876,
      4879,
      4881,
      4882,
      4884,
      4886,
      4887,
      4892,
      4894,
      4898,
      4899,
      4905,
      4907,
      4909,
      4912,
      4914,
      4915,
      4917,
      4919,
      4920
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Take nap",
   "task_description": "Sleep for a short amount of time during the day",
   "program": [
    "[Walk] <bedroom> (1)",
    "[Walk] <bed> (1)",
    "[Find] <bed> (1)",
    "[Lie] <bed> (1)",
    "[Sleep]"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_july",
   "file_id": "split6_5",
   "goal_condition": [
    [
     [
      240,
      197,
      "ON",
      "character",
      "bed"
     ],
     [
      240,
      162,
      "INSIDE",
      "character",
      "bedroom"
     ]
    ],
    [
     [
      240,
      "character",
      "LYING"
     ]
    ]
   ]
  }
 },
 "16": {
  "plan": [
   [
    " # 0: walk to computer\n walk('computer')\n # 1: switch on computer\n find('computer')\n assert('close' to 'computer')\n else: find('computer')\n assert('computer' is 'switchoff' )\n else: switchoff('computer')\n switchon('computer')\n # 2: open laptop\n find('laptop')\n assert('close' to 'laptop')\n else: find('laptop')\n assert('laptop' is 'closed' )\n else: close('laptop')\n open('laptop')\n # 3: login to laptop\n find('keyboard')\n assert('close' to 'keyboard')\n else: find('keyboard')\n grab('keyboard')\n find('laptop')\n assert('keyboard' in 'hands' )\n else: find('keyboard')\n else: grab('keyboard')\n assert('close' to 'laptop' )\n else: find('laptop')\n assert('laptop' is 'opened' )\n else: open('laptop')\n putin('keyboard', 'laptop')\n # 4: open word document\n find('worddocument')\n assert('close' to 'worddocument')\n else: find('worddocument')\n assert('worddocument' is 'closed' )\n else: close('worddocument')\n open('worddocument')\n # 5: start typing\n find('keyboard')\n assert('close' to 'keyboard')\n else: find('keyboard')\n grab('keyboard')\n find('worddocument')\n assert('keyboard' in 'hands' )\n else: find('keyboard')\n else: grab('keyboard')\n assert('close' to 'worddocument' )\n else: find('worddocument')\n assert('worddocument' is 'opened' )\n else: open('worddocument')\n putin('keyboard', 'worddocument')\n # 6: save document\n # 7: close word document\n assert('close' to 'worddocument' )\n else: find('worddocument')\n assert('worddocument' is 'opened' )\n else: open('worddocument')\n close('worddocument')\n # 8: log out\n # 9: close laptop\n assert('close' to 'laptop' )\n else: find('laptop')\n assert('laptop' is 'opened' )\n else: open('laptop')\n close('laptop')\n # 10: switch off computer\n assert('close' to 'computer')\n else: find('computer')\n assert('computer' is 'switchon' )\n else: switchon('computer')\n switchoff('computer')\n # 11: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " computer",
      "\n",
      " walk",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " switch",
      " on",
      " computer",
      "\n",
      " find",
      "('",
      "computer",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "computer",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "computer",
      "')",
      "\n",
      " assert",
      "('",
      "computer",
      "'",
      " is",
      " '",
      "switch",
      "off",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " switch",
      "off",
      "('",
      "computer",
      "')",
      "\n",
      " switch",
      "on",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " open",
      " laptop",
      "\n",
      " find",
      "('",
      "l",
      "aptop",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "l",
      "aptop",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "l",
      "aptop",
      "')",
      "\n",
      " assert",
      "('",
      "l",
      "aptop",
      "'",
      " is",
      " '",
      "closed",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " close",
      "('",
      "l",
      "aptop",
      "')",
      "\n",
      " open",
      "('",
      "l",
      "aptop",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " login",
      " to",
      " laptop",
      "\n",
      " find",
      "('",
      "key",
      "board",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "key",
      "board",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "key",
      "board",
      "')",
      "\n",
      " grab",
      "('",
      "key",
      "board",
      "')",
      "\n",
      " find",
      "('",
      "l",
      "aptop",
      "')",
      "\n",
      " assert",
      "('",
      "key",
      "board",
      "'",
      " in",
      " '",
      "hands",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "key",
      "board",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "key",
      "board",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "l",
      "aptop",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "l",
      "aptop",
      "')",
      "\n",
      " assert",
      "('",
      "l",
      "aptop",
      "'",
      " is",
      " '",
      "opened",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " open",
      "('",
      "l",
      "aptop",
      "')",
      "\n",
      " put",
      "in",
      "('",
      "key",
      "board",
      "',",
      " '",
      "l",
      "aptop",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " open",
      " word",
      " document",
      "\n",
      " find",
      "('",
      "word",
      "document",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "word",
      "document",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "word",
      "document",
      "')",
      "\n",
      " assert",
      "('",
      "word",
      "document",
      "'",
      " is",
      " '",
      "closed",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " close",
      "('",
      "word",
      "document",
      "')",
      "\n",
      " open",
      "('",
      "word",
      "document",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " start",
      " typing",
      "\n",
      " find",
      "('",
      "key",
      "board",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "key",
      "board",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "key",
      "board",
      "')",
      "\n",
      " grab",
      "('",
      "key",
      "board",
      "')",
      "\n",
      " find",
      "('",
      "word",
      "document",
      "')",
      "\n",
      " assert",
      "('",
      "key",
      "board",
      "'",
      " in",
      " '",
      "hands",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "key",
      "board",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "key",
      "board",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "word",
      "document",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "word",
      "document",
      "')",
      "\n",
      " assert",
      "('",
      "word",
      "document",
      "'",
      " is",
      " '",
      "opened",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " open",
      "('",
      "word",
      "document",
      "')",
      "\n",
      " put",
      "in",
      "('",
      "key",
      "board",
      "',",
      " '",
      "word",
      "document",
      "')",
      "\n",
      " #",
      " 6",
      ":",
      " save",
      " document",
      "\n",
      " #",
      " 7",
      ":",
      " close",
      " word",
      " document",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "word",
      "document",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "word",
      "document",
      "')",
      "\n",
      " assert",
      "('",
      "word",
      "document",
      "'",
      " is",
      " '",
      "opened",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " open",
      "('",
      "word",
      "document",
      "')",
      "\n",
      " close",
      "('",
      "word",
      "document",
      "')",
      "\n",
      " #",
      " 8",
      ":",
      " log",
      " out",
      "\n",
      " #",
      " 9",
      ":",
      " close",
      " laptop",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "l",
      "aptop",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "l",
      "aptop",
      "')",
      "\n",
      " assert",
      "('",
      "l",
      "aptop",
      "'",
      " is",
      " '",
      "opened",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " open",
      "('",
      "l",
      "aptop",
      "')",
      "\n",
      " close",
      "('",
      "l",
      "aptop",
      "')",
      "\n",
      " #",
      " 10",
      ":",
      " switch",
      " off",
      " computer",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "computer",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "computer",
      "')",
      "\n",
      " assert",
      "('",
      "computer",
      "'",
      " is",
      " '",
      "switch",
      "on",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " switch",
      "on",
      "('",
      "computer",
      "')",
      "\n",
      " switch",
      "off",
      "('",
      "computer",
      "')",
      "\n",
      " #",
      " 11",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.011343462,
      -0.004206824,
      -0.0028493055,
      -0.17886476,
      -0.03543106,
      -2.1666875,
      -0.036337476,
      -0.0058113625,
      -0.012429117,
      -0.009207806,
      -0.0011096315,
      -0.007565054,
      -0.0007827492,
      -0.0023526354,
      -0.0004320008,
      -1.9321777,
      -0.089593664,
      -0.062268708,
      -0.012438653,
      -0.2086557,
      -0.0008249228,
      -0.00073890394,
      -0.0005952247,
      -0.0055076303,
      -0.10144842,
      -0.0006332137,
      -0.11953219,
      -0.0011184614,
      -0.0002286242,
      -0.0009809266,
      -0.0003557382,
      -1.268136,
      -0.00796744,
      -0.0006076289,
      -0.00081645243,
      -0.002022178,
      -0.00097365293,
      -0.00023488217,
      -0.0010525278,
      -0.0074952096,
      -1.5601437,
      -0.00074128906,
      -0.0009037291,
      -0.0017881425,
      -0.0009149469,
      -0.0023951165,
      -0.026950367,
      -0.0021594996,
      -0.33216742,
      -0.00017496901,
      -0.0043700654,
      -0.00046181606,
      -0.0005911678,
      -0.00076759665,
      -0.0034388627,
      -0.0004894227,
      -0.00021896455,
      -0.0004871615,
      -0.004293259,
      -0.00046873486,
      -8.5905114e-05,
      -0.00023857858,
      -0.0002476394,
      -0.00043927436,
      -0.0039545605,
      -0.001949976,
      -0.0024874911,
      -0.0005887808,
      -1.1706448,
      -1.6386201,
      -0.04587031,
      -0.15892315,
      -0.0007558447,
      -0.002685475,
      -5.7891062e-05,
      -0.00084276,
      -0.004094898,
      -0.050619714,
      -0.00047195444,
      -0.019347936,
      -0.00071892375,
      -0.0014099415,
      -0.0006935154,
      -0.00092974096,
      -9.966347e-06,
      -0.39442226,
      -0.0035799653,
      -0.00015767907,
      -0.000413515,
      -0.0008175262,
      -0.0005057647,
      -0.00032717505,
      -1.0323977e-05,
      -0.00045931176,
      -0.0033398804,
      -1.4206033,
      -0.0005744072,
      -0.0027300604,
      -3.01145e-05,
      -0.0011722865,
      -0.0008046404,
      -0.0008466986,
      -0.017815601,
      -0.054349106,
      -0.00013061494,
      -0.0017994888,
      -0.0001418215,
      -0.000280908,
      -0.008221798,
      -0.00032216733,
      -0.0003891288,
      -8.892534e-06,
      -0.00045322927,
      -0.0030996155,
      -0.0010644017,
      -0.0003042804,
      -0.00020894819,
      -1.2708151e-05,
      -0.00050099444,
      -0.003909922,
      -0.0013507315,
      -0.00239906,
      -0.0004489359,
      -4.123424,
      -0.58986104,
      -0.60830986,
      -0.01689933,
      -2.0669034,
      -0.0014237302,
      -0.7873033,
      -0.0009615406,
      -0.0018256424,
      -0.0049551297,
      -0.23104611,
      -0.00059653405,
      -0.017858138,
      -0.000984745,
      -0.00034249946,
      -0.0005024268,
      -0.008450071,
      -0.00038006424,
      -0.17560245,
      -0.0014915994,
      -0.0002590881,
      -0.00019774071,
      -0.00085683604,
      -0.0003210935,
      -0.0006187191,
      -0.0006667348,
      -0.0004266345,
      -0.002770106,
      -0.3939047,
      -0.00037278878,
      -0.0004788141,
      -0.00027995434,
      -0.0006501517,
      -0.006075725,
      -2.360144,
      -0.00047445972,
      -0.0286688,
      -4.680184e-05,
      -0.00072447216,
      -0.003378395,
      -0.03327218,
      -0.0005467358,
      -0.030731626,
      -0.0003718351,
      -0.0007066368,
      -0.006381368,
      -0.0007882366,
      -0.002384063,
      -0.055094767,
      -0.00018224075,
      -0.0021151174,
      -0.00025312486,
      -0.00044177964,
      -0.002818759,
      -0.00049956393,
      -0.0012501663,
      -0.0009354086,
      -0.0009798546,
      -0.001680728,
      -0.0036083783,
      -0.0005356419,
      -0.0006801538,
      -0.0004442849,
      -0.0002660041,
      -0.0001492143,
      -0.00031739712,
      -0.0023065156,
      -0.028461808,
      -0.0002042981,
      -0.05186359,
      -0.00056224136,
      -0.000159348,
      -0.00033641793,
      -0.001102769,
      -1.9382902e-05,
      -0.09295974,
      -0.00024251342,
      -0.0012772023,
      -0.00016805116,
      -0.0001779483,
      -0.0012880042,
      -0.00025050133,
      -0.000271728,
      -6.265847e-05,
      -0.0005734527,
      -0.0018798044,
      -0.96083933,
      -0.00027506487,
      -0.0014345942,
      -8.176345e-06,
      -0.00063005235,
      -0.00035597567,
      -0.0003813765,
      -0.027797202,
      -0.007013461,
      -0.00012369896,
      -0.0011000226,
      -0.00061764714,
      -0.0002600399,
      -0.0017556614,
      -0.00041196714,
      -0.00038232922,
      -1.2351458e-05,
      -0.0005174555,
      -0.0036637164,
      -0.48359323,
      -0.002395356,
      -0.0004968193,
      -0.0017194764,
      -0.00045668823,
      -0.012047476,
      -0.00037720232,
      -0.00091721094,
      -3.2735214e-05,
      -0.00075948384,
      -0.007751127,
      -0.018791022,
      -0.004607044,
      -0.0006985241,
      -0.41913018,
      -1.8297467,
      -1.1646326,
      -0.01978958,
      -0.7508332,
      -0.0012969561,
      -0.15548699,
      -0.15341726,
      -0.0011159552,
      -0.0031672413,
      -0.28987232,
      -0.00033963655,
      -0.0070395144,
      -0.00079879357,
      -0.00017508729,
      -0.0002528855,
      -0.0030440115,
      -0.0016548748,
      -0.10561984,
      -0.0014164473,
      -0.00015851353,
      -0.000271728,
      -0.00046599025,
      -0.00014742525,
      -0.00021360109,
      -0.00032383628,
      -0.0004893054,
      -0.0021014384,
      -2.7591958,
      -0.00024465634,
      -0.0045899777,
      -0.00087372045,
      -0.00072638044,
      -0.0007075915,
      -0.0007566801,
      -0.01182061,
      -0.011587887,
      -0.0001173809,
      -0.0014634858,
      -0.0002085915,
      -8.244993e-05,
      -0.0036333257,
      -0.00021908467,
      -0.00031811238,
      -0.00043629415,
      -0.00048048302,
      -0.0018933624,
      -0.00096959516,
      -0.00020978546,
      -0.00016507095,
      -0.00017031706,
      -0.0005235371,
      -0.0028621578,
      -0.0014865842,
      -0.0016608447,
      -0.0004014111,
      -0.66224986,
      -0.37177566,
      -0.13264476,
      -0.13030738,
      -0.00030702315,
      -0.06294014,
      -0.00029939285,
      -0.0003748172,
      -0.003072768,
      -0.018662998,
      -0.00023738743,
      -0.005176128,
      -0.00044738431,
      -6.6713445e-05,
      -0.00015386345,
      -0.0026333,
      -0.00031429582,
      -0.046317585,
      -0.001453277,
      -0.00012691665,
      -9.520714e-05,
      -0.00036587374,
      -0.00019499795,
      -0.00019273112,
      -0.00010057153,
      -0.0003581233,
      -0.0011159552,
      -0.030257786,
      -0.00015553238,
      -7.958892e-05,
      -6.3134365e-05,
      -0.00025515142,
      -0.0015821593,
      -0.019214863,
      -0.00013264055,
      -0.29456633,
      -0.0018718033,
      -0.00028889967,
      -0.0016602494,
      -0.0011818353,
      -0.00013359329,
      -0.001791009,
      -9.818829e-05,
      -0.0002164621,
      -0.00052592315,
      -0.00020262918,
      -0.00029307103,
      -0.006242451,
      -7.076466e-05,
      -0.0010669079,
      -5.586358e-05,
      -0.0001507631,
      -0.00034011435,
      -0.00022731101,
      -0.00023714808,
      -0.0002698197,
      -0.0004695684,
      -0.0011623808,
      -0.00029473996,
      -0.0001850999,
      -0.00033892225,
      -0.00014802223,
      -0.00010665305,
      -6.9573514e-05,
      -0.0003392808,
      -0.0012055287,
      -0.0023328008,
      -9.0318645e-05,
      -0.0012856163,
      -0.00021109488,
      -7.302963e-05,
      -0.00016101786,
      -0.00092186476,
      -0.0005186486,
      -0.01744773,
      -6.7427754e-05,
      -0.00060738955,
      -7.791906e-05,
      -0.000114518014,
      -0.0003179941,
      -0.00021657941,
      -0.00020060172,
      -0.00024894974,
      -0.00030785665,
      -0.0006236113,
      -0.009881479,
      -8.268835e-05,
      -0.00042198348,
      -0.000337014,
      -0.0002202777,
      -0.000100094694,
      -9.151261e-05,
      -0.0025040442,
      -0.0009265177,
      -5.979934e-05,
      -0.00045644888,
      -0.0001562495,
      -7.1481794e-05,
      -0.00040785116,
      -0.00015565252,
      -0.0002733969,
      -0.00025670204,
      -0.00032026,
      -0.0013694725,
      -0.0021709087,
      -8.352281e-05,
      -0.00013097163,
      -0.00035227832,
      -0.00019177745,
      -0.0014069555,
      -8.638288e-05,
      -0.001325904,
      -0.00048584928,
      -0.0004952696,
      -0.007311586,
      -0.0032355874,
      -0.0028283831,
      -0.0006191959,
      -0.14115882,
      -0.26465043,
      -0.010641571,
      -0.52963483,
      -0.003591033,
      -0.0008587452,
      -0.24821417,
      -1.8899944,
      -0.014909986,
      -0.0105536785,
      -0.76424456,
      -0.00021896455,
      -0.005328023,
      -0.0002192039,
      -0.00046742076,
      -0.00012775393,
      -0.00112598,
      -0.00036825513,
      -0.8286129,
      -8.054166e-05,
      -0.0008842211,
      -0.00011237507,
      -0.000110467736,
      -0.00020286761,
      -0.00018069198,
      -0.00014539869,
      -0.00026242502,
      -0.00028114737,
      -0.0009049231,
      -0.0017837832,
      -9.0198504e-05,
      -0.00016268677,
      -0.0002513358,
      -0.00022003835,
      -9.878341e-05,
      -0.00012274434,
      -0.0016001271,
      -0.00097305595,
      -5.848711e-05,
      -0.0006187191,
      -0.00013824523,
      -0.00012477185,
      -0.00048131656,
      -0.00013550156,
      -9.103483e-05,
      -0.00023404865,
      -0.00034953654,
      -0.0013174271,
      -0.0020261202,
      -0.00019654672,
      -0.00010319318,
      -0.00017854528,
      -0.0004844188,
      -0.0046093185,
      -0.00091649476,
      -0.000735445,
      -0.0007791692,
      -1.018018,
      -1.285816,
      -1.8736446,
      -0.084064774,
      -0.0015737416,
      -0.0011264578,
      -1.032391,
      -0.005464477,
      -0.011622681,
      -0.029274696,
      -0.00012238578,
      -0.0005937923,
      -0.00018414622,
      -0.00016018527,
      -0.0001086796,
      -0.0009037291,
      -4.5135734e-05,
      -0.011495392,
      -5.7293146e-05,
      -0.00053969875,
      -6.516092e-05,
      -6.99302e-05,
      -0.00012167429,
      -0.00024144053,
      -0.00011392572,
      -3.3093773e-05,
      -0.00027613778,
      -0.0005457812,
      -0.0005467358,
      -7.1958624e-05,
      -0.0003624167,
      -9.846204e-06,
      -0.00017103326,
      -6.110595e-05,
      -9.329886e-05,
      -0.00076342054,
      -0.0005621213,
      -5.3716885e-05,
      -0.0003634877,
      -6.766711e-05,
      -0.00016650239,
      -0.0004453587,
      -0.00010998996,
      -9.9142904e-05,
      -4.1232483e-06,
      -0.00025217026,
      -0.00088601024,
      -0.001166678,
      -0.00012393831,
      -0.000106175285,
      -9.490449e-06,
      -0.00038089874,
      -0.0028644283,
      -0.000686118,
      -0.002712368,
      -0.002117984,
      -0.098708,
      -0.025935646,
      -0.049678832,
      -0.009482395,
      -0.55090237,
      -0.00018939328,
      -0.0046260264,
      -0.0003022548,
      -7.458028e-05,
      -0.00018724658,
      -0.0008582684,
      -0.49716172,
      -0.0014803768,
      -0.00011702421,
      -0.00012763379,
      -0.0002614704,
      -0.00027804603,
      -0.0001758016,
      -0.0005201964,
      -0.0011097498,
      -0.08019529,
      -0.0001244142,
      -0.0001643557,
      -0.00032717505,
      -9.997455e-05,
      -0.0002547938,
      -0.0023540705,
      -0.00088493637,
      -0.004467352,
      -5.467149e-05,
      -0.00047147667,
      -0.00025217026,
      -0.00013371343,
      -0.0005746466,
      -0.0016820412,
      -0.00022880347,
      -0.00027136848,
      -0.00076139305,
      -0.0016034695,
      -0.00027852194,
      -0.00068659574,
      -0.00028376994,
      -0.00018820119,
      -0.0007405738,
      -0.0076573063,
      -0.0011329035,
      -0.002969819,
      -0.0018918088,
      -0.05649898
     ],
     "top_logprobs": [
      {
       " #": -0.011343462
      },
      {
       " 0": -0.004206824
      },
      {
       ":": -0.0028493055
      },
      {
       " walk": -0.17886476
      },
      {
       " to": -0.03543106
      },
      {
       " home": -0.31486183
      },
      {
       "\n": -0.036337476
      },
      {
       " walk": -0.0058113625
      },
      {
       "('": -0.012429117
      },
      {
       "computer": -0.009207806
      },
      {
       "')": -0.0011096315
      },
      {
       "\n": -0.007565054
      },
      {
       " #": -0.0007827492
      },
      {
       " 1": -0.0023526354
      },
      {
       ":": -0.0004320008
      },
      {
       " turn": -0.9704466
      },
      {
       " on": -0.089593664
      },
      {
       " computer": -0.062268708
      },
      {
       "\n": -0.012438653
      },
      {
       " find": -0.2086557
      },
      {
       "('": -0.0008249228
      },
      {
       "computer": -0.00073890394
      },
      {
       "')": -0.0005952247
      },
      {
       "\n": -0.0055076303
      },
      {
       " assert": -0.10144842
      },
      {
       "('": -0.0006332137
      },
      {
       "close": -0.11953219
      },
      {
       "'": -0.0011184614
      },
      {
       " to": -0.0002286242
      },
      {
       " '": -0.0009809266
      },
      {
       "computer": -0.0003557382
      },
      {
       "'": -0.3308344
      },
      {
       "\n": -0.00796744
      },
      {
       " else": -0.0006076289
      },
      {
       ":": -0.00081645243
      },
      {
       " find": -0.002022178
      },
      {
       "('": -0.00097365293
      },
      {
       "computer": -0.00023488217
      },
      {
       "')": -0.0010525278
      },
      {
       "\n": -0.0074952096
      },
      {
       " switch": -0.23950131
      },
      {
       "('": -0.00074128906
      },
      {
       "computer": -0.0009037291
      },
      {
       "'": -0.0017881425
      },
      {
       " is": -0.0009149469
      },
      {
       " '": -0.0023951165
      },
      {
       "switch": -0.026950367
      },
      {
       "off": -0.0021594996
      },
      {
       "'": -0.33216742
      },
      {
       " )": -0.00017496901
      },
      {
       "\n": -0.0043700654
      },
      {
       " else": -0.00046181606
      },
      {
       ":": -0.0005911678
      },
      {
       " switch": -0.00076759665
      },
      {
       "off": -0.0034388627
      },
      {
       "('": -0.0004894227
      },
      {
       "computer": -0.00021896455
      },
      {
       "')": -0.0004871615
      },
      {
       "\n": -0.004293259
      },
      {
       " switch": -0.00046873486
      },
      {
       "on": -8.5905114e-05
      },
      {
       "('": -0.00023857858
      },
      {
       "computer": -0.0002476394
      },
      {
       "')": -0.00043927436
      },
      {
       "\n": -0.0039545605
      },
      {
       " #": -0.001949976
      },
      {
       " 2": -0.0024874911
      },
      {
       ":": -0.0005887808
      },
      {
       " open": -1.1706448
      },
      {
       " laptop": -1.6386201
      },
      {
       "\n": -0.04587031
      },
      {
       " find": -0.15892315
      },
      {
       "('": -0.0007558447
      },
      {
       "l": -0.002685475
      },
      {
       "aptop": -5.7891062e-05
      },
      {
       "')": -0.00084276
      },
      {
       "\n": -0.004094898
      },
      {
       " assert": -0.050619714
      },
      {
       "('": -0.00047195444
      },
      {
       "close": -0.019347936
      },
      {
       "'": -0.00071892375
      },
      {
       " to": -0.0014099415
      },
      {
       " '": -0.0006935154
      },
      {
       "l": -0.00092974096
      },
      {
       "aptop": -9.966347e-06
      },
      {
       "')": -0.39442226
      },
      {
       "\n": -0.0035799653
      },
      {
       " else": -0.00015767907
      },
      {
       ":": -0.000413515
      },
      {
       " find": -0.0008175262
      },
      {
       "('": -0.0005057647
      },
      {
       "l": -0.00032717505
      },
      {
       "aptop": -1.0323977e-05
      },
      {
       "')": -0.00045931176
      },
      {
       "\n": -0.0033398804
      },
      {
       " open": -0.46029806
      },
      {
       "('": -0.0005744072
      },
      {
       "l": -0.0027300604
      },
      {
       "aptop": -3.01145e-05
      },
      {
       "'": -0.0011722865
      },
      {
       " is": -0.0008046404
      },
      {
       " '": -0.0008466986
      },
      {
       "closed": -0.017815601
      },
      {
       "'": -0.054349106
      },
      {
       " )": -0.00013061494
      },
      {
       "\n": -0.0017994888
      },
      {
       " else": -0.0001418215
      },
      {
       ":": -0.000280908
      },
      {
       " close": -0.008221798
      },
      {
       "('": -0.00032216733
      },
      {
       "l": -0.0003891288
      },
      {
       "aptop": -8.892534e-06
      },
      {
       "')": -0.00045322927
      },
      {
       "\n": -0.0030996155
      },
      {
       " open": -0.0010644017
      },
      {
       "('": -0.0003042804
      },
      {
       "l": -0.00020894819
      },
      {
       "aptop": -1.2708151e-05
      },
      {
       "')": -0.00050099444
      },
      {
       "\n": -0.003909922
      },
      {
       " #": -0.0013507315
      },
      {
       " 3": -0.00239906
      },
      {
       ":": -0.0004489359
      },
      {
       " find": -1.2782372
      },
      {
       " to": -0.58986104
      },
      {
       " laptop": -0.60830986
      },
      {
       "\n": -0.01689933
      },
      {
       " #": -0.33647093
      },
      {
       "('": -0.0014237302
      },
      {
       "key": -0.7873033
      },
      {
       "board": -0.0009615406
      },
      {
       "')": -0.0018256424
      },
      {
       "\n": -0.0049551297
      },
      {
       " assert": -0.23104611
      },
      {
       "('": -0.00059653405
      },
      {
       "close": -0.017858138
      },
      {
       "'": -0.000984745
      },
      {
       " to": -0.00034249946
      },
      {
       " '": -0.0005024268
      },
      {
       "key": -0.008450071
      },
      {
       "board": -0.00038006424
      },
      {
       "')": -0.17560245
      },
      {
       "\n": -0.0014915994
      },
      {
       " else": -0.0002590881
      },
      {
       ":": -0.00019774071
      },
      {
       " find": -0.00085683604
      },
      {
       "('": -0.0003210935
      },
      {
       "key": -0.0006187191
      },
      {
       "board": -0.0006667348
      },
      {
       "')": -0.0004266345
      },
      {
       "\n": -0.002770106
      },
      {
       " grab": -0.3939047
      },
      {
       "('": -0.00037278878
      },
      {
       "key": -0.0004788141
      },
      {
       "board": -0.00027995434
      },
      {
       "')": -0.0006501517
      },
      {
       "\n": -0.006075725
      },
      {
       " #": -0.5928365
      },
      {
       "('": -0.00047445972
      },
      {
       "l": -0.0286688
      },
      {
       "aptop": -4.680184e-05
      },
      {
       "')": -0.00072447216
      },
      {
       "\n": -0.003378395
      },
      {
       " assert": -0.03327218
      },
      {
       "('": -0.0005467358
      },
      {
       "key": -0.030731626
      },
      {
       "board": -0.0003718351
      },
      {
       "'": -0.0007066368
      },
      {
       " in": -0.006381368
      },
      {
       " '": -0.0007882366
      },
      {
       "hands": -0.002384063
      },
      {
       "'": -0.055094767
      },
      {
       " )": -0.00018224075
      },
      {
       "\n": -0.0021151174
      },
      {
       " else": -0.00025312486
      },
      {
       ":": -0.00044177964
      },
      {
       " find": -0.002818759
      },
      {
       "('": -0.00049956393
      },
      {
       "key": -0.0012501663
      },
      {
       "board": -0.0009354086
      },
      {
       "')": -0.0009798546
      },
      {
       "\n": -0.001680728
      },
      {
       " else": -0.0036083783
      },
      {
       ":": -0.0005356419
      },
      {
       " grab": -0.0006801538
      },
      {
       "('": -0.0004442849
      },
      {
       "key": -0.0002660041
      },
      {
       "board": -0.0001492143
      },
      {
       "')": -0.00031739712
      },
      {
       "\n": -0.0023065156
      },
      {
       " assert": -0.028461808
      },
      {
       "('": -0.0002042981
      },
      {
       "close": -0.05186359
      },
      {
       "'": -0.00056224136
      },
      {
       " to": -0.000159348
      },
      {
       " '": -0.00033641793
      },
      {
       "l": -0.001102769
      },
      {
       "aptop": -1.9382902e-05
      },
      {
       "'": -0.09295974
      },
      {
       " )": -0.00024251342
      },
      {
       "\n": -0.0012772023
      },
      {
       " else": -0.00016805116
      },
      {
       ":": -0.0001779483
      },
      {
       " find": -0.0012880042
      },
      {
       "('": -0.00025050133
      },
      {
       "l": -0.000271728
      },
      {
       "aptop": -6.265847e-05
      },
      {
       "')": -0.0005734527
      },
      {
       "\n": -0.0018798044
      },
      {
       " put": -0.8917971
      },
      {
       "('": -0.00027506487
      },
      {
       "l": -0.0014345942
      },
      {
       "aptop": -8.176345e-06
      },
      {
       "'": -0.00063005235
      },
      {
       " is": -0.00035597567
      },
      {
       " '": -0.0003813765
      },
      {
       "opened": -0.027797202
      },
      {
       "'": -0.007013461
      },
      {
       " )": -0.00012369896
      },
      {
       "\n": -0.0011000226
      },
      {
       " else": -0.00061764714
      },
      {
       ":": -0.0002600399
      },
      {
       " open": -0.0017556614
      },
      {
       "('": -0.00041196714
      },
      {
       "l": -0.00038232922
      },
      {
       "aptop": -1.2351458e-05
      },
      {
       "')": -0.0005174555
      },
      {
       "\n": -0.0036637164
      },
      {
       " put": -0.48359323
      },
      {
       "in": -0.002395356
      },
      {
       "('": -0.0004968193
      },
      {
       "key": -0.0017194764
      },
      {
       "board": -0.00045668823
      },
      {
       "',": -0.012047476
      },
      {
       " '": -0.00037720232
      },
      {
       "l": -0.00091721094
      },
      {
       "aptop": -3.2735214e-05
      },
      {
       "')": -0.00075948384
      },
      {
       "\n": -0.007751127
      },
      {
       " #": -0.018791022
      },
      {
       " 4": -0.004607044
      },
      {
       ":": -0.0006985241
      },
      {
       " open": -0.41913018
      },
      {
       " work": -1.1994691
      },
      {
       " processor": -0.8693016
      },
      {
       "\n": -0.01978958
      },
      {
       " find": -0.7508332
      },
      {
       "('": -0.0012969561
      },
      {
       "word": -0.15548699
      },
      {
       "document": -0.15341726
      },
      {
       "')": -0.0011159552
      },
      {
       "\n": -0.0031672413
      },
      {
       " assert": -0.28987232
      },
      {
       "('": -0.00033963655
      },
      {
       "close": -0.0070395144
      },
      {
       "'": -0.00079879357
      },
      {
       " to": -0.00017508729
      },
      {
       " '": -0.0002528855
      },
      {
       "word": -0.0030440115
      },
      {
       "document": -0.0016548748
      },
      {
       "')": -0.10561984
      },
      {
       "\n": -0.0014164473
      },
      {
       " else": -0.00015851353
      },
      {
       ":": -0.000271728
      },
      {
       " find": -0.00046599025
      },
      {
       "('": -0.00014742525
      },
      {
       "word": -0.00021360109
      },
      {
       "document": -0.00032383628
      },
      {
       "')": -0.0004893054
      },
      {
       "\n": -0.0021014384
      },
      {
       " open": -0.24188384
      },
      {
       "('": -0.00024465634
      },
      {
       "word": -0.0045899777
      },
      {
       "document": -0.00087372045
      },
      {
       "'": -0.00072638044
      },
      {
       " is": -0.0007075915
      },
      {
       " '": -0.0007566801
      },
      {
       "closed": -0.01182061
      },
      {
       "'": -0.011587887
      },
      {
       " )": -0.0001173809
      },
      {
       "\n": -0.0014634858
      },
      {
       " else": -0.0002085915
      },
      {
       ":": -8.244993e-05
      },
      {
       " close": -0.0036333257
      },
      {
       "('": -0.00021908467
      },
      {
       "word": -0.00031811238
      },
      {
       "document": -0.00043629415
      },
      {
       "')": -0.00048048302
      },
      {
       "\n": -0.0018933624
      },
      {
       " open": -0.00096959516
      },
      {
       "('": -0.00020978546
      },
      {
       "word": -0.00016507095
      },
      {
       "document": -0.00017031706
      },
      {
       "')": -0.0005235371
      },
      {
       "\n": -0.0028621578
      },
      {
       " #": -0.0014865842
      },
      {
       " 5": -0.0016608447
      },
      {
       ":": -0.0004014111
      },
      {
       " start": -0.66224986
      },
      {
       " typing": -0.37177566
      },
      {
       "\n": -0.13264476
      },
      {
       " find": -0.13030738
      },
      {
       "('": -0.00030702315
      },
      {
       "key": -0.06294014
      },
      {
       "board": -0.00029939285
      },
      {
       "')": -0.0003748172
      },
      {
       "\n": -0.003072768
      },
      {
       " assert": -0.018662998
      },
      {
       "('": -0.00023738743
      },
      {
       "close": -0.005176128
      },
      {
       "'": -0.00044738431
      },
      {
       " to": -6.6713445e-05
      },
      {
       " '": -0.00015386345
      },
      {
       "key": -0.0026333
      },
      {
       "board": -0.00031429582
      },
      {
       "')": -0.046317585
      },
      {
       "\n": -0.001453277
      },
      {
       " else": -0.00012691665
      },
      {
       ":": -9.520714e-05
      },
      {
       " find": -0.00036587374
      },
      {
       "('": -0.00019499795
      },
      {
       "key": -0.00019273112
      },
      {
       "board": -0.00010057153
      },
      {
       "')": -0.0003581233
      },
      {
       "\n": -0.0011159552
      },
      {
       " grab": -0.030257786
      },
      {
       "('": -0.00015553238
      },
      {
       "key": -7.958892e-05
      },
      {
       "board": -6.3134365e-05
      },
      {
       "')": -0.00025515142
      },
      {
       "\n": -0.0015821593
      },
      {
       " find": -0.019214863
      },
      {
       "('": -0.00013264055
      },
      {
       "word": -0.29456633
      },
      {
       "document": -0.0018718033
      },
      {
       "')": -0.00028889967
      },
      {
       "\n": -0.0016602494
      },
      {
       " assert": -0.0011818353
      },
      {
       "('": -0.00013359329
      },
      {
       "key": -0.001791009
      },
      {
       "board": -9.818829e-05
      },
      {
       "'": -0.0002164621
      },
      {
       " in": -0.00052592315
      },
      {
       " '": -0.00020262918
      },
      {
       "hands": -0.00029307103
      },
      {
       "'": -0.006242451
      },
      {
       " )": -7.076466e-05
      },
      {
       "\n": -0.0010669079
      },
      {
       " else": -5.586358e-05
      },
      {
       ":": -0.0001507631
      },
      {
       " find": -0.00034011435
      },
      {
       "('": -0.00022731101
      },
      {
       "key": -0.00023714808
      },
      {
       "board": -0.0002698197
      },
      {
       "')": -0.0004695684
      },
      {
       "\n": -0.0011623808
      },
      {
       " else": -0.00029473996
      },
      {
       ":": -0.0001850999
      },
      {
       " grab": -0.00033892225
      },
      {
       "('": -0.00014802223
      },
      {
       "key": -0.00010665305
      },
      {
       "board": -6.9573514e-05
      },
      {
       "')": -0.0003392808
      },
      {
       "\n": -0.0012055287
      },
      {
       " assert": -0.0023328008
      },
      {
       "('": -9.0318645e-05
      },
      {
       "close": -0.0012856163
      },
      {
       "'": -0.00021109488
      },
      {
       " to": -7.302963e-05
      },
      {
       " '": -0.00016101786
      },
      {
       "word": -0.00092186476
      },
      {
       "document": -0.0005186486
      },
      {
       "'": -0.01744773
      },
      {
       " )": -6.7427754e-05
      },
      {
       "\n": -0.00060738955
      },
      {
       " else": -7.791906e-05
      },
      {
       ":": -0.000114518014
      },
      {
       " find": -0.0003179941
      },
      {
       "('": -0.00021657941
      },
      {
       "word": -0.00020060172
      },
      {
       "document": -0.00024894974
      },
      {
       "')": -0.00030785665
      },
      {
       "\n": -0.0006236113
      },
      {
       " assert": -0.009881479
      },
      {
       "('": -8.268835e-05
      },
      {
       "word": -0.00042198348
      },
      {
       "document": -0.000337014
      },
      {
       "'": -0.0002202777
      },
      {
       " is": -0.000100094694
      },
      {
       " '": -9.151261e-05
      },
      {
       "opened": -0.0025040442
      },
      {
       "'": -0.0009265177
      },
      {
       " )": -5.979934e-05
      },
      {
       "\n": -0.00045644888
      },
      {
       " else": -0.0001562495
      },
      {
       ":": -7.1481794e-05
      },
      {
       " open": -0.00040785116
      },
      {
       "('": -0.00015565252
      },
      {
       "word": -0.0002733969
      },
      {
       "document": -0.00025670204
      },
      {
       "')": -0.00032026
      },
      {
       "\n": -0.0013694725
      },
      {
       " put": -0.0021709087
      },
      {
       "in": -8.352281e-05
      },
      {
       "('": -0.00013097163
      },
      {
       "key": -0.00035227832
      },
      {
       "board": -0.00019177745
      },
      {
       "',": -0.0014069555
      },
      {
       " '": -8.638288e-05
      },
      {
       "word": -0.001325904
      },
      {
       "document": -0.00048584928
      },
      {
       "')": -0.0004952696
      },
      {
       "\n": -0.007311586
      },
      {
       " #": -0.0032355874
      },
      {
       " 6": -0.0028283831
      },
      {
       ":": -0.0006191959
      },
      {
       " save": -0.14115882
      },
      {
       " document": -0.26465043
      },
      {
       "\n": -0.010641571
      },
      {
       " #": -0.52963483
      },
      {
       " 7": -0.003591033
      },
      {
       ":": -0.0008587452
      },
      {
       " close": -0.24821417
      },
      {
       " document": -0.87956506
      },
      {
       " document": -0.014909986
      },
      {
       "\n": -0.0105536785
      },
      {
       " assert": -0.76424456
      },
      {
       "('": -0.00021896455
      },
      {
       "close": -0.005328023
      },
      {
       "'": -0.0002192039
      },
      {
       " to": -0.00046742076
      },
      {
       " '": -0.00012775393
      },
      {
       "word": -0.00112598
      },
      {
       "document": -0.00036825513
      },
      {
       "')": -0.57441485
      },
      {
       " )": -8.054166e-05
      },
      {
       "\n": -0.0008842211
      },
      {
       " else": -0.00011237507
      },
      {
       ":": -0.000110467736
      },
      {
       " find": -0.00020286761
      },
      {
       "('": -0.00018069198
      },
      {
       "word": -0.00014539869
      },
      {
       "document": -0.00026242502
      },
      {
       "')": -0.00028114737
      },
      {
       "\n": -0.0009049231
      },
      {
       " assert": -0.0017837832
      },
      {
       "('": -9.0198504e-05
      },
      {
       "word": -0.00016268677
      },
      {
       "document": -0.0002513358
      },
      {
       "'": -0.00022003835
      },
      {
       " is": -9.878341e-05
      },
      {
       " '": -0.00012274434
      },
      {
       "opened": -0.0016001271
      },
      {
       "'": -0.00097305595
      },
      {
       " )": -5.848711e-05
      },
      {
       "\n": -0.0006187191
      },
      {
       " else": -0.00013824523
      },
      {
       ":": -0.00012477185
      },
      {
       " open": -0.00048131656
      },
      {
       "('": -0.00013550156
      },
      {
       "word": -9.103483e-05
      },
      {
       "document": -0.00023404865
      },
      {
       "')": -0.00034953654
      },
      {
       "\n": -0.0013174271
      },
      {
       " close": -0.0020261202
      },
      {
       "('": -0.00019654672
      },
      {
       "word": -0.00010319318
      },
      {
       "document": -0.00017854528
      },
      {
       "')": -0.0004844188
      },
      {
       "\n": -0.0046093185
      },
      {
       " #": -0.00091649476
      },
      {
       " 8": -0.000735445
      },
      {
       ":": -0.0007791692
      },
      {
       " close": -0.5412839
      },
      {
       "out": -0.4491307
      },
      {
       " of": -0.39888746
      },
      {
       " #": -0.084064774
      },
      {
       " 9": -0.0015737416
      },
      {
       ":": -0.0011264578
      },
      {
       " switch": -0.52048707
      },
      {
       " laptop": -0.005464477
      },
      {
       "\n": -0.011622681
      },
      {
       " assert": -0.029274696
      },
      {
       "('": -0.00012238578
      },
      {
       "close": -0.0005937923
      },
      {
       "'": -0.00018414622
      },
      {
       " to": -0.00016018527
      },
      {
       " '": -0.0001086796
      },
      {
       "l": -0.0009037291
      },
      {
       "aptop": -4.5135734e-05
      },
      {
       "'": -0.011495392
      },
      {
       " )": -5.7293146e-05
      },
      {
       "\n": -0.00053969875
      },
      {
       " else": -6.516092e-05
      },
      {
       ":": -6.99302e-05
      },
      {
       " find": -0.00012167429
      },
      {
       "('": -0.00024144053
      },
      {
       "l": -0.00011392572
      },
      {
       "aptop": -3.3093773e-05
      },
      {
       "')": -0.00027613778
      },
      {
       "\n": -0.0005457812
      },
      {
       " assert": -0.0005467358
      },
      {
       "('": -7.1958624e-05
      },
      {
       "l": -0.0003624167
      },
      {
       "aptop": -9.846204e-06
      },
      {
       "'": -0.00017103326
      },
      {
       " is": -6.110595e-05
      },
      {
       " '": -9.329886e-05
      },
      {
       "opened": -0.00076342054
      },
      {
       "'": -0.0005621213
      },
      {
       " )": -5.3716885e-05
      },
      {
       "\n": -0.0003634877
      },
      {
       " else": -6.766711e-05
      },
      {
       ":": -0.00016650239
      },
      {
       " open": -0.0004453587
      },
      {
       "('": -0.00010998996
      },
      {
       "l": -9.9142904e-05
      },
      {
       "aptop": -4.1232483e-06
      },
      {
       "')": -0.00025217026
      },
      {
       "\n": -0.00088601024
      },
      {
       " close": -0.001166678
      },
      {
       "('": -0.00012393831
      },
      {
       "l": -0.000106175285
      },
      {
       "aptop": -9.490449e-06
      },
      {
       "')": -0.00038089874
      },
      {
       "\n": -0.0028644283
      },
      {
       " #": -0.000686118
      },
      {
       " 10": -0.002712368
      },
      {
       ":": -0.002117984
      },
      {
       " switch": -0.098708
      },
      {
       " off": -0.025935646
      },
      {
       " computer": -0.049678832
      },
      {
       "\n": -0.009482395
      },
      {
       " assert": -0.55090237
      },
      {
       "('": -0.00018939328
      },
      {
       "close": -0.0046260264
      },
      {
       "'": -0.0003022548
      },
      {
       " to": -7.458028e-05
      },
      {
       " '": -0.00018724658
      },
      {
       "computer": -0.0008582684
      },
      {
       "')": -0.49716172
      },
      {
       "\n": -0.0014803768
      },
      {
       " else": -0.00011702421
      },
      {
       ":": -0.00012763379
      },
      {
       " find": -0.0002614704
      },
      {
       "('": -0.00027804603
      },
      {
       "computer": -0.0001758016
      },
      {
       "')": -0.0005201964
      },
      {
       "\n": -0.0011097498
      },
      {
       " assert": -0.08019529
      },
      {
       "('": -0.0001244142
      },
      {
       "computer": -0.0001643557
      },
      {
       "'": -0.00032717505
      },
      {
       " is": -9.997455e-05
      },
      {
       " '": -0.0002547938
      },
      {
       "switch": -0.0023540705
      },
      {
       "on": -0.00088493637
      },
      {
       "'": -0.004467352
      },
      {
       " )": -5.467149e-05
      },
      {
       "\n": -0.00047147667
      },
      {
       " else": -0.00025217026
      },
      {
       ":": -0.00013371343
      },
      {
       " switch": -0.0005746466
      },
      {
       "on": -0.0016820412
      },
      {
       "('": -0.00022880347
      },
      {
       "computer": -0.00027136848
      },
      {
       "')": -0.00076139305
      },
      {
       "\n": -0.0016034695
      },
      {
       " switch": -0.00027852194
      },
      {
       "off": -0.00068659574
      },
      {
       "('": -0.00028376994
      },
      {
       "computer": -0.00018820119
      },
      {
       "')": -0.0007405738
      },
      {
       "\n": -0.0076573063
      },
      {
       " #": -0.0011329035
      },
      {
       " 11": -0.002969819
      },
      {
       ":": -0.0018918088
      },
      {
       " Done": -0.05649898
      }
     ],
     "text_offset": [
      4722,
      4724,
      4726,
      4727,
      4732,
      4735,
      4744,
      4745,
      4750,
      4752,
      4760,
      4762,
      4763,
      4765,
      4767,
      4768,
      4775,
      4778,
      4787,
      4788,
      4793,
      4795,
      4803,
      4805,
      4806,
      4813,
      4815,
      4820,
      4821,
      4824,
      4826,
      4834,
      4836,
      4837,
      4842,
      4843,
      4848,
      4850,
      4858,
      4860,
      4861,
      4868,
      4870,
      4878,
      4879,
      4882,
      4884,
      4890,
      4893,
      4894,
      4896,
      4897,
      4902,
      4903,
      4910,
      4913,
      4915,
      4923,
      4925,
      4926,
      4933,
      4935,
      4937,
      4945,
      4947,
      4948,
      4950,
      4952,
      4953,
      4958,
      4965,
      4966,
      4971,
      4973,
      4974,
      4979,
      4981,
      4982,
      4989,
      4991,
      4996,
      4997,
      5000,
      5002,
      5003,
      5008,
      5010,
      5011,
      5016,
      5017,
      5022,
      5024,
      5025,
      5030,
      5032,
      5033,
      5040,
      5042,
      5043,
      5048,
      5049,
      5052,
      5054,
      5060,
      5061,
      5063,
      5064,
      5069,
      5070,
      5076,
      5078,
      5079,
      5084,
      5086,
      5087,
      5092,
      5094,
      5095,
      5100,
      5102,
      5103,
      5105,
      5107,
      5108,
      5114,
      5117,
      5124,
      5125,
      5130,
      5132,
      5135,
      5140,
      5142,
      5143,
      5150,
      5152,
      5157,
      5158,
      5161,
      5163,
      5166,
      5171,
      5173,
      5174,
      5179,
      5180,
      5185,
      5187,
      5190,
      5195,
      5197,
      5198,
      5203,
      5205,
      5208,
      5213,
      5215,
      5216,
      5221,
      5223,
      5224,
      5229,
      5231,
      5232,
      5239,
      5241,
      5244,
      5249,
      5250,
      5253,
      5255,
      5260,
      5261,
      5263,
      5264,
      5269,
      5270,
      5275,
      5277,
      5280,
      5285,
      5287,
      5288,
      5293,
      5294,
      5299,
      5301,
      5304,
      5309,
      5311,
      5312,
      5319,
      5321,
      5326,
      5327,
      5330,
      5332,
      5333,
      5338,
      5339,
      5341,
      5342,
      5347,
      5348,
      5353,
      5355,
      5356,
      5361,
      5363,
      5364,
      5371,
      5373,
      5374,
      5379,
      5380,
      5383,
      5385,
      5391,
      5392,
      5394,
      5395,
      5400,
      5401,
      5406,
      5408,
      5409,
      5414,
      5416,
      5417,
      5421,
      5423,
      5425,
      5428,
      5433,
      5435,
      5437,
      5438,
      5443,
      5445,
      5446,
      5448,
      5450,
      5451,
      5456,
      5461,
      5470,
      5471,
      5476,
      5478,
      5482,
      5490,
      5492,
      5493,
      5500,
      5502,
      5507,
      5508,
      5511,
      5513,
      5517,
      5525,
      5527,
      5528,
      5533,
      5534,
      5539,
      5541,
      5545,
      5553,
      5555,
      5556,
      5563,
      5565,
      5569,
      5577,
      5578,
      5581,
      5583,
      5589,
      5590,
      5592,
      5593,
      5598,
      5599,
      5605,
      5607,
      5611,
      5619,
      5621,
      5622,
      5627,
      5629,
      5633,
      5641,
      5643,
      5644,
      5646,
      5648,
      5649,
      5655,
      5662,
      5663,
      5668,
      5670,
      5673,
      5678,
      5680,
      5681,
      5688,
      5690,
      5695,
      5696,
      5699,
      5701,
      5704,
      5709,
      5711,
      5712,
      5717,
      5718,
      5723,
      5725,
      5728,
      5733,
      5735,
      5736,
      5741,
      5743,
      5746,
      5751,
      5753,
      5754,
      5759,
      5761,
      5765,
      5773,
      5775,
      5776,
      5783,
      5785,
      5788,
      5793,
      5794,
      5797,
      5799,
      5804,
      5805,
      5807,
      5808,
      5813,
      5814,
      5819,
      5821,
      5824,
      5829,
      5831,
      5832,
      5837,
      5838,
      5843,
      5845,
      5848,
      5853,
      5855,
      5856,
      5863,
      5865,
      5870,
      5871,
      5874,
      5876,
      5880,
      5888,
      5889,
      5891,
      5892,
      5897,
      5898,
      5903,
      5905,
      5909,
      5917,
      5919,
      5920,
      5927,
      5929,
      5933,
      5941,
      5942,
      5945,
      5947,
      5953,
      5954,
      5956,
      5957,
      5962,
      5963,
      5968,
      5970,
      5974,
      5982,
      5984,
      5985,
      5989,
      5991,
      5993,
      5996,
      6001,
      6003,
      6005,
      6009,
      6017,
      6019,
      6020,
      6022,
      6024,
      6025,
      6030,
      6039,
      6040,
      6042,
      6044,
      6045,
      6051,
      6056,
      6065,
      6066,
      6073,
      6075,
      6080,
      6081,
      6084,
      6086,
      6090,
      6098,
      6099,
      6101,
      6102,
      6107,
      6108,
      6113,
      6115,
      6119,
      6127,
      6129,
      6130,
      6137,
      6139,
      6143,
      6151,
      6152,
      6155,
      6157,
      6163,
      6164,
      6166,
      6167,
      6172,
      6173,
      6178,
      6180,
      6184,
      6192,
      6194,
      6195,
      6201,
      6203,
      6207,
      6215,
      6217,
      6218,
      6220,
      6222,
      6223,
      6227,
      6231,
      6232,
      6234,
      6236,
      6237,
      6243,
      6250,
      6251,
      6258,
      6260,
      6265,
      6266,
      6269,
      6271,
      6272,
      6277,
      6278,
      6280,
      6281,
      6286,
      6287,
      6292,
      6294,
      6295,
      6300,
      6302,
      6303,
      6310,
      6312,
      6313,
      6318,
      6319,
      6322,
      6324,
      6330,
      6331,
      6333,
      6334,
      6339,
      6340,
      6345,
      6347,
      6348,
      6353,
      6355,
      6356,
      6362,
      6364,
      6365,
      6370,
      6372,
      6373,
      6375,
      6378,
      6379,
      6386,
      6390,
      6399,
      6400,
      6407,
      6409,
      6414,
      6415,
      6418,
      6420,
      6428,
      6430,
      6431,
      6436,
      6437,
      6442,
      6444,
      6452,
      6454,
      6455,
      6462,
      6464,
      6472,
      6473,
      6476,
      6478,
      6484,
      6486,
      6487,
      6489,
      6490,
      6495,
      6496,
      6503,
      6505,
      6507,
      6515,
      6517,
      6518,
      6525,
      6528,
      6530,
      6538,
      6540,
      6541,
      6543,
      6546,
      6547
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Do work on computer",
   "task_description": "Open home office, sit in my chair at the desk and do work on the computer. Stand up from chair and desk, leave home office.",
   "program": [
    "[Walk] <home_office> (1)",
    "[Walk] <chair> (1)",
    "[Find] <chair> (1)",
    "[Sit] <chair> (1)",
    "[Find] <computer> (1)",
    "[SwitchOn] <computer> (1)",
    "[TurnTo] <computer> (1)",
    "[LookAt] <computer> (1)",
    "[Find] <keyboard> (1)",
    "[Type] <keyboard> (1)",
    "[SwitchOff] <computer> (1)",
    "[StandUp]"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upworknturk_second",
   "file_id": "split119_3",
   "goal_condition": [
    [
     [
      240,
      241,
      "INSIDE",
      "character",
      "home_office"
     ],
     [
      240,
      271,
      "ON",
      "character",
      "chair"
     ]
    ],
    []
   ]
  }
 },
 "17": {
  "plan": [
   [
    " # 0: find newspaper\n find('newspaper')\n # 1: grab newspaper\n assert('close' to 'newspaper')\n else: find('newspaper')\n grab('newspaper')\n # 2: find couch\n find('couch')\n # 3: sit on couch\n assert('close' to 'couch' )\n else: find('couch')\n sit('couch')\n # 4: open newspaper\n assert('newspaper' in 'hands' )\n else: find('newspaper')\n else: grab('newspaper')\n open('newspaper')\n # 5: read newspaper\n # 6: put newspaper back on table\n # 7: stand up\n standup()\n # 8: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " newspaper",
      "\n",
      " find",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " grab",
      " newspaper",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " grab",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " find",
      " couch",
      "\n",
      " find",
      "('",
      "c",
      "ouch",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " sit",
      " on",
      " couch",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "c",
      "ouch",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "c",
      "ouch",
      "')",
      "\n",
      " sit",
      "('",
      "c",
      "ouch",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " open",
      " newspaper",
      "\n",
      " assert",
      "('",
      "new",
      "sp",
      "aper",
      "'",
      " in",
      " '",
      "hands",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " open",
      "('",
      "new",
      "sp",
      "aper",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " read",
      " newspaper",
      "\n",
      " #",
      " 6",
      ":",
      " put",
      " newspaper",
      " back",
      " on",
      " table",
      "\n",
      " #",
      " 7",
      ":",
      " stand",
      " up",
      "\n",
      " stand",
      "up",
      "()",
      "\n",
      " #",
      " 8",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.017197264,
      -0.0061416905,
      -0.0020709764,
      -0.4767849,
      -0.090401776,
      -0.03085708,
      -0.0038922096,
      -0.0013641014,
      -0.003315301,
      -0.00017067656,
      -0.00017460952,
      -0.0011435862,
      -0.0062762774,
      -0.0012804255,
      -0.0013043573,
      -0.0005802513,
      -0.053268235,
      -0.008012381,
      -0.009804973,
      -0.008595788,
      -0.00045215452,
      -0.0005668924,
      -0.0007680734,
      -0.0007516705,
      -0.00037410008,
      -0.0005482874,
      -7.8872734e-05,
      -0.0012508834,
      -0.014041889,
      -0.0034494482,
      -0.00026421316,
      -0.0002884219,
      -0.0005838295,
      -0.00030237212,
      -0.0002297562,
      -3.655083e-05,
      -0.00011964774,
      -0.00049610215,
      -0.0024481139,
      -0.00035788392,
      -0.00026707415,
      -0.00011285097,
      -2.4750101e-05,
      -0.00017055642,
      -0.0004649183,
      -0.0036367357,
      -0.0005763155,
      -0.0028601247,
      -0.00052544626,
      -0.55460346,
      -3.284607,
      -0.040576816,
      -0.0039510904,
      -0.00059772714,
      -0.0004099988,
      -8.352281e-05,
      -0.00043987136,
      -0.0035236762,
      -0.0010432191,
      -0.002801966,
      -0.00076532975,
      -0.02619339,
      -0.09366447,
      -0.02444787,
      -0.007961554,
      -0.08744181,
      -0.0005112539,
      -0.006412262,
      -0.0008685307,
      -0.00021467115,
      -0.0007488067,
      -0.00018486334,
      -0.00010545909,
      -0.47656766,
      -0.00013657632,
      -0.0017912475,
      -0.00016769636,
      -0.00031739712,
      -0.00065564,
      -0.00035716867,
      -8.697986e-05,
      -4.883026e-05,
      -0.00046479818,
      -0.0023233006,
      -0.060275488,
      -0.0018092226,
      -0.00066351244,
      -5.2885232e-05,
      -0.000502546,
      -0.004551057,
      -0.0009247286,
      -0.0034498076,
      -0.00045907334,
      -0.80266136,
      -0.012132783,
      -0.0129894465,
      -0.013317808,
      -0.0006583827,
      -0.22617118,
      -0.00020883085,
      -0.00023368915,
      -0.0007420062,
      -0.0379118,
      -0.0011398852,
      -0.0014296982,
      -0.014840294,
      -0.00013633883,
      -0.0014982242,
      -0.00019428364,
      -0.00030642524,
      -0.0033727738,
      -0.0003417842,
      -0.00038232922,
      -7.815842e-05,
      -0.000197384,
      -0.0012213441,
      -0.0011681094,
      -0.0014316083,
      -0.00027220484,
      -0.00030928716,
      -0.00035931446,
      -0.00016400088,
      -2.5703772e-05,
      -0.00010784233,
      -0.001019293,
      -0.0040013576,
      -0.051043537,
      -0.0003239564,
      -0.0002917607,
      -2.9280032e-05,
      -0.0002038222,
      -0.00081871834,
      -0.0033687665,
      -0.00060631573,
      -0.0017328521,
      -0.0004477438,
      -0.8310059,
      -0.10150983,
      -0.008799975,
      -0.48653919,
      -0.0014465919,
      -0.0005739304,
      -2.50523,
      -0.104894124,
      -0.93948,
      -2.3529036,
      -0.5485066,
      -0.01816558,
      -1.2352095,
      -0.0024203316,
      -0.0011300377,
      -0.03149382,
      -0.17583245,
      -0.17829712,
      -0.1830398,
      -0.0021351275,
      -0.42996532,
      -0.0084984,
      -0.0006330945,
      -0.0012320832,
      -0.0014262373,
      -0.05328225
     ],
     "top_logprobs": [
      {
       " #": -0.017197264
      },
      {
       " 0": -0.0061416905
      },
      {
       ":": -0.0020709764
      },
      {
       " find": -0.4767849
      },
      {
       " newspaper": -0.090401776
      },
      {
       "\n": -0.03085708
      },
      {
       " find": -0.0038922096
      },
      {
       "('": -0.0013641014
      },
      {
       "new": -0.003315301
      },
      {
       "sp": -0.00017067656
      },
      {
       "aper": -0.00017460952
      },
      {
       "')": -0.0011435862
      },
      {
       "\n": -0.0062762774
      },
      {
       " #": -0.0012804255
      },
      {
       " 1": -0.0013043573
      },
      {
       ":": -0.0005802513
      },
      {
       " grab": -0.053268235
      },
      {
       " newspaper": -0.008012381
      },
      {
       "\n": -0.009804973
      },
      {
       " assert": -0.008595788
      },
      {
       "('": -0.00045215452
      },
      {
       "close": -0.0005668924
      },
      {
       "'": -0.0007680734
      },
      {
       " to": -0.0007516705
      },
      {
       " '": -0.00037410008
      },
      {
       "new": -0.0005482874
      },
      {
       "sp": -7.8872734e-05
      },
      {
       "aper": -0.0012508834
      },
      {
       "')": -0.014041889
      },
      {
       "\n": -0.0034494482
      },
      {
       " else": -0.00026421316
      },
      {
       ":": -0.0002884219
      },
      {
       " find": -0.0005838295
      },
      {
       "('": -0.00030237212
      },
      {
       "new": -0.0002297562
      },
      {
       "sp": -3.655083e-05
      },
      {
       "aper": -0.00011964774
      },
      {
       "')": -0.00049610215
      },
      {
       "\n": -0.0024481139
      },
      {
       " grab": -0.00035788392
      },
      {
       "('": -0.00026707415
      },
      {
       "new": -0.00011285097
      },
      {
       "sp": -2.4750101e-05
      },
      {
       "aper": -0.00017055642
      },
      {
       "')": -0.0004649183
      },
      {
       "\n": -0.0036367357
      },
      {
       " #": -0.0005763155
      },
      {
       " 2": -0.0028601247
      },
      {
       ":": -0.00052544626
      },
      {
       " find": -0.55460346
      },
      {
       " chair": -0.7776347
      },
      {
       "\n": -0.040576816
      },
      {
       " find": -0.0039510904
      },
      {
       "('": -0.00059772714
      },
      {
       "c": -0.0004099988
      },
      {
       "ouch": -8.352281e-05
      },
      {
       "')": -0.00043987136
      },
      {
       "\n": -0.0035236762
      },
      {
       " #": -0.0010432191
      },
      {
       " 3": -0.002801966
      },
      {
       ":": -0.00076532975
      },
      {
       " sit": -0.02619339
      },
      {
       " on": -0.09366447
      },
      {
       " couch": -0.02444787
      },
      {
       "\n": -0.007961554
      },
      {
       " assert": -0.08744181
      },
      {
       "('": -0.0005112539
      },
      {
       "close": -0.006412262
      },
      {
       "'": -0.0008685307
      },
      {
       " to": -0.00021467115
      },
      {
       " '": -0.0007488067
      },
      {
       "c": -0.00018486334
      },
      {
       "ouch": -0.00010545909
      },
      {
       "'": -0.47656766
      },
      {
       " )": -0.00013657632
      },
      {
       "\n": -0.0017912475
      },
      {
       " else": -0.00016769636
      },
      {
       ":": -0.00031739712
      },
      {
       " find": -0.00065564
      },
      {
       "('": -0.00035716867
      },
      {
       "c": -8.697986e-05
      },
      {
       "ouch": -4.883026e-05
      },
      {
       "')": -0.00046479818
      },
      {
       "\n": -0.0023233006
      },
      {
       " sit": -0.060275488
      },
      {
       "('": -0.0018092226
      },
      {
       "c": -0.00066351244
      },
      {
       "ouch": -5.2885232e-05
      },
      {
       "')": -0.000502546
      },
      {
       "\n": -0.004551057
      },
      {
       " #": -0.0009247286
      },
      {
       " 4": -0.0034498076
      },
      {
       ":": -0.00045907334
      },
      {
       " open": -0.80266136
      },
      {
       " newspaper": -0.012132783
      },
      {
       "\n": -0.0129894465
      },
      {
       " assert": -0.013317808
      },
      {
       "('": -0.0006583827
      },
      {
       "new": -0.22617118
      },
      {
       "sp": -0.00020883085
      },
      {
       "aper": -0.00023368915
      },
      {
       "'": -0.0007420062
      },
      {
       " in": -0.0379118
      },
      {
       " '": -0.0011398852
      },
      {
       "hands": -0.0014296982
      },
      {
       "'": -0.014840294
      },
      {
       " )": -0.00013633883
      },
      {
       "\n": -0.0014982242
      },
      {
       " else": -0.00019428364
      },
      {
       ":": -0.00030642524
      },
      {
       " find": -0.0033727738
      },
      {
       "('": -0.0003417842
      },
      {
       "new": -0.00038232922
      },
      {
       "sp": -7.815842e-05
      },
      {
       "aper": -0.000197384
      },
      {
       "')": -0.0012213441
      },
      {
       "\n": -0.0011681094
      },
      {
       " else": -0.0014316083
      },
      {
       ":": -0.00027220484
      },
      {
       " grab": -0.00030928716
      },
      {
       "('": -0.00035931446
      },
      {
       "new": -0.00016400088
      },
      {
       "sp": -2.5703772e-05
      },
      {
       "aper": -0.00010784233
      },
      {
       "')": -0.001019293
      },
      {
       "\n": -0.0040013576
      },
      {
       " open": -0.051043537
      },
      {
       "('": -0.0003239564
      },
      {
       "new": -0.0002917607
      },
      {
       "sp": -2.9280032e-05
      },
      {
       "aper": -0.0002038222
      },
      {
       "')": -0.00081871834
      },
      {
       "\n": -0.0033687665
      },
      {
       " #": -0.00060631573
      },
      {
       " 5": -0.0017328521
      },
      {
       ":": -0.0004477438
      },
      {
       " start": -0.60683703
      },
      {
       " newspaper": -0.10150983
      },
      {
       "\n": -0.008799975
      },
      {
       " #": -0.48653919
      },
      {
       " 6": -0.0014465919
      },
      {
       ":": -0.0005739304
      },
      {
       " close": -0.85860443
      },
      {
       " newspaper": -0.104894124
      },
      {
       " back": -0.93948
      },
      {
       "\n": -0.17707391
      },
      {
       " table": -0.5485066
      },
      {
       "\n": -0.01816558
      },
      {
       " find": -0.51924884
      },
      {
       " 7": -0.0024203316
      },
      {
       ":": -0.0011300377
      },
      {
       " stand": -0.03149382
      },
      {
       " up": -0.17583245
      },
      {
       "\n": -0.17829712
      },
      {
       " stand": -0.1830398
      },
      {
       "up": -0.0021351275
      },
      {
       "()": -0.42996532
      },
      {
       "\n": -0.0084984
      },
      {
       " #": -0.0006330945
      },
      {
       " 8": -0.0012320832
      },
      {
       ":": -0.0014262373
      },
      {
       " Done": -0.05328225
      }
     ],
     "text_offset": [
      4712,
      4714,
      4716,
      4717,
      4722,
      4732,
      4733,
      4738,
      4740,
      4743,
      4745,
      4749,
      4751,
      4752,
      4754,
      4756,
      4757,
      4762,
      4772,
      4773,
      4780,
      4782,
      4787,
      4788,
      4791,
      4793,
      4796,
      4798,
      4802,
      4804,
      4805,
      4810,
      4811,
      4816,
      4818,
      4821,
      4823,
      4827,
      4829,
      4830,
      4835,
      4837,
      4840,
      4842,
      4846,
      4848,
      4849,
      4851,
      4853,
      4854,
      4859,
      4865,
      4866,
      4871,
      4873,
      4874,
      4878,
      4880,
      4881,
      4883,
      4885,
      4886,
      4890,
      4893,
      4899,
      4900,
      4907,
      4909,
      4914,
      4915,
      4918,
      4920,
      4921,
      4925,
      4926,
      4928,
      4929,
      4934,
      4935,
      4940,
      4942,
      4943,
      4947,
      4949,
      4950,
      4954,
      4956,
      4957,
      4961,
      4963,
      4964,
      4966,
      4968,
      4969,
      4974,
      4984,
      4985,
      4992,
      4994,
      4997,
      4999,
      5003,
      5004,
      5007,
      5009,
      5014,
      5015,
      5017,
      5018,
      5023,
      5024,
      5029,
      5031,
      5034,
      5036,
      5040,
      5042,
      5043,
      5048,
      5049,
      5054,
      5056,
      5059,
      5061,
      5065,
      5067,
      5068,
      5073,
      5075,
      5078,
      5080,
      5084,
      5086,
      5087,
      5089,
      5091,
      5092,
      5097,
      5107,
      5108,
      5110,
      5112,
      5113,
      5117,
      5127,
      5132,
      5135,
      5141,
      5142,
      5144,
      5146,
      5147,
      5153,
      5156,
      5157,
      5163,
      5165,
      5167,
      5168,
      5170,
      5172,
      5173
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Read news",
   "task_description": "Read news articles in a newspaper",
   "program": [
    "[Walk] <home_office> (1)",
    "[Walk] <chair> (1)",
    "[Find] <chair> (1)",
    "[Sit] <chair> (1)",
    "[Find] <newspaper> (1)",
    "[Grab] <newspaper> (1)",
    "[Read] <newspaper> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_july",
   "file_id": "split15_4",
   "goal_condition": [
    [
     [
      240,
      241,
      "INSIDE",
      "character",
      "home_office"
     ],
     [
      240,
      1000,
      "HOLDS_RH",
      "character",
      "newspaper"
     ],
     [
      240,
      271,
      "ON",
      "character",
      "chair"
     ]
    ],
    [
     [
      240,
      "character",
      "SITTING"
     ]
    ]
   ]
  }
 },
 "18": {
  "plan": [
   [
    " # 0: walk to bathroom\n walk('bathroom')\n # 1: find sink\n find('sink')\n # 2: turn on faucet\n find('faucet')\n assert('close' to 'faucet' )\n else: find('faucet')\n assert('faucet' is 'switchoff' )\n else: switchoff('faucet')\n switchon('faucet')\n # 3: wet hands\n # 4: put soap on hands\n find('soap')\n assert('close' to 'soap')\n else: find('soap')\n grab('soap')\n find('sink')\n assert('soap' in 'hands' )\n else: find('soap')\n else: grab('soap')\n assert('close' to 'sink' )\n else: find('sink')\n putin('soap', 'sink')\n # 5: scrub hands\n # 6: rinse hands\n # 7: dry hands with towel\n # 8: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " bathroom",
      "\n",
      " walk",
      "('",
      "bath",
      "room",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " sink",
      "\n",
      " find",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " turn",
      " on",
      " f",
      "auc",
      "et",
      "\n",
      " find",
      "('",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "f",
      "auc",
      "et",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " assert",
      "('",
      "f",
      "auc",
      "et",
      "'",
      " is",
      " '",
      "switch",
      "off",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " switch",
      "off",
      "('",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " switch",
      "on",
      "('",
      "f",
      "auc",
      "et",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " wet",
      " hands",
      "\n",
      " #",
      " 4",
      ":",
      " put",
      " soap",
      " on",
      " hands",
      "\n",
      " find",
      "('",
      "so",
      "ap",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "so",
      "ap",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "so",
      "ap",
      "')",
      "\n",
      " grab",
      "('",
      "so",
      "ap",
      "')",
      "\n",
      " find",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " assert",
      "('",
      "so",
      "ap",
      "'",
      " in",
      " '",
      "hands",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "so",
      "ap",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "so",
      "ap",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "s",
      "ink",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " put",
      "in",
      "('",
      "so",
      "ap",
      "',",
      " '",
      "s",
      "ink",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " scrub",
      " hands",
      "\n",
      " #",
      " 6",
      ":",
      " rinse",
      " hands",
      "\n",
      " #",
      " 7",
      ":",
      " dry",
      " hands",
      " with",
      " towel",
      "\n",
      " #",
      " 8",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.017783867,
      -0.007640128,
      -0.0028216285,
      -0.3132361,
      -0.019343864,
      -0.21473555,
      -0.026506161,
      -0.005320294,
      -0.005436609,
      -0.0015753532,
      -8.221057e-05,
      -0.0012057672,
      -0.009027536,
      -0.00128299,
      -0.002771899,
      -0.0009058776,
      -0.84620583,
      -0.16686457,
      -0.015876526,
      -0.0031253833,
      -0.0007759487,
      -0.00036563535,
      -6.623567e-05,
      -0.00041059483,
      -0.005279305,
      -0.00073079305,
      -0.0023979852,
      -0.0012404991,
      -0.051687572,
      -0.033725567,
      -0.10688193,
      -0.00039055935,
      -0.0041702515,
      -0.011062573,
      -0.030222034,
      -0.00039628413,
      -0.0003024923,
      -4.6684505e-05,
      -0.00027291913,
      -0.00025217026,
      -0.0024508622,
      -0.0033656566,
      -0.00034834348,
      -0.0009972168,
      -0.0004841794,
      -0.00016805116,
      -0.0002743515,
      -9.437268e-05,
      -0.00017711478,
      -0.00012775393,
      -0.02360381,
      -5.4075444e-05,
      -0.0018833872,
      -0.00016483347,
      -0.00018939328,
      -0.00030070322,
      -0.00017806844,
      -3.595572e-05,
      -2.8206221e-05,
      -1.0800813e-05,
      -0.0001887991,
      -0.0013547902,
      -0.02008911,
      -0.0001290643,
      -0.00010092916,
      -5.657977e-05,
      -0.0001296622,
      -0.00020978546,
      -0.00016864816,
      -0.0003875763,
      -0.004817786,
      -0.0005893778,
      -0.004600755,
      -3.7863996e-05,
      -0.0011407224,
      -8.626461e-05,
      -0.00010998996,
      -0.00013097163,
      -0.00016948354,
      -0.00013740796,
      -1.8310955e-05,
      -3.2735214e-05,
      -6.6619094e-07,
      -0.00030713953,
      -0.001601322,
      -0.00028913716,
      -3.7386224e-05,
      -0.00013204545,
      -6.0395385e-05,
      -1.5925843e-05,
      -3.154219e-05,
      -0.00022915828,
      -0.0030585972,
      -0.0026519464,
      -0.0022832155,
      -0.00064037094,
      -1.231927,
      -0.064819336,
      -0.19341777,
      -0.6868737,
      -0.0019508114,
      -0.0004970568,
      -1.1915551,
      -0.36952507,
      -0.12645085,
      -0.032216813,
      -0.012955874,
      -0.13761409,
      -0.0011184614,
      -0.0069731874,
      -0.001084869,
      -0.005422766,
      -0.0036817815,
      -0.106710486,
      -0.00035466437,
      -0.0016167861,
      -0.00064836355,
      -0.0006606486,
      -0.00048036288,
      -0.0006114436,
      -2.1768952e-05,
      -0.083977774,
      -0.0030250002,
      -0.00020024595,
      -0.000301777,
      -0.00052878505,
      -0.0005515051,
      -0.00019654672,
      -5.979934e-05,
      -0.00028591757,
      -0.0012781577,
      -0.001135588,
      -0.00024751923,
      -5.9679198e-05,
      -5.3162735e-06,
      -0.00013562171,
      -0.002928691,
      -0.29890218,
      -0.000167457,
      -0.0021718643,
      -1.8788729e-05,
      -0.0003139382,
      -0.0014938671,
      -0.0044803456,
      -0.00018057182,
      -0.0026663498,
      -4.573365e-05,
      -0.00018009498,
      -0.00061931607,
      -0.00025145593,
      -0.00054363545,
      -0.007066225,
      -7.291136e-05,
      -0.0008874416,
      -8.423619e-05,
      -0.0001345479,
      -0.00045024627,
      -0.0001910622,
      -0.00018808198,
      -1.42597355e-05,
      -0.00027947655,
      -0.0010249014,
      -0.00052437244,
      -0.00012643983,
      -0.00019726387,
      -0.00018176393,
      -4.7399757e-05,
      -3.8217877e-05,
      -0.00017282138,
      -0.0012359635,
      -0.009886777,
      -9.258174e-05,
      -0.00019368572,
      -0.00020203409,
      -0.0003250293,
      -0.00011273176,
      -0.00022814641,
      -8.88872e-05,
      -0.004448015,
      -7.350647e-05,
      -0.0007661643,
      -0.00014742525,
      -0.00020966532,
      -0.00012036205,
      -8.900641e-05,
      -9.925743e-05,
      -2.1649737e-05,
      -0.00026814893,
      -0.0014433687,
      -0.00085802993,
      -0.0006927983,
      -0.00014206085,
      -0.00024382658,
      -2.3556138e-05,
      -0.0026822477,
      -9.162713e-05,
      -0.0002170572,
      -2.6893982e-05,
      -0.00026421316,
      -0.005894396,
      -0.002073248,
      -0.001882671,
      -0.0005941499,
      -1.1294069,
      -0.028091902,
      -0.3443641,
      -0.08722632,
      -0.000650988,
      -0.00039461427,
      -0.07003249,
      -0.12559557,
      -0.30875388,
      -0.0026209306,
      -0.0012612076,
      -0.00046992695,
      -0.23679645,
      -0.005406645,
      -1.0302142,
      -0.05906159,
      -0.012793942,
      -0.17475016,
      -0.00082253676,
      -0.00088839623,
      -0.12667057
     ],
     "top_logprobs": [
      {
       " #": -0.017783867
      },
      {
       " 0": -0.007640128
      },
      {
       ":": -0.0028216285
      },
      {
       " walk": -0.3132361
      },
      {
       " to": -0.019343864
      },
      {
       " bathroom": -0.21473555
      },
      {
       "\n": -0.026506161
      },
      {
       " walk": -0.005320294
      },
      {
       "('": -0.005436609
      },
      {
       "bath": -0.0015753532
      },
      {
       "room": -8.221057e-05
      },
      {
       "')": -0.0012057672
      },
      {
       "\n": -0.009027536
      },
      {
       " #": -0.00128299
      },
      {
       " 1": -0.002771899
      },
      {
       ":": -0.0009058776
      },
      {
       " turn": -0.77103245
      },
      {
       " sink": -0.16686457
      },
      {
       "\n": -0.015876526
      },
      {
       " find": -0.0031253833
      },
      {
       "('": -0.0007759487
      },
      {
       "s": -0.00036563535
      },
      {
       "ink": -6.623567e-05
      },
      {
       "')": -0.00041059483
      },
      {
       "\n": -0.005279305
      },
      {
       " #": -0.00073079305
      },
      {
       " 2": -0.0023979852
      },
      {
       ":": -0.0012404991
      },
      {
       " turn": -0.051687572
      },
      {
       " on": -0.033725567
      },
      {
       " f": -0.10688193
      },
      {
       "auc": -0.00039055935
      },
      {
       "et": -0.0041702515
      },
      {
       "\n": -0.011062573
      },
      {
       " find": -0.030222034
      },
      {
       "('": -0.00039628413
      },
      {
       "f": -0.0003024923
      },
      {
       "auc": -4.6684505e-05
      },
      {
       "et": -0.00027291913
      },
      {
       "')": -0.00025217026
      },
      {
       "\n": -0.0024508622
      },
      {
       " assert": -0.0033656566
      },
      {
       "('": -0.00034834348
      },
      {
       "close": -0.0009972168
      },
      {
       "'": -0.0004841794
      },
      {
       " to": -0.00016805116
      },
      {
       " '": -0.0002743515
      },
      {
       "f": -9.437268e-05
      },
      {
       "auc": -0.00017711478
      },
      {
       "et": -0.00012775393
      },
      {
       "'": -0.02360381
      },
      {
       " )": -5.4075444e-05
      },
      {
       "\n": -0.0018833872
      },
      {
       " else": -0.00016483347
      },
      {
       ":": -0.00018939328
      },
      {
       " find": -0.00030070322
      },
      {
       "('": -0.00017806844
      },
      {
       "f": -3.595572e-05
      },
      {
       "auc": -2.8206221e-05
      },
      {
       "et": -1.0800813e-05
      },
      {
       "')": -0.0001887991
      },
      {
       "\n": -0.0013547902
      },
      {
       " assert": -0.02008911
      },
      {
       "('": -0.0001290643
      },
      {
       "f": -0.00010092916
      },
      {
       "auc": -5.657977e-05
      },
      {
       "et": -0.0001296622
      },
      {
       "'": -0.00020978546
      },
      {
       " is": -0.00016864816
      },
      {
       " '": -0.0003875763
      },
      {
       "switch": -0.004817786
      },
      {
       "off": -0.0005893778
      },
      {
       "'": -0.004600755
      },
      {
       " )": -3.7863996e-05
      },
      {
       "\n": -0.0011407224
      },
      {
       " else": -8.626461e-05
      },
      {
       ":": -0.00010998996
      },
      {
       " switch": -0.00013097163
      },
      {
       "off": -0.00016948354
      },
      {
       "('": -0.00013740796
      },
      {
       "f": -1.8310955e-05
      },
      {
       "auc": -3.2735214e-05
      },
      {
       "et": -6.6619094e-07
      },
      {
       "')": -0.00030713953
      },
      {
       "\n": -0.001601322
      },
      {
       " switch": -0.00028913716
      },
      {
       "on": -3.7386224e-05
      },
      {
       "('": -0.00013204545
      },
      {
       "f": -6.0395385e-05
      },
      {
       "auc": -1.5925843e-05
      },
      {
       "et": -3.154219e-05
      },
      {
       "')": -0.00022915828
      },
      {
       "\n": -0.0030585972
      },
      {
       " #": -0.0026519464
      },
      {
       " 3": -0.0022832155
      },
      {
       ":": -0.00064037094
      },
      {
       " put": -0.9165975
      },
      {
       " hands": -0.064819336
      },
      {
       "\n": -0.19341777
      },
      {
       " #": -0.6868737
      },
      {
       " 4": -0.0019508114
      },
      {
       ":": -0.0004970568
      },
      {
       " put": -1.1915551
      },
      {
       " soap": -0.36952507
      },
      {
       " on": -0.12645085
      },
      {
       " hands": -0.032216813
      },
      {
       "\n": -0.012955874
      },
      {
       " find": -0.13761409
      },
      {
       "('": -0.0011184614
      },
      {
       "so": -0.0069731874
      },
      {
       "ap": -0.001084869
      },
      {
       "')": -0.005422766
      },
      {
       "\n": -0.0036817815
      },
      {
       " assert": -0.106710486
      },
      {
       "('": -0.00035466437
      },
      {
       "close": -0.0016167861
      },
      {
       "'": -0.00064836355
      },
      {
       " to": -0.0006606486
      },
      {
       " '": -0.00048036288
      },
      {
       "so": -0.0006114436
      },
      {
       "ap": -2.1768952e-05
      },
      {
       "')": -0.083977774
      },
      {
       "\n": -0.0030250002
      },
      {
       " else": -0.00020024595
      },
      {
       ":": -0.000301777
      },
      {
       " find": -0.00052878505
      },
      {
       "('": -0.0005515051
      },
      {
       "so": -0.00019654672
      },
      {
       "ap": -5.979934e-05
      },
      {
       "')": -0.00028591757
      },
      {
       "\n": -0.0012781577
      },
      {
       " grab": -0.001135588
      },
      {
       "('": -0.00024751923
      },
      {
       "so": -5.9679198e-05
      },
      {
       "ap": -5.3162735e-06
      },
      {
       "')": -0.00013562171
      },
      {
       "\n": -0.002928691
      },
      {
       " find": -0.29890218
      },
      {
       "('": -0.000167457
      },
      {
       "s": -0.0021718643
      },
      {
       "ink": -1.8788729e-05
      },
      {
       "')": -0.0003139382
      },
      {
       "\n": -0.0014938671
      },
      {
       " assert": -0.0044803456
      },
      {
       "('": -0.00018057182
      },
      {
       "so": -0.0026663498
      },
      {
       "ap": -4.573365e-05
      },
      {
       "'": -0.00018009498
      },
      {
       " in": -0.00061931607
      },
      {
       " '": -0.00025145593
      },
      {
       "hands": -0.00054363545
      },
      {
       "'": -0.007066225
      },
      {
       " )": -7.291136e-05
      },
      {
       "\n": -0.0008874416
      },
      {
       " else": -8.423619e-05
      },
      {
       ":": -0.0001345479
      },
      {
       " find": -0.00045024627
      },
      {
       "('": -0.0001910622
      },
      {
       "so": -0.00018808198
      },
      {
       "ap": -1.42597355e-05
      },
      {
       "')": -0.00027947655
      },
      {
       "\n": -0.0010249014
      },
      {
       " else": -0.00052437244
      },
      {
       ":": -0.00012643983
      },
      {
       " grab": -0.00019726387
      },
      {
       "('": -0.00018176393
      },
      {
       "so": -4.7399757e-05
      },
      {
       "ap": -3.8217877e-05
      },
      {
       "')": -0.00017282138
      },
      {
       "\n": -0.0012359635
      },
      {
       " assert": -0.009886777
      },
      {
       "('": -9.258174e-05
      },
      {
       "close": -0.00019368572
      },
      {
       "'": -0.00020203409
      },
      {
       " to": -0.0003250293
      },
      {
       " '": -0.00011273176
      },
      {
       "s": -0.00022814641
      },
      {
       "ink": -8.88872e-05
      },
      {
       "'": -0.004448015
      },
      {
       " )": -7.350647e-05
      },
      {
       "\n": -0.0007661643
      },
      {
       " else": -0.00014742525
      },
      {
       ":": -0.00020966532
      },
      {
       " find": -0.00012036205
      },
      {
       "('": -8.900641e-05
      },
      {
       "s": -9.925743e-05
      },
      {
       "ink": -2.1649737e-05
      },
      {
       "')": -0.00026814893
      },
      {
       "\n": -0.0014433687
      },
      {
       " put": -0.00085802993
      },
      {
       "in": -0.0006927983
      },
      {
       "('": -0.00014206085
      },
      {
       "so": -0.00024382658
      },
      {
       "ap": -2.3556138e-05
      },
      {
       "',": -0.0026822477
      },
      {
       " '": -9.162713e-05
      },
      {
       "s": -0.0002170572
      },
      {
       "ink": -2.6893982e-05
      },
      {
       "')": -0.00026421316
      },
      {
       "\n": -0.005894396
      },
      {
       " #": -0.002073248
      },
      {
       " 5": -0.001882671
      },
      {
       ":": -0.0005941499
      },
      {
       " start": -1.0006036
      },
      {
       " hands": -0.028091902
      },
      {
       "\n": -0.3443641
      },
      {
       " #": -0.08722632
      },
      {
       " 6": -0.000650988
      },
      {
       ":": -0.00039461427
      },
      {
       " rinse": -0.07003249
      },
      {
       " hands": -0.12559557
      },
      {
       "\n": -0.30875388
      },
      {
       " #": -0.0026209306
      },
      {
       " 7": -0.0012612076
      },
      {
       ":": -0.00046992695
      },
      {
       " dry": -0.23679645
      },
      {
       " hands": -0.005406645
      },
      {
       "\n": -0.47387102
      },
      {
       " towel": -0.05906159
      },
      {
       "\n": -0.012793942
      },
      {
       " #": -0.17475016
      },
      {
       " 8": -0.00082253676
      },
      {
       ":": -0.00088839623
      },
      {
       " Done": -0.12667057
      }
     ],
     "text_offset": [
      4715,
      4717,
      4719,
      4720,
      4725,
      4728,
      4737,
      4738,
      4743,
      4745,
      4749,
      4753,
      4755,
      4756,
      4758,
      4760,
      4761,
      4766,
      4771,
      4772,
      4777,
      4779,
      4780,
      4783,
      4785,
      4786,
      4788,
      4790,
      4791,
      4796,
      4799,
      4801,
      4804,
      4806,
      4807,
      4812,
      4814,
      4815,
      4818,
      4820,
      4822,
      4823,
      4830,
      4832,
      4837,
      4838,
      4841,
      4843,
      4844,
      4847,
      4849,
      4850,
      4852,
      4853,
      4858,
      4859,
      4864,
      4866,
      4867,
      4870,
      4872,
      4874,
      4875,
      4882,
      4884,
      4885,
      4888,
      4890,
      4891,
      4894,
      4896,
      4902,
      4905,
      4906,
      4908,
      4909,
      4914,
      4915,
      4922,
      4925,
      4927,
      4928,
      4931,
      4933,
      4935,
      4936,
      4943,
      4945,
      4947,
      4948,
      4951,
      4953,
      4955,
      4956,
      4958,
      4960,
      4961,
      4965,
      4971,
      4972,
      4974,
      4976,
      4977,
      4981,
      4986,
      4989,
      4995,
      4996,
      5001,
      5003,
      5005,
      5007,
      5009,
      5010,
      5017,
      5019,
      5024,
      5025,
      5028,
      5030,
      5032,
      5034,
      5036,
      5037,
      5042,
      5043,
      5048,
      5050,
      5052,
      5054,
      5056,
      5057,
      5062,
      5064,
      5066,
      5068,
      5070,
      5071,
      5076,
      5078,
      5079,
      5082,
      5084,
      5085,
      5092,
      5094,
      5096,
      5098,
      5099,
      5102,
      5104,
      5109,
      5110,
      5112,
      5113,
      5118,
      5119,
      5124,
      5126,
      5128,
      5130,
      5132,
      5133,
      5138,
      5139,
      5144,
      5146,
      5148,
      5150,
      5152,
      5153,
      5160,
      5162,
      5167,
      5168,
      5171,
      5173,
      5174,
      5177,
      5178,
      5180,
      5181,
      5186,
      5187,
      5192,
      5194,
      5195,
      5198,
      5200,
      5201,
      5205,
      5207,
      5209,
      5211,
      5213,
      5215,
      5217,
      5218,
      5221,
      5223,
      5224,
      5226,
      5228,
      5229,
      5235,
      5241,
      5242,
      5244,
      5246,
      5247,
      5253,
      5259,
      5260,
      5262,
      5264,
      5265,
      5269,
      5275,
      5280,
      5286,
      5287,
      5289,
      5291,
      5292
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Hand washing",
   "task_description": "Turn on the faucet. Soap up your hands. Then rinse under the running water of the faucet. Turn off faucet and dry hands.",
   "program": [
    "[Walk] <bathroom> (1)",
    "[Walk] <sink> (1)",
    "[Find] <faucet> (1)",
    "[SwitchOn] <faucet> (1)",
    "[Find] <soap> (1)",
    "[Grab] <soap> (1)",
    "[Find] <hands_both> (1)",
    "[Scrub] <hands_both> (1)",
    "[PutObjBack] <soap> (1)",
    "[Wash] <hands_both> (1)",
    "[SwitchOff] <faucet> (1)",
    "[Find] <towel> (1)",
    "[Grab] <towel> (1)",
    "[Wipe] <hands_both> (1)"
   ],
   "batch": "results_text_rebuttal_specialparsed_programs_upwork_july",
   "file_id": "split4_7",
   "goal_condition": [
    [
     [
      240,
      1,
      "INSIDE",
      "character",
      "bathroom"
     ],
     [
      240,
      1002,
      "HOLDS_RH",
      "character",
      "towel"
     ]
    ],
    []
   ]
  }
 },
 "19": {
  "plan": [
   [
    " # 0: walk to bathroom\n walk('bathroom')\n # 1: find toilet\n find('toilet')\n # 2: grab toilet brush\n assert('close' to 'toiletbrush')\n else: find('toiletbrush')\n grab('toiletbrush')\n # 3: start scrubbing toilet\n find('toilet')\n assert('toiletbrush' in 'hands' )\n else: find('toiletbrush')\n else: grab('toiletbrush')\n assert('close' to 'toilet' )\n else: find('toilet')\n putin('toiletbrush', 'toilet')\n # 4: find toilet cleaner\n find('toiletcleaner')\n # 5: pour toilet cleaner on toilet\n find('toilet')\n assert('toiletcleaner' in 'hands' )\n else: find('toiletcleaner')\n else: grab('toiletcleaner')\n assert('close' to 'toilet' )\n else: find('toilet')\n putin('toiletcleaner', 'toilet')\n # 6: start scrubbing toilet with brush\n find('toilet')\n assert('toiletbrush' in 'hands' )\n else: find('toiletbrush')\n else: grab('toiletbrush')\n assert('close' to 'toilet' )\n else: find('toilet')\n putin('toiletbrush', 'toilet')\n # 7: find towel\n find('towel')\n # 8: wipe up toilet with towel\n find('toilet')\n assert('towel' in 'hands' )\n else: find('towel')\n else: grab('towel')\n assert('close' to 'toilet' )\n else: find('toilet')\n putin('towel', 'toilet')\n # 9: find sink\n find('sink')\n # 10: grab sponge\n assert('close' to 'sponge')\n else: find('sponge')\n grab('sponge')\n # 11: start scrubbing sink\n find('sink')\n assert('sponge' in 'hands' )\n else: find('sponge')\n else: grab('sponge')\n assert('close' to 'sink' )\n else: find('sink')\n putin('sponge', 'sink')\n # 12: find bathroom cleaner\n find('bathroomcleaner')\n # 13: pour bathroom cleaner on sink\n find('sink')\n assert('bathroomcleaner' in 'hands' )\n else: find('bathroomcleaner')\n else: grab('bathroomcleaner')\n assert('close' to 'sink' )\n else: find('sink')\n putin('bathroomcleaner', 'sink')\n # 14: start scrubbing sink with sponge\n find('sink')\n assert('sponge' in 'hands' )\n else: find('sponge')\n else: grab('sponge')\n assert('close' to 'sink' )\n else: find('sink')\n putin('sponge', 'sink')\n # 15: find towel\n find('towel')\n # 16: wipe up sink with towel\n find('sink')\n assert('towel' in 'hands' )\n else: find('towel')\n else: grab('towel')\n assert('close' to 'sink' )\n else: find('sink')\n putin('towel', 'sink')\n # 17: find mirror\n find('mirror')\n # 18: grab glass cleaner\n assert('close' to 'glasscleaner')\n else: find('glasscleaner')\n grab('glasscleaner')\n # 19: spray glass cleaner on mirror\n find('mirror')\n assert('glasscleaner' in 'hands' )\n else: find('glasscleaner')\n else: grab('glasscleaner')\n assert('close' to 'mirror' )\n else: find('mirror')\n putin('glasscleaner', 'mirror')\n # 20: start scrubbing mirror with sponge\n find('mirror')\n assert('sponge' in 'hands' )\n else: find('sponge')\n else: grab('sponge')\n assert('close' to 'mirror' )\n else: find('mirror')\n putin('sponge', 'mirror')\n # 21: find towel\n find('towel')\n # 22: wipe up mirror with towel\n find('mirror')\n assert('towel' in 'hands' )\n else: find('towel')\n else: grab('towel')\n assert('close' to '",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " bathroom",
      "\n",
      " walk",
      "('",
      "bath",
      "room",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " toilet",
      "\n",
      " find",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " grab",
      " toilet",
      " brush",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "to",
      "ilet",
      "brush",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "to",
      "ilet",
      "brush",
      "')",
      "\n",
      " grab",
      "('",
      "to",
      "ilet",
      "brush",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " start",
      " scrub",
      "bing",
      " toilet",
      "\n",
      " find",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " assert",
      "('",
      "to",
      "ilet",
      "brush",
      "'",
      " in",
      " '",
      "hands",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "to",
      "ilet",
      "brush",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "to",
      "ilet",
      "brush",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "to",
      "ilet",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " put",
      "in",
      "('",
      "to",
      "ilet",
      "brush",
      "',",
      " '",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 4",
      ":",
      " find",
      " toilet",
      " cleaner",
      "\n",
      " find",
      "('",
      "to",
      "ilet",
      "clean",
      "er",
      "')",
      "\n",
      " #",
      " 5",
      ":",
      " pour",
      " toilet",
      " cleaner",
      " on",
      " toilet",
      "\n",
      " find",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " assert",
      "('",
      "to",
      "ilet",
      "clean",
      "er",
      "'",
      " in",
      " '",
      "hands",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "to",
      "ilet",
      "clean",
      "er",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "to",
      "ilet",
      "clean",
      "er",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "to",
      "ilet",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " put",
      "in",
      "('",
      "to",
      "ilet",
      "clean",
      "er",
      "',",
      " '",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 6",
      ":",
      " start",
      " scrub",
      "bing",
      " toilet",
      " with",
      " brush",
      "\n",
      " find",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " assert",
      "('",
      "to",
      "ilet",
      "brush",
      "'",
      " in",
      " '",
      "hands",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "to",
      "ilet",
      "brush",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "to",
      "ilet",
      "brush",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "to",
      "ilet",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " put",
      "in",
      "('",
      "to",
      "ilet",
      "brush",
      "',",
      " '",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 7",
      ":",
      " find",
      " towel",
      "\n",
      " find",
      "('",
      "t",
      "ow",
      "el",
      "')",
      "\n",
      " #",
      " 8",
      ":",
      " wipe",
      " up",
      " toilet",
      " with",
      " towel",
      "\n",
      " find",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " assert",
      "('",
      "t",
      "ow",
      "el",
      "'",
      " in",
      " '",
      "hands",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "t",
      "ow",
      "el",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "t",
      "ow",
      "el",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "to",
      "ilet",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " put",
      "in",
      "('",
      "t",
      "ow",
      "el",
      "',",
      " '",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 9",
      ":",
      " find",
      " sink",
      "\n",
      " find",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " #",
      " 10",
      ":",
      " grab",
      " sponge",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "sp",
      "onge",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "sp",
      "onge",
      "')",
      "\n",
      " grab",
      "('",
      "sp",
      "onge",
      "')",
      "\n",
      " #",
      " 11",
      ":",
      " start",
      " scrub",
      "bing",
      " sink",
      "\n",
      " find",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " assert",
      "('",
      "sp",
      "onge",
      "'",
      " in",
      " '",
      "hands",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "sp",
      "onge",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "sp",
      "onge",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "s",
      "ink",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " put",
      "in",
      "('",
      "sp",
      "onge",
      "',",
      " '",
      "s",
      "ink",
      "')",
      "\n",
      " #",
      " 12",
      ":",
      " find",
      " bathroom",
      " cleaner",
      "\n",
      " find",
      "('",
      "bath",
      "room",
      "clean",
      "er",
      "')",
      "\n",
      " #",
      " 13",
      ":",
      " pour",
      " bathroom",
      " cleaner",
      " on",
      " sink",
      "\n",
      " find",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " assert",
      "('",
      "bath",
      "room",
      "clean",
      "er",
      "'",
      " in",
      " '",
      "hands",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "bath",
      "room",
      "clean",
      "er",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "bath",
      "room",
      "clean",
      "er",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "s",
      "ink",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " put",
      "in",
      "('",
      "bath",
      "room",
      "clean",
      "er",
      "',",
      " '",
      "s",
      "ink",
      "')",
      "\n",
      " #",
      " 14",
      ":",
      " start",
      " scrub",
      "bing",
      " sink",
      " with",
      " sponge",
      "\n",
      " find",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " assert",
      "('",
      "sp",
      "onge",
      "'",
      " in",
      " '",
      "hands",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "sp",
      "onge",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "sp",
      "onge",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "s",
      "ink",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " put",
      "in",
      "('",
      "sp",
      "onge",
      "',",
      " '",
      "s",
      "ink",
      "')",
      "\n",
      " #",
      " 15",
      ":",
      " find",
      " towel",
      "\n",
      " find",
      "('",
      "t",
      "ow",
      "el",
      "')",
      "\n",
      " #",
      " 16",
      ":",
      " wipe",
      " up",
      " sink",
      " with",
      " towel",
      "\n",
      " find",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " assert",
      "('",
      "t",
      "ow",
      "el",
      "'",
      " in",
      " '",
      "hands",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "t",
      "ow",
      "el",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "t",
      "ow",
      "el",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "s",
      "ink",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "s",
      "ink",
      "')",
      "\n",
      " put",
      "in",
      "('",
      "t",
      "ow",
      "el",
      "',",
      " '",
      "s",
      "ink",
      "')",
      "\n",
      " #",
      " 17",
      ":",
      " find",
      " mirror",
      "\n",
      " find",
      "('",
      "mir",
      "ror",
      "')",
      "\n",
      " #",
      " 18",
      ":",
      " grab",
      " glass",
      " cleaner",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "glass",
      "clean",
      "er",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "glass",
      "clean",
      "er",
      "')",
      "\n",
      " grab",
      "('",
      "glass",
      "clean",
      "er",
      "')",
      "\n",
      " #",
      " 19",
      ":",
      " spray",
      " glass",
      " cleaner",
      " on",
      " mirror",
      "\n",
      " find",
      "('",
      "mir",
      "ror",
      "')",
      "\n",
      " assert",
      "('",
      "glass",
      "clean",
      "er",
      "'",
      " in",
      " '",
      "hands",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "glass",
      "clean",
      "er",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "glass",
      "clean",
      "er",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "mir",
      "ror",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "mir",
      "ror",
      "')",
      "\n",
      " put",
      "in",
      "('",
      "glass",
      "clean",
      "er",
      "',",
      " '",
      "mir",
      "ror",
      "')",
      "\n",
      " #",
      " 20",
      ":",
      " start",
      " scrub",
      "bing",
      " mirror",
      " with",
      " sponge",
      "\n",
      " find",
      "('",
      "mir",
      "ror",
      "')",
      "\n",
      " assert",
      "('",
      "sp",
      "onge",
      "'",
      " in",
      " '",
      "hands",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "sp",
      "onge",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "sp",
      "onge",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "mir",
      "ror",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "mir",
      "ror",
      "')",
      "\n",
      " put",
      "in",
      "('",
      "sp",
      "onge",
      "',",
      " '",
      "mir",
      "ror",
      "')",
      "\n",
      " #",
      " 21",
      ":",
      " find",
      " towel",
      "\n",
      " find",
      "('",
      "t",
      "ow",
      "el",
      "')",
      "\n",
      " #",
      " 22",
      ":",
      " wipe",
      " up",
      " mirror",
      " with",
      " towel",
      "\n",
      " find",
      "('",
      "mir",
      "ror",
      "')",
      "\n",
      " assert",
      "('",
      "t",
      "ow",
      "el",
      "'",
      " in",
      " '",
      "hands",
      "'",
      " )",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "t",
      "ow",
      "el",
      "')",
      "\n",
      " else",
      ":",
      " grab",
      "('",
      "t",
      "ow",
      "el",
      "')",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '"
     ],
     "token_logprobs": [
      -0.018685104,
      -0.006443216,
      -0.004790353,
      -0.10384095,
      -0.027391216,
      -0.021082697,
      -0.030230265,
      -0.0052272365,
      -0.006295472,
      -0.0011349329,
      -0.00010402765,
      -0.0010056891,
      -0.010632113,
      -0.002584895,
      -0.0022117062,
      -0.000723756,
      -0.6713427,
      -2.0326924,
      -0.08219081,
      -0.004772566,
      -0.0010849873,
      -0.00030893143,
      -8.531094e-05,
      -0.00034667455,
      -0.0085270135,
      -0.0012767253,
      -0.0013725174,
      -0.0012864508,
      -0.4357214,
      -0.15407781,
      -0.34981394,
      -0.01893315,
      -0.53590894,
      -0.00049634156,
      -0.0012657441,
      -0.00090599596,
      -0.00019332903,
      -0.00041208262,
      -0.0010515723,
      -0.000988448,
      -0.20015907,
      -0.06167387,
      -0.0041615106,
      -0.00029438327,
      -0.00034822334,
      -0.00083500484,
      -0.0004312836,
      -0.000111540605,
      -9.7351025e-05,
      -0.0020954658,
      -0.0007583518,
      -0.002458989,
      -0.00089842005,
      -0.00044058848,
      -8.7576846e-05,
      -9.0795475e-05,
      -0.0006916062,
      -0.0001418215,
      -0.0047186054,
      -0.0011030084,
      -0.0028374093,
      -0.0009154238,
      -1.3084675,
      -0.051688828,
      -0.0025097183,
      -0.16802429,
      -0.060273778,
      -1.0671881,
      -0.0002541968,
      -0.004036603,
      -7.6252014e-05,
      -0.00673169,
      -0.0028403988,
      -0.007867172,
      -0.0002741131,
      -0.0073945066,
      -0.00014134373,
      -0.0042745234,
      -0.0004933604,
      -0.0016995348,
      -0.0004756518,
      -0.0011386921,
      -0.014623806,
      -8.137612e-05,
      -0.0017163112,
      -9.186649e-05,
      -0.00019535558,
      -0.0007544141,
      -0.00018307802,
      -7.100402e-05,
      -8.176345e-06,
      -0.00063679187,
      -0.00051530695,
      -0.0015888434,
      -0.0005107761,
      -0.00019368572,
      -0.00034607758,
      -0.00024453807,
      -5.216904e-05,
      -2.7013197e-05,
      -0.0003090478,
      -0.00019380587,
      -0.0016985802,
      -0.08067971,
      -0.00014063035,
      -0.00085206574,
      -0.00036372704,
      -0.00010736549,
      -0.00014742525,
      -0.0009873722,
      -0.000143252,
      -0.015685227,
      -5.4791635e-05,
      -0.000992502,
      -0.00011237507,
      -0.00017437205,
      -0.0002607561,
      -0.00017091405,
      -7.97072e-05,
      -2.3317722e-05,
      -0.00089006795,
      -0.0023860934,
      -0.034997765,
      -0.0016406073,
      -0.00027303834,
      -0.00066649547,
      -0.00013776746,
      -0.0013073996,
      -0.012412763,
      -7.9946556e-05,
      -0.0034321018,
      -6.031526e-06,
      -0.000994292,
      -0.0059634107,
      -0.0018551423,
      -0.0020112502,
      -0.00049073686,
      -0.8946347,
      -1.3241633,
      -0.18002115,
      -0.01758664,
      -0.005177566,
      -0.00041816695,
      -0.0006959005,
      -0.029459083,
      -0.020470731,
      -0.00019857421,
      -0.00062229816,
      -0.002805192,
      -0.056235924,
      -0.00086435553,
      -0.00047088155,
      -1.6482846,
      -0.47422042,
      -0.002853371,
      -1.2455666,
      -0.2172538,
      -0.2389548,
      -2.1456904,
      -0.00043080773,
      -0.0045602787,
      -0.0014339963,
      -0.02454786,
      -0.0028625154,
      -0.049130924,
      -0.000276853,
      -0.057580747,
      -9.21049e-05,
      -0.0082116425,
      -5.2288255e-05,
      -0.00042114808,
      -0.003506929,
      -0.00037565167,
      -0.00077451725,
      -0.0071387994,
      -9.305951e-05,
      -0.0015887234,
      -0.00011320953,
      -0.0001963102,
      -0.0005608109,
      -0.00045012985,
      -7.469949e-05,
      -1.9765537e-06,
      -0.0028647275,
      -2.9996223e-05,
      -0.00064645434,
      -0.002218934,
      -0.10960031,
      -0.00024597047,
      -0.00097102753,
      -0.0003777965,
      -6.7307614e-05,
      -9.370307e-06,
      -0.0036232146,
      -3.0947078e-05,
      -0.00030988507,
      -0.0019361798,
      -0.0030627837,
      -0.000111420464,
      -0.000599397,
      -0.00029473996,
      -0.00050516764,
      -0.00010772499,
      -0.00029378536,
      -3.965026e-05,
      -0.0037600365,
      -6.361214e-05,
      -0.0010140431,
      -9.699527e-05,
      -0.00026731353,
      -0.00016829051,
      -0.00036074495,
      -8.209043e-05,
      -0.00039520938,
      -0.00035860104,
      -0.0016358305,
      -0.005387766,
      -0.0008570753,
      -0.00033952016,
      -0.00021443368,
      -5.5269407e-05,
      -0.004342049,
      -7.338913e-05,
      -0.004916852,
      -6.432833e-05,
      -0.00019440286,
      -0.00018057182,
      -0.00041023534,
      -0.0053140614,
      -0.0011964577,
      -0.0011856547,
      -0.0005123239,
      -1.9940283,
      -0.0048208404,
      -0.0009986492,
      -0.2866756,
      -0.9701299,
      -1.2093983,
      -0.07048342,
      -0.08369562,
      -0.00018248011,
      -0.00029998703,
      -1.7595703e-05,
      -0.0031328592,
      -0.0021845868,
      -0.005256177,
      -0.00011809803,
      -0.036697652,
      -2.6419024e-05,
      -0.0067820973,
      -0.0002570597,
      -0.00085802993,
      -0.00018236089,
      -0.00012620141,
      -0.0020964222,
      -0.000102240454,
      -0.00082611677,
      -7.768064e-05,
      -0.0001011657,
      -0.00045978764,
      -0.00010998996,
      -3.9292627e-05,
      -2.693682e-06,
      -0.00029879494,
      -0.0003179941,
      -0.0009974561,
      -0.0004256799,
      -0.00011320953,
      -0.00019559306,
      -0.00017067656,
      -3.6195077e-05,
      -4.3108244e-05,
      -0.00014683108,
      -0.00033784844,
      -0.0016300399,
      -0.0029713733,
      -6.718934e-05,
      -0.0008051182,
      -0.00017139182,
      -0.00022134777,
      -7.982734e-05,
      -8.650302e-05,
      -8.0580685e-06,
      -0.0019352242,
      -7.183848e-05,
      -0.0005745265,
      -7.279122e-05,
      -0.00024275183,
      -0.00011404399,
      -0.00022480857,
      -3.643162e-05,
      -8.00667e-05,
      -0.00033284168,
      -0.00129994,
      -0.0011336177,
      -0.00013931624,
      -0.00010212031,
      -0.00015767907,
      -5.4364154e-06,
      -0.0001963102,
      -0.0020423073,
      -5.0140625e-05,
      -5.9679198e-05,
      -6.408898e-05,
      -0.00025777495,
      -0.005075777,
      -0.0015082537,
      -0.0032715863,
      -0.0007375917,
      -1.6692545,
      -2.2035842,
      -0.022695767,
      -0.012099779,
      -0.0004895429,
      -0.00059212145,
      -0.0008861294,
      -0.0001345479,
      -0.0003848345,
      -0.004269616,
      -0.0033812074,
      -0.00041613853,
      -0.0004980114,
      -2.3634572,
      -2.866773,
      -1.3752077,
      -1.7537775,
      -0.004867378,
      -0.0082827965,
      -0.29248273,
      -0.0003218097,
      -0.0181322,
      -2.8565719e-05,
      -0.0006588605,
      -0.003057761,
      -0.035061654,
      -0.0001970245,
      -0.0051932046,
      -0.00016912498,
      -7.6605895e-05,
      -0.00022695526,
      -0.0006670915,
      -0.0002745909,
      -0.00020966532,
      -0.004472381,
      -8.435633e-05,
      -0.0010883289,
      -0.00013216372,
      -0.00015219547,
      -0.00055186276,
      -0.00022480857,
      -0.00039652258,
      -0.00011404399,
      -4.1232483e-06,
      -0.00031358056,
      -0.0014867033,
      -0.005696259,
      -0.00018045263,
      -0.00019857421,
      -0.00027709146,
      -0.00020096028,
      -0.00010605607,
      -0.000100094694,
      -0.00034726874,
      -0.0016118892,
      -0.003602279,
      -9.174727e-05,
      -0.000189275,
      -0.00019905198,
      -0.00029378536,
      -9.687513e-05,
      -0.00017067656,
      -0.00011022838,
      -0.0025050007,
      -0.00012810968,
      -0.00075948384,
      -9.628002e-05,
      -0.00024692412,
      -0.00013693394,
      -0.0003625331,
      -9.925743e-05,
      -6.9573514e-05,
      -0.00031501107,
      -0.0012992248,
      -0.0032232094,
      -0.001464081,
      -0.00018283867,
      -0.0005580644,
      -0.00029784034,
      -0.00010128584,
      -0.0041434392,
      -7.422359e-05,
      -9.258174e-05,
      -0.00018605449,
      -0.00032383628,
      -0.00555366,
      -0.0013751438,
      -0.0038183727,
      -0.0014904045,
      -0.36256438,
      -0.8574176,
      -0.016565248,
      -0.009051774,
      -0.00041637692,
      -0.0003490606,
      -6.7307614e-05,
      -0.00038149662,
      -0.0045882994,
      -0.00058192114,
      -0.0029506872,
      -0.00082730886,
      -0.34223053,
      -0.44837746,
      -0.022179645,
      -0.03855102,
      -0.00014683108,
      -0.00021741669,
      -0.00043140285,
      -0.00027947655,
      -0.00022445,
      -0.003479235,
      -0.00018999024,
      -0.012287848,
      -0.0012462287,
      -0.00010808168,
      -0.00017496901,
      -0.00021538827,
      -0.00020119963,
      -0.00016376152,
      -5.1334588e-05,
      -0.00031882763,
      -0.0010426221,
      -0.00034619775,
      -0.00020167646,
      -6.253833e-05,
      -9.151261e-05,
      -0.00027065416,
      -0.0033997474,
      -0.00079712283,
      -0.0012365605,
      -0.0010849873,
      -0.2626348,
      -0.020169934,
      -0.0009367208,
      -0.0039834026,
      -0.35277396,
      -0.010753027,
      -0.00015160035,
      -0.00021204854,
      -5.693833e-05,
      -0.00029939285,
      -0.0018714438,
      -0.0014027805,
      -9.615988e-05,
      -0.00054590043,
      -0.00010557923,
      -0.00013252322,
      -0.00027709146,
      -0.00019010947,
      -0.00014885482,
      -0.0019217874,
      -5.467149e-05,
      -0.00066780584,
      -7.1719274e-05,
      -0.00017639951,
      -0.000284366,
      -0.00015827699,
      -0.00012608219,
      -0.00014468438,
      -0.00049455435,
      -0.0008084589,
      -0.00012882493,
      -0.00014611395,
      -0.00016471426,
      -0.00013490739,
      -5.0976956e-05,
      -0.00015410187,
      -0.00011487751,
      -0.001095013,
      -0.0018637412,
      -6.826223e-05,
      -9.699527e-05,
      -0.00016793102,
      -0.00021109488,
      -0.00012739444,
      -0.00043533952,
      -3.5120327e-05,
      -0.0032077215,
      -4.3465872e-05,
      -0.0005945075,
      -6.420819e-05,
      -0.00017377506,
      -0.00011070334,
      -0.00010295758,
      -0.00012107918,
      -7.5774245e-05,
      -0.00026743364,
      -0.0010739487,
      -0.00033099068,
      -6.9810994e-05,
      -0.0001086796,
      -0.0002199182,
      -0.00015851353,
      -0.0018245695,
      -7.6252014e-05,
      -0.00036193893,
      -9.0437854e-05,
      -0.0003554988,
      -0.0042384285,
      -0.0011327843,
      -0.0016134427,
      -0.001074785,
      -0.17698982,
      -1.0142624,
      -0.028427467,
      -0.008690479,
      -0.0017994888,
      -0.0002912829,
      -0.001188939,
      -9.2941234e-05,
      -0.011178114,
      -4.048565e-05,
      -0.00026111372,
      -0.0031837418,
      -0.00056355365,
      -0.0022813035,
      -0.00085278286,
      -0.29296958,
      -0.19970475,
      -0.0012751719,
      -0.07251052,
      -0.072311684,
      -0.013741995,
      -0.0045300396,
      -0.00014074863,
      -0.00052520697,
      -8.984087e-05,
      -0.0001635231,
      -0.001108079,
      -0.0008709767,
      -0.000109155495,
      -0.0011598184,
      -6.873624e-05,
      -0.010897935,
      -4.751897e-05,
      -0.00019619097,
      -0.0003088113,
      -0.00019762148,
      -0.00017532664,
      -0.001387917,
      -6.3492e-05,
      -0.0005354035,
      -5.3955304e-05,
      -8.244993e-05,
      -0.00021049884,
      -0.00016066022,
      -0.00034392995,
      -2.3795494e-05,
      -0.0035004073,
      -1.2351458e-05,
      -0.00024215765,
      -0.0008281433,
      -0.00017723397,
      -8.7696986e-05,
      -0.00014432582,
      -0.00014659172,
      -0.00023261909,
      -5.896488e-05,
      -0.006142891,
      -3.5717305e-05,
      -0.00021717734,
      -0.0009029538,
      -0.0006937529,
      -6.5041706e-05,
      -8.2807564e-05,
      -0.0001459938,
      -0.00014146294,
      -9.186649e-05,
      -0.00015827699,
      -0.00010748563,
      -0.0011602361,
      -8.960433e-05,
      -0.00046181606,
      -6.4566746e-05,
      -0.00012787033,
      -9.270188e-05,
      -0.00017878464,
      -5.3837026e-05,
      -0.00035037097,
      -0.00023082721,
      -0.0010459629,
      -0.00038268685,
      -6.3492e-05,
      -0.00014408647,
      -0.00044333027,
      -8.6144464e-05,
      -0.0030418583,
      -1.5448071e-05,
      -0.000792055,
      -9.878341e-05,
      -0.000106295425,
      -5.8367896e-05,
      -0.00033856556,
      -0.0029306042,
      -0.0006744853,
      -0.0016284874,
      -0.0011981284,
      -0.039287787,
      -0.00075691944,
      -0.00047964763,
      -0.011530846,
      -0.08868506,
      -0.23203588,
      -0.0041184197,
      -0.0031161178,
      -0.000116546435,
      -0.000246207,
      -0.00029473996,
      -0.00015827699,
      -0.00090140215,
      -0.0005985634,
      -6.0276172e-05,
      -0.00062730775,
      -8.8051806e-05,
      -0.00012167429,
      -0.00014837986,
      -0.0001506467,
      -0.00026969958,
      -0.0005157848,
      -4.9069615e-05,
      -0.0003721918,
      -4.9782993e-05,
      -7.279122e-05,
      -0.00015911051,
      -9.234426e-05,
      -5.6223078e-05,
      -5.3716885e-05,
      -0.0003042804,
      -0.0004478621,
      -0.000108559456,
      -7.2672e-05,
      -0.00010784233,
      -0.00018390873,
      -2.6893982e-05,
      -0.00011988616,
      -0.00025539077,
      -0.0005191226,
      -0.000526996,
      -5.9085025e-05,
      -5.1810483e-05,
      -0.00013693394,
      -0.00025407854,
      -0.000120601406,
      -0.0001319253,
      -0.00014039098,
      -0.0005911678,
      -6.6949986e-05,
      -0.00036873287,
      -5.4075444e-05,
      -0.00012465262,
      -8.8051806e-05,
      -8.8410365e-05,
      -3.762558e-05,
      -0.00012179443,
      -0.00029569364,
      -0.0007044901,
      -0.00027959672,
      -3.6670972e-05,
      -8.8290224e-05,
      -0.00015148021,
      -0.00010343254,
      -0.0007160609,
      -0.00010545909,
      -4.2033495e-05,
      -6.551948e-05,
      -0.00034715232,
      -0.0022306428,
      -0.0009010445,
      -0.0018883451,
      -0.0006949459,
      -0.2746576,
      -0.09665142,
      -0.008795645,
      -0.0058074654,
      -0.00027709146,
      -0.00015827699,
      -8.376217e-05,
      -6.9810994e-05,
      -0.00095975155,
      -0.0030885534,
      -0.0004895429,
      -0.0008940038,
      -0.00049228565,
      -0.058802314,
      -0.024087261,
      -0.008673585,
      -0.0048824116,
      -0.0008123946,
      -0.003419365,
      -0.0058112424,
      -0.0001390797,
      -0.0008802835,
      -0.00042830152,
      -0.00020477588,
      -0.00092580245,
      -0.0006802711,
      -8.1136764e-05,
      -0.00012942286,
      -4.4539687e-05,
      -2.272356e-05,
      -0.00013311833,
      -0.00018081025,
      -0.0001707939,
      -7.553489e-05,
      -0.0006549238,
      -4.799487e-05,
      -0.00043140285,
      -4.608659e-05,
      -6.826223e-05,
      -0.00012894507,
      -7.338913e-05,
      -4.6921985e-05,
      -2.1051823e-05,
      -8.3165185e-05,
      -0.00024251342,
      -0.00056379114,
      -9.449002e-05,
      -7.815842e-05,
      -7.732115e-05,
      -0.00010486492,
      -3.130471e-05,
      -4.721163e-06,
      -3.690939e-05,
      -0.00023309403,
      -0.0006434713,
      -0.0005473328,
      -6.7427754e-05,
      -5.7057543e-05,
      -0.00012954207,
      -8.065993e-05,
      -0.00010068981,
      -0.00019261472,
      -0.00012512946,
      -0.0007534595,
      -8.88872e-05,
      -0.0003444068,
      -7.255186e-05,
      -8.3284394e-05,
      -9.639735e-05,
      -0.00015350676,
      -6.206056e-05,
      -5.9201422e-05,
      -0.0002192039,
      -0.00061931607,
      -0.0002940247,
      -4.5613506e-05,
      -0.000113566224,
      -8.697986e-05,
      -3.0947078e-05,
      -4.680184e-05,
      -0.0007631849,
      -9.270188e-05,
      -0.00012095904,
      -2.5941252e-05,
      -0.00040212632,
      -0.0031895426,
      -0.001029498,
      -0.0030327132,
      -0.0014553074,
      -0.6973165,
      -2.203316,
      -0.0064743524,
      -0.0037955747,
      -0.00035609488,
      -0.0007299585,
      -0.00043056931,
      -0.00032002066,
      -0.0038177741,
      -0.00044213727,
      -0.001084271,
      -0.0008048789,
      -0.06520207,
      -1.8825872,
      -0.06676589,
      -0.009207204,
      -0.0150236115,
      -0.00011022838,
      -0.00022600066,
      -0.00037827427,
      -0.00015755986,
      -0.00012882493,
      -0.0009344539,
      -0.012119812,
      -4.3347598e-05,
      -0.0018977786,
      -0.00072494993,
      -6.838237e-05,
      -9.0080226e-05,
      -0.00014229833,
      -0.0001390797,
      -0.00023142513,
      -0.005469272,
      -1.7475562e-05,
      -0.0002854398,
      -0.00070556306,
      -0.00031501107,
      -0.0001614947,
      -0.00010987075,
      -0.006042203,
      -2.0098154e-05,
      -0.00012381817,
      -0.0024295924,
      -0.0005156646,
      -0.00087527203,
      -0.00057607895,
      -0.95013106,
      -0.21494453,
      -0.0011557596,
      -0.028126907,
      -0.016107159,
      -0.006785698,
      -0.008048073,
      -0.00021324158,
      -0.0031371631,
      -0.0012031408,
      -0.0001963102,
      -0.0014322061,
      -0.0007544141,
      -9.174727e-05,
      -0.0007105736,
      -0.009814901,
      -2.9159892e-05,
      -0.00024060514,
      -0.00027637713,
      -0.00017329915,
      -0.00019964804,
      -0.0015101649,
      -8.185389e-05,
      -0.00065874035,
      -5.991855e-05,
      -0.00010140506,
      -0.00016197246,
      -0.00017043721,
      -0.00016566887,
      -0.0026878663,
      -4.6010214e-06,
      -0.00023524073,
      -0.000660291,
      -0.00015923065,
      -9.794894e-05,
      -0.0001693634,
      -0.00014432582,
      -0.000104267005,
      -0.0019041689,
      -2.28437e-05,
      -0.00018366938,
      -0.0008793289,
      -0.0064725513,
      -7.505805e-05,
      -0.00013657632,
      -0.00024644638,
      -0.0001735385,
      -0.00011487751,
      -0.0017529731,
      -0.00022361554,
      -0.005558514,
      -4.9782993e-05,
      -0.00060226076,
      -9.532728e-05,
      -6.9573514e-05,
      -0.00010998996,
      -0.0001887991,
      -0.00029879494,
      -6.838237e-05,
      -0.0002471616,
      -0.0008631615,
      -0.07855956,
      -0.0009114852,
      -0.000111540605,
      -0.0003042804,
      -0.0032650072,
      -1.9860674e-05,
      -0.0008922147,
      -6.087316e-05,
      -0.0015773836,
      -0.00037028352,
      -0.00021729656,
      -0.0024084407,
      -0.000754295,
      -0.0019619768,
      -0.0005976088,
      -1.0224346,
      -0.28944772,
      -0.00085421436,
      -0.025549246,
      -0.5502826,
      -2.815302,
      -0.0047678356,
      -0.006508246,
      -0.0001620926,
      -0.007131476,
      -0.00024311132,
      -0.0001492143,
      -0.001102769,
      -0.0008465784,
      -5.860725e-05,
      -0.0011155976,
      -4.847264e-05,
      -0.00015851353,
      -0.00018248011,
      -0.00016066022,
      -0.00026802876,
      -0.00048036288,
      -7.338913e-05,
      -0.00035013165,
      -3.941184e-05,
      -6.7069195e-05,
      -0.00020465575,
      -0.00017246376,
      -5.1215375e-05,
      -8.209043e-05,
      -0.0002590881,
      -0.0004761286,
      -0.00013657632,
      -8.685972e-05,
      -0.00013121005,
      -9.413332e-05,
      -2.1051823e-05,
      -7.064452e-05,
      -0.00022433081,
      -0.00062074844,
      -0.00040928167,
      -0.00012643983,
      -5.264588e-05,
      -0.00015028719,
      -0.00018093038,
      -9.174727e-05,
      -0.00080678804,
      -0.0004914521,
      -0.0010129693,
      -8.423619e-05,
      -0.0004291388,
      -3.583558e-05,
      -9.437268e-05,
      -9.0437854e-05,
      -0.00020167646,
      -0.00022600066,
      -0.000331888,
      -0.00025527156,
      -0.0006363141,
      -0.0002840093,
      -5.896488e-05,
      -9.365555e-05,
      -0.00019463846,
      -0.00021491051,
      -0.0006040489,
      -7.529741e-05,
      -0.00038328386,
      -0.000629813,
      -0.00026934195,
      -0.0027528913,
      -0.0009349317,
      -0.001120134,
      -0.0007974823,
      -0.08030832,
      -0.011113261,
      -0.00673463,
      -0.0022747312,
      -0.00025443616,
      -7.8872734e-05,
      -9.0318645e-05,
      -4.8233283e-05,
      -0.0005005176,
      -0.004017814,
      -0.00049860927,
      -0.0012171653,
      -0.0005331404,
      -0.027564043,
      -0.039739944,
      -0.013896341,
      -0.00768938,
      -0.0009574828,
      -0.0033776779,
      -0.0020163837,
      -0.00015505555,
      -0.0038327333,
      -0.00021252633,
      -0.00016912498,
      -0.00086519,
      -0.0005352843,
      -8.471396e-05,
      -0.000104267005,
      -4.608659e-05,
      -1.8190814e-05,
      -0.00013371343,
      -0.00020525271,
      -0.00024608686,
      -9.0558e-05,
      -0.0005646284,
      -5.8010275e-05,
      -0.00036944906,
      -4.966285e-05,
      -7.100402e-05,
      -9.377476e-05,
      -0.00011070334,
      -3.3928238e-05,
      -1.2351458e-05,
      -1.0323977e-05,
      -0.00024787875,
      -0.00051626156,
      -8.471396e-05,
      -0.00011106284,
      -8.507158e-05,
      -0.00023428706,
      -2.6298881e-05,
      -1.0920954e-05,
      -0.00011034852,
      -0.00043438585,
      -0.0005021884,
      -0.00053743285,
      -0.00011666565,
      -5.956092e-05,
      -0.00015410187,
      -0.00020179474,
      -8.137612e-05
     ],
     "top_logprobs": [
      {
       " #": -0.018685104
      },
      {
       " 0": -0.006443216
      },
      {
       ":": -0.004790353
      },
      {
       " walk": -0.10384095
      },
      {
       " to": -0.027391216
      },
      {
       " bathroom": -0.021082697
      },
      {
       "\n": -0.030230265
      },
      {
       " walk": -0.0052272365
      },
      {
       "('": -0.006295472
      },
      {
       "bath": -0.0011349329
      },
      {
       "room": -0.00010402765
      },
      {
       "')": -0.0010056891
      },
      {
       "\n": -0.010632113
      },
      {
       " #": -0.002584895
      },
      {
       " 1": -0.0022117062
      },
      {
       ":": -0.000723756
      },
      {
       " find": -0.6713427
      },
      {
       " m": -1.3785349
      },
      {
       "\n": -0.08219081
      },
      {
       " find": -0.004772566
      },
      {
       "('": -0.0010849873
      },
      {
       "to": -0.00030893143
      },
      {
       "ilet": -8.531094e-05
      },
      {
       "')": -0.00034667455
      },
      {
       "\n": -0.0085270135
      },
      {
       " #": -0.0012767253
      },
      {
       " 2": -0.0013725174
      },
      {
       ":": -0.0012864508
      },
      {
       " grab": -0.4357214
      },
      {
       " toilet": -0.15407781
      },
      {
       " brush": -0.34981394
      },
      {
       "\n": -0.01893315
      },
      {
       " assert": -0.53590894
      },
      {
       "('": -0.00049634156
      },
      {
       "close": -0.0012657441
      },
      {
       "'": -0.00090599596
      },
      {
       " to": -0.00019332903
      },
      {
       " '": -0.00041208262
      },
      {
       "to": -0.0010515723
      },
      {
       "ilet": -0.000988448
      },
      {
       "brush": -0.20015907
      },
      {
       "')": -0.06167387
      },
      {
       "\n": -0.0041615106
      },
      {
       " else": -0.00029438327
      },
      {
       ":": -0.00034822334
      },
      {
       " find": -0.00083500484
      },
      {
       "('": -0.0004312836
      },
      {
       "to": -0.000111540605
      },
      {
       "ilet": -9.7351025e-05
      },
      {
       "brush": -0.0020954658
      },
      {
       "')": -0.0007583518
      },
      {
       "\n": -0.002458989
      },
      {
       " grab": -0.00089842005
      },
      {
       "('": -0.00044058848
      },
      {
       "to": -8.7576846e-05
      },
      {
       "ilet": -9.0795475e-05
      },
      {
       "brush": -0.0006916062
      },
      {
       "')": -0.0001418215
      },
      {
       "\n": -0.0047186054
      },
      {
       " #": -0.0011030084
      },
      {
       " 3": -0.0028374093
      },
      {
       ":": -0.0009154238
      },
      {
       " scrub": -1.1812655
      },
      {
       " scrub": -0.051688828
      },
      {
       "bing": -0.0025097183
      },
      {
       " toilet": -0.16802429
      },
      {
       "\n": -0.060273778
      },
      {
       " assert": -0.78985196
      },
      {
       "('": -0.0002541968
      },
      {
       "to": -0.004036603
      },
      {
       "ilet": -7.6252014e-05
      },
      {
       "')": -0.00673169
      },
      {
       "\n": -0.0028403988
      },
      {
       " assert": -0.007867172
      },
      {
       "('": -0.0002741131
      },
      {
       "to": -0.0073945066
      },
      {
       "ilet": -0.00014134373
      },
      {
       "brush": -0.0042745234
      },
      {
       "'": -0.0004933604
      },
      {
       " in": -0.0016995348
      },
      {
       " '": -0.0004756518
      },
      {
       "hands": -0.0011386921
      },
      {
       "'": -0.014623806
      },
      {
       " )": -8.137612e-05
      },
      {
       "\n": -0.0017163112
      },
      {
       " else": -9.186649e-05
      },
      {
       ":": -0.00019535558
      },
      {
       " find": -0.0007544141
      },
      {
       "('": -0.00018307802
      },
      {
       "to": -7.100402e-05
      },
      {
       "ilet": -8.176345e-06
      },
      {
       "brush": -0.00063679187
      },
      {
       "')": -0.00051530695
      },
      {
       "\n": -0.0015888434
      },
      {
       " else": -0.0005107761
      },
      {
       ":": -0.00019368572
      },
      {
       " grab": -0.00034607758
      },
      {
       "('": -0.00024453807
      },
      {
       "to": -5.216904e-05
      },
      {
       "ilet": -2.7013197e-05
      },
      {
       "brush": -0.0003090478
      },
      {
       "')": -0.00019380587
      },
      {
       "\n": -0.0016985802
      },
      {
       " assert": -0.08067971
      },
      {
       "('": -0.00014063035
      },
      {
       "close": -0.00085206574
      },
      {
       "'": -0.00036372704
      },
      {
       " to": -0.00010736549
      },
      {
       " '": -0.00014742525
      },
      {
       "to": -0.0009873722
      },
      {
       "ilet": -0.000143252
      },
      {
       "'": -0.015685227
      },
      {
       " )": -5.4791635e-05
      },
      {
       "\n": -0.000992502
      },
      {
       " else": -0.00011237507
      },
      {
       ":": -0.00017437205
      },
      {
       " find": -0.0002607561
      },
      {
       "('": -0.00017091405
      },
      {
       "to": -7.97072e-05
      },
      {
       "ilet": -2.3317722e-05
      },
      {
       "')": -0.00089006795
      },
      {
       "\n": -0.0023860934
      },
      {
       " put": -0.034997765
      },
      {
       "in": -0.0016406073
      },
      {
       "('": -0.00027303834
      },
      {
       "to": -0.00066649547
      },
      {
       "ilet": -0.00013776746
      },
      {
       "brush": -0.0013073996
      },
      {
       "',": -0.012412763
      },
      {
       " '": -7.9946556e-05
      },
      {
       "to": -0.0034321018
      },
      {
       "ilet": -6.031526e-06
      },
      {
       "')": -0.000994292
      },
      {
       "\n": -0.0059634107
      },
      {
       " #": -0.0018551423
      },
      {
       " 4": -0.0020112502
      },
      {
       ":": -0.00049073686
      },
      {
       " find": -0.8946347
      },
      {
       " toilet": -1.3241633
      },
      {
       " cleaner": -0.18002115
      },
      {
       "\n": -0.01758664
      },
      {
       " find": -0.005177566
      },
      {
       "('": -0.00041816695
      },
      {
       "to": -0.0006959005
      },
      {
       "ilet": -0.029459083
      },
      {
       "clean": -0.020470731
      },
      {
       "er": -0.00019857421
      },
      {
       "')": -0.00062229816
      },
      {
       "\n": -0.002805192
      },
      {
       " #": -0.056235924
      },
      {
       " 5": -0.00086435553
      },
      {
       ":": -0.00047088155
      },
      {
       " put": -0.88018197
      },
      {
       " toilet": -0.47422042
      },
      {
       " cleaner": -0.002853371
      },
      {
       " in": -1.1004317
      },
      {
       " toilet": -0.2172538
      },
      {
       "\n": -0.2389548
      },
      {
       " assert": -0.30945918
      },
      {
       "('": -0.00043080773
      },
      {
       "to": -0.0045602787
      },
      {
       "ilet": -0.0014339963
      },
      {
       "')": -0.02454786
      },
      {
       "\n": -0.0028625154
      },
      {
       " assert": -0.049130924
      },
      {
       "('": -0.000276853
      },
      {
       "to": -0.057580747
      },
      {
       "ilet": -9.21049e-05
      },
      {
       "clean": -0.0082116425
      },
      {
       "er": -5.2288255e-05
      },
      {
       "'": -0.00042114808
      },
      {
       " in": -0.003506929
      },
      {
       " '": -0.00037565167
      },
      {
       "hands": -0.00077451725
      },
      {
       "'": -0.0071387994
      },
      {
       " )": -9.305951e-05
      },
      {
       "\n": -0.0015887234
      },
      {
       " else": -0.00011320953
      },
      {
       ":": -0.0001963102
      },
      {
       " find": -0.0005608109
      },
      {
       "('": -0.00045012985
      },
      {
       "to": -7.469949e-05
      },
      {
       "ilet": -1.9765537e-06
      },
      {
       "clean": -0.0028647275
      },
      {
       "er": -2.9996223e-05
      },
      {
       "')": -0.00064645434
      },
      {
       "\n": -0.002218934
      },
      {
       " else": -0.10960031
      },
      {
       ":": -0.00024597047
      },
      {
       " grab": -0.00097102753
      },
      {
       "('": -0.0003777965
      },
      {
       "to": -6.7307614e-05
      },
      {
       "ilet": -9.370307e-06
      },
      {
       "clean": -0.0036232146
      },
      {
       "er": -3.0947078e-05
      },
      {
       "')": -0.00030988507
      },
      {
       "\n": -0.0019361798
      },
      {
       " assert": -0.0030627837
      },
      {
       "('": -0.000111420464
      },
      {
       "close": -0.000599397
      },
      {
       "'": -0.00029473996
      },
      {
       " to": -0.00050516764
      },
      {
       " '": -0.00010772499
      },
      {
       "to": -0.00029378536
      },
      {
       "ilet": -3.965026e-05
      },
      {
       "'": -0.0037600365
      },
      {
       " )": -6.361214e-05
      },
      {
       "\n": -0.0010140431
      },
      {
       " else": -9.699527e-05
      },
      {
       ":": -0.00026731353
      },
      {
       " find": -0.00016829051
      },
      {
       "('": -0.00036074495
      },
      {
       "to": -8.209043e-05
      },
      {
       "ilet": -0.00039520938
      },
      {
       "')": -0.00035860104
      },
      {
       "\n": -0.0016358305
      },
      {
       " put": -0.005387766
      },
      {
       "in": -0.0008570753
      },
      {
       "('": -0.00033952016
      },
      {
       "to": -0.00021443368
      },
      {
       "ilet": -5.5269407e-05
      },
      {
       "clean": -0.004342049
      },
      {
       "er": -7.338913e-05
      },
      {
       "',": -0.004916852
      },
      {
       " '": -6.432833e-05
      },
      {
       "to": -0.00019440286
      },
      {
       "ilet": -0.00018057182
      },
      {
       "')": -0.00041023534
      },
      {
       "\n": -0.0053140614
      },
      {
       " #": -0.0011964577
      },
      {
       " 6": -0.0011856547
      },
      {
       ":": -0.0005123239
      },
      {
       " scrub": -1.0055736
      },
      {
       " scrub": -0.0048208404
      },
      {
       "bing": -0.0009986492
      },
      {
       " toilet": -0.2866756
      },
      {
       "\n": -0.9638108
      },
      {
       " toilet": -0.72306436
      },
      {
       "\n": -0.07048342
      },
      {
       " find": -0.08369562
      },
      {
       "('": -0.00018248011
      },
      {
       "to": -0.00029998703
      },
      {
       "ilet": -1.7595703e-05
      },
      {
       "')": -0.0031328592
      },
      {
       "\n": -0.0021845868
      },
      {
       " assert": -0.005256177
      },
      {
       "('": -0.00011809803
      },
      {
       "to": -0.036697652
      },
      {
       "ilet": -2.6419024e-05
      },
      {
       "brush": -0.0067820973
      },
      {
       "'": -0.0002570597
      },
      {
       " in": -0.00085802993
      },
      {
       " '": -0.00018236089
      },
      {
       "hands": -0.00012620141
      },
      {
       "'": -0.0020964222
      },
      {
       " )": -0.000102240454
      },
      {
       "\n": -0.00082611677
      },
      {
       " else": -7.768064e-05
      },
      {
       ":": -0.0001011657
      },
      {
       " find": -0.00045978764
      },
      {
       "('": -0.00010998996
      },
      {
       "to": -3.9292627e-05
      },
      {
       "ilet": -2.693682e-06
      },
      {
       "brush": -0.00029879494
      },
      {
       "')": -0.0003179941
      },
      {
       "\n": -0.0009974561
      },
      {
       " else": -0.0004256799
      },
      {
       ":": -0.00011320953
      },
      {
       " grab": -0.00019559306
      },
      {
       "('": -0.00017067656
      },
      {
       "to": -3.6195077e-05
      },
      {
       "ilet": -4.3108244e-05
      },
      {
       "brush": -0.00014683108
      },
      {
       "')": -0.00033784844
      },
      {
       "\n": -0.0016300399
      },
      {
       " assert": -0.0029713733
      },
      {
       "('": -6.718934e-05
      },
      {
       "close": -0.0008051182
      },
      {
       "'": -0.00017139182
      },
      {
       " to": -0.00022134777
      },
      {
       " '": -7.982734e-05
      },
      {
       "to": -8.650302e-05
      },
      {
       "ilet": -8.0580685e-06
      },
      {
       "'": -0.0019352242
      },
      {
       " )": -7.183848e-05
      },
      {
       "\n": -0.0005745265
      },
      {
       " else": -7.279122e-05
      },
      {
       ":": -0.00024275183
      },
      {
       " find": -0.00011404399
      },
      {
       "('": -0.00022480857
      },
      {
       "to": -3.643162e-05
      },
      {
       "ilet": -8.00667e-05
      },
      {
       "')": -0.00033284168
      },
      {
       "\n": -0.00129994
      },
      {
       " put": -0.0011336177
      },
      {
       "in": -0.00013931624
      },
      {
       "('": -0.00010212031
      },
      {
       "to": -0.00015767907
      },
      {
       "ilet": -5.4364154e-06
      },
      {
       "brush": -0.0001963102
      },
      {
       "',": -0.0020423073
      },
      {
       " '": -5.0140625e-05
      },
      {
       "to": -5.9679198e-05
      },
      {
       "ilet": -6.408898e-05
      },
      {
       "')": -0.00025777495
      },
      {
       "\n": -0.005075777
      },
      {
       " #": -0.0015082537
      },
      {
       " 7": -0.0032715863
      },
      {
       ":": -0.0007375917
      },
      {
       " flush": -0.91132754
      },
      {
       " bathroom": -1.5794101
      },
      {
       "\n": -0.022695767
      },
      {
       " find": -0.012099779
      },
      {
       "('": -0.0004895429
      },
      {
       "t": -0.00059212145
      },
      {
       "ow": -0.0008861294
      },
      {
       "el": -0.0001345479
      },
      {
       "')": -0.0003848345
      },
      {
       "\n": -0.004269616
      },
      {
       " #": -0.0033812074
      },
      {
       " 8": -0.00041613853
      },
      {
       ":": -0.0004980114
      },
      {
       " grab": -0.6947893
      },
      {
       " down": -1.0443273
      },
      {
       " excess": -1.1531389
      },
      {
       "\n": -0.652338
      },
      {
       " towel": -0.004867378
      },
      {
       "\n": -0.0082827965
      },
      {
       " find": -0.29248273
      },
      {
       "('": -0.0003218097
      },
      {
       "to": -0.0181322
      },
      {
       "ilet": -2.8565719e-05
      },
      {
       "')": -0.0006588605
      },
      {
       "\n": -0.003057761
      },
      {
       " assert": -0.035061654
      },
      {
       "('": -0.0001970245
      },
      {
       "t": -0.0051932046
      },
      {
       "ow": -0.00016912498
      },
      {
       "el": -7.6605895e-05
      },
      {
       "'": -0.00022695526
      },
      {
       " in": -0.0006670915
      },
      {
       " '": -0.0002745909
      },
      {
       "hands": -0.00020966532
      },
      {
       "'": -0.004472381
      },
      {
       " )": -8.435633e-05
      },
      {
       "\n": -0.0010883289
      },
      {
       " else": -0.00013216372
      },
      {
       ":": -0.00015219547
      },
      {
       " find": -0.00055186276
      },
      {
       "('": -0.00022480857
      },
      {
       "t": -0.00039652258
      },
      {
       "ow": -0.00011404399
      },
      {
       "el": -4.1232483e-06
      },
      {
       "')": -0.00031358056
      },
      {
       "\n": -0.0014867033
      },
      {
       " else": -0.005696259
      },
      {
       ":": -0.00018045263
      },
      {
       " grab": -0.00019857421
      },
      {
       "('": -0.00027709146
      },
      {
       "t": -0.00020096028
      },
      {
       "ow": -0.00010605607
      },
      {
       "el": -0.000100094694
      },
      {
       "')": -0.00034726874
      },
      {
       "\n": -0.0016118892
      },
      {
       " assert": -0.003602279
      },
      {
       "('": -9.174727e-05
      },
      {
       "close": -0.000189275
      },
      {
       "'": -0.00019905198
      },
      {
       " to": -0.00029378536
      },
      {
       " '": -9.687513e-05
      },
      {
       "to": -0.00017067656
      },
      {
       "ilet": -0.00011022838
      },
      {
       "'": -0.0025050007
      },
      {
       " )": -0.00012810968
      },
      {
       "\n": -0.00075948384
      },
      {
       " else": -9.628002e-05
      },
      {
       ":": -0.00024692412
      },
      {
       " find": -0.00013693394
      },
      {
       "('": -0.0003625331
      },
      {
       "to": -9.925743e-05
      },
      {
       "ilet": -6.9573514e-05
      },
      {
       "')": -0.00031501107
      },
      {
       "\n": -0.0012992248
      },
      {
       " put": -0.0032232094
      },
      {
       "in": -0.001464081
      },
      {
       "('": -0.00018283867
      },
      {
       "t": -0.0005580644
      },
      {
       "ow": -0.00029784034
      },
      {
       "el": -0.00010128584
      },
      {
       "',": -0.0041434392
      },
      {
       " '": -7.422359e-05
      },
      {
       "to": -9.258174e-05
      },
      {
       "ilet": -0.00018605449
      },
      {
       "')": -0.00032383628
      },
      {
       "\n": -0.00555366
      },
      {
       " #": -0.0013751438
      },
      {
       " 9": -0.0038183727
      },
      {
       ":": -0.0014904045
      },
      {
       " find": -0.36256438
      },
      {
       " sink": -0.8574176
      },
      {
       "\n": -0.016565248
      },
      {
       " find": -0.009051774
      },
      {
       "('": -0.00041637692
      },
      {
       "s": -0.0003490606
      },
      {
       "ink": -6.7307614e-05
      },
      {
       "')": -0.00038149662
      },
      {
       "\n": -0.0045882994
      },
      {
       " #": -0.00058192114
      },
      {
       " 10": -0.0029506872
      },
      {
       ":": -0.00082730886
      },
      {
       " grab": -0.34223053
      },
      {
       " sponge": -0.44837746
      },
      {
       "\n": -0.022179645
      },
      {
       " assert": -0.03855102
      },
      {
       "('": -0.00014683108
      },
      {
       "close": -0.00021741669
      },
      {
       "'": -0.00043140285
      },
      {
       " to": -0.00027947655
      },
      {
       " '": -0.00022445
      },
      {
       "sp": -0.003479235
      },
      {
       "onge": -0.00018999024
      },
      {
       "')": -0.012287848
      },
      {
       "\n": -0.0012462287
      },
      {
       " else": -0.00010808168
      },
      {
       ":": -0.00017496901
      },
      {
       " find": -0.00021538827
      },
      {
       "('": -0.00020119963
      },
      {
       "sp": -0.00016376152
      },
      {
       "onge": -5.1334588e-05
      },
      {
       "')": -0.00031882763
      },
      {
       "\n": -0.0010426221
      },
      {
       " grab": -0.00034619775
      },
      {
       "('": -0.00020167646
      },
      {
       "sp": -6.253833e-05
      },
      {
       "onge": -9.151261e-05
      },
      {
       "')": -0.00027065416
      },
      {
       "\n": -0.0033997474
      },
      {
       " #": -0.00079712283
      },
      {
       " 11": -0.0012365605
      },
      {
       ":": -0.0010849873
      },
      {
       " start": -0.2626348
      },
      {
       " scrub": -0.020169934
      },
      {
       "bing": -0.0009367208
      },
      {
       " sink": -0.0039834026
      },
      {
       "\n": -0.35277396
      },
      {
       " find": -0.010753027
      },
      {
       "('": -0.00015160035
      },
      {
       "s": -0.00021204854
      },
      {
       "ink": -5.693833e-05
      },
      {
       "')": -0.00029939285
      },
      {
       "\n": -0.0018714438
      },
      {
       " assert": -0.0014027805
      },
      {
       "('": -9.615988e-05
      },
      {
       "sp": -0.00054590043
      },
      {
       "onge": -0.00010557923
      },
      {
       "'": -0.00013252322
      },
      {
       " in": -0.00027709146
      },
      {
       " '": -0.00019010947
      },
      {
       "hands": -0.00014885482
      },
      {
       "'": -0.0019217874
      },
      {
       " )": -5.467149e-05
      },
      {
       "\n": -0.00066780584
      },
      {
       " else": -7.1719274e-05
      },
      {
       ":": -0.00017639951
      },
      {
       " find": -0.000284366
      },
      {
       "('": -0.00015827699
      },
      {
       "sp": -0.00012608219
      },
      {
       "onge": -0.00014468438
      },
      {
       "')": -0.00049455435
      },
      {
       "\n": -0.0008084589
      },
      {
       " else": -0.00012882493
      },
      {
       ":": -0.00014611395
      },
      {
       " grab": -0.00016471426
      },
      {
       "('": -0.00013490739
      },
      {
       "sp": -5.0976956e-05
      },
      {
       "onge": -0.00015410187
      },
      {
       "')": -0.00011487751
      },
      {
       "\n": -0.001095013
      },
      {
       " assert": -0.0018637412
      },
      {
       "('": -6.826223e-05
      },
      {
       "close": -9.699527e-05
      },
      {
       "'": -0.00016793102
      },
      {
       " to": -0.00021109488
      },
      {
       " '": -0.00012739444
      },
      {
       "s": -0.00043533952
      },
      {
       "ink": -3.5120327e-05
      },
      {
       "'": -0.0032077215
      },
      {
       " )": -4.3465872e-05
      },
      {
       "\n": -0.0005945075
      },
      {
       " else": -6.420819e-05
      },
      {
       ":": -0.00017377506
      },
      {
       " find": -0.00011070334
      },
      {
       "('": -0.00010295758
      },
      {
       "s": -0.00012107918
      },
      {
       "ink": -7.5774245e-05
      },
      {
       "')": -0.00026743364
      },
      {
       "\n": -0.0010739487
      },
      {
       " put": -0.00033099068
      },
      {
       "in": -6.9810994e-05
      },
      {
       "('": -0.0001086796
      },
      {
       "sp": -0.0002199182
      },
      {
       "onge": -0.00015851353
      },
      {
       "',": -0.0018245695
      },
      {
       " '": -7.6252014e-05
      },
      {
       "s": -0.00036193893
      },
      {
       "ink": -9.0437854e-05
      },
      {
       "')": -0.0003554988
      },
      {
       "\n": -0.0042384285
      },
      {
       " #": -0.0011327843
      },
      {
       " 12": -0.0016134427
      },
      {
       ":": -0.001074785
      },
      {
       " find": -0.17698982
      },
      {
       " bathroom": -1.0142624
      },
      {
       " cleaner": -0.028427467
      },
      {
       "\n": -0.008690479
      },
      {
       " find": -0.0017994888
      },
      {
       "('": -0.0002912829
      },
      {
       "bath": -0.001188939
      },
      {
       "room": -9.2941234e-05
      },
      {
       "clean": -0.011178114
      },
      {
       "er": -4.048565e-05
      },
      {
       "')": -0.00026111372
      },
      {
       "\n": -0.0031837418
      },
      {
       " #": -0.00056355365
      },
      {
       " 13": -0.0022813035
      },
      {
       ":": -0.00085278286
      },
      {
       " pour": -0.29296958
      },
      {
       " bathroom": -0.19970475
      },
      {
       " cleaner": -0.0012751719
      },
      {
       " on": -0.07251052
      },
      {
       " sink": -0.072311684
      },
      {
       "\n": -0.013741995
      },
      {
       " find": -0.0045300396
      },
      {
       "('": -0.00014074863
      },
      {
       "s": -0.00052520697
      },
      {
       "ink": -8.984087e-05
      },
      {
       "')": -0.0001635231
      },
      {
       "\n": -0.001108079
      },
      {
       " assert": -0.0008709767
      },
      {
       "('": -0.000109155495
      },
      {
       "bath": -0.0011598184
      },
      {
       "room": -6.873624e-05
      },
      {
       "clean": -0.010897935
      },
      {
       "er": -4.751897e-05
      },
      {
       "'": -0.00019619097
      },
      {
       " in": -0.0003088113
      },
      {
       " '": -0.00019762148
      },
      {
       "hands": -0.00017532664
      },
      {
       "'": -0.001387917
      },
      {
       " )": -6.3492e-05
      },
      {
       "\n": -0.0005354035
      },
      {
       " else": -5.3955304e-05
      },
      {
       ":": -8.244993e-05
      },
      {
       " find": -0.00021049884
      },
      {
       "('": -0.00016066022
      },
      {
       "bath": -0.00034392995
      },
      {
       "room": -2.3795494e-05
      },
      {
       "clean": -0.0035004073
      },
      {
       "er": -1.2351458e-05
      },
      {
       "')": -0.00024215765
      },
      {
       "\n": -0.0008281433
      },
      {
       " else": -0.00017723397
      },
      {
       ":": -8.7696986e-05
      },
      {
       " grab": -0.00014432582
      },
      {
       "('": -0.00014659172
      },
      {
       "bath": -0.00023261909
      },
      {
       "room": -5.896488e-05
      },
      {
       "clean": -0.006142891
      },
      {
       "er": -3.5717305e-05
      },
      {
       "')": -0.00021717734
      },
      {
       "\n": -0.0009029538
      },
      {
       " assert": -0.0006937529
      },
      {
       "('": -6.5041706e-05
      },
      {
       "close": -8.2807564e-05
      },
      {
       "'": -0.0001459938
      },
      {
       " to": -0.00014146294
      },
      {
       " '": -9.186649e-05
      },
      {
       "s": -0.00015827699
      },
      {
       "ink": -0.00010748563
      },
      {
       "'": -0.0011602361
      },
      {
       " )": -8.960433e-05
      },
      {
       "\n": -0.00046181606
      },
      {
       " else": -6.4566746e-05
      },
      {
       ":": -0.00012787033
      },
      {
       " find": -9.270188e-05
      },
      {
       "('": -0.00017878464
      },
      {
       "s": -5.3837026e-05
      },
      {
       "ink": -0.00035037097
      },
      {
       "')": -0.00023082721
      },
      {
       "\n": -0.0010459629
      },
      {
       " put": -0.00038268685
      },
      {
       "in": -6.3492e-05
      },
      {
       "('": -0.00014408647
      },
      {
       "bath": -0.00044333027
      },
      {
       "room": -8.6144464e-05
      },
      {
       "clean": -0.0030418583
      },
      {
       "er": -1.5448071e-05
      },
      {
       "',": -0.000792055
      },
      {
       " '": -9.878341e-05
      },
      {
       "s": -0.000106295425
      },
      {
       "ink": -5.8367896e-05
      },
      {
       "')": -0.00033856556
      },
      {
       "\n": -0.0029306042
      },
      {
       " #": -0.0006744853
      },
      {
       " 14": -0.0016284874
      },
      {
       ":": -0.0011981284
      },
      {
       " start": -0.039287787
      },
      {
       " scrub": -0.00075691944
      },
      {
       "bing": -0.00047964763
      },
      {
       " sink": -0.011530846
      },
      {
       " with": -0.08868506
      },
      {
       " sponge": -0.23203588
      },
      {
       "\n": -0.0041184197
      },
      {
       " find": -0.0031161178
      },
      {
       "('": -0.000116546435
      },
      {
       "s": -0.000246207
      },
      {
       "ink": -0.00029473996
      },
      {
       "')": -0.00015827699
      },
      {
       "\n": -0.00090140215
      },
      {
       " assert": -0.0005985634
      },
      {
       "('": -6.0276172e-05
      },
      {
       "sp": -0.00062730775
      },
      {
       "onge": -8.8051806e-05
      },
      {
       "'": -0.00012167429
      },
      {
       " in": -0.00014837986
      },
      {
       " '": -0.0001506467
      },
      {
       "hands": -0.00026969958
      },
      {
       "'": -0.0005157848
      },
      {
       " )": -4.9069615e-05
      },
      {
       "\n": -0.0003721918
      },
      {
       " else": -4.9782993e-05
      },
      {
       ":": -7.279122e-05
      },
      {
       " find": -0.00015911051
      },
      {
       "('": -9.234426e-05
      },
      {
       "sp": -5.6223078e-05
      },
      {
       "onge": -5.3716885e-05
      },
      {
       "')": -0.0003042804
      },
      {
       "\n": -0.0004478621
      },
      {
       " else": -0.000108559456
      },
      {
       ":": -7.2672e-05
      },
      {
       " grab": -0.00010784233
      },
      {
       "('": -0.00018390873
      },
      {
       "sp": -2.6893982e-05
      },
      {
       "onge": -0.00011988616
      },
      {
       "')": -0.00025539077
      },
      {
       "\n": -0.0005191226
      },
      {
       " assert": -0.000526996
      },
      {
       "('": -5.9085025e-05
      },
      {
       "close": -5.1810483e-05
      },
      {
       "'": -0.00013693394
      },
      {
       " to": -0.00025407854
      },
      {
       " '": -0.000120601406
      },
      {
       "s": -0.0001319253
      },
      {
       "ink": -0.00014039098
      },
      {
       "'": -0.0005911678
      },
      {
       " )": -6.6949986e-05
      },
      {
       "\n": -0.00036873287
      },
      {
       " else": -5.4075444e-05
      },
      {
       ":": -0.00012465262
      },
      {
       " find": -8.8051806e-05
      },
      {
       "('": -8.8410365e-05
      },
      {
       "s": -3.762558e-05
      },
      {
       "ink": -0.00012179443
      },
      {
       "')": -0.00029569364
      },
      {
       "\n": -0.0007044901
      },
      {
       " put": -0.00027959672
      },
      {
       "in": -3.6670972e-05
      },
      {
       "('": -8.8290224e-05
      },
      {
       "sp": -0.00015148021
      },
      {
       "onge": -0.00010343254
      },
      {
       "',": -0.0007160609
      },
      {
       " '": -0.00010545909
      },
      {
       "s": -4.2033495e-05
      },
      {
       "ink": -6.551948e-05
      },
      {
       "')": -0.00034715232
      },
      {
       "\n": -0.0022306428
      },
      {
       " #": -0.0009010445
      },
      {
       " 15": -0.0018883451
      },
      {
       ":": -0.0006949459
      },
      {
       " find": -0.2746576
      },
      {
       " towel": -0.09665142
      },
      {
       "\n": -0.008795645
      },
      {
       " find": -0.0058074654
      },
      {
       "('": -0.00027709146
      },
      {
       "t": -0.00015827699
      },
      {
       "ow": -8.376217e-05
      },
      {
       "el": -6.9810994e-05
      },
      {
       "')": -0.00095975155
      },
      {
       "\n": -0.0030885534
      },
      {
       " #": -0.0004895429
      },
      {
       " 16": -0.0008940038
      },
      {
       ":": -0.00049228565
      },
      {
       " wipe": -0.058802314
      },
      {
       " up": -0.024087261
      },
      {
       " sink": -0.008673585
      },
      {
       " with": -0.0048824116
      },
      {
       " towel": -0.0008123946
      },
      {
       "\n": -0.003419365
      },
      {
       " find": -0.0058112424
      },
      {
       "('": -0.0001390797
      },
      {
       "s": -0.0008802835
      },
      {
       "ink": -0.00042830152
      },
      {
       "')": -0.00020477588
      },
      {
       "\n": -0.00092580245
      },
      {
       " assert": -0.0006802711
      },
      {
       "('": -8.1136764e-05
      },
      {
       "t": -0.00012942286
      },
      {
       "ow": -4.4539687e-05
      },
      {
       "el": -2.272356e-05
      },
      {
       "'": -0.00013311833
      },
      {
       " in": -0.00018081025
      },
      {
       " '": -0.0001707939
      },
      {
       "hands": -7.553489e-05
      },
      {
       "'": -0.0006549238
      },
      {
       " )": -4.799487e-05
      },
      {
       "\n": -0.00043140285
      },
      {
       " else": -4.608659e-05
      },
      {
       ":": -6.826223e-05
      },
      {
       " find": -0.00012894507
      },
      {
       "('": -7.338913e-05
      },
      {
       "t": -4.6921985e-05
      },
      {
       "ow": -2.1051823e-05
      },
      {
       "el": -8.3165185e-05
      },
      {
       "')": -0.00024251342
      },
      {
       "\n": -0.00056379114
      },
      {
       " else": -9.449002e-05
      },
      {
       ":": -7.815842e-05
      },
      {
       " grab": -7.732115e-05
      },
      {
       "('": -0.00010486492
      },
      {
       "t": -3.130471e-05
      },
      {
       "ow": -4.721163e-06
      },
      {
       "el": -3.690939e-05
      },
      {
       "')": -0.00023309403
      },
      {
       "\n": -0.0006434713
      },
      {
       " assert": -0.0005473328
      },
      {
       "('": -6.7427754e-05
      },
      {
       "close": -5.7057543e-05
      },
      {
       "'": -0.00012954207
      },
      {
       " to": -8.065993e-05
      },
      {
       " '": -0.00010068981
      },
      {
       "s": -0.00019261472
      },
      {
       "ink": -0.00012512946
      },
      {
       "'": -0.0007534595
      },
      {
       " )": -8.88872e-05
      },
      {
       "\n": -0.0003444068
      },
      {
       " else": -7.255186e-05
      },
      {
       ":": -8.3284394e-05
      },
      {
       " find": -9.639735e-05
      },
      {
       "('": -0.00015350676
      },
      {
       "s": -6.206056e-05
      },
      {
       "ink": -5.9201422e-05
      },
      {
       "')": -0.0002192039
      },
      {
       "\n": -0.00061931607
      },
      {
       " put": -0.0002940247
      },
      {
       "in": -4.5613506e-05
      },
      {
       "('": -0.000113566224
      },
      {
       "t": -8.697986e-05
      },
      {
       "ow": -3.0947078e-05
      },
      {
       "el": -4.680184e-05
      },
      {
       "',": -0.0007631849
      },
      {
       " '": -9.270188e-05
      },
      {
       "s": -0.00012095904
      },
      {
       "ink": -2.5941252e-05
      },
      {
       "')": -0.00040212632
      },
      {
       "\n": -0.0031895426
      },
      {
       " #": -0.001029498
      },
      {
       " 17": -0.0030327132
      },
      {
       ":": -0.0014553074
      },
      {
       " find": -0.6973165
      },
      {
       " shower": -0.98366857
      },
      {
       "\n": -0.0064743524
      },
      {
       " find": -0.0037955747
      },
      {
       "('": -0.00035609488
      },
      {
       "mir": -0.0007299585
      },
      {
       "ror": -0.00043056931
      },
      {
       "')": -0.00032002066
      },
      {
       "\n": -0.0038177741
      },
      {
       " #": -0.00044213727
      },
      {
       " 18": -0.001084271
      },
      {
       ":": -0.0008048789
      },
      {
       " grab": -0.06520207
      },
      {
       " cloth": -1.3062274
      },
      {
       " cleaner": -0.06676589
      },
      {
       "\n": -0.009207204
      },
      {
       " assert": -0.0150236115
      },
      {
       "('": -0.00011022838
      },
      {
       "close": -0.00022600066
      },
      {
       "'": -0.00037827427
      },
      {
       " to": -0.00015755986
      },
      {
       " '": -0.00012882493
      },
      {
       "glass": -0.0009344539
      },
      {
       "clean": -0.012119812
      },
      {
       "er": -4.3347598e-05
      },
      {
       "')": -0.0018977786
      },
      {
       "\n": -0.00072494993
      },
      {
       " else": -6.838237e-05
      },
      {
       ":": -9.0080226e-05
      },
      {
       " find": -0.00014229833
      },
      {
       "('": -0.0001390797
      },
      {
       "glass": -0.00023142513
      },
      {
       "clean": -0.005469272
      },
      {
       "er": -1.7475562e-05
      },
      {
       "')": -0.0002854398
      },
      {
       "\n": -0.00070556306
      },
      {
       " grab": -0.00031501107
      },
      {
       "('": -0.0001614947
      },
      {
       "glass": -0.00010987075
      },
      {
       "clean": -0.006042203
      },
      {
       "er": -2.0098154e-05
      },
      {
       "')": -0.00012381817
      },
      {
       "\n": -0.0024295924
      },
      {
       " #": -0.0005156646
      },
      {
       " 19": -0.00087527203
      },
      {
       ":": -0.00057607895
      },
      {
       " start": -0.92242867
      },
      {
       " glass": -0.21494453
      },
      {
       " cleaner": -0.0011557596
      },
      {
       " on": -0.028126907
      },
      {
       " mirror": -0.016107159
      },
      {
       "\n": -0.006785698
      },
      {
       " find": -0.008048073
      },
      {
       "('": -0.00021324158
      },
      {
       "mir": -0.0031371631
      },
      {
       "ror": -0.0012031408
      },
      {
       "')": -0.0001963102
      },
      {
       "\n": -0.0014322061
      },
      {
       " assert": -0.0007544141
      },
      {
       "('": -9.174727e-05
      },
      {
       "glass": -0.0007105736
      },
      {
       "clean": -0.009814901
      },
      {
       "er": -2.9159892e-05
      },
      {
       "'": -0.00024060514
      },
      {
       " in": -0.00027637713
      },
      {
       " '": -0.00017329915
      },
      {
       "hands": -0.00019964804
      },
      {
       "'": -0.0015101649
      },
      {
       " )": -8.185389e-05
      },
      {
       "\n": -0.00065874035
      },
      {
       " else": -5.991855e-05
      },
      {
       ":": -0.00010140506
      },
      {
       " find": -0.00016197246
      },
      {
       "('": -0.00017043721
      },
      {
       "glass": -0.00016566887
      },
      {
       "clean": -0.0026878663
      },
      {
       "er": -4.6010214e-06
      },
      {
       "')": -0.00023524073
      },
      {
       "\n": -0.000660291
      },
      {
       " else": -0.00015923065
      },
      {
       ":": -9.794894e-05
      },
      {
       " grab": -0.0001693634
      },
      {
       "('": -0.00014432582
      },
      {
       "glass": -0.000104267005
      },
      {
       "clean": -0.0019041689
      },
      {
       "er": -2.28437e-05
      },
      {
       "')": -0.00018366938
      },
      {
       "\n": -0.0008793289
      },
      {
       " assert": -0.0064725513
      },
      {
       "('": -7.505805e-05
      },
      {
       "close": -0.00013657632
      },
      {
       "'": -0.00024644638
      },
      {
       " to": -0.0001735385
      },
      {
       " '": -0.00011487751
      },
      {
       "mir": -0.0017529731
      },
      {
       "ror": -0.00022361554
      },
      {
       "'": -0.005558514
      },
      {
       " )": -4.9782993e-05
      },
      {
       "\n": -0.00060226076
      },
      {
       " else": -9.532728e-05
      },
      {
       ":": -6.9573514e-05
      },
      {
       " find": -0.00010998996
      },
      {
       "('": -0.0001887991
      },
      {
       "mir": -0.00029879494
      },
      {
       "ror": -6.838237e-05
      },
      {
       "')": -0.0002471616
      },
      {
       "\n": -0.0008631615
      },
      {
       " put": -0.07855956
      },
      {
       "in": -0.0009114852
      },
      {
       "('": -0.000111540605
      },
      {
       "glass": -0.0003042804
      },
      {
       "clean": -0.0032650072
      },
      {
       "er": -1.9860674e-05
      },
      {
       "',": -0.0008922147
      },
      {
       " '": -6.087316e-05
      },
      {
       "mir": -0.0015773836
      },
      {
       "ror": -0.00037028352
      },
      {
       "')": -0.00021729656
      },
      {
       "\n": -0.0024084407
      },
      {
       " #": -0.000754295
      },
      {
       " 20": -0.0019619768
      },
      {
       ":": -0.0005976088
      },
      {
       " grab": -0.99043506
      },
      {
       " scrub": -0.28944772
      },
      {
       "bing": -0.00085421436
      },
      {
       " mirror": -0.025549246
      },
      {
       " with": -0.5502826
      },
      {
       " towel": -0.43165112
      },
      {
       "\n": -0.0047678356
      },
      {
       " find": -0.006508246
      },
      {
       "('": -0.0001620926
      },
      {
       "mir": -0.007131476
      },
      {
       "ror": -0.00024311132
      },
      {
       "')": -0.0001492143
      },
      {
       "\n": -0.001102769
      },
      {
       " assert": -0.0008465784
      },
      {
       "('": -5.860725e-05
      },
      {
       "sp": -0.0011155976
      },
      {
       "onge": -4.847264e-05
      },
      {
       "'": -0.00015851353
      },
      {
       " in": -0.00018248011
      },
      {
       " '": -0.00016066022
      },
      {
       "hands": -0.00026802876
      },
      {
       "'": -0.00048036288
      },
      {
       " )": -7.338913e-05
      },
      {
       "\n": -0.00035013165
      },
      {
       " else": -3.941184e-05
      },
      {
       ":": -6.7069195e-05
      },
      {
       " find": -0.00020465575
      },
      {
       "('": -0.00017246376
      },
      {
       "sp": -5.1215375e-05
      },
      {
       "onge": -8.209043e-05
      },
      {
       "')": -0.0002590881
      },
      {
       "\n": -0.0004761286
      },
      {
       " else": -0.00013657632
      },
      {
       ":": -8.685972e-05
      },
      {
       " grab": -0.00013121005
      },
      {
       "('": -9.413332e-05
      },
      {
       "sp": -2.1051823e-05
      },
      {
       "onge": -7.064452e-05
      },
      {
       "')": -0.00022433081
      },
      {
       "\n": -0.00062074844
      },
      {
       " assert": -0.00040928167
      },
      {
       "('": -0.00012643983
      },
      {
       "close": -5.264588e-05
      },
      {
       "'": -0.00015028719
      },
      {
       " to": -0.00018093038
      },
      {
       " '": -9.174727e-05
      },
      {
       "mir": -0.00080678804
      },
      {
       "ror": -0.0004914521
      },
      {
       "'": -0.0010129693
      },
      {
       " )": -8.423619e-05
      },
      {
       "\n": -0.0004291388
      },
      {
       " else": -3.583558e-05
      },
      {
       ":": -9.437268e-05
      },
      {
       " find": -9.0437854e-05
      },
      {
       "('": -0.00020167646
      },
      {
       "mir": -0.00022600066
      },
      {
       "ror": -0.000331888
      },
      {
       "')": -0.00025527156
      },
      {
       "\n": -0.0006363141
      },
      {
       " put": -0.0002840093
      },
      {
       "in": -5.896488e-05
      },
      {
       "('": -9.365555e-05
      },
      {
       "sp": -0.00019463846
      },
      {
       "onge": -0.00021491051
      },
      {
       "',": -0.0006040489
      },
      {
       " '": -7.529741e-05
      },
      {
       "mir": -0.00038328386
      },
      {
       "ror": -0.000629813
      },
      {
       "')": -0.00026934195
      },
      {
       "\n": -0.0027528913
      },
      {
       " #": -0.0009349317
      },
      {
       " 21": -0.001120134
      },
      {
       ":": -0.0007974823
      },
      {
       " find": -0.08030832
      },
      {
       " towel": -0.011113261
      },
      {
       "\n": -0.00673463
      },
      {
       " find": -0.0022747312
      },
      {
       "('": -0.00025443616
      },
      {
       "t": -7.8872734e-05
      },
      {
       "ow": -9.0318645e-05
      },
      {
       "el": -4.8233283e-05
      },
      {
       "')": -0.0005005176
      },
      {
       "\n": -0.004017814
      },
      {
       " #": -0.00049860927
      },
      {
       " 22": -0.0012171653
      },
      {
       ":": -0.0005331404
      },
      {
       " wipe": -0.027564043
      },
      {
       " up": -0.039739944
      },
      {
       " mirror": -0.013896341
      },
      {
       " with": -0.00768938
      },
      {
       " towel": -0.0009574828
      },
      {
       "\n": -0.0033776779
      },
      {
       " find": -0.0020163837
      },
      {
       "('": -0.00015505555
      },
      {
       "mir": -0.0038327333
      },
      {
       "ror": -0.00021252633
      },
      {
       "')": -0.00016912498
      },
      {
       "\n": -0.00086519
      },
      {
       " assert": -0.0005352843
      },
      {
       "('": -8.471396e-05
      },
      {
       "t": -0.000104267005
      },
      {
       "ow": -4.608659e-05
      },
      {
       "el": -1.8190814e-05
      },
      {
       "'": -0.00013371343
      },
      {
       " in": -0.00020525271
      },
      {
       " '": -0.00024608686
      },
      {
       "hands": -9.0558e-05
      },
      {
       "'": -0.0005646284
      },
      {
       " )": -5.8010275e-05
      },
      {
       "\n": -0.00036944906
      },
      {
       " else": -4.966285e-05
      },
      {
       ":": -7.100402e-05
      },
      {
       " find": -9.377476e-05
      },
      {
       "('": -0.00011070334
      },
      {
       "t": -3.3928238e-05
      },
      {
       "ow": -1.2351458e-05
      },
      {
       "el": -1.0323977e-05
      },
      {
       "')": -0.00024787875
      },
      {
       "\n": -0.00051626156
      },
      {
       " else": -8.471396e-05
      },
      {
       ":": -0.00011106284
      },
      {
       " grab": -8.507158e-05
      },
      {
       "('": -0.00023428706
      },
      {
       "t": -2.6298881e-05
      },
      {
       "ow": -1.0920954e-05
      },
      {
       "el": -0.00011034852
      },
      {
       "')": -0.00043438585
      },
      {
       "\n": -0.0005021884
      },
      {
       " assert": -0.00053743285
      },
      {
       "('": -0.00011666565
      },
      {
       "close": -5.956092e-05
      },
      {
       "'": -0.00015410187
      },
      {
       " to": -0.00020179474
      },
      {
       " '": -8.137612e-05
      }
     ],
     "text_offset": [
      4717,
      4719,
      4721,
      4722,
      4727,
      4730,
      4739,
      4740,
      4745,
      4747,
      4751,
      4755,
      4757,
      4758,
      4760,
      4762,
      4763,
      4768,
      4775,
      4776,
      4781,
      4783,
      4785,
      4789,
      4791,
      4792,
      4794,
      4796,
      4797,
      4802,
      4809,
      4815,
      4816,
      4823,
      4825,
      4830,
      4831,
      4834,
      4836,
      4838,
      4842,
      4847,
      4849,
      4850,
      4855,
      4856,
      4861,
      4863,
      4865,
      4869,
      4874,
      4876,
      4877,
      4882,
      4884,
      4886,
      4890,
      4895,
      4897,
      4898,
      4900,
      4902,
      4903,
      4909,
      4915,
      4919,
      4926,
      4927,
      4932,
      4934,
      4936,
      4940,
      4942,
      4943,
      4950,
      4952,
      4954,
      4958,
      4963,
      4964,
      4967,
      4969,
      4974,
      4975,
      4977,
      4978,
      4983,
      4984,
      4989,
      4991,
      4993,
      4997,
      5002,
      5004,
      5005,
      5010,
      5011,
      5016,
      5018,
      5020,
      5024,
      5029,
      5031,
      5032,
      5039,
      5041,
      5046,
      5047,
      5050,
      5052,
      5054,
      5058,
      5059,
      5061,
      5062,
      5067,
      5068,
      5073,
      5075,
      5077,
      5081,
      5083,
      5084,
      5088,
      5090,
      5092,
      5094,
      5098,
      5103,
      5105,
      5107,
      5109,
      5113,
      5115,
      5116,
      5118,
      5120,
      5121,
      5126,
      5133,
      5141,
      5142,
      5147,
      5149,
      5151,
      5155,
      5160,
      5162,
      5164,
      5165,
      5167,
      5169,
      5170,
      5175,
      5182,
      5190,
      5193,
      5200,
      5201,
      5206,
      5208,
      5210,
      5214,
      5216,
      5217,
      5224,
      5226,
      5228,
      5232,
      5237,
      5239,
      5240,
      5243,
      5245,
      5250,
      5251,
      5253,
      5254,
      5259,
      5260,
      5265,
      5267,
      5269,
      5273,
      5278,
      5280,
      5282,
      5283,
      5288,
      5289,
      5294,
      5296,
      5298,
      5302,
      5307,
      5309,
      5311,
      5312,
      5319,
      5321,
      5326,
      5327,
      5330,
      5332,
      5334,
      5338,
      5339,
      5341,
      5342,
      5347,
      5348,
      5353,
      5355,
      5357,
      5361,
      5363,
      5364,
      5368,
      5370,
      5372,
      5374,
      5378,
      5383,
      5385,
      5387,
      5389,
      5391,
      5395,
      5397,
      5398,
      5400,
      5402,
      5403,
      5409,
      5415,
      5419,
      5426,
      5431,
      5437,
      5438,
      5443,
      5445,
      5447,
      5451,
      5453,
      5454,
      5461,
      5463,
      5465,
      5469,
      5474,
      5475,
      5478,
      5480,
      5485,
      5486,
      5488,
      5489,
      5494,
      5495,
      5500,
      5502,
      5504,
      5508,
      5513,
      5515,
      5516,
      5521,
      5522,
      5527,
      5529,
      5531,
      5535,
      5540,
      5542,
      5543,
      5550,
      5552,
      5557,
      5558,
      5561,
      5563,
      5565,
      5569,
      5570,
      5572,
      5573,
      5578,
      5579,
      5584,
      5586,
      5588,
      5592,
      5594,
      5595,
      5599,
      5601,
      5603,
      5605,
      5609,
      5614,
      5616,
      5618,
      5620,
      5624,
      5626,
      5627,
      5629,
      5631,
      5632,
      5637,
      5643,
      5644,
      5649,
      5651,
      5652,
      5654,
      5656,
      5658,
      5659,
      5661,
      5663,
      5664,
      5669,
      5672,
      5679,
      5684,
      5690,
      5691,
      5696,
      5698,
      5700,
      5704,
      5706,
      5707,
      5714,
      5716,
      5717,
      5719,
      5721,
      5722,
      5725,
      5727,
      5732,
      5733,
      5735,
      5736,
      5741,
      5742,
      5747,
      5749,
      5750,
      5752,
      5754,
      5756,
      5757,
      5762,
      5763,
      5768,
      5770,
      5771,
      5773,
      5775,
      5777,
      5778,
      5785,
      5787,
      5792,
      5793,
      5796,
      5798,
      5800,
      5804,
      5805,
      5807,
      5808,
      5813,
      5814,
      5819,
      5821,
      5823,
      5827,
      5829,
      5830,
      5834,
      5836,
      5838,
      5839,
      5841,
      5843,
      5845,
      5847,
      5849,
      5853,
      5855,
      5856,
      5858,
      5860,
      5861,
      5866,
      5871,
      5872,
      5877,
      5879,
      5880,
      5883,
      5885,
      5886,
      5888,
      5891,
      5892,
      5897,
      5904,
      5905,
      5912,
      5914,
      5919,
      5920,
      5923,
      5925,
      5927,
      5931,
      5933,
      5934,
      5939,
      5940,
      5945,
      5947,
      5949,
      5953,
      5955,
      5956,
      5961,
      5963,
      5965,
      5969,
      5971,
      5972,
      5974,
      5977,
      5978,
      5984,
      5990,
      5994,
      5999,
      6000,
      6005,
      6007,
      6008,
      6011,
      6013,
      6014,
      6021,
      6023,
      6025,
      6029,
      6030,
      6033,
      6035,
      6040,
      6041,
      6043,
      6044,
      6049,
      6050,
      6055,
      6057,
      6059,
      6063,
      6065,
      6066,
      6071,
      6072,
      6077,
      6079,
      6081,
      6085,
      6087,
      6088,
      6095,
      6097,
      6102,
      6103,
      6106,
      6108,
      6109,
      6112,
      6113,
      6115,
      6116,
      6121,
      6122,
      6127,
      6129,
      6130,
      6133,
      6135,
      6136,
      6140,
      6142,
      6144,
      6146,
      6150,
      6152,
      6154,
      6155,
      6158,
      6160,
      6161,
      6163,
      6166,
      6167,
      6172,
      6181,
      6189,
      6190,
      6195,
      6197,
      6201,
      6205,
      6210,
      6212,
      6214,
      6215,
      6217,
      6220,
      6221,
      6226,
      6235,
      6243,
      6246,
      6251,
      6252,
      6257,
      6259,
      6260,
      6263,
      6265,
      6266,
      6273,
      6275,
      6279,
      6283,
      6288,
      6290,
      6291,
      6294,
      6296,
      6301,
      6302,
      6304,
      6305,
      6310,
      6311,
      6316,
      6318,
      6322,
      6326,
      6331,
      6333,
      6335,
      6336,
      6341,
      6342,
      6347,
      6349,
      6353,
      6357,
      6362,
      6364,
      6366,
      6367,
      6374,
      6376,
      6381,
      6382,
      6385,
      6387,
      6388,
      6391,
      6392,
      6394,
      6395,
      6400,
      6401,
      6406,
      6408,
      6409,
      6412,
      6414,
      6415,
      6419,
      6421,
      6423,
      6427,
      6431,
      6436,
      6438,
      6440,
      6442,
      6443,
      6446,
      6448,
      6449,
      6451,
      6454,
      6455,
      6461,
      6467,
      6471,
      6476,
      6481,
      6488,
      6489,
      6494,
      6496,
      6497,
      6500,
      6502,
      6503,
      6510,
      6512,
      6514,
      6518,
      6519,
      6522,
      6524,
      6529,
      6530,
      6532,
      6533,
      6538,
      6539,
      6544,
      6546,
      6548,
      6552,
      6554,
      6555,
      6560,
      6561,
      6566,
      6568,
      6570,
      6574,
      6576,
      6577,
      6584,
      6586,
      6591,
      6592,
      6595,
      6597,
      6598,
      6601,
      6602,
      6604,
      6605,
      6610,
      6611,
      6616,
      6618,
      6619,
      6622,
      6624,
      6625,
      6629,
      6631,
      6633,
      6635,
      6639,
      6641,
      6643,
      6644,
      6647,
      6649,
      6650,
      6652,
      6655,
      6656,
      6661,
      6667,
      6668,
      6673,
      6675,
      6676,
      6678,
      6680,
      6682,
      6683,
      6685,
      6688,
      6689,
      6694,
      6697,
      6702,
      6707,
      6713,
      6714,
      6719,
      6721,
      6722,
      6725,
      6727,
      6728,
      6735,
      6737,
      6738,
      6740,
      6742,
      6743,
      6746,
      6748,
      6753,
      6754,
      6756,
      6757,
      6762,
      6763,
      6768,
      6770,
      6771,
      6773,
      6775,
      6777,
      6778,
      6783,
      6784,
      6789,
      6791,
      6792,
      6794,
      6796,
      6798,
      6799,
      6806,
      6808,
      6813,
      6814,
      6817,
      6819,
      6820,
      6823,
      6824,
      6826,
      6827,
      6832,
      6833,
      6838,
      6840,
      6841,
      6844,
      6846,
      6847,
      6851,
      6853,
      6855,
      6856,
      6858,
      6860,
      6862,
      6864,
      6865,
      6868,
      6870,
      6871,
      6873,
      6876,
      6877,
      6882,
      6889,
      6890,
      6895,
      6897,
      6900,
      6903,
      6905,
      6906,
      6908,
      6911,
      6912,
      6917,
      6923,
      6931,
      6932,
      6939,
      6941,
      6946,
      6947,
      6950,
      6952,
      6957,
      6962,
      6964,
      6966,
      6967,
      6972,
      6973,
      6978,
      6980,
      6985,
      6990,
      6992,
      6994,
      6995,
      7000,
      7002,
      7007,
      7012,
      7014,
      7016,
      7017,
      7019,
      7022,
      7023,
      7029,
      7035,
      7043,
      7046,
      7053,
      7054,
      7059,
      7061,
      7064,
      7067,
      7069,
      7070,
      7077,
      7079,
      7084,
      7089,
      7091,
      7092,
      7095,
      7097,
      7102,
      7103,
      7105,
      7106,
      7111,
      7112,
      7117,
      7119,
      7124,
      7129,
      7131,
      7133,
      7134,
      7139,
      7140,
      7145,
      7147,
      7152,
      7157,
      7159,
      7161,
      7162,
      7169,
      7171,
      7176,
      7177,
      7180,
      7182,
      7185,
      7188,
      7189,
      7191,
      7192,
      7197,
      7198,
      7203,
      7205,
      7208,
      7211,
      7213,
      7214,
      7218,
      7220,
      7222,
      7227,
      7232,
      7234,
      7236,
      7238,
      7241,
      7244,
      7246,
      7247,
      7249,
      7252,
      7253,
      7259,
      7265,
      7269,
      7276,
      7281,
      7288,
      7289,
      7294,
      7296,
      7299,
      7302,
      7304,
      7305,
      7312,
      7314,
      7316,
      7320,
      7321,
      7324,
      7326,
      7331,
      7332,
      7334,
      7335,
      7340,
      7341,
      7346,
      7348,
      7350,
      7354,
      7356,
      7357,
      7362,
      7363,
      7368,
      7370,
      7372,
      7376,
      7378,
      7379,
      7386,
      7388,
      7393,
      7394,
      7397,
      7399,
      7402,
      7405,
      7406,
      7408,
      7409,
      7414,
      7415,
      7420,
      7422,
      7425,
      7428,
      7430,
      7431,
      7435,
      7437,
      7439,
      7441,
      7445,
      7447,
      7449,
      7452,
      7455,
      7457,
      7458,
      7460,
      7463,
      7464,
      7469,
      7475,
      7476,
      7481,
      7483,
      7484,
      7486,
      7488,
      7490,
      7491,
      7493,
      7496,
      7497,
      7502,
      7505,
      7512,
      7517,
      7523,
      7524,
      7529,
      7531,
      7534,
      7537,
      7539,
      7540,
      7547,
      7549,
      7550,
      7552,
      7554,
      7555,
      7558,
      7560,
      7565,
      7566,
      7568,
      7569,
      7574,
      7575,
      7580,
      7582,
      7583,
      7585,
      7587,
      7589,
      7590,
      7595,
      7596,
      7601,
      7603,
      7604,
      7606,
      7608,
      7610,
      7611,
      7618,
      7620,
      7625,
      7626,
      7629
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Clean bathroom",
   "task_description": "I'm going to clean the bathroom, take the brush, wash and rinse the toilet and shower",
   "program": [
    "[Walk] <bathroom> (1)",
    "[Walk] <brush> (1)",
    "[Find] <brush> (1)",
    "[Grab] <brush> (1)",
    "[Find] <detergent> (1)",
    "[Grab] <detergent> (1)",
    "[Find] <toilet> (1)",
    "[PutBack] <detergent> (1) <toilet> (1)",
    "[Find] <toilet> (1)",
    "[Scrub] <toilet> (1)",
    "[Rinse] <toilet> (1)",
    "[Find] <shower> (1)",
    "[Scrub] <shower> (1)",
    "[Rinse] <shower> (1)"
   ],
   "batch": "results_intentions_march-13-18",
   "file_id": "file367_1",
   "goal_condition": [
    [
     [
      240,
      1000,
      "HOLDS_RH",
      "character",
      "brush"
     ],
     [
      1001,
      15,
      "ON",
      "detergent",
      "toilet"
     ],
     [
      240,
      1,
      "INSIDE",
      "character",
      "bathroom"
     ]
    ],
    []
   ]
  }
 },
 "20": {
  "plan": [
   [
    " # 0: find phone\n find('phone')\n # 1: grab phone\n assert('close' to 'phone')\n else: find('phone')\n grab('phone')\n # 2: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " find",
      " phone",
      "\n",
      " find",
      "('",
      "phone",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " grab",
      " phone",
      "\n",
      " assert",
      "('",
      "close",
      "'",
      " to",
      " '",
      "phone",
      "')",
      "\n",
      " else",
      ":",
      " find",
      "('",
      "phone",
      "')",
      "\n",
      " grab",
      "('",
      "phone",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.014389218,
      -0.006072665,
      -0.0026992795,
      -0.1899567,
      -0.043152325,
      -0.031376585,
      -0.0040489333,
      -0.0011508646,
      -0.0006617234,
      -0.0004218633,
      -0.0068382695,
      -0.000703774,
      -0.0013114592,
      -0.0008349447,
      -0.07570337,
      -0.0030544759,
      -0.01168202,
      -0.0074747303,
      -0.00042758632,
      -0.0005573492,
      -0.00066876045,
      -0.00023929571,
      -0.00040630237,
      -0.0001754468,
      -0.013904018,
      -0.0034603346,
      -0.00023559744,
      -0.000246207,
      -0.00052687584,
      -0.00030010715,
      -6.48061e-05,
      -0.00043343127,
      -0.0025936787,
      -0.0004835843,
      -0.0002861541,
      -0.0001375281,
      -0.0006524204,
      -0.0054503926,
      -0.00062862184,
      -0.0043315114,
      -0.0019177267,
      -0.11896306
     ],
     "top_logprobs": [
      {
       " #": -0.014389218
      },
      {
       " 0": -0.006072665
      },
      {
       ":": -0.0026992795
      },
      {
       " find": -0.1899567
      },
      {
       " phone": -0.043152325
      },
      {
       "\n": -0.031376585
      },
      {
       " find": -0.0040489333
      },
      {
       "('": -0.0011508646
      },
      {
       "phone": -0.0006617234
      },
      {
       "')": -0.0004218633
      },
      {
       "\n": -0.0068382695
      },
      {
       " #": -0.000703774
      },
      {
       " 1": -0.0013114592
      },
      {
       ":": -0.0008349447
      },
      {
       " grab": -0.07570337
      },
      {
       " phone": -0.0030544759
      },
      {
       "\n": -0.01168202
      },
      {
       " assert": -0.0074747303
      },
      {
       "('": -0.00042758632
      },
      {
       "close": -0.0005573492
      },
      {
       "'": -0.00066876045
      },
      {
       " to": -0.00023929571
      },
      {
       " '": -0.00040630237
      },
      {
       "phone": -0.0001754468
      },
      {
       "')": -0.013904018
      },
      {
       "\n": -0.0034603346
      },
      {
       " else": -0.00023559744
      },
      {
       ":": -0.000246207
      },
      {
       " find": -0.00052687584
      },
      {
       "('": -0.00030010715
      },
      {
       "phone": -6.48061e-05
      },
      {
       "')": -0.00043343127
      },
      {
       "\n": -0.0025936787
      },
      {
       " grab": -0.0004835843
      },
      {
       "('": -0.0002861541
      },
      {
       "phone": -0.0001375281
      },
      {
       "')": -0.0006524204
      },
      {
       "\n": -0.0054503926
      },
      {
       " #": -0.00062862184
      },
      {
       " 2": -0.0043315114
      },
      {
       ":": -0.0019177267
      },
      {
       " Done": -0.11896306
      }
     ],
     "text_offset": [
      4716,
      4718,
      4720,
      4721,
      4726,
      4732,
      4733,
      4738,
      4740,
      4745,
      4747,
      4748,
      4750,
      4752,
      4753,
      4758,
      4764,
      4765,
      4772,
      4774,
      4779,
      4780,
      4783,
      4785,
      4790,
      4792,
      4793,
      4798,
      4799,
      4804,
      4806,
      4811,
      4813,
      4814,
      4819,
      4821,
      4826,
      4828,
      4829,
      4831,
      4833,
      4834
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Pick up phone",
   "task_description": "Find the phone.Grab the phone.Touch phone to answer.Say Hello.",
   "program": [
    "[Find] <phone> (1)",
    "[Grab] <phone> (1)",
    "[Touch] <phone> (1)"
   ],
   "batch": "results_intentions_march-13-18",
   "file_id": "file356_2",
   "goal_condition": [
    [
     [
      240,
      71,
      "HOLDS_RH",
      "character",
      "phone"
     ]
    ],
    []
   ]
  }
 },
 "21": {
  "plan": [
   [
    " # 0: walk to bathroom\n walk('bathroom')\n # 1: find toilet\n find('toilet')\n # 2: go to toilet\n walktowards('toilet')\n # 3: Done",
    {
     "tokens": [
      " #",
      " 0",
      ":",
      " walk",
      " to",
      " bathroom",
      "\n",
      " walk",
      "('",
      "bath",
      "room",
      "')",
      "\n",
      " #",
      " 1",
      ":",
      " find",
      " toilet",
      "\n",
      " find",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 2",
      ":",
      " go",
      " to",
      " toilet",
      "\n",
      " walk",
      "t",
      "ow",
      "ards",
      "('",
      "to",
      "ilet",
      "')",
      "\n",
      " #",
      " 3",
      ":",
      " Done"
     ],
     "token_logprobs": [
      -0.017463196,
      -0.0072065187,
      -0.0034810298,
      -0.155726,
      -0.06405383,
      -0.50332785,
      -0.030790813,
      -0.0038065852,
      -0.004598061,
      -0.0013606388,
      -7.255186e-05,
      -0.0008563592,
      -0.0073497137,
      -0.0012384688,
      -0.0018984957,
      -0.00048978225,
      -0.2919818,
      -0.046940017,
      -0.017643722,
      -0.0030859231,
      -0.0006908891,
      -0.00023738743,
      -5.1334588e-05,
      -0.00030130113,
      -0.0047248956,
      -0.00094173127,
      -0.0018370461,
      -0.00069554104,
      -3.9392352,
      -0.04748039,
      -0.038693015,
      -0.021151915,
      -1.2597175,
      -0.15844736,
      -0.0049054706,
      -0.00018522002,
      -0.0028316122,
      -0.00025157514,
      -6.158372e-05,
      -0.0008243249,
      -0.02217276,
      -0.011245505,
      -0.004422149,
      -0.0015700395,
      -0.41891202
     ],
     "top_logprobs": [
      {
       " #": -0.017463196
      },
      {
       " 0": -0.0072065187
      },
      {
       ":": -0.0034810298
      },
      {
       " walk": -0.155726
      },
      {
       " to": -0.06405383
      },
      {
       " bathroom": -0.50332785
      },
      {
       "\n": -0.030790813
      },
      {
       " walk": -0.0038065852
      },
      {
       "('": -0.004598061
      },
      {
       "bath": -0.0013606388
      },
      {
       "room": -7.255186e-05
      },
      {
       "')": -0.0008563592
      },
      {
       "\n": -0.0073497137
      },
      {
       " #": -0.0012384688
      },
      {
       " 1": -0.0018984957
      },
      {
       ":": -0.00048978225
      },
      {
       " find": -0.2919818
      },
      {
       " toilet": -0.046940017
      },
      {
       "\n": -0.017643722
      },
      {
       " find": -0.0030859231
      },
      {
       "('": -0.0006908891
      },
      {
       "to": -0.00023738743
      },
      {
       "ilet": -5.1334588e-05
      },
      {
       "')": -0.00030130113
      },
      {
       "\n": -0.0047248956
      },
      {
       " #": -0.00094173127
      },
      {
       " 2": -0.0018370461
      },
      {
       ":": -0.00069554104
      },
      {
       " sit": -0.30037442
      },
      {
       " to": -0.04748039
      },
      {
       " toilet": -0.038693015
      },
      {
       "\n": -0.021151915
      },
      {
       " assert": -0.44558477
      },
      {
       "t": -0.15844736
      },
      {
       "ow": -0.0049054706
      },
      {
       "ards": -0.00018522002
      },
      {
       "('": -0.0028316122
      },
      {
       "to": -0.00025157514
      },
      {
       "ilet": -6.158372e-05
      },
      {
       "')": -0.0008243249
      },
      {
       "\n": -0.02217276
      },
      {
       " #": -0.011245505
      },
      {
       " 3": -0.004422149
      },
      {
       ":": -0.0015700395
      },
      {
       " Done": -0.41891202
      }
     ],
     "text_offset": [
      4715,
      4717,
      4719,
      4720,
      4725,
      4728,
      4737,
      4738,
      4743,
      4745,
      4749,
      4753,
      4755,
      4756,
      4758,
      4760,
      4761,
      4766,
      4773,
      4774,
      4779,
      4781,
      4783,
      4787,
      4789,
      4790,
      4792,
      4794,
      4795,
      4798,
      4801,
      4808,
      4809,
      4814,
      4815,
      4817,
      4821,
      4823,
      4825,
      4829,
      4831,
      4832,
      4834,
      4836,
      4837
     ]
    }
   ]
  ],
  "ori_data_item": {
   "task": "Go to toilet",
   "task_description": "I walk to the entrance of the bathroom. I turn to the door. I open the door to the bathroom. I walk inside of the bathroom. I find the toilet inside of the bathroom and walk over to it. I turn and look at the toilet.",
   "program": [
    "[Walk] <bathroom> (1)",
    "[Walk] <toilet> (1)",
    "[Find] <toilet> (1)",
    "[TurnTo] <toilet> (1)",
    "[LookAt] <toilet> (1)",
    "[Walk] <toilet> (1)",
    "[TurnTo] <toilet> (1)"
   ],
   "batch": "results_intentions_march-13-18",
   "file_id": "file496_1",
   "goal_condition": [
    [
     [
      240,
      15,
      "FACING",
      "character",
      "toilet"
     ],
     [
      240,
      1,
      "INSIDE",
      "character",
      "bathroom"
     ]
    ],
    []
   ]
  }
 }
}